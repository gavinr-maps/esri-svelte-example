import{e as w,u as v}from"./screenUtils-PfxkaaMN.js";import{e as g}from"./CIMSymbolHelper-Ei9DhmLE.js";import{CIMSymbolRasterizer as j}from"./CIMSymbolRasterizer-B2dVk8Qc.js";import{y as G}from"./OverrideHelper-0-cH6aQ2.js";import{V as O}from"./utils-D8D39sLt.js";import{t as b,l as R}from"./symbolUtils-DE-py14C.js";import"./BidiEngine-BwB1Df7c.js";import"./subclass-BR3PhgZG.js";import"./Polyline-BQFeqYXi.js";import"./Evented-CXIxDjmW.js";import"./Accessor-D6mNnsWy.js";import"./writer-3zufXUNV.js";import"./Extent-B4rrMrqp.js";import"./Point-TlcsOcXV.js";import"./jsonMap-DCC6W5ex.js";import"./assets-BNizZMOZ.js";import"./index-BVncS3aY.js";import"./mathUtils-ClvKsMak.js";import"./TextSymbol-zZq0BA1M.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./enumeration--HlxOQ_N.js";import"./fontUtils-CILP_6vp.js";import"./jsonUtils-DtWlwXHP.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-CXWuBstD.js";import"./enums-BRXbslMp.js";import"./geometry-CnaxvJsv.js";import"./definitions-ByNBSgP9.js";import"./mat2d-DPkeMmgR.js";import"./mat2df32-orApM5a3.js";import"./vec2-B_ymkwGp.js";import"./vec2f32-BbH2jxlN.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./defaults-CIM29kXM.js";import"./defaultsJSON-GKolV7NZ.js";import"./CIMResourceManager-BAhUK52Z.js";import"./imageUtils-Bwri-Uf9.js";import"./colorUtils-D5nOabzP.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./fieldUtils-C5R42-PY.js";import"./intl-CArXn1et.js";import"./Promise-CZrWwByK.js";import"./quantizationUtils-DFd0XKEL.js";import"./utils-CvMr5svk.js";import"./symbols-CfvYGR4J.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-BGxkJAW0.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./reactiveUtils-BFQ0BtrB.js";import"./shared-B3wH2qpO.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-DCqdz-K4.js";import"./Clonable-cKbRam6-.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./cimSymbolUtils-Ctf0ZrmH.js";import"./LRUCache-ju6LnIBZ.js";import"./MemCache-C6WUx-5V.js";import"./jsxFactory-Be5PKa9i.js";import"./uuid-fwrPAdZb.js";import"./webStyleSymbolUtils--o9yKGMN.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./jsonUtils-aUmUTP_F.js";import"./layerUtils-BzjQnEdj.js";import"./styleUtils-C7rrjuqd.js";const u=new j(null),c=w(b.size),S=w(b.maxSize),C=w(b.lineWidth),V=1;async function $(e,t,p){const o=t==null?void 0:t.size;let i=o!=null&&typeof o=="object"&&"width"in o?o.width:o,m=o!=null&&typeof o=="object"&&"height"in o?o.height:o;if(i==null||m==null)if(p==="esriGeometryPolygon")i=c,m=c;else{const r=await q(e,t,p);r&&(i=r.width,m=r.height),p==="esriGeometryPolyline"&&(i=C),i=i!=null&&isFinite(i)?Math.min(i,S):c,m=m!=null&&isFinite(m)?Math.max(Math.min(m,S),V):c}return t.style==="legend"&&p==="esriGeometryPolyline"&&(i=C),{width:i,height:m}}async function q(e,t,p){const{feature:o,fieldMap:i,viewParams:m}=t.cimOptions||t,r=await G.resolveSymbolOverrides(e.data,o,null,i,p,null,m);if(!r)return null;(e=e.clone()).data={type:"CIMSymbolReference",symbol:r},e.data.primitiveOverrides=void 0;const l=[];return g.fetchResources(r,u.resourceManager,l),g.fetchFonts(r,u.resourceManager,l),l.length>0&&await Promise.all(l),g.getEnvelope(r,null,u.resourceManager)}async function ii(e,t={}){var M;const{node:p,opacity:o,symbolConfig:i}=t,m=i!=null&&typeof i=="object"&&"isSquareFill"in i&&i.isSquareFill,r=t.cimOptions||t,l=r.geometryType||O((M=e==null?void 0:e.data)==null?void 0:M.symbol),f=await $(e,t,l),{feature:P,fieldMap:I}=r,L=m||l!=="esriGeometryPolygon"?"preview":"legend",y=await u.rasterizeCIMSymbolAsync(e,P,f,L,I,l,null,r.viewParams,r.allowScalingUp);if(!y)return null;const{width:x,height:z}=y,n=document.createElement("canvas");n.width=x,n.height=z,n.getContext("2d").putImageData(y,0,0);const h=v(f.width),d=v(f.height),a=new Image(h,d);a.src=n.toDataURL(),a.ariaLabel=t.ariaLabel??null,a.alt=t.ariaLabel??"",o!=null&&(a.style.opacity=`${o}`);let s=a;if(t.effectView!=null){const F={shape:{type:"image",x:0,y:0,width:h,height:d,src:a.src},fill:null,stroke:null,offset:[0,0]};s=R([[F]],[h,d],{effectView:t.effectView,ariaLabel:t.ariaLabel})}return p&&s&&p.appendChild(s),s}export{ii as previewCIMSymbol};
