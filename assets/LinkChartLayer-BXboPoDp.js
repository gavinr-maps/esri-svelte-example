const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./lclayout-CDvAJV0i.js","./_commonjsHelpers-DCkdB7M8.js"])))=>i.map(i=>d[i]);
import{e as v}from"./Evented-CXIxDjmW.js";import"./geometry-DpwwkAX1.js";import{V as Ct}from"./reactiveUtils-BFQ0BtrB.js";import{c as it,n as H,r as St,y as _,b as Ht}from"./subclass-BR3PhgZG.js";import{s as Ot}from"./Accessor-D6mNnsWy.js";import{f as $t}from"./Layer-C96_yo4i.js";import{o as q}from"./featureConversionUtils-DdoZh_25.js";import{e as kt}from"./OptimizedGeometry-vU5jWBvU.js";import{M as Bt,h as Ft,a as ut,w as A,b as nt,c as rt,D as x,I as Ut}from"./KnowledgeGraphSublayer-C3tgCH75.js";import{l as zt}from"./BlendLayer-DmvCcS5c.js";import{t as jt}from"./ScaleRangeLayer-CKYXLXxK.js";import{_ as Qt}from"./index-CeCSsEgo.js";import{n as Vt}from"./assets-C2mb-ea2.js";import{R as Yt}from"./knowledgeGraphService-wZbdTEQH.js";import{w as Mt}from"./Extent-DHjqVB-p.js";import{_ as bt}from"./Point-DB4Hp4hH.js";import{m as Et}from"./Polyline-D97hl-6E.js";import"./jsonMap-DCC6W5ex.js";import"./shared-B3wH2qpO.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./Promise-CZrWwByK.js";import"./writer-3zufXUNV.js";import"./Identifiable-BLvpQbOc.js";import"./Portal-liet8xHC.js";import"./aaBoundingBox-rJEWaOSN.js";import"./jsonUtils-Cma_7A64.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./PopupTemplate-ByHks6sq.js";import"./Clonable-cKbRam6-.js";import"./fieldUtils-CNduWQU9.js";import"./intl-Dpfm8vPB.js";import"./mathUtils-ClvKsMak.js";import"./enumeration--HlxOQ_N.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./ClassBreaksRenderer-DMO3d0Rn.js";import"./symbols-CsUQ5BxR.js";import"./TextSymbol-gKE-H_J6.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./persistableUrlUtils-BcifXQ1Z.js";import"./collectionUtils-Dm1icNvk.js";import"./UniqueValueRenderer-dci9bLM8.js";import"./diffUtils--7ofoPN-.js";import"./colorRamps-CFlTi-ob.js";import"./SizeVariable-aYYWlweG.js";import"./ColorStop-CXfPDZon.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DzaXbn8H.js";import"./Graphic-Dc7F67nR.js";import"./compilerUtils-BA04t1lN.js";import"./lengthUtils-D7_DvYH0.js";import"./jsonUtils-C6dvhNjw.js";import"./layerUtils-erzwAANv.js";import"./defaults-DCm7iNI6.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-DQEZjdpw.js";import"./jsonUtils-CuoSmH2q.js";import"./LRUCache-ju6LnIBZ.js";import"./MemCache-C6WUx-5V.js";import"./Version-_Vxue7Ui.js";import"./FieldsIndex-IOXc-mnc.js";import"./UnknownTimeZone-D0GlcniK.js";import"./OverrideHelper-C4oumxVn.js";import"./colorUtils-D5nOabzP.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./utils-CO7DMJWl.js";import"./quantizationUtils-CIQDbQFJ.js";import"./HeatmapColorStop-CgvKf0-E.js";import"./heatmapUtils-C-uT6ZIV.js";import"./SimpleRenderer-DvJZ7cyq.js";import"./MultiOriginJSONSupport-DjAXzJun.js";import"./workers-8Q6jrI18.js";import"./Queue-DpHko4Yk.js";import"./projection-A9yUaaTs.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./FeatureStore-BudYmSEo.js";import"./BoundsStore-DmV4yive.js";import"./PooledRBush-CGlhTzFe.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./timeSupport-BvrtlmuZ.js";import"./normalizeUtils-Bi6Jza1f.js";import"./normalizeUtilsCommon-tgSpcwHH.js";import"./utils-D61i9O7E.js";import"./utils-Dx8bgRIB.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-Buta7wlw.js";import"./centroid-DdLmOD72.js";import"./QueryEngine-CDSTFuau.js";import"./WhereClause-B8B42Be_.js";import"./TimeOnly-cvONhzoK.js";import"./fieldType-CIG5ey7e.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-aRVn40Z7.js";import"./utils-BaQRRNPl.js";import"./Basemap-DhGpUWGY.js";import"./loadAll-DDw-urzS.js";import"./PortalItem-BuTU9OuN.js";import"./writeUtils-3wz9AuW7.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./utils-BTpbFBnk.js";import"./ClassBreaksDefinition-BbGMTL53.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Scheduler-CDoWuxMK.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./clientSideDefaults-DDr2PCsV.js";import"./Relationship-CTef30N3.js";import"./Query-Cx4awVKu.js";import"./DataLayerSource-6X35yXpo.js";import"./Field-C8SaaeoI.js";import"./FullTextSearch-BNIhEccm.js";import"./fieldProperties-DJEV41A1.js";import"./FeatureEffectLayer-B3ucpbgh.js";import"./FeatureEffect-BXMKpemG.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./FeatureFilter-BzdN7b7E.js";import"./FeatureReductionLayer-7Q3CJbxJ.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureReductionSelection-Do1LXJh7.js";import"./commonProperties-C-F8Nu9F.js";import"./ElevationInfo-BxYXLfrw.js";import"./unitConversionUtils-Dl04YuQU.js";import"./featureLayerUtils-CeNLEyq1.js";import"./featureQueryAll-CRo1-WqJ.js";import"./AttachmentQuery-Dn4NbT1Z.js";import"./RelationshipQuery-kHvI2dm7.js";import"./labelingInfo-C8CHVUWS.js";import"./labelUtils-Cczy0uDR.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-CfmzojSk.js";import"./OrderByInfo-Bn0SWspE.js";import"./RefreshableLayer-B26jSd3d.js";import"./TemporalLayer-D6vkocFU.js";import"./TimeInterval-CjSB1odC.js";import"./TimeInfo-Cq5mDY2W.js";import"./FeatureSet-DyOnd9Rj.js";import"./popupUtils-fsHWupnf.js";var ot;(function(t){t.MULTIPLIER="multiplier",t.ABSOLUTE="absoluteValue"})(ot||(ot={}));let dt,L=null;function Wt(){return dt||(dt=Qt(()=>import("./lclayout-CDvAJV0i.js"),__vite__mapDeps([0,1]),import.meta.url).then(t=>t.l).then(({default:t})=>t({locateFile:i=>Vt(`esri/libs/linkchartlayout/${i}`)})).then(t=>{qt(t)}),dt)}function qt(t){L=t}var O,st;function V(t,i,a,e,s,l){const n=a.length,p=s.length,C=Float64Array.BYTES_PER_ELEMENT,d=Uint32Array.BYTES_PER_ELEMENT,m=Uint8Array.BYTES_PER_ELEMENT,r=16,y=r+n*(m+2*C)+p*(2*d),f=L._malloc(y);try{const h=f+r-f%r,M=h+n*C,b=M+n*C,D=b+p*d,I=D+p*d,c=()=>[L.HEAPF64.subarray(h>>3,(h>>3)+n),L.HEAPF64.subarray(M>>3,(M>>3)+n),L.HEAPU32.subarray(b>>2,(b>>2)+p),L.HEAPU32.subarray(D>>2,(D>>2)+p),L.HEAPU8.subarray(I,I+n)],[R,F,$,U,B]=c();R.set(a),F.set(e),$.set(s),U.set(l),B.set(i);let S=t(n,I,h,M,p,b,D),T=null,P=null;if(S){const Y=L.getLayoutLinksTypes(),o=L.getLayoutLinksVerticesEndIndices(),u=L.getLayoutLinksVertices(),g=L.countLayoutLinksVertices();!p||Y&&o?g&&!u?S=!1:(T={types:new Uint8Array(L.HEAPU8.subarray(Y,Y+p)),vertexEndIndex:new Uint32Array(L.HEAPU32.subarray(o>>2,(o>>2)+p)),vertices:new Float64Array(L.HEAPF64.subarray(u>>3,(u>>3)+2*g))},P=L.getAuxiliaryGraphicElements()):S=!1}const[J,K,X,Z,tt]=c();return a.set(J),e.set(K),s.set(X),l.set(Z),i.set(tt),{success:S,links:T,graphics:P}}finally{L._free(f),L.cleanupLayout()}}(function(t){t[t.None=0]="None",t[t.IsMovable=1]="IsMovable",t[t.IsGeographic=2]="IsGeographic",t[t.IsRoot=4]="IsRoot"})(O||(O={})),function(t){t[t.Regular=0]="Regular",t[t.Orthogonal=1]="Orthogonal",t[t.Curved=2]="Curved",t[t.Recursive=3]="Recursive"}(st||(st={}));const wt=2,Tt=1,Dt=-1;var mt,ct,yt,gt,ft,Lt,xt,Nt,vt;(function(t){function i(){return L.getMinIdealEdgeLength()}function a(e,s,l,n,p,C=wt,d=Tt,m=Dt){return V((r,y,f,h,M,b,D)=>L.applyForceDirectedLayout(r,y,f,h,M,b,D,C,d,m),e,s,l,n,p)}t.getMinIdealEdgeLength=i,t.apply=a})(mt||(mt={})),function(t){function i(a,e,s,l,n,p=wt,C=Tt,d=Dt){return V((m,r,y,f,h,M,b)=>L.applyCommunityLayout(m,r,y,f,h,M,b,p,C,d),a,e,s,l,n)}t.apply=i}(ct||(ct={})),function(t){function i(a,e,s,l,n){return V(L.applySimpleLayout,a,e,s,l,n)}t.apply=i}(yt||(yt={})),function(t){function i(a,e,s,l,n){return V(L.applyHierarchicalLayout,a,e,s,l,n)}t.apply=i}(gt||(gt={})),function(t){function i(a,e,s,l,n){return V(L.applyRadialTreeLayout,a,e,s,l,n)}t.apply=i}(ft||(ft={})),function(t){function i(a,e,s,l,n){return V(L.applySmartTreeLayout,a,e,s,l,n)}t.apply=i}(Lt||(Lt={})),function(t){function i(a,e,s,l,n,p,C,d,m){return V((r,y,f,h,M,b,D)=>{if(l.length!==r||n.length!==r||d.length!==M||m.length!==M)return!1;const I=Float64Array.BYTES_PER_ELEMENT,c=16,R=L._malloc(c+r*I),F=L._malloc(c+r*I),$=L._malloc(c+M*I),U=L._malloc(c+M*I),B=R+c-R%c,S=F+c-F%c,T=$+c-$%c,P=U+c-U%c;try{return L.HEAPF64.subarray(B>>3,(B>>3)+r).set(l),L.HEAPF64.subarray(S>>3,(S>>3)+r).set(n),L.HEAPF64.subarray(T>>3,(T>>3)+M).set(d),L.HEAPF64.subarray(P>>3,(P>>3)+M).set(m),L.applyChronologicalLayout(r,y,f,h,B,S,M,b,D,T,P)}finally{L._free(R),L._free(F),L._free($),L._free(U)}},a,e,s,p,C)}t.apply=i}(xt||(xt={})),function(t){t[t.Undirected=0]="Undirected",t[t.Directed=1]="Directed",t[t.Reversed=2]="Reversed"}(Nt||(Nt={})),function(t){t[t.ByCC_Raw=0]="ByCC_Raw",t[t.ByCC_NormalizeGlobally=1]="ByCC_NormalizeGlobally",t[t.ByCC_NormalizeByCC=2]="ByCC_NormalizeByCC"}(vt||(vt={}));let N=class extends zt(jt($t)){constructor(t){if(super(t),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new Ct,this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new Mt({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.sublayerIdsCache=new Map,this.tables=new Ct,this.type="link-chart",this._originalInclusionList=t.inclusionModeDefinition,t.dataPreloadedInLocalCache&&!t.inclusionModeDefinition)throw new it("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it")}normalizeCtorArgs(t){return{url:t.url,title:t.title,dataPreloadedInLocalCache:t.dataPreloadedInLocalCache,defaultLinkChartConfig:t.defaultLinkChartConfig}}_initializeLayerProperties(t){var l,n,p,C,d,m;if(!this.title&&this.url){const r=this.url.split("/");this.title=r[r.length-2]}const i=new Set;let a=[],e=[];if(t.inclusionModeDefinition&&(!t.inclusionModeDefinition.namedTypeDefinitions||t.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new it("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");(l=t.knowledgeGraph.dataModel.entityTypes)==null||l.forEach(r=>{r.name&&this._graphTypeLookup.set(r.name,r)}),(n=t.knowledgeGraph.dataModel.relationshipTypes)==null||n.forEach(r=>{r.name&&this._graphTypeLookup.set(r.name,r)}),(p=t.inclusionModeDefinition)!=null&&p.generateAllSublayers?(a=t.knowledgeGraph.dataModel.entityTypes??[],e=t.knowledgeGraph.dataModel.relationshipTypes??[]):(C=t.inclusionModeDefinition)!=null&&C.namedTypeDefinitions&&((d=t.inclusionModeDefinition)==null?void 0:d.namedTypeDefinitions.size)>0?(m=t.inclusionModeDefinition)==null||m.namedTypeDefinitions.forEach((r,y)=>{var h,M;const f=this._graphTypeLookup.get(y);if(!f)return H.getLogger(this).warn(`A named type, ${y}, was in the inclusion list that wasn't in the data model and will be removed`),void((h=t.inclusionModeDefinition)==null?void 0:h.namedTypeDefinitions.delete(y));f.type==="relationship"?i.has(y)||(i.add(y),e.push(f)):f.type==="entity"?i.has(y)||(i.add(y),a.push(f)):(H.getLogger(this).warn(`A named type, ${y}, was in the inclusion list that wasn't properly modeled and will be removed`),(M=t.inclusionModeDefinition)==null||M.namedTypeDefinitions.delete(y))}):(a=t.knowledgeGraph.dataModel.entityTypes??[],e=t.knowledgeGraph.dataModel.relationshipTypes??[]);const s=new Bt({knowledgeGraph:t.knowledgeGraph,inclusionModeDefinition:t.inclusionModeDefinition});this.knowledgeGraph=t.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=e,this.dataManager=s}load(t){return this.addResolvingPromise(new Promise(i=>{Yt(this.url).then(a=>{var e,s,l,n,p,C;if(this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList}),(s=(e=this.dataManager.inclusionModeDefinition)==null?void 0:e.namedTypeDefinitions)!=null&&s.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},(l=this.dataManager.knowledgeGraph.dataModel.entityTypes)==null||l.forEach(d=>{var m;d.name&&((m=this.dataManager.inclusionModeDefinition)==null||m.namedTypeDefinitions.set(d.name,{useAllData:!0}))}),(n=this.dataManager.knowledgeGraph.dataModel.relationshipTypes)==null||n.forEach(d=>{var m;d.name&&((m=this.dataManager.inclusionModeDefinition)==null||m.namedTypeDefinitions.set(d.name,{useAllData:!0}))})),this.dataPreloadedInLocalCache)this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),(p=this.dataManager.inclusionModeDefinition)==null||p.namedTypeDefinitions.forEach(d=>{var m;d.useAllData=!1,(m=d.members)==null||m.forEach(r=>{let y;y=r.linkChartLocation instanceof kt?r.linkChartLocation:r.linkChartLocation?q(r.linkChartLocation):null,y&&y.coords.length===2&&y.lengths.length===0?this.entityLinkChartDiagramLookup.set(r.id,y):this.relationshipLinkChartDiagramLookup.set(r.id,y)}),this.addResolvingPromise(this._initializeDiagram().then(async()=>{this.layers.forEach(async r=>{await r.refreshCachedQueryEngine()}),this.tables.forEach(async r=>{await r.refreshCachedQueryEngine()})}))});else{const d=((C=this.defaultLinkChartConfig)==null?void 0:C.layoutMode)==="GEOGRAPHIC";this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,d,!0).then(async()=>{Ot(t);const m=[],r=[];this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach(y=>{y.useAllData=!1})),await this._initializeDiagram(),this.layers.forEach(y=>{r.push(y.refreshCachedQueryEngine()),m.push(new Promise(f=>{y.on("layerview-create",()=>{f(null)})}))}),this.tables.forEach(y=>{r.push(y.refreshCachedQueryEngine())}),await Promise.all(r)}))}i(null)})})),Promise.resolve(this)}async addRecords(t,i){let a=[];i!=null&&i.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await Ft(t,this.dataManager.knowledgeGraph));const e=t.concat(a).filter(s=>{var l;return!((l=this.sublayerIdsCache.get(s.typeName))!=null&&l.has(s.id))});await this._handleNewRecords(e)}async removeRecords(t,{cascadeRemoveRelationships:i=!0,recalculateLayout:a=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1}){var l,n,p,C,d,m,r,y;let e=[];for(const f of t)((p=(n=(l=this.dataManager.inclusionModeDefinition)==null?void 0:l.namedTypeDefinitions)==null?void 0:n.get(f.typeName))==null?void 0:p.useAllData)===!1&&((r=(m=(d=(C=this.dataManager.inclusionModeDefinition)==null?void 0:C.namedTypeDefinitions)==null?void 0:d.get(f.typeName))==null?void 0:m.members)!=null&&r.has(f.id))&&e.push(f);if(i){const f=new Set,h=[];for(const M of e)if(this.dataManager.nodeConnectionsLookup.has(M.id))for(const b of this.dataManager.nodeConnectionsLookup.get(M.id))f.add(b);for(const M of f)if(this.dataManager.memberIdTypeLookup.has(M))for(const b of this.dataManager.memberIdTypeLookup.get(M))this.dataManager.relationshipTypeNames.has(b)&&h.push({id:M,typeName:b});e=e.concat(h)}this.dataManager.removeFromLayer(e);for(const f of e)(y=this.sublayerIdsCache.get(f.typeName))==null||y.delete(f.id),this.dataManager.relationshipTypeNames.has(f.typeName)?this.relationshipLinkChartDiagramLookup.delete(f.id):this.entityLinkChartDiagramLookup.delete(f.id);a&&await this.calculateLinkChartLayout(this._currentLinkChartConfig.layoutMode,this._currentLinkChartConfig.layoutOptions);const s=[];return this.layers.forEach(f=>{s.push(f.refreshCachedQueryEngine())}),await Promise.all(s),this._refreshNamedTypes(),e}async expand(t,i){const a=await this.dataManager.getConnectedRecordIds(t,i),e=a.filter(s=>{var l;return!((l=this.sublayerIdsCache.get(s.typeName))!=null&&l.has(s.id))});return await this._handleNewRecords(a),{records:e}}loadLayerAssumingLocalCache(){var t,i;this.memberRelationshipTypes.forEach(a=>{const e=new ut({objectType:a,parentCompositeLayer:this,graphType:"relationship",title:a.name});e.geometryType?this.layers.push(e):this.tables.push(e),this.dataManager.sublayerCaches.has(a.name)||this.dataManager.sublayerCaches.set(a.name,new Map)}),this.memberEntityTypes.forEach(a=>{const e=new ut({objectType:a,parentCompositeLayer:this,graphType:"entity",title:a.name});e.geometryType?this.layers.push(e):this.tables.push(e),this.dataManager.sublayerCaches.has(a.name)||this.dataManager.sublayerCaches.set(a.name,new Map)}),(t=this.dataManager.inclusionModeDefinition)!=null&&t.namedTypeDefinitions&&((i=this.dataManager.inclusionModeDefinition)==null||i.namedTypeDefinitions.forEach((a,e)=>{var l;const s=St(this.sublayerIdsCache,e,()=>new Set);(l=a.members)==null||l.forEach(n=>{if(s.add(n.id),n.linkChartLocation)if(n.linkChartLocation instanceof kt)this.dataManager.relationshipTypeNames.has(e)?this.relationshipLinkChartDiagramLookup.set(n.id,n.linkChartLocation):this.entityLinkChartDiagramLookup.set(n.id,n.linkChartLocation);else{const p=q(n.linkChartLocation);this.dataManager.relationshipTypeNames.has(e)?this.relationshipLinkChartDiagramLookup.set(n.id,n.linkChartLocation?p:null):this.entityLinkChartDiagramLookup.set(n.id,n.linkChartLocation?p:null)}})}))}async calculateLinkChartLayout(t="RADIAL_TREE",i){var Z,tt,Y;const a=[],e=[],s=[];this.dataManager.sublayerCaches.forEach((o,u)=>{this.dataManager.entityTypeNames.has(u)?o.forEach(g=>{a.push({typeName:u,feature:g})}):this.dataManager.relationshipTypeNames.has(u)&&o.forEach(g=>{e.push({typeName:u,feature:g})})}),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const l=new Map,n=new Map,p=new Map,C=new Map,d=new Uint8Array(a.length),m=new Float64Array(a.length),r=new Float64Array(a.length),y=new Uint32Array(e.length),f=new Uint32Array(e.length),h=[],M="FORCE_DIRECTED",b=new Mt({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let D,I="FORCE_DIRECTED",c=0,R=0;switch(I=t==="GEOGRAPHIC"?M:t,I){case"FORCE_DIRECTED":D=mt.apply;break;case"COMMUNITY":D=ct.apply;break;case"HIERARCHICAL":D=gt.apply;break;case"RADIAL_TREE":D=ft.apply;break;case"SMART_TREE":D=Lt.apply;break;default:D=yt.apply}a.forEach(({typeName:o,feature:u})=>{var g,z,j;if((g=i==null?void 0:i.lockedNodeLocations)!=null&&g.has(u.attributes[A])){t==="GEOGRAPHIC"&&this.dataManager.geographicLookup.has(o)?d[c]=O.IsGeographic:d[c]=O.None;const k=i.lockedNodeLocations.get(u.attributes[A]);m[c]=k.x,r[c]=k.y}else if(t==="GEOGRAPHIC"&&this.dataManager.geographicLookup.has(o)){d[c]=O.IsGeographic;let k=null;const E=u.attributes[this.dataManager.geographicLookup.get(o).name];switch((z=this.dataManager.geographicLookup.get(o))==null?void 0:z.geometryType){case"esriGeometryPoint":m[c]=E==null?void 0:E.x,r[c]=E==null?void 0:E.y;break;case"esriGeometryPolygon":k=E==null?void 0:E.centroid,(k==null?void 0:k.x)!=null&&(k==null?void 0:k.y)!=null?(m[c]=k.x,r[c]=k.y):d[c]=O.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":k=(j=E==null?void 0:E.extent)==null?void 0:j.center,(k==null?void 0:k.x)!=null&&(k==null?void 0:k.y)!=null?(m[c]=k.x,r[c]=k.y):d[c]=O.IsMovable;break;default:d[c]=O.IsMovable}(m[c]==null||r[c]==null||Number.isNaN(m[c])||Number.isNaN(r[c]))&&(d[c]=O.IsMovable,m[c]=0,r[c]=0)}else d[c]=O.IsMovable,m[c]=0,r[c]=0;C.set(u.attributes[A],c),h[c]={feature:u,typeName:o},c++});let F=!1;const $=new Map;e.forEach(o=>{const u=o.feature.attributes[nt],g=o.feature.attributes[rt],z=C.get(u),j=C.get(g);if(z!==void 0&&j!==void 0){const k=u+"-"+g,E=$.get(k);(E==null?void 0:E.has(o.typeName))||(y[R]=z,f[R]=j,E===void 0?$.set(k,new Map([[o.typeName,R]])):E.set(o.typeName,R),R++),s.push(o)}else F=!0,this.relationshipLinkChartDiagramLookup.set(u,null)}),F&&H.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const U=this._validateLayoutSettings(t,i),B=this._convertLayoutSettingsToCalculationSettings(U);await Wt();const{success:S,links:T}=D(d,m,r,y.subarray(0,R),f.subarray(0,R),B.computationBudgetTime,B.idealEdgeLengthMultiplier,B.repulsionRadiusMultiplier);if(!S)throw new it("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let o=0;o<h.length;o++){if(r[o]>84.9999?r[o]=84.9999:r[o]<-84.9999&&(r[o]=-84.9999),m[o]>179.9999?m[o]=179.9999:m[o]<-179.9999&&(m[o]=-179.9999),h[o].feature.attributes[x]=new bt(m[o],r[o]),l.has(h[o].typeName)){const g=l.get(h[o].typeName);g==null||g.set(h[o].feature.attributes[A],h[o].feature)}else{const g=new Map;g.set(h[o].feature.attributes[A],h[o].feature),l.set(h[o].typeName,g)}p.set(h[o].feature.attributes[A],h[o].feature);const u=q(h[o].feature.attributes[x]);this.entityLinkChartDiagramLookup.set(h[o].feature.attributes[A],h[o].feature.attributes[x]?u:null),h[o].feature.attributes[x].x<b.xmin&&(b.xmin=h[o].feature.attributes[x].x),h[o].feature.attributes[x].x>b.xmax&&(b.xmax=h[o].feature.attributes[x].x),h[o].feature.attributes[x].y<b.ymin&&(b.ymin=h[o].feature.attributes[x].y),h[o].feature.attributes[x].y>b.ymax&&(b.ymax=h[o].feature.attributes[x].y)}if(this.linkChartExtent.xmin=b.xmin,this.linkChartExtent.xmax=b.xmax,this.linkChartExtent.ymin=b.ymin,this.linkChartExtent.ymax=b.ymax,!T)throw new it("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const P=new Map,J=new Map,K=new Map,X=new Set;for(let o=0;o<s.length;o++){const u=[],g=s[o],z=g.feature.attributes[nt],j=g.feature.attributes[rt],k=z+"-"+j,E=$.get(k).get(g.typeName),Q=E===0?0:T==null?void 0:T.vertexEndIndex[E-1];if(!X.has(E)){if(X.add(E),T.types[E]===st.Recursive){const w=[T.vertices[2*Q],T.vertices[2*Q+1]],pt=[T.vertices[2*(Q+1)],T.vertices[2*(Q+1)+1]],W=[.5*(w[0]+pt[0]),.5*(w[1]+pt[1])],at=[W[0]-w[0],W[1]-w[1]],Pt=[W[0]+at[1],W[1]-at[0]],Gt=[W[0]-at[1],W[1]+at[0]];u.push(w),u.push(Pt),u.push(pt),u.push(Gt),u.push(w)}else{if(T.types[E]!==st.Regular){H.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let w=Q;w<T.vertexEndIndex[E];w++)u.push([T.vertices[2*w],T.vertices[2*w+1]])}const G=(Z=h[C.get(z)])==null?void 0:Z.feature.attributes[x],et=(tt=h[C.get(j)])==null?void 0:tt.feature.attributes[x];u[0][0]===G.x&&u[0][1]===G.y||(u[0]=[G.x,G.y]),u[u.length-1][0]===et.x&&u[u.length-1][1]===et.y||(u[u.length-1]=[et.x,et.y]);for(let w=1;w<u.length-1;w++)u[w][1]>85.5?u[w][1]=85.5:u[w][1]<-85.5&&(u[w][1]=-85.5),u[w][0]>179.9999?u[w][0]=179.9999:u[w][0]<-179.9999&&(u[w][0]=-179.9999);P.has(k)?P.get(k).push(u):P.set(k,[u])}const Rt=P.get(k);J.has(k)||(J.set(k,new Map),K.set(k,new Map));const lt=J.get(k),ht=K.get(k);lt.has(g.typeName)||(lt.set(g.typeName,Rt.shift()),ht.set(g.typeName,0));const _t=lt.get(g.typeName);ht.set(g.typeName,ht.get(g.typeName)+1);const At=new Et({paths:_t});if(g.feature.attributes[x]=At,n.has(g.typeName)){const G=n.get(g.typeName);G==null||G.set(g.feature.attributes[A],g.feature)}else{const G=new Map;G.set(g.feature.attributes[A],g.feature),n.set(g.typeName,G)}p.set(g.feature.attributes[A],g.feature);const It=q(g.feature.attributes[x]);this.relationshipLinkChartDiagramLookup.set(g.feature.attributes[A],g.feature.attributes[x]?It:null)}for(const o of s)o.feature.attributes[Ut]=((Y=K.get(o.feature.attributes[nt]+"-"+o.feature.attributes[rt]))==null?void 0:Y.get(o.typeName))??null;return this._currentLinkChartConfig={layoutMode:t,layoutOptions:U},{nodes:l,links:n,idMap:p}}async applyNewLinkChartLayout(t="RADIAL_TREE",i){const a=[];await this.calculateLinkChartLayout(t,i),this.layers.forEach(e=>{a.push(e.refreshCachedQueryEngine())}),await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){var i,a;const t=new Map;return(a=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null||a.forEach(e=>{var s;(s=e==null?void 0:e.members)==null||s.forEach(l=>{const n=l.linkChartLocation;let p;const C=l.id;n&&(p="x"in n?{x:n.x,y:n.y}:{x:n.coords[0],y:n.coords[1]},t.set(C,new bt({x:p.x,y:p.y})))})}),t}async synchronizeInclusionListWithCache(){return new Promise(t=>{var i;(i=this.dataManager.inclusionModeDefinition)==null||i.namedTypeDefinitions.forEach((a,e)=>{if(a.useAllData=!1,a.members&&a.members.size>0){if(!this.dataManager.sublayerCaches.get(e))return;const s=new Set(Array.from(this.dataManager.sublayerCaches.get(e).keys()));Array.from(a.members.keys()).filter(l=>!s.has(l)).forEach(l=>{var n;(n=a.members)==null||n.delete(l)})}}),t()})}async refreshLinkChartCache(t){await this.dataManager.refreshCacheContent(t);const i=[];this.layers.forEach(a=>{i.push(a.refreshCachedQueryEngine())}),await Promise.all(i),this._refreshNamedTypes()}async connectEntities(t){let i=[];for(const e of this.dataManager.relationshipTypeNames){const s=this.sublayerIdsCache.get(e);s&&(i=i.concat(Array.from(s.keys())))}const a=await this.dataManager.getAttachedRelationships(t,i);return await this._handleNewRecords(a),{records:a}}async _handleNewRecords(t){const i=[];this.dataManager.addToLayer(t);for(const e of t)this.sublayerIdsCache.has(e.typeName)||(this.sublayerIdsCache.set(e.typeName,new Set),i.push(e.typeName)),this.sublayerIdsCache.get(e.typeName).add(e.id);for(const e of i){const s=this._graphTypeLookup.get(e);if(s){const l=new ut({objectType:s,parentCompositeLayer:this,graphType:s.type,title:e});s.type==="entity"?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),l.geometryType?this.layers.push(l):this.tables.push(l),this.dataManager.sublayerCaches.set(e,new Map)}}await this.dataManager.refreshCacheContent(t.map(e=>e.id));const a=Object.assign({},this._currentLinkChartConfig.layoutOptions);a.lockedNodeLocations=this.getCurrentNodeLocations(),await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,a)}async _initializeDiagram(){var t,i;this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?((i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((a,e)=>{var s;(s=a==null?void 0:a.members)==null||s.forEach(l=>{const n=l.linkChartLocation;let p;const C=l.id;if(!n)return;p="x"in n?{x:n.x,y:n.y}:{x:n.coords[0],y:n.coords[1]};const d=q(p);this.dataManager.relationshipTypeNames.has(e)?this.relationshipLinkChartDiagramLookup.set(C,d):this.entityLinkChartDiagramLookup.set(C,d),this.linkChartExtent.xmin>p.x&&(this.linkChartExtent.xmin=p.x),this.linkChartExtent.xmax<p.x&&(this.linkChartExtent.xmax=p.x),this.linkChartExtent.ymin>p.y&&(this.linkChartExtent.ymin=p.y),this.linkChartExtent.ymax<p.y&&(this.linkChartExtent.ymax=p.y)})}),this.memberRelationshipTypes.forEach(a=>{var e;a.name&&((e=this.dataManager.sublayerCaches.get(a.name))==null||e.forEach(s=>{const l=this.relationshipLinkChartDiagramLookup.get(s.attributes[nt]),n=this.relationshipLinkChartDiagramLookup.get(s.attributes[rt]);if(l&&n){const p=q(new Et({paths:[[l.coords[0],l.coords[1]],[n.coords[0],n.coords[1]]]}));this.relationshipLinkChartDiagramLookup.set(s.attributes[A],p)}else this.relationshipLinkChartDiagramLookup.set(s.attributes[A],null)}))})):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.defaultLinkChartConfig.layoutOptions||{}}):await this.calculateLinkChartLayout("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const t of this.layers)t.emit("refresh",{dataChanged:!0});for(const t of this.tables)t.emit("refresh",{dataChanged:!0})}_validateLayoutSettings(t,i){const a=h=>typeof h=="number"&&!isNaN(h),e=h=>a(h)&&h>=1,s=h=>a(h)&&h>=1,l=h=>Object.values(ot).includes(h),n=h=>a(h)&&h>=0,p=new Set(["FORCE_DIRECTED","COMMUNITY","GEOGRAPHIC"]),C={};if(!p.has(t)||!i)return!p.has(t)&&i&&H.getLogger(this).warn("Layout mode options were given for a layout mode that does not utilize them, settings will be ignored"),C;const{computationBudgetTime:d,repulsionRadiusMultiplier:m,idealEdgeLength:r,idealEdgeLengthType:y}=i;s(d)?C.computationBudgetTime=d:d!==void 0&&H.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),e(m)?C.repulsionRadiusMultiplier=m:m!==void 0&&H.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting");const f=r!==void 0||y!==void 0;return t!=="GEOGRAPHIC"&&f?H.getLogger(this).warn("Ideal edge length settings were specified for an incompatible layout mode, and will be ignored"):t==="GEOGRAPHIC"&&f&&(l(y)?C.idealEdgeLengthType=y:y!==void 0&&H.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),n(r)?C.idealEdgeLength=r:r!==void 0&&H.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),C}_convertLayoutSettingsToCalculationSettings(t){let i=t.idealEdgeLength;return t.idealEdgeLengthType===ot.ABSOLUTE&&(i===void 0?i=-1:i*=-1),{computationBudgetTime:t.computationBudgetTime,repulsionRadiusMultiplier:t.repulsionRadiusMultiplier,idealEdgeLengthMultiplier:i}}};v([_()],N.prototype,"dataPreloadedInLocalCache",void 0),v([_()],N.prototype,"defaultLinkChartConfig",void 0),v([_()],N.prototype,"dataManager",void 0),v([_()],N.prototype,"knowledgeGraph",void 0),v([_()],N.prototype,"layers",void 0),v([_()],N.prototype,"entityLinkChartDiagramLookup",void 0),v([_()],N.prototype,"relationshipLinkChartDiagramLookup",void 0),v([_()],N.prototype,"linkChartExtent",void 0),v([_()],N.prototype,"memberEntityTypes",void 0),v([_()],N.prototype,"memberRelationshipTypes",void 0),v([_()],N.prototype,"sublayerIdsCache",void 0),v([_()],N.prototype,"tables",void 0),v([_({json:{read:!1}})],N.prototype,"type",void 0),N=v([Ht("esri.layers.LinkChartLayer")],N);const Si=N;export{Si as default};
