const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./FeatureLayer-BCmfw45U.js","./index-CeCSsEgo.js","./index-CjOb8WjV.css","./Evented-CXIxDjmW.js","./Accessor-D6mNnsWy.js","./subclass-BR3PhgZG.js","./PopupTemplate-ByHks6sq.js","./Clonable-cKbRam6-.js","./reactiveUtils-BFQ0BtrB.js","./shared-B3wH2qpO.js","./assets-C2mb-ea2.js","./jsonMap-DCC6W5ex.js","./writer-3zufXUNV.js","./fieldUtils-CNduWQU9.js","./intl-Dpfm8vPB.js","./Promise-CZrWwByK.js","./mathUtils-ClvKsMak.js","./geometry-DpwwkAX1.js","./Extent-DHjqVB-p.js","./Point-DB4Hp4hH.js","./Polyline-D97hl-6E.js","./enumeration--HlxOQ_N.js","./Color-DDUWtbqR.js","./colorUtils-CS9vdHXB.js","./ActionToggle-C0Z1k2jc.js","./Identifiable-BLvpQbOc.js","./ClassBreaksRenderer-DMO3d0Rn.js","./symbols-CsUQ5BxR.js","./TextSymbol-gKE-H_J6.js","./screenUtils-PfxkaaMN.js","./materialUtils-CQ3JLQ1x.js","./opacityUtils-BT7mQkwC.js","./aaBoundingBox-rJEWaOSN.js","./persistableUrlUtils-BcifXQ1Z.js","./collectionUtils-Dm1icNvk.js","./Portal-liet8xHC.js","./UniqueValueRenderer-dci9bLM8.js","./diffUtils--7ofoPN-.js","./colorRamps-CFlTi-ob.js","./SizeVariable-aYYWlweG.js","./ColorStop-CXfPDZon.js","./sizeVariableUtils-Cmcuvw-4.js","./visualVariableUtils-DzaXbn8H.js","./Graphic-Dc7F67nR.js","./jsonUtils-Cma_7A64.js","./compilerUtils-BA04t1lN.js","./lengthUtils-D7_DvYH0.js","./jsonUtils-C6dvhNjw.js","./layerUtils-erzwAANv.js","./defaults-DCm7iNI6.js","./defaultsJSON-GKolV7NZ.js","./styleUtils-DQEZjdpw.js","./jsonUtils-CuoSmH2q.js","./LRUCache-ju6LnIBZ.js","./MemCache-C6WUx-5V.js","./Version-_Vxue7Ui.js","./FieldsIndex-IOXc-mnc.js","./UnknownTimeZone-D0GlcniK.js","./OverrideHelper-C4oumxVn.js","./colorUtils-D5nOabzP.js","./vec42-B1mBkh1w.js","./vec4f64-CBQL1T0x.js","./utils-CO7DMJWl.js","./quantizationUtils-CIQDbQFJ.js","./HeatmapColorStop-CgvKf0-E.js","./heatmapUtils-C-uT6ZIV.js","./SimpleRenderer-DvJZ7cyq.js","./MultiOriginJSONSupport-DjAXzJun.js","./layerContainerType-C5CzMsLd.js","./FeatureLayerBase-CD91dIfN.js","./inputs-CnJRqwLx.js","./Field-C8SaaeoI.js","./fieldType-CIG5ey7e.js","./formUtils-Dni92j4V.js","./HeightModelInfo-CSXZysDz.js","./arcgisLayerUrl-Cgl5IQFD.js","./commonProperties-C-F8Nu9F.js","./ElevationInfo-BxYXLfrw.js","./unitConversionUtils-Dl04YuQU.js","./featureLayerUtils-CeNLEyq1.js","./featureQueryAll-CRo1-WqJ.js","./Query-Cx4awVKu.js","./TimeExtent-41gxTbrv.js","./timeUtils-DQR2jUPL.js","./DataLayerSource-6X35yXpo.js","./FullTextSearch-BNIhEccm.js","./AttachmentQuery-Dn4NbT1Z.js","./RelationshipQuery-kHvI2dm7.js","./LayerFloorInfo-BN2blBAm.js","./Relationship-WMN17mIX.js","./serviceCapabilitiesUtils-GL2GsHu0.js","./Layer-C96_yo4i.js","./workers-8Q6jrI18.js","./Queue-DpHko4Yk.js","./editsZScale-BMHD7K6h.js","./queryZScale-B_YkkRy9.js","./projection-A9yUaaTs.js","./projectBuffer-vsa0P_cF.js","./geodesicConstants-XRAvAZCD.js","./FeatureSet-DyOnd9Rj.js","./APIKeyMixin-DpJrW91V.js","./ArcGISService-Dr1J04Ka.js","./BlendLayer-DmvCcS5c.js","./jsonUtils-C4Wp5KpV.js","./parser-BN6zmHl-.js","./utils-D20M4_S8.js","./mat4f32-DcsiF_Rp.js","./mat4-ybYUU6jq.js","./CustomParametersMixin-BStBpako.js","./EditBusLayer-C6pLlK14.js","./uuid-fwrPAdZb.js","./FeatureEffectLayer-B3ucpbgh.js","./FeatureEffect-BXMKpemG.js","./FeatureFilter-BzdN7b7E.js","./FeatureReductionLayer-7Q3CJbxJ.js","./FeatureReductionSelection-Do1LXJh7.js","./labelingInfo-C8CHVUWS.js","./labelUtils-Cczy0uDR.js","./MD5-C9MwAd2G.js","./OperationalLayer-B61mRSes.js","./OrderedLayer-CfmzojSk.js","./OrderByInfo-Bn0SWspE.js","./PortalLayer-iKUPhGZB.js","./PortalItem-BuTU9OuN.js","./portalItemUtils-DIZSrm3T.js","./RefreshableLayer-B26jSd3d.js","./ScaleRangeLayer-CKYXLXxK.js","./TemporalLayer-D6vkocFU.js","./TimeInterval-CjSB1odC.js","./TimeInfo-Cq5mDY2W.js","./FeatureTemplate-BOr53vUa.js","./FeatureType-ByEWGsln.js","./fieldProperties-DJEV41A1.js","./versionUtils-ByKR3-oH.js","./styleUtils-BATHgMyw.js","./TopFeaturesQuery-BBItvyOE.js","./popupUtils-fsHWupnf.js","./interfaces-CL2NbQte.js"])))=>i.map(i=>d[i]);
import{_ as E}from"./index-CeCSsEgo.js";import{o as N,e as d}from"./Evented-CXIxDjmW.js";import"./geometry-DpwwkAX1.js";import{E as v,U as O}from"./assets-C2mb-ea2.js";import{c as a,y,b as S,n as c}from"./subclass-BR3PhgZG.js";import{E as x,L as F}from"./Accessor-D6mNnsWy.js";import{o as C}from"./projection-A9yUaaTs.js";import{c as k}from"./query-DbJf0nTj.js";import{b as P}from"./Query-Cx4awVKu.js";import{y as $}from"./jsonUtils-Cma_7A64.js";import{f as M}from"./Point-DB4Hp4hH.js";import"./Extent-DHjqVB-p.js";import"./Polyline-D97hl-6E.js";import"./writer-3zufXUNV.js";import"./mathUtils-ClvKsMak.js";import"./jsonMap-DCC6W5ex.js";import"./reactiveUtils-BFQ0BtrB.js";import"./shared-B3wH2qpO.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./normalizeUtils-Bi6Jza1f.js";import"./normalizeUtilsCommon-tgSpcwHH.js";import"./utils-D61i9O7E.js";import"./utils-Dx8bgRIB.js";import"./pbfQueryUtils-C7MaRxj2.js";import"./pbf-CmaozfCN.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-B_YkkRy9.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./Promise-CZrWwByK.js";import"./enumeration--HlxOQ_N.js";import"./DataLayerSource-6X35yXpo.js";import"./Field-C8SaaeoI.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BNIhEccm.js";import"./Clonable-cKbRam6-.js";let w=class extends N.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new a("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};d([y({readOnly:!0})],w.prototype,"connectionError",null),w=d([S("esri.layers.support.StreamConnection")],w);const R=w;var f;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(f||(f={}));let g=class extends R{constructor(t){super({}),this._outstandingMessages=[],this.errorString=null;const{geometryType:r,spatialReference:o,sourceSpatialReference:s}=t;this._config=t,this._featureZScaler=C(r,s,o),this._open()}normalizeCtorArgs(){return{}}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),this._websocket!=null&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(this._websocket==null)return"disconnected";switch(this._websocket.readyState){case f.CONNECTING:case f.OPEN:return"connected";case f.CLOSING:case f.CLOSED:return"disconnected"}}sendMessageToSocket(t){this._websocket!=null?this._websocket.send(JSON.stringify(t)):this._outstandingMessages.push(t)}sendMessageToClient(t){this._onMessage(t)}updateCustomParameters(t){this._config.customParameters=t,this._websocket!=null&&this._websocket.close()}async _tryCreateWebSocket(t=this._config.source.path,r=1e3,o=0){try{if(this.destroyed)return;const s=v(t,this._config.customParameters??{});this._websocket=await this._createWebSocket(s),this.notifyChange("connectionStatus")}catch(s){const n=r/1e3;return this._config.maxReconnectionAttempts&&o>=this._config.maxReconnectionAttempts?(c.getLogger(this).error(new a("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(c.getLogger(this).error(new a("websocket-connection",`Failed to connect. Attempting to reconnect in ${n}s`,s)),await x(r),this._tryCreateWebSocket(t,Math.min(1.5*r,1e3*this._config.maxReconnectionInterval),o+1))}}_setWebSocketJSONParseHandler(t){t.onmessage=r=>{try{const o=JSON.parse(r.data);this._onMessage(o)}catch(o){return void c.getLogger(this).error(new a("websocket-connection","Failed to parse message, invalid JSON",{error:o}))}}}_createWebSocket(t){return new Promise((r,o)=>{const s=new WebSocket(t);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=n=>this._onClose(n),s.onerror=n=>this._onError(n),this._setWebSocketJSONParseHandler(s),r(s)},s.onclose=n=>{s.onopen=s.onclose=null,o(n)}})}async _handshake(t=1e4){const r=this._websocket;if(r==null)return;const o=F(),s=r.onmessage,{filter:n,outFields:u,spatialReference:l}=this._config;return o.timeout(t),r.onmessage=h=>{var _;let i=null;try{i=JSON.parse(h.data)}catch{}i&&typeof i=="object"||(c.getLogger(this).error(new a("websocket-connection","Protocol violation. Handshake failed - malformed message",h.data)),o.reject(),this.destroy()),((_=i.spatialReference)==null?void 0:_.wkid)!==(l==null?void 0:l.wkid)&&(c.getLogger(this).error(new a("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${l.wkid}`,h.data)),o.reject(),this.destroy()),i.format!=="json"&&(c.getLogger(this).error(new a("websocket-connection","Protocol violation. Handshake failed - format is not set",h.data)),o.reject(),this.destroy()),n&&i.filter!==n&&c.getLogger(this).error(new a("websocket-connection","Tried to set filter, but server doesn't support it")),u&&i.outFields!==u&&c.getLogger(this).error(new a("websocket-connection","Tried to set outFields, but server doesn't support it")),r.onmessage=s;for(const p of this._outstandingMessages)r.send(JSON.stringify(p));this._outstandingMessages=[],o.resolve()},r.send(JSON.stringify({filter:n,outFields:u,format:"json",spatialReference:{wkid:l.wkid}})),o.promise}_onMessage(t){if(this.onMessage(t),"type"in t)switch(t.type){case"features":case"featureResult":for(const r of t.features)this._featureZScaler!=null&&this._featureZScaler(r.geometry),this.onFeature(r)}}_onError(t){const r="Encountered an error over WebSocket connection";this._set("errorString",r),c.getLogger(this).error("websocket-connection",r)}_onClose(t){this._websocket=null,this.notifyChange("connectionStatus"),t.code!==1e3&&c.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${t.code}`),this.destroyed||this._open()}};d([y()],g.prototype,"connectionStatus",null),d([y()],g.prototype,"errorString",void 0),g=d([S("esri.layers.graphics.sources.connections.WebSocketConnection")],g);const W=1e4,T={maxQueryDepth:5,maxRecordCountFactor:3};let b=class extends g{constructor(e){super({...T,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||c.getLogger(this).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:o}=this._config;this.destroyed||this._setFilter(r,o)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),this._featureZScaler!=null&&this._featureZScaler(t.geometry)}catch(r){return void c.getLogger(this).error(new a("geoevent-connection","Failed to parse message",r))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=O(e.path,{query:t,responseType:"json"}),o=(await r).data;return this._serviceDefinition=o,o}_fetchWebSocketUrl(e,t){const r=e[0],{urls:o,token:s}=r,n=this._inferWebSocketBaseUrl(o);return v(`${n}/subscribe`,{outSR:""+t.wkid,token:s})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(const t of e)if(t.includes("wss"))return t;return c.getLogger(this).error(new a("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(r==null||e==null&&t==null)return;const o=JSON.stringify({filter:this._serializeFilter(e,t)});let s=!1;const n=F(),u=()=>{s||(this.destroyed||this._websocket!==r||c.getLogger(this).error(new a("geoevent-connection","Server timed out when setting filter")),n.reject())},l=h=>{const i=JSON.parse(h.data);i.filter&&(i.error&&(c.getLogger(this).error(new a("geoevent-connection","Failed to set service filter",i.error)),this._set("errorString",`Could not set service filter - ${i.error}`),n.reject(i.error)),this._setWebSocketJSONParseHandler(r),s=!0,n.resolve())};return r.onmessage=l,r.send(o),setTimeout(u,W),n.promise}_serializeFilter(e,t){const r={};if(e==null&&t==null)return r;if(e!=null&&e.geometry)try{const o=$(e.geometry);if(o.type!=="extent")throw new a(`Expected extent but found type ${o.type}`);r.geometry=JSON.stringify(o.shiftCentralMeridian())}catch(o){c.getLogger(this).error(new a("geoevent-connection","Encountered an error when setting connection geometryDefinition",o))}return e!=null&&e.where&&e.where!=="1 = 1"&&e.where!=="1=1"&&(r.where=e.where),t!=null&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],o=this._relatedFeatures.get(r);if(!o)return c.getLogger(this).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:s,geometry:n}=o;for(const u in s)e.attributes[u]=s[u];return n&&(e.geometry=n),e.geometry||e.centroid||c.getLogger(this).error(new a("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),o=this._queryArchive(t);await r;const s=await o;if(!s)return;for(const n of s.features)this.onFeature(this._enrich(n))}catch(e){c.getLogger(this).error(new a("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){var p;const t=new(await E(async()=>{const{default:L}=await import("./FeatureLayer-BCmfw45U.js");return{default:L}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137]),import.meta.url)).default({url:e}),{capabilities:r}=await t.load(),o=r.query.supportsMaxRecordCountFactor,s=r.query.supportsPagination,n=r.query.supportsCentroid,u=this._config.maxRecordCountFactor,l=t.capabilities.query.maxRecordCount,h=o?l*u:l,i=new P;if(i.outFields=this._config.outFields??["*"],i.where=((p=this._config.filter)==null?void 0:p.where)??"1=1",i.returnGeometry=!0,i.returnExceededLimitFeatures=!0,i.outSpatialReference=M.fromJSON(this._config.spatialReference),n&&(i.returnCentroid=!0),o&&(i.maxRecordCountFactor=u),s)return i.num=h,t.destroy(),this._queryPages(e,i);const _=await k(e,i,this._config.sourceSpatialReference);return t.destroy(),_.data}async _queryPages(e,t,r=[],o=0){t.start=t.num!=null?o*t.num:null;const{data:s}=await k(e,t,this._config.sourceSpatialReference);return s.exceededTransferLimit&&o<(this._config.maxQueryDepth??0)?(s.features.forEach(n=>r.push(n)),this._queryPages(e,t,r,o+1)):(r.forEach(n=>s.features.push(n)),s)}_addRelatedFeatures(e){const t=new Map,r=e.features,o=this._serviceDefinition.relatedFeatures.joinField;for(const s of r){const n=s.attributes[o];t.set(n,s)}this._relatedFeatures=t}};b=d([S("esri.layers.graphics.sources.connections.GeoEventConnection")],b);const q=b;let m=class extends R{constructor(e){super({}),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:o}=e;this._featureZScaler=C(t,o,r)}normalizeCtorArgs(){return{}}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)this._featureZScaler!=null&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};d([y()],m.prototype,"connectionStatus",void 0),d([y()],m.prototype,"errorString",void 0),m=d([S("esri.layers.support.ClientSideConnection")],m);function j(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t),e!=null&&(r.where=e),r}function Ce(e,t,r,o,s,n,u,l,h){const i={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:o,filter:j(s,n),maxReconnectionAttempts:u,maxReconnectionInterval:l,customParameters:h};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new g(i):new q(i):new m(i)}export{Ce as createConnection};
