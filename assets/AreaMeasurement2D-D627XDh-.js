import{e as a}from"./Evented-CXIxDjmW.js";import{u as L,O as se,t as oe}from"./Accessor-D6mNnsWy.js";import{y as n,b as H,n as ae}from"./subclass-BR3PhgZG.js";import{e as O,B as ne,n as z}from"./jsxFactory-Be5PKa9i.js";import{d as b,P as S,w as le}from"./reactiveUtils-BFQ0BtrB.js";import{_ as T,f as $,j as I,ad as k}from"./Point-TlcsOcXV.js";import{_ as me,K as v,W as pe}from"./projection-tSh-0UvX.js";import{e as ue}from"./defaultUnit-6wOlq6cB.js";import"./geometry-CnaxvJsv.js";import{d as A}from"./Graphic-Bi5hWHps.js";import"./intl-CArXn1et.js";import"./symbols-CfvYGR4J.js";import{R,G as he,q as ce}from"./colorUtils-D5nOabzP.js";import{g as B,j as de,$ as ge,d as ve,D as fe}from"./unitFormatUtils-BtkL2qzA.js";import{h as ye}from"./UpdatingHandles-CMtXpTiG.js";import{geodesicDensify as x,planarLength as E,simplify as M,geodesicLength as _e,geodesicArea as we,planarArea as be}from"./geometryEngine-DyRMGqqp.js";import{w as U,R as _,v as G,y as q}from"./geodesicUtils-DyOqnDq-.js";import C from"./GraphicsLayer-DACkzSwx.js";import{l as V}from"./ViewingMode-Dodu7ZZk.js";import{f as Le}from"./SnappingVisualizer2D-D8iIxBDy.js";import{l as Me}from"./Draw-BJJbi6cJ.js";import{E as j,p as $e,P as Ae}from"./EditGeometryOperations-yqtNdguW.js";import{n as Se,p as De,E as Oe,f as Te}from"./InteractiveToolBase-BwczmwYA.js";import{S as ke}from"./GraphicManipulator-Dp-uSe1P.js";import{e as xe}from"./SnappingContext-lR2hMWGP.js";import{f as Ge}from"./SnappingDragPipelineStep-Xj6G0KqT.js";import{a as qe}from"./SnappingManagerPool-CxgepikZ.js";import{N as Ce}from"./SnappingManager-DFm0py-D.js";import{h as N,e as Re}from"./Promise-CZrWwByK.js";import{S as Ue,d as He,m as We,a as ze,y as P}from"./TextSymbol-zZq0BA1M.js";import{m as K,j as Ie}from"./Polyline-BQFeqYXi.js";import{p as Be,u as Ee}from"./MeasurementWidgetContent-CNKyAkoI.js";import{e as F}from"./globalCss-CZa70j6i.js";import"./uuid-fwrPAdZb.js";import"./jsonMap-DCC6W5ex.js";import"./assets-BNizZMOZ.js";import"./index-BVncS3aY.js";import"./shared-B3wH2qpO.js";import"./writer-3zufXUNV.js";import"./mathUtils-ClvKsMak.js";import"./Extent-B4rrMrqp.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./getDefaultUnitForView-C278cFTz.js";import"./Portal-DCqdz-K4.js";import"./PopupTemplate-D8mXPxzU.js";import"./Clonable-cKbRam6-.js";import"./fieldUtils-C5R42-PY.js";import"./enumeration--HlxOQ_N.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./jsonUtils-DtWlwXHP.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-BGxkJAW0.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./collectionUtils-Dm1icNvk.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./Cyclical-BY_I03kj.js";import"./quantityUtils-Cz8e0KG8.js";import"./geometryEngineBase-RmbNeFm7.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-CRSW297p.js";import"./GraphicsCollection-B0IuEpT5.js";import"./Layer-CfUiPX3n.js";import"./TimeExtent-Dl-qaORu.js";import"./timeUtils-DQR2jUPL.js";import"./BlendLayer-DmvCcS5c.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./ScaleRangeLayer-CKYXLXxK.js";import"./ElevationInfo-jptbPjRY.js";import"./unitConversionUtils-BUA_O87q.js";import"./lengthUtils-vgIBtB6M.js";import"./vec2-B_ymkwGp.js";import"./vec2f64-Diu2Kaa8.js";import"./enums-BRXbslMp.js";import"./SnappingVisualizer-Bg9_3fTb.js";import"./PointSnappingHint-DJuRAzp4.js";import"./projectVectorToVector-BLdiwuTJ.js";import"./projectPointToVector-C-hGM2ap.js";import"./SnappingOperation-CqqVcxu4.js";import"./Scheduler-CDoWuxMK.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./InputManager-C4xu1R9l.js";import"./Queue-DpHko4Yk.js";import"./keybindings-DYR2fa8r.js";import"./screenUtils-BGG3AyYa.js";import"./elevationInfoUtils-C0SzfJu0.js";import"./surfaceCoordinateSystems-BE1mjxbn.js";import"./memoize-DsJmrG76.js";import"./ReactiveSet-HYC-4KEs.js";import"./diffUtils--7ofoPN-.js";import"./dehydratedFeatureComparison-NNZuxUKF.js";import"./SketchLabelOptions-10TdxHmI.js";import"./hydratedFeatures-DHwl8sGq.js";import"./mat2d-DPkeMmgR.js";import"./mat2df64-CBKYtunK.js";import"./quat-ChS85qAG.js";import"./mat3f64-BBpwCtoL.js";import"./quatf64-BrpT0VRp.js";import"./compilerUtils-BA04t1lN.js";import"./plane-Bz78OrLf.js";import"./mat4f64-Dk4dwAN8.js";import"./mathUtils-kvswLROa.js";import"./geometry2dUtils-BraNT6Fs.js";import"./meshVertexSpaceUtils-BfF6O78E.js";import"./MeshLocalVertexSpace-sBjAuOT3.js";import"./interfaces-D6pIddIh.js";import"./defaults-CIM29kXM.js";import"./defaultsJSON-GKolV7NZ.js";import"./drapedUtils-BgWOavfo.js";import"./sphere-DIv2hmik.js";import"./FeatureFilter-DqmBE6ye.js";import"./Query-BpMwiNVl.js";import"./DataLayerSource-BX7Ap_tY.js";import"./Field-poIiHWUc.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BhJOgh_r.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./layerUtils-BzjQnEdj.js";import"./utils-CXgSw6Sd.js";import"./layerViewUtils-D2JqIDZ8.js";import"./geodesicLengthMeasurementUtils-YCCCQWpE.js";import"./UnitSelect-Cnnhr_2u.js";const f=1e5;let g=class extends Se{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new C({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new C({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new C({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new ye,this._vertices=[],this.geodesicDistanceThreshold=null,this.measurement=null,this.measurementLabel=null}initialize(){N("esri/core/t9n/Units").then(t=>{this.messages=t});const e=this.view;this._draw=new Me({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this._snappingManagerResult=qe(e),this.addHandles([Re(async()=>{this.messages=await N("esri/core/t9n/Units")}),b(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updateGraphics()},S),b(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:i})=>i);for(const{handle:i}of this._vertices)i.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)}),b(()=>this.snappingOptions.featureSources,t=>{for(const i of t)i.layer!==this._measurementLayer&&i.layer!==this._manipulatorLayer||(i.enabled=!1)},S),this._snappingManagerResult]),Ce(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=L(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=L(this._measurementLayer),this._manipulatorLayer=L(this._manipulatorLayer),this._snappingLayer=L(this._snappingLayer),this._updatingHandles=L(this._updatingHandles),this._resetVertices()}get _snappingManager(){return this._snappingManagerResult.snappingManager}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this._snappingManager.options}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_getSnappingContext(e){return new xe({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new j(new $e("point",Ae(!1,!1,this.view.spatialReference)),V.Local),visualizer:new Le(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._snappingManager,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],i=>this._updateSketch(i.vertices)),t.on("draw-complete",()=>this._stopSketch())}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const t=this.view.spatialReference;if(t&&(!Y(t)||me())){for(;this._vertices.length>e.length;){const{handle:i,manipulator:s}=this._vertices.pop();i.remove(),this.manipulators.remove(s)}for(let i=this._vertices.length;i<e.length;i++){const[s,p]=e[i],l=new T({x:s,y:p,spatialReference:t}),m=Ve(l,this.view,this._manipulatorLayer);this.manipulators.add(m);const o=j.fromGeometry(l,V.Local);o.on("vertex-update",h=>{const u=h.vertices.at(0);u&&(this._vertices[i].coord=[u.pos[0],u.pos[1]],this._updateGraphics())});const r=De(m,(h,u,d,w)=>{const ee=this._getSnappingContext(w),te=this._snappingManager,ie=this._updatingHandles,{snappingStep:re}=Ge({snappingContext:ee,snappingManager:te,updatingHandles:ie});u.next(Oe(this.view)).next(D=>{if(D.action==="start"){const W=new T(D.mapStart);h.graphic.geometry=W,o.trySetGeometry(W)}return D}).next(...re).next(Te({operations:o})).next(()=>{h.graphic.geometry=o.data.geometry})});this._vertices.push({manipulator:m,coord:[s,p],handle:r})}if(this._vertices.length){const i=this._vertices.length-1,s=this._vertices[i],[p,l]=e[i];s.coord[0]===p&&s.coord[1]===l||(s.coord=[p,l],s.manipulator.graphic.geometry=new T({x:p,y:l,spatialReference:t}));const m=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach(({manipulator:o})=>{o.interactive=m==null||o!==m})}this._updateGraphics()}}_updateGraphics(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=je(this._vertices.map(({coord:d})=>d),this.view.spatialReference,this.geodesicDistanceThreshold);if(!e)return;const{measurement:t,fillGeometry:i,outlineGeometry:s}=e;this._set("measurement",t);const p=t?Pe(this.messages,t,this.unit):null;if(this._set("measurementLabel",p),!i&&!s)return;let l,m,o;const{graphics:r}=this._measurementLayer,h=r.length===3,{effectiveTheme:u}=this.view;h?(l=r.at(0),m=r.at(1),o=r.at(2)):(l=new A({symbol:new Ue({color:R(u.accentColor,.3),outline:null})}),m=new A({symbol:new He({color:u.accentColor,width:2})}),o=new A({symbol:new We({color:u.textColor,font:new ze({size:14,family:"sans-serif"}),haloColor:R(he(u.textColor,ce.Low),.5),haloSize:2})}),r.removeAll(),r.addMany([l,m,o])),l.geometry=i,m.geometry=s,o.geometry=i==null?void 0:i.centroid,o.symbol.text=(p==null?void 0:p.area)??""}};function Ve(e,t,i){const p={style:"circle",color:R(t.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},l=new P({...p,size:8}),m=new P({...p,size:1.5*8}),o=new A({geometry:e,symbol:l});return new ke({view:t,layer:i,graphic:o,focusedSymbol:m})}function je(e,t,i){if(e.length===2){const h=new K({paths:e,spatialReference:t});let u;if(t!=null&&t.isGeographic)if(U(t))u=_(h,f);else{const d=v(h,$.WGS84),w=_(d,f);u=v(w,t)}else if(t!=null&&t.isWebMercator)u=x(h,f,"meters");else if(E(h,"meters")>=J(i)){const d=v(h,$.WGS84),w=_(d,f);u=v(w,t)}else u=h;return{measurement:null,fillGeometry:null,outlineGeometry:u}}e.push(e[0]);const s=new K({paths:[e],spatialReference:t}),p=new Ie({rings:[e],spatialReference:t});let l,m,o=null,r=null;if(t!=null&&t.isGeographic)if(U(t)){if(o=_(s,f),r=_(p,f),r=M(r),!r)return null;l=G([s],"meters")[0],m=q([r],"square-meters")[0]}else{const h=$.WGS84,u=v(s,h),d=v(p,h);if(o=_(u,f),r=_(d,f),r=M(r),!r)return null;l=G([u],"meters")[0],m=q([r],"square-meters")[0],o=v(o,t),r=v(r,t)}else if(t!=null&&t.isWebMercator){if(o=x(s,f,"meters"),r=x(p,f,"meters"),r=M(r),!r)return null;l=_e(s,"meters"),m=we(r,"square-meters")}else{const h=E(s,"meters");if(h>=J(i)){const u=$.WGS84,d=v(s,u),w=v(p,u);if(o=_(d,f),r=_(w,f),r=M(r),!r)return null;l=G([d],"meters")[0],m=q([r],"square-meters")[0],o=v(o,t),r=v(r,t)}else{if(o=s,r=M(p),!r)return null;l=h,m=be(r,"square-meters")}}return{measurement:{geometry:r,area:m,perimeter:l},fillGeometry:r,outlineGeometry:o}}function Ne(e){return e!=null}function Y(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:s}=e;return t&&!s&&!U(e)||!t&&!i}function Pe(e,t,i){if(!t||!e)return null;const s={area:null,perimeter:null},{area:p,perimeter:l}=t;switch(i){case"metric":s.area=ge(e,p,"square-meters");break;case"imperial":s.area=de(e,p,"square-meters");break;default:{const o=I(p,"square-meters",i);s.area=B(e,o,i);break}}const m=Ke(i);if(m)switch(m){case"metric":s.perimeter=fe(e,l,"meters");break;case"imperial":s.perimeter=ve(e,l,"meters");break;default:{const o=I(l,"meters",m);s.perimeter=B(e,o,m);break}}else s.perimeter="";return s}function Ke(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}function J(e){return e??1/0}a([n()],g.prototype,"_drawActive",void 0),a([n({readOnly:!0})],g.prototype,"cursor",null),a([n({value:!0})],g.prototype,"editable",null),a([n({type:Number})],g.prototype,"geodesicDistanceThreshold",void 0),a([n({readOnly:!0})],g.prototype,"measurement",void 0),a([n({readOnly:!0})],g.prototype,"measurementLabel",void 0),a([n()],g.prototype,"messages",void 0),a([n()],g.prototype,"unit",void 0),a([n()],g.prototype,"updating",null),a([n({constructOnly:!0})],g.prototype,"view",void 0),g=a([H("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],g);let y=class extends Be{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views."}initialize(){this.addHandles([b(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),b(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},S),b(()=>this.geodesicDistanceThreshold,e=>{this.tool!=null&&(this.tool.geodesicDistanceThreshold=e)},S)])}get geodesicDistanceThreshold(){return this._get("geodesicDistanceThreshold")}set geodesicDistanceThreshold(e){se(ae.getLogger(this),"geodesicDistanceThreshold",{version:"4.29",warnOnce:!0}),this._set("geodesicDistanceThreshold",e)}get measurement(){return this.tool!=null?this.tool.measurement:null}get measurementLabel(){return this.tool!=null?this.tool.measurementLabel:null}get state(){var e;return this.disabled||this.view==null||!Ne(this.view.spatialReference)?"disabled":(e=this.tool)!=null&&e.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return k}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await le(()=>e.ready),Y(e.spatialReference)&&await pe()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new g({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return e!=null&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(e==null)return[];const t=e.filter(i=>k.includes(i));return t.length===0?k.slice():t}};a([n(ue)],y.prototype,"defaultUnit",void 0),a([n()],y.prototype,"geodesicDistanceThreshold",null),a([n({readOnly:!0})],y.prototype,"measurement",null),a([n({readOnly:!0})],y.prototype,"measurementLabel",null),a([n({readOnly:!0})],y.prototype,"state",null),a([n({type:String})],y.prototype,"unit",null),a([n({type:[String]})],y.prototype,"unitOptions",null),y=a([H("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],y);const Z=y,Q="esri-area-measurement-2d",X={base:Q,newMeasurementButton:`${Q}__clear-button`};let c=class extends ne{constructor(e,t){super(e,t),this.messages=null,this.messagesUnits=null,this.messagesCommon=null,this.viewModel=new Z}get active(){return this.viewModel.active}get icon(){return"measure-area"}set icon(e){this._overrideIfSome("icon",e)}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,messagesUnits:i,unit:s,unitOptions:p,viewModel:l,visible:m}=this,{active:o,measurementLabel:r,state:h,supported:u}=l;return z("div",{"aria-label":e.widgetLabel,class:this.classes(X.base,F.widget,F.panel),key:this,role:"presentation"},m?z(Ee,{active:o,measurementItems:[{key:"area",title:i==null?void 0:i.measures.area,value:r==null?void 0:r.area},{key:"perimeter",title:e.perimeter,value:r==null?void 0:r.perimeter}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:X.newMeasurementButton,state:h,supported:u,unit:s,unitOptions:p,onNewMeasurementClick:()=>{oe(l.start())},onUnitChange:d=>{this.unit=d}}):null)}};a([n({readOnly:!0})],c.prototype,"active",null),a([n()],c.prototype,"icon",null),a([n()],c.prototype,"label",null),a([n(),O("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],c.prototype,"messages",void 0),a([n(),O("esri/core/t9n/Units")],c.prototype,"messagesUnits",void 0),a([n(),O("esri/t9n/common")],c.prototype,"messagesCommon",void 0),a([n()],c.prototype,"uiStrings",void 0),a([n()],c.prototype,"unit",null),a([n()],c.prototype,"unitOptions",null),a([n()],c.prototype,"view",null),a([n({type:Z})],c.prototype,"viewModel",void 0),a([n({type:Boolean})],c.prototype,"visible",null),c=a([H("esri.widgets.AreaMeasurement2D")],c);const wr=c;export{wr as default};
