import{r as a}from"./tslib.es6-B3Jf3DVX.js";import{d as x}from"./Graphic-DsxsIjhH.js";import{V as R}from"./Collection-CEdjem1-.js";import{m as s,a as f,n as w,e as E,j as q}from"./subclass-BZA_h8Db.js";import{watch as g,syncAndInitial as k,sync as S}from"./reactiveUtils-C5zUhJQJ.js";import{c as D}from"./GraphicsCollection-FfahqxsR.js";import{d as A,f as I,a as U}from"./RasterVFDisplayObject-CPWUfJVu.js";import{j as z}from"./LayerView2D-px9oN7HI.js";import{F as C}from"./GraphicsView2D-DKl03PVr.js";import{h as T}from"./HighlightGraphicContainer-CgIwbUmq.js";import{b as V,c as v,C as F}from"./Accessor-BLX9ikPh.js";import{M as j,m as M,f as H}from"./dataUtils-CRhrrZcr.js";import{a as L}from"./BitmapContainer-g3pj899H.js";import{n as O}from"./Container-CbFxlDqr.js";import{l as G}from"./Bitmap-DK9KkDb_.js";import{_ as J}from"./ExportStrategy-BkYCBqb4.js";import{U as N}from"./assets-C43MgM-v.js";import{w as B}from"./Extent-Bf3YTe7m.js";import{a5 as W}from"./Point-Cg0-ChZE.js";import{K}from"./rasterProjectionHelper-Cyb7j9c9.js";import{E as $}from"./MapView-C1_P4WdJ.js";import{a as Q}from"./WGLContainer-D25GaDws.js";import{m as X}from"./ImageryLayerView-CNV-g8kh.js";import{y as Y}from"./LayerView-CGYm21KA.js";import{i as Z}from"./RefreshableLayerView-BVliPdnr.js";import"./geometry-D964gYQX.js";import"./Polyline-D9YkgmM_.js";import"./writer-DNAwXnhG.js";import"./mathUtils-C4_ghTv4.js";import"./jsonMap-0cxwUWs2.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./cast-Bjksrh93.js";import"./fieldUtils-tmQlKvWo.js";import"./index-Bh2oEzTI.js";import"./intl-CChhNOV8.js";import"./date-DlqISzcw.js";import"./locale-C9TlLpzi.js";import"./messages-OmQvZhAg.js";import"./enumeration-Ba5njXdz.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./screenUtils-_ZIvrt5o.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./vec3f64-BLpZdpfb.js";import"./aaBoundingBox-BE7cC1jD.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./Portal-C10FKnaA.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./jsonUtils-CEfjT-BK.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./asyncUtils-CWX51uTe.js";import"./BufferObject-BVi1lwBq.js";import"./Texture-Begq2x5n.js";import"./enums-D9v74xTE.js";import"./VertexArrayObject-lPxPk5E-.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./DefaultUI-C0utm694.js";import"./jsxFactory-CJa39Fro.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-GfwcIh5z.js";import"./InputManager-Ba9xzDpe.js";import"./Queue-yu3bZ02p.js";import"./signal-D4lghLjV.js";import"./Map-iWpb5DpI.js";import"./Basemap-DVYOaWHz.js";import"./loadAll-B6mYSptb.js";import"./PortalItem-DzgXrpyc.js";import"./writeUtils-Dz7BsE1e.js";import"./layerUtils-BrNoooE9.js";import"./Ground-CAIVlzbd.js";import"./compilerUtils-Dw3R0f-Z.js";import"./CollectionFlattener-CQN6i8ZK.js";import"./editableLayers-Cn9dHzhB.js";import"./catalogUtils-DyGHPM81.js";import"./basemapUtils-B9TjOm47.js";import"./utils-93yNk4Xc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./common-DQOJ18NT.js";import"./TablesMixin-5umgS75f.js";import"./Layer-CVt7Hb5J.js";import"./TimeExtent-DocT5yPf.js";import"./timeUtils-8fb_2oAt.js";import"./HeightModelInfo-9nOoV6LU.js";import"./ReactiveMap-6CfRGOlR.js";import"./Query-5Xpquc1r.js";import"./DataLayerSource-BKkswDvG.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./FullTextSearch-Csd1Hktu.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-WcqhHU65.js";import"./a11yUtils-cyWndM8Q.js";import"./heightModelInfoUtils-C6gW75mB.js";import"./arcgisLayerUrl-BX1FE5Hm.js";import"./ViewingMode-Dodu7ZZk.js";import"./projection-B971H0Re.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./vec32-Dvg_eL9J.js";import"./HighlightDefaults-D4ckYWWJ.js";import"./imageUtils-CtmzXUTE.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-hWbBTR_7.js";import"./CompassViewModel-C7G3VWNL.js";import"./utils-DsJqvptN.js";import"./GoTo-Wtu9mgoE.js";import"./NavigationToggle-BIWeotJk.js";import"./ZoomViewModel-oUfjVFgI.js";import"./WGLBrushVTLSymbol-jiuyIxHa.js";import"./DefaultVertexAttributeLayouts-PrbBmwty.js";import"./mat3-BRl2i9Bz.js";import"./DisplayObject-DGZ6h7sV.js";import"./TileKey-Cs1awCRX.js";import"./definitions-DfvbPdMm.js";import"./StyleDefinition-BTt_i6C1.js";import"./enums-CmIX1y88.js";import"./vec2f32-BbH2jxlN.js";import"./config-MDUrh2eL.js";import"./LabelMetric-CbxH21Le.js";import"./Program-mfcb06fW.js";import"./BoundingBox-CnpCxTZE.js";import"./utils-BQBvadb7.js";import"./ClipRect-DeEaZJhE.js";import"./layerViewUtils-DhFEu8Rd.js";import"./FieldsIndex-DpwHKAMX.js";import"./UnknownTimeZone-BkowvBs8.js";import"./CIMSymbolHelper-BObHJeub.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BKHqaMFz.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./GeometryUtils-Dyjqugo6.js";import"./utils-D2PLyMFF.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./vec2-maR1OrZI.js";import"./Rect-CUzevAry.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./OverrideHelper-ti072FkP.js";import"./colorUtils-aL8wj-8G.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./quantizationUtils-uj_P09aO.js";import"./AttributeStore-BCrjTIMI.js";import"./TimeOnly-DOn_Hy89.js";import"./centroid-DdLmOD72.js";import"./featureConversionUtils-D14h8iad.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./UpdateTracking2D-DEYEtGAB.js";import"./BindType-BmZEZMMh.js";import"./Util-BIfApRF5.js";import"./vec2f64-miziP1SN.js";import"./labelFormatUtils-DFKxfrJb.js";import"./labelUtils-B8petyBk.js";import"./diffUtils-BP7jmOAy.js";import"./queryUtils-O-WFKoZd.js";import"./normalizeUtils-EVmAQ-ak.js";import"./normalizeUtilsCommon-dT81xWiM.js";import"./utils-6jMaHUrH.js";import"./utils-Bema0iXE.js";import"./json-Wa8cmqdu.js";import"./timeSupport-T1g9-JyG.js";import"./FeatureCommandQueue-CUifz1JZ.js";import"./heatmapTextureUtils-DJXJBog1.js";import"./constants-F8oTIn7N.js";import"./lengthUtils-DL1-FDQQ.js";import"./QueueProcessor-DZiVr5XH.js";import"./Tile-Bf5TzhCn.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtilsSync-BUrHV6iS.js";import"./AGraphicContainer-Bo3sLRcj.js";import"./TechniqueInstance-a5TTDhUW.js";import"./TileContainer-CvTbgMe6.js";import"./vec3f32-nZdmKIgz.js";import"./pixelRangeUtils-DHjFxYEg.js";import"./EffectView-DC4OeDwG.js";import"./parser-CTsgEym6.js";import"./TileInfo-Dphjf6xH.js";import"./TileKey-DZd6gJy7.js";import"./TileStrategy-DT04gaWW.js";import"./Viewpoint-C4FqWA2d.js";import"./Cyclical-oTUX3aX7.js";import"./workers-D4HfeYKj.js";import"./viewpointUtils-CRlgks6_.js";import"./mat2df64-CBKYtunK.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CJu5awNf.js";import"./debugFlags-BF6Z0j0F.js";import"./utils-BpB3MnW1.js";import"./Version-BSlAgupz.js";import"./ColorBackground-CfloAtNa.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-DCygKC_A.js";import"./earcut-Lltz9D9k.js";import"./timeSupport-CXKPoROL.js";import"./timeUtils-BnYjW4Rc.js";import"./tagSymbols-BPcGfZon.js";import"./popupUtils-BaLxn3kI.js";let n=class extends V{constructor(){super(...arguments),this.attached=!1,this.container=new O,this.updateRequested=!1,this.type="imagery",this._bitmapView=new L}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{v(e)||w.getLogger(this).error(e)})}hitTest(t){return new x({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new J({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{const{source:e}=t;if(!e||e instanceof ImageBitmap)return;const i=await this.layer.applyRenderer({extent:e.extent,pixelBlock:e.originalPixelBlock??e.pixelBlock});e.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...i,extent:e.extent}}).catch(t=>{v(t)||w.getLogger(this).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(o=>o.source).filter(o=>o.extent&&o.extent.intersects(e)).map(o=>({extent:o.extent,pixelBlock:o.originalPixelBlock})),r=j(i,e);return r!=null?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}async _fetchImage(t,e,i,r){var d;(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,r.returnImageBitmap=!0;const o=await this.layer.fetchImage(t,e,i,r);if(o.imageBitmap)return o.imageBitmap;const p=await this.layer.applyRenderer(o.pixelData,{signal:r.signal}),m=new G(p.pixelBlock,(d=p.extent)==null?void 0:d.clone(),o.pixelData.pixelBlock);return m.filter=u=>this.layer.applyFilter(u),m}};a([s()],n.prototype,"attached",void 0),a([s()],n.prototype,"container",void 0),a([s()],n.prototype,"layer",void 0),a([s()],n.prototype,"strategy",void 0),a([s()],n.prototype,"timeExtent",void 0),a([s()],n.prototype,"view",void 0),a([s()],n.prototype,"updateRequested",void 0),a([s()],n.prototype,"updating",null),a([s()],n.prototype,"type",void 0),n=a([f("esri.views.2d.layers.imagery.ImageryView2D")],n);const tt=n;class et extends Q{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[A],target:()=>this.children,drawPhase:$.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===$.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let h=class extends V{constructor(t){super(t),this._loading=null,this.update=F((e,i)=>this._update(e,i).catch(r=>{v(r)||w.getLogger(this).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:o}=t.state,p=new B({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:o}),[m,d]=t.state.size;this._loading=this.fetchPixels(p,m,d,i);const u=await this._loading;this._addToDisplay(u,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(t.pixelBlock==null)return this.container.children.forEach(m=>m.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:o}=t,p=new I(o);p.offset=[0,0],p.symbolizerParameters=e,p.rawPixelData=t,p.invalidateVAO(),p.x=r.xmin,p.y=r.ymax,p.pixelRatio=i.pixelRatio,p.rotation=i.rotation,p.resolution=i.resolution,p.width=o.width*e.symbolTileSize,p.height=o.height*e.symbolTileSize,this.container.children.forEach(m=>m.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(p)}};a([s()],h.prototype,"fetchPixels",void 0),a([s()],h.prototype,"container",void 0),a([s()],h.prototype,"_loading",void 0),a([s()],h.prototype,"updating",null),h=a([f("esri.views.2d.layers.imagery.ImageryVFStrategy")],h);const it=h;let l=class extends V{constructor(){super(...arguments),this.attached=!1,this.container=new et,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const o=await this._projectFullExtentPromise,{symbolTileSize:p}=this.layer.renderer,{extent:m,width:d,height:u}=M(t,e,i,p,o);if(o!=null&&!o.intersects(t))return{extent:m,pixelBlock:null};const b={bbox:`${m.xmin}, ${m.ymin}, ${m.xmax}, ${m.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:p,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(b)){const c=this.getPixelData();if(c!=null&&`${c.extent.xmin}, ${c.extent.ymin}, ${c.extent.xmax}, ${c.extent.ymax}`===b.bbox)return c}const{pixelData:_}=await this.layer.fetchImage(m,d,u,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});this._dataParameters=b;const P=_==null?void 0:_.pixelBlock;return P==null?{extent:m,pixelBlock:null}:{extent:m,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?H(P,"vector-uv"):P}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new it({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(g(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),k),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){var r;const t=(r=this.container.children[0])==null?void 0:r.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new x({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams).catch(e=>{v(e)||w.getLogger(this).error(e)})}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,o=this._dataParameters.bbox===t.bbox;return e&&i&&r&&o}async _getProjectedFullExtent(t){try{return K(this.layer.fullExtent,t)}catch{try{const i=(await N(this.layer.url,{query:{option:"footprints",outSR:W(t),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?B.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){t.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};a([s()],l.prototype,"attached",void 0),a([s()],l.prototype,"container",void 0),a([s()],l.prototype,"layer",void 0),a([s()],l.prototype,"timeExtent",void 0),a([s()],l.prototype,"type",void 0),a([s()],l.prototype,"view",void 0),a([s()],l.prototype,"updating",null),l=a([f("esri.views.2d.layers.imagery.VectorFieldView2D")],l);const rt=l;let y=class extends X(Z(z(Y))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new D,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}update(t){var e;(e=this.subview)==null||e.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new C({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([g(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},S),g(()=>this.timeExtent,t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())},S),this.layer.on("redraw",()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())}),g(()=>this.layer.renderer,()=>this._setSubView())])}detach(){var t,e;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.subview=null,(e=this._highlightView)==null||e.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:R.isCollection(t)?t.at(0):t)instanceof x))return E();let i=[];return Array.isArray(t)||R.isCollection(t)?i=t.map(r=>r.clone()):t instanceof x&&(i=[t.clone()]),this._highlightGraphics.addMany(i),E(()=>this._highlightGraphics.removeMany(i))}async doRefresh(){this.requestUpdate()}isUpdating(){var e,i;const t=!this.subview||this.subview.updating||!!((e=this._highlightView)!=null&&e.updating);return q("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${t}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${(i=this._highlightView)==null?void 0:i.updating}
`),t}_setSubView(){var i,r;if(!this.view)return;const t=(i=this.layer.renderer)==null?void 0:i.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:o}=this.subview;if(o===e)return this._attachSubview(this.subview),void(o==="flow"?this.subview.redrawOrRefetch():o==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=e==="imagery"?new tt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new rt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new U({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t!=null&&t.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};a([s()],y.prototype,"pixelData",null),a([s()],y.prototype,"subview",void 0),y=a([f("esri.views.2d.layers.ImageryLayerView2D")],y);const io=y;export{io as default};
