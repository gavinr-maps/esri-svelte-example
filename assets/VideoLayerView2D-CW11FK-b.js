import{r as v}from"./tslib.es6-B3Jf3DVX.js";import{l as B}from"./Color-BCS62Hs5.js";import{d as x}from"./Graphic-DsxsIjhH.js";import"./symbols-CNimns--.js";import{W as I,h as X,B as Y,q}from"./Accessor-BLX9ikPh.js";import{when as k,initial as b,watch as M}from"./reactiveUtils-C5zUhJQJ.js";import{m as $,a as J}from"./subclass-BZA_h8Db.js";import K from"./GraphicsLayer-i3FeUJ_n.js";import{l as U}from"./TelemetryDisplay-D4TxKMhp.js";import{u as N}from"./OverlayContainer-BX9xzEyO.js";import"./geometry-D964gYQX.js";import{c as V}from"./screenUtils-_ZIvrt5o.js";import{n as Q}from"./vec2f64-miziP1SN.js";import{K as g}from"./projection-B971H0Re.js";import{e as Z}from"./DisplayObject-DGZ6h7sV.js";import{a as tt,j as it}from"./LayerView2D-px9oN7HI.js";import{D as et}from"./enums-D9v74xTE.js";import{e as rt,m as ot}from"./Texture-Begq2x5n.js";import{v as st}from"./Polyline-D9YkgmM_.js";import{j as z}from"./Point-Cg0-ChZE.js";import{t as mt}from"./GraphicContainer-GVp5Ep2A.js";import{F as nt}from"./GraphicsView2D-DKl03PVr.js";import{y as pt}from"./LayerView-CGYm21KA.js";import{S as at,d as R,y as W}from"./TextSymbol-D8QO_KUV.js";import"./colorUtils-0bJDPow9.js";import"./mathUtils-C4_ghTv4.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./Collection-CEdjem1-.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./cast-Bjksrh93.js";import"./writer-DNAwXnhG.js";import"./fieldUtils-tmQlKvWo.js";import"./intl-CChhNOV8.js";import"./date-DlqISzcw.js";import"./jsonMap-0cxwUWs2.js";import"./locale-C9TlLpzi.js";import"./messages-OmQvZhAg.js";import"./enumeration-Ba5njXdz.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./jsonUtils-CEfjT-BK.js";import"./Extent-Bf3YTe7m.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./vec3f64-BLpZdpfb.js";import"./aaBoundingBox-BE7cC1jD.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./Portal-C10FKnaA.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./asyncUtils-CWX51uTe.js";import"./GraphicsCollection-FfahqxsR.js";import"./Layer-CVt7Hb5J.js";import"./TimeExtent-DocT5yPf.js";import"./timeUtils-8fb_2oAt.js";import"./BlendLayer-CXM4n_Ge.js";import"./jsonUtils-CSnQD004.js";import"./parser-CTsgEym6.js";import"./utils-93yNk4Xc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./common-DQOJ18NT.js";import"./ScaleRangeLayer-Bb8Ig1Hz.js";import"./ElevationInfo-CA5m_tHv.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";import"./mat3-BRl2i9Bz.js";import"./DefaultUI-C0utm694.js";import"./jsxFactory-CJa39Fro.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-GfwcIh5z.js";import"./InputManager-Ba9xzDpe.js";import"./Queue-yu3bZ02p.js";import"./signal-D4lghLjV.js";import"./Map-iWpb5DpI.js";import"./Basemap-DVYOaWHz.js";import"./loadAll-B6mYSptb.js";import"./PortalItem-DzgXrpyc.js";import"./writeUtils-Dz7BsE1e.js";import"./layerUtils-BrNoooE9.js";import"./Ground-CAIVlzbd.js";import"./compilerUtils-Dw3R0f-Z.js";import"./CollectionFlattener-CQN6i8ZK.js";import"./editableLayers-Cn9dHzhB.js";import"./catalogUtils-DyGHPM81.js";import"./basemapUtils-B9TjOm47.js";import"./TablesMixin-5umgS75f.js";import"./HeightModelInfo-9nOoV6LU.js";import"./ReactiveMap-6CfRGOlR.js";import"./Query-5Xpquc1r.js";import"./DataLayerSource-BKkswDvG.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./FullTextSearch-Csd1Hktu.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-WcqhHU65.js";import"./a11yUtils-cyWndM8Q.js";import"./heightModelInfoUtils-C6gW75mB.js";import"./arcgisLayerUrl-BX1FE5Hm.js";import"./ViewingMode-Dodu7ZZk.js";import"./vec32-Dvg_eL9J.js";import"./HighlightDefaults-D4ckYWWJ.js";import"./imageUtils-CtmzXUTE.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-hWbBTR_7.js";import"./CompassViewModel-C7G3VWNL.js";import"./utils-DsJqvptN.js";import"./GoTo-Wtu9mgoE.js";import"./NavigationToggle-BIWeotJk.js";import"./ZoomViewModel-oUfjVFgI.js";import"./vec2f32-BbH2jxlN.js";import"./vec3f32-nZdmKIgz.js";import"./normalizeUtils-EVmAQ-ak.js";import"./normalizeUtilsCommon-dT81xWiM.js";import"./utils-6jMaHUrH.js";import"./utils-Bema0iXE.js";import"./viewpointUtils-CRlgks6_.js";import"./Viewpoint-C4FqWA2d.js";import"./Cyclical-oTUX3aX7.js";import"./mat2d-D9DBP-jx.js";import"./mat2df64-CBKYtunK.js";import"./vec2-maR1OrZI.js";import"./MapView-C1_P4WdJ.js";import"./workers-D4HfeYKj.js";import"./TileInfo-Dphjf6xH.js";import"./TileKey-DZd6gJy7.js";import"./mat2df32-orApM5a3.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CJu5awNf.js";import"./debugFlags-BF6Z0j0F.js";import"./TileStrategy-DT04gaWW.js";import"./TileKey-Cs1awCRX.js";import"./QueueProcessor-DZiVr5XH.js";import"./Tile-Bf5TzhCn.js";import"./quickselect-QQC62dOK.js";import"./definitions-DfvbPdMm.js";import"./utils-BpB3MnW1.js";import"./Version-BSlAgupz.js";import"./ColorBackground-CfloAtNa.js";import"./WGLContainer-D25GaDws.js";import"./LabelMetric-CbxH21Le.js";import"./enums-CmIX1y88.js";import"./Program-mfcb06fW.js";import"./BufferObject-BVi1lwBq.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./VertexArrayObject-lPxPk5E-.js";import"./WGLBrushVTLSymbol-jiuyIxHa.js";import"./DefaultVertexAttributeLayouts-PrbBmwty.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-DCygKC_A.js";import"./Container-CbFxlDqr.js";import"./EffectView-DC4OeDwG.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-D14h8iad.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-CUifz1JZ.js";import"./CIMSymbolHelper-BObHJeub.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BKHqaMFz.js";import"./GeometryUtils-Dyjqugo6.js";import"./utils-D2PLyMFF.js";import"./Rect-CUzevAry.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./UpdateTracking2D-DEYEtGAB.js";import"./BindType-BmZEZMMh.js";import"./Util-BIfApRF5.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./heatmapTextureUtils-DJXJBog1.js";import"./constants-F8oTIn7N.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./utils-BQBvadb7.js";import"./ClipRect-DeEaZJhE.js";import"./layerViewUtils-DhFEu8Rd.js";import"./AGraphicContainer-Bo3sLRcj.js";import"./TechniqueInstance-a5TTDhUW.js";import"./TileContainer-CvTbgMe6.js";import"./FieldsIndex-DpwHKAMX.js";import"./UnknownTimeZone-BkowvBs8.js";import"./OverrideHelper-ti072FkP.js";import"./colorUtils-aL8wj-8G.js";import"./quantizationUtils-uj_P09aO.js";import"./AttributeStore-BCrjTIMI.js";import"./TimeOnly-DOn_Hy89.js";import"./centroid-DdLmOD72.js";import"./labelFormatUtils-DFKxfrJb.js";import"./labelUtils-B8petyBk.js";import"./diffUtils-BP7jmOAy.js";import"./queryUtils-O-WFKoZd.js";import"./json-Wa8cmqdu.js";import"./timeSupport-T1g9-JyG.js";import"./normalizeUtilsSync-BUrHV6iS.js";const C=2;class lt extends Z{constructor(t){super(),this.element=t,this._handles=new I,this.isWrapAround=!1,this.perspectiveTransform=Q(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(k(()=>this.element,()=>{const i=this.element;this.ready(),i&&this._handles.add(X(i,"play",()=>this.requestRender()))},b))}getMesh(t){throw new Error("Method not implemented.")}destroy(){this._handles.destroy(),this.texture=Y(this.texture)}get textureSize(){if(!this.texture)return[1,1];const t=this.texture.descriptor;return[t.width,t.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(t){const i=this.element;if(i==null)return;const{context:e}=t,{videoWidth:s,videoHeight:o}=i;if(s!==0&&o!==0){if(this.texture)i.paused||this.texture.setData(i);else{const m=new rt;m.wrapMode=et.CLAMP_TO_EDGE,m.preMultiplyAlpha=!0,m.width=s,m.height=o,this.texture=new ot(e,m,i)}i.paused||(this.texture.generateMipmap(),this.requestRender()),super.beforeRender(t)}}_createTransforms(){return null}updateDrawCoords(t,i,e,s){const o=this.element,m=this._getFrameInfo();if(!o||!m)return;this._initializeData(t,m,e);const{controlPoints:p,horizon:l}=m,a=Math.sqrt(p.length),h=a,{x:n,y}=t,u=this._vertices,T=p[0],P=p[a-1],F=p[(h-1)*a],j=p[(h-1)*a+a-1],G=g(l?l[0].mapPoint:T.mapPoint,e),O=g(l?l[1].mapPoint:P.mapPoint,e),f=g(F.mapPoint,e),D=g(j.mapPoint,e);this.clipGeometry=l?new tt({geometry:st.fromJSON({rings:[[[f.x,f.y],[D.x,D.y],[O.x,O.y],[G.x,G.y],[f.x,f.y]]],spatialReference:e})}):null;for(let c=0;c<p.length;c++){const E=p[c],{sourcePoint:S,mapPoint:A}=E;if(S==null||A==null)continue;const w=g(A,e);u[c*C+0]=w.x-n,u[c*C+1]=w.y-y}let L=i;if(s){const c=Math.min(G.x,O.x,f.x,D.x),E=Math.max(G.x,O.x,f.x,D.x),{worldWidth:S,xBounds:A}=s,[w,H]=A;c<w&&E>w?L=S:E>H&&c<H&&(L=-S)}this.wrapAroundShift=L,this.isWrapAround=L!==0}draw(t,i){this.isReady&&this._vertices&&this._indices&&this._texCoords?i.render(t,{transform:{dvs:this.dvsMat3},config:{perspective:this.perspectiveTransform,texSize:this.textureSize,wrapAroundShift:this.wrapAroundShift,isWrapAround:this.isWrapAround,opacity:this.opacity,texture:{texture:this.texture,unit:0}},position:this._vertices,tex:this._texCoords,index:this._indices}):this.requestRender()}_initializeData(t,i,e){if(this._vertices!=null&&this._indices!=null)return;const{controlPoints:s}=i,o=Math.sqrt(s.length),m=o,p=new Float32Array(C*s.length),l=new Uint16Array(2*s.length);for(let n=0;n<s.length;n++){const y=s[n],{sourcePoint:u,mapPoint:T}=y;if(u==null||T==null)continue;const P=g(T,e);p[n*C+0]=P.x-t.x,p[n*C+1]=P.y-t.y,l[2*n+0]=u.x,l[2*n+1]=u.y}const a=new Uint16Array(m*o+(m-2)*(o+2));let h=0;for(let n=0;n<m;n++){for(let y=0;y<o;y++)a[h++]=n*o+y,a[h++]=(n+1)*o+y;n<m-2&&(a[h++]=(n+1)*o+(o-1),a[h++]=(n+1)*o)}this._vertices=p,this._texCoords=l,this._indices=a}_getFrameInfo(){if(!this.groundControlPoints)return null;const t=this._getFrameControlPoints(),i=this.frameHorizonPoints;let e=null;if(i){const s=i.startX,o=i.startY,m=i.endX,p=i.endY;e=[{sourcePoint:V(s,o),mapPoint:new z(i.startLongitude,i.startLatitude)},{sourcePoint:V(m,p),mapPoint:new z(i.endLongitude,i.endLatitude)}]}return{controlPoints:t,horizon:e}}_getFrameControlPoints(){const t=this.groundControlPoints,i=t==null?void 0:t.length;if(!i)return[];const e=new Array(i),s=Math.max(...t.map(({x:m})=>m)),o=this.element.videoWidth/s;for(let m=0;m<i;m++){const{x:p,y:l,lat:a,lon:h}=t[m];e[m]={sourcePoint:V(p*o,-l*o),mapPoint:new z(h,a)}}return e}}const _=new B([255,127,0]);let d=class extends it(pt){constructor(){super(...arguments),this._graphicsLayer=new K,this._frameOutlineGraphic=new x({symbol:new at({outline:{type:"simple-line",color:_}})}),this._sensorTrailGraphic=new x({symbol:new R({color:_})}),this._lineOfSightGraphic=new x({symbol:new R({color:_})}),this._sensorLocationGraphic=new x({symbol:new W({color:_})}),this._frameCenterGraphic=new x({symbol:new W({color:_,style:"cross"})}),this._overlayContainer=null,this.layer=null,this.symbolColor=_,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=q(this._graphicsLayer)}initialize(){var r,t,i,e,s,o;this.addHandles(M(()=>this.symbolColor,()=>{this._frameOutlineGraphic.symbol.outline.color=this.symbolColor,this._sensorTrailGraphic.symbol.color=this.symbolColor,this._lineOfSightGraphic.symbol.color=this.symbolColor,this._sensorLocationGraphic.symbol.color=this.symbolColor,this._frameCenterGraphic.symbol.color=this.symbolColor},b)),this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic]),this.visibleTelemetryElements=new U({frame:((r=this.layer.telemetryDisplay)==null?void 0:r.frame)??!1,frameCenter:((t=this.layer.telemetryDisplay)==null?void 0:t.frameCenter)??!0,frameOutline:((i=this.layer.telemetryDisplay)==null?void 0:i.frameOutline)??!0,lineOfSight:((e=this.layer.telemetryDisplay)==null?void 0:e.lineOfSight)??!0,sensorLocation:((s=this.layer.telemetryDisplay)==null?void 0:s.sensorLocation)??!0,sensorTrail:((o=this.layer.telemetryDisplay)==null?void 0:o.sensorTrail)??!0})}attach(){this._overlayContainer=new N,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new nt({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new mt(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([M(()=>{var r,t,i,e,s,o;return[(r=this.layer.telemetryDisplay)==null?void 0:r.frame,(t=this.layer.telemetryDisplay)==null?void 0:t.frameCenter,(i=this.layer.telemetryDisplay)==null?void 0:i.frameOutline,(e=this.layer.telemetryDisplay)==null?void 0:e.sensorLocation,(s=this.layer.telemetryDisplay)==null?void 0:s.sensorTrail,(o=this.layer.telemetryDisplay)==null?void 0:o.lineOfSight]},()=>this._updateVisibleTelemetryElements(),b),M(()=>{var r,t,i,e,s;return[this.layer.telemetry,(r=this.visibleTelemetryElements)==null?void 0:r.frameCenter,(t=this.visibleTelemetryElements)==null?void 0:t.frameOutline,(i=this.visibleTelemetryElements)==null?void 0:i.sensorLocation,(e=this.visibleTelemetryElements)==null?void 0:e.sensorTrail,(s=this.visibleTelemetryElements)==null?void 0:s.lineOfSight]},()=>this._updateGraphicGeometries(),b)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=q(this.graphicsView)}supportsSpatialReference(r){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(r){this.graphicsView.processUpdate(r)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frame=this.layer.telemetryDisplay.frame,this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:r}=this.layer,{visibleTelemetryElements:t}=this;r&&t&&(t.frameOutline&&r.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&r.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&r.lineOfSight?this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight:this._lineOfSightGraphic.geometry=null,t.sensorLocation&&r.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&r.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const r=new lt(this.layer.videoElement);this.addAttachHandles([M(()=>[this.layer.frameHorizonPoints,this.layer.groundControlPoints],()=>{const{visibleTelemetryElements:t}=this;t!=null&&t.frame?(r.frameHorizonPoints=this.layer.frameHorizonPoints,r.groundControlPoints=this.layer.groundControlPoints,r.opacity=1):r.opacity=0},b)]),this._overlayContainer.addChild(r),this.view.stage.requestRender()}};v([$()],d.prototype,"graphicsView",void 0),v([$()],d.prototype,"layer",void 0),v([$()],d.prototype,"symbolColor",void 0),v([$({type:U})],d.prototype,"visibleTelemetryElements",void 0),d=v([J("esri.views.2d.layers.VideoLayerView2D")],d);const oo=d;export{oo as default};
