import{_ as $}from"./asyncUtils-CWX51uTe.js";import{b as m}from"./subclass-BZA_h8Db.js";import{n as M,D as _,p as A}from"./Accessor-BLX9ikPh.js";import{j as C,z as E}from"./Point-Cg0-ChZE.js";import{o as V,b as O,u as x,d as j,R as z}from"./Polyline-D9YkgmM_.js";import{N as q,K as I}from"./projection-B971H0Re.js";import{u as D}from"./ElevationSamplerData-DF8Bl6I9.js";import{t as S}from"./ElevationTile-F2xXmLtF.js";import{t as b}from"./TileKey-DZd6gJy7.js";import"./tslib.es6-B3Jf3DVX.js";import"./cast-Bjksrh93.js";import"./writer-DNAwXnhG.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./jsonMap-0cxwUWs2.js";import"./Extent-Bf3YTe7m.js";import"./mathUtils-C4_ghTv4.js";import"./SimpleObservable-KocWTzVy.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./geometry-D964gYQX.js";class ge{async queryAll(e,t,i){if(!(e=i!=null&&i.ignoreInvisibleLayers?e.filter(c=>c.visible):e.slice()).length)throw new m("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=d.fromGeometry(t);let o=!1;i!=null&&i.returnSampleInfo||(o=!0);const l={...v,...i,returnSampleInfo:!0},s=await this.query(e[e.length-1],n,l),r=await this._queryAllContinue(e,s,l);return r.geometry=r.geometry.export(),o&&delete r.sampleInfo,r}async query(e,t,i){if(!e)throw new m("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof d)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new m("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...v,...i},o=new P(e,t.spatialReference,n),l=n.signal;return await e.load({signal:l}),await G(o,t,l),await this._selectTiles(o,l),await w(o,l),H(o),J(o,l)}async createSampler(e,t,i){if(!e)throw new m("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new m("elevation-query:invalid-extent","Invalid or undefined extent");const n={...v,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i!=null&&i.ignoreInvisibleLayers?e.filter(l=>l.visible):e.slice()).length)throw new m("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new m("elevation-query:invalid-extent","Invalid or undefined extent");const n={...v,...i,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,o,n)}async _createSampler(e,t,i,n){const o=i.signal;await e.load({signal:o});const l=t.spatialReference,s=e.tileInfo.spatialReference;l.equals(s)||(await q([{source:l,dest:s}],{signal:o}),t=I(t,s));const r=new Z(e,t,i,n);return await this._selectTiles(r,o),await w(r,o),new D(r.elevationTiles,r.layer.tileInfo,r.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const o=i.samplers.filter(c=>!c.tile.hasNoDataValues).map(c=>V(c.extent)),l=await this._createSampler(e[e.length-1],t,n,o);if(l.samplers.length===0)return i;const s=i.samplers.concat(l.samplers),r=new D(s,n.noDataValue);return this._createSamplerAllContinue(e,t,r,n)}async _queryAllContinue(e,t,i){const n=e.pop(),o=t.geometry.coordinates,l=t.sampleInfo;M(l);const s=[],r=[];for(let f=0;f<o.length;f++){const h=l[f];h.demResolution>=0?h.source||(h.source=n):e.length&&(s.push(o[f]),r.push(f))}if(!e.length||s.length===0)return t;const c=t.geometry.clone(s),u=await this.query(e[e.length-1],c,i),y=u.sampleInfo;if(!y)throw new Error("no sampleInfo");return r.forEach((f,h)=>{o[f].z=u.geometry.coordinates[h].z,l[f].demResolution=y[h].demResolution}),this._queryAllContinue(e,t,i)}async _selectTiles(e,t){e.type==="geometry"&&U(e);const i=e.options.demResolution;if(typeof i=="number")K(e,i);else if(i==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(i!=="auto")throw new m("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,o=k(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,o,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const o=n.tilemapCache,l=e.getTilesToFetch();try{if(o&&!R(o))await _(Promise.all(l.map(s=>o.fetchAvailability(s.level,s.row,s.col,{signal:i}))),i);else if(await w(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new m("elevation-query:has-unavailable-tiles")}catch(s){A(s),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _selectTilesAuto(e,t){Q(e),B(e);const i=e.layer.tilemapCache;if(!i||R(i))return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),o={},l=n.map(async s=>{const r=new b(null,0,0,0,O()),c=await $(i.fetchAvailabilityUpsample(s.level,s.row,s.col,r,{signal:t}));c.ok!==!1?s.id!=null&&(o[s.id]=r):A(c.error)});await _(Promise.all(l),t),e.remapTiles(o)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await w(e,t);let n=!1;e.forEachTileToFetch((o,l)=>{i.upsampleTile(o)?n=!0:l()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}}class d{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new d;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(i=>i.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await q([{source:this.spatialReference,dest:e}],{signal:t});const i=new x({spatialReference:this.spatialReference,points:this.coordinates.map(s=>[s.x,s.y])}),n=I(i,e);if(!n)return null;const o=this.coordinates.map((s,r)=>{const c=s.clone(),u=n.points[r];return c.x=u[0],c.y=u[1],c}),l=this.clone(o);return l.spatialReference=e,l}static fromGeometry(e){const t=new d;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof d)t.coordinates=e.coordinates.map(i=>i.clone()),t._exporter=(i,n)=>{const o=e.clone(i);return o.spatialReference=n,o};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?[new p(i.x,i.y,i.z,i.m)]:n?[new p(i.x,i.y,i.z)]:o?[new p(i.x,i.y,null,i.m)]:[new p(i.x,i.y)],t._exporter=(l,s)=>e.hasM?new C(l[0].x,l[0].y,l[0].z,l[0].m,s):new C(l[0].x,l[0].y,l[0].z,s);break}case"multipoint":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?i.points.map(l=>new p(l[0],l[1],l[2],l[3])):n?i.points.map(l=>new p(l[0],l[1],l[2])):o?i.points.map(l=>new p(l[0],l[1],null,l[2])):i.points.map(l=>new p(l[0],l[1])),t._exporter=(l,s)=>e.hasM?new x({points:l.map(r=>[r.x,r.y,r.z,r.m]),hasZ:!0,hasM:!0,spatialReference:s}):new x(l.map(r=>[r.x,r.y,r.z]),s);break}case"polyline":{const i=e,n=[],o=[],{hasZ:l,hasM:s}=e;let r=0;for(const c of i.paths)if(o.push([r,r+c.length]),r+=c.length,l&&s)for(const u of c)n.push(new p(u[0],u[1],u[2],u[3]));else if(l)for(const u of c)n.push(new p(u[0],u[1],u[2]));else if(s)for(const u of c)n.push(new p(u[0],u[1],null,u[2]));else for(const u of c)n.push(new p(u[0],u[1]));t.coordinates=n,t._exporter=(c,u)=>{const y=e.hasM?c.map(h=>[h.x,h.y,h.z??0,h.m??0]):c.map(h=>[h.x,h.y,h.z??0]),f=o.map(h=>y.slice(h[0],h[1]));return new j({paths:f,hasM:e.hasM,hasZ:!0,spatialReference:u})};break}}return t}}class p{constructor(e,t,i=null,n=null,o=null,l=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=o,this.elevationTile=l}clone(){return new p(this.x,this.y,this.z,this.m)}}class L{constructor(e,t){this.layer=e,this.options=t}}class P extends L{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>t.tile=null);else{const{tileInfo:t,tilemapCache:i}=this.layer,n=T(t,i)[e].level;this.geometry.coordinates.forEach(o=>o.tile=t.tileAt(n,o.x,o.y))}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){var t;for(const i of this.geometry.coordinates)!i.elevationTile&&((t=i.tile)!=null&&t.id)&&(i.elevationTile=e[i.tile.id])}remapTiles(e){var t;for(const i of this.geometry.coordinates){const n=(t=i.tile)==null?void 0:t.id;i.tile=n?e[n]:null}}getTilesToFetch(){var i;const e={},t=[];for(const n of this.geometry.coordinates){const o=n.tile;if(!o)continue;const l=(i=n.tile)==null?void 0:i.id;n.elevationTile||!l||e[l]||(e[l]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class Z extends L{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=T(t,i);if(!e)return n.length-1;const o=this.extent;if(o==null)return-1;for(let l=n.length-1;l>=0;l--){const s=n[l],r=s.resolution*t.size[0],c=s.resolution*t.size[1];if(Math.ceil(o.width/r)*Math.ceil(o.height/c)<=e)return l}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=F(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach(n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let o=!1;e(n,()=>o=!0),o?t&&t(n):this._candidateTiles.push(n)}),this._candidateTiles=F(this._candidateTiles,t)}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t==null)return;const{tileInfo:i,tilemapCache:n}=this.layer,o=T(i,n)[e],l=i.tileAt(o.level,t.xmin,t.ymin),s=l.extent;if(s==null)return;const r=o.resolution*i.size[0],c=o.resolution*i.size[1],u=Math.ceil((t.xmax-s[0])/r),y=Math.ceil((t.ymax-s[1])/c);for(let f=0;f<y;f++)for(let h=0;h<u;h++){const g=new b(null,l.level,l.row-f,l.col+h);i.updateTileInfo(g),this._tileIsMasked(g)||this._candidateTiles.push(g)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&z(t,e.extent))}}function k(a,e,t=0){const i=T(a,e);let n=i.length-1;if(t>0){const o=t/E(a.spatialReference),l=i.findIndex(s=>s.resolution<o);l===0?n=0:l>0&&(n=l-1)}return n}const v={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};async function G(a,e,t){let i;const n=a.layer.tileInfo.spatialReference;if(e instanceof d?i=await e.project(n,t):(await q([{source:e.spatialReference,dest:n}],{signal:t}),i=I(e,n)),!i)throw new m("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${e.spatialReference.wkid}' on an elevation service in '${n.wkid}'`);a.geometry=d.fromGeometry(i)}function U(a){if(a.layer.fullExtent==null)return;const e=new S(null);e.sample=()=>a.options.noDataValue,a.outsideExtentTile=e;const t=a.layer.fullExtent;a.geometry.coordinates.forEach(i=>{const n=i.x,o=i.y;(n<t.xmin||n>t.xmax||o<t.ymin||o>t.ymax)&&(i.elevationTile=e)})}function N(a,e){const{tileInfo:t,tilemapCache:i}=a.layer,n=e/E(t.spatialReference),o=T(t,i);let l=o[0],s=0;for(let r=1;r<o.length;r++){const c=o[r];Math.abs(c.resolution-n)<Math.abs(l.resolution-n)&&(l=c,s=r)}return s}function K(a,e){const t=N(a,e);a.selectTilesAtLOD(t)}function Q(a){const{tileInfo:e,tilemapCache:t}=a.layer,i=k(e,t,a.options.minDemResolution);a.selectTilesAtLOD(i,a.options.maximumAutoTileRequests)}function T(a,e){const t=a.lods;if(R(e)){const{effectiveMinLOD:i,effectiveMaxLOD:n}=e;return t.filter(o=>o.level>=i&&o.level<=n)}return t}async function w(a,e){const t=a.getTilesToFetch(),i={},n=a.options.cache,o=a.options.noDataValue,l=t.map(async s=>{if(s.id==null)return;const r=`${a.layer.uid}:${s.id}:${o}`,c=n!=null?n.get(r):null,u=c??await a.layer.fetchTile(s.level,s.row,s.col,{noDataValue:o,signal:e});n!=null&&n.put(r,u),i[s.id]=new S(s,u)});await _(Promise.allSettled(l),e),a.populateElevationTiles(i)}function B(a){const e=a.layer.tileInfo;let t=0;const i={},n=s=>{s.id!=null&&(s.id in i?i[s.id]++:(i[s.id]=1,t++))},o=s=>{if(s.id==null)return;const r=i[s.id];r===1?(delete i[s.id],t--):i[s.id]=r-1};a.forEachTileToFetch(n,o);let l=!0;for(;l&&(l=!1,a.forEachTileToFetch(s=>{t<=a.options.maximumAutoTileRequests||(o(s),e.upsampleTile(s)&&(l=!0),n(s))},o),l););}function H(a){a.geometry.coordinates.forEach(e=>{const t=e.elevationTile;let i=a.options.noDataValue;if(t){const n=t.sample(e.x,e.y);n!=null?i=n:e.elevationTile=null}e.z=i})}function F(a,e){const t={},i=[];for(const o of a){const l=o.id;l&&!t[l]?(t[l]=o,i.push(o)):e&&e(o)}const n=i.sort((o,l)=>o.level-l.level);return n.filter((o,l)=>{for(let s=0;s<l;s++){const r=n[s].extent;if(r&&o.extent&&z(r,o.extent))return e&&e(o),!1}return!0})}async function J(a,e){const t=await a.geometry.project(a.outSpatialReference,e);M(t);const i={geometry:t.export(),noDataValue:a.options.noDataValue};return a.options.returnSampleInfo&&(i.sampleInfo=W(a)),a.geometry.coordinates.forEach(n=>{n.tile=null,n.elevationTile=null}),i}function W(a){const e=a.layer.tileInfo,t=E(e.spatialReference);return a.geometry.coordinates.map(i=>{let n=-1;return i.elevationTile&&i.elevationTile!==a.outsideExtentTile&&(n=e.lodAt(i.elevationTile.tile.level).resolution*t),{demResolution:n}})}function R(a){return(a==null?void 0:a.tileInfo)!=null}export{ge as ElevationQuery,d as GeometryDescriptor,k as getFinestLodIndex};
