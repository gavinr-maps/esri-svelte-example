import{r}from"./tslib.es6-B3Jf3DVX.js";import{c as g}from"./Analysis-605EM8LG.js";import{f as h,u as y}from"./LineOfSightAnalysisTarget-Czs0z8lJ.js";import{V as v}from"./Collection-CEdjem1-.js";import{t as x,n as b}from"./collectionUtils-D_lHIu88.js";import{watch as z,syncAndInitial as E}from"./reactiveUtils-C5zUhJQJ.js";import{m as n,a as _}from"./subclass-BZA_h8Db.js";import{V as $}from"./projection-B971H0Re.js";import{a as w,l as A,c as O}from"./aaBoundingBox-BE7cC1jD.js";import{i as R}from"./elevationInfoUtils-BC_66_Fg.js";const p=v.ofType(h);let e=class extends g{constructor(t){super(t),this.type="line-of-sight",this.observer=null,this.extent=null}initialize(){this.addHandles(z(()=>this._computeExtent(),t=>{(t==null?void 0:t.pending)==null&&this._set("extent",t!=null?t.extent:null)},E))}get targets(){return this._get("targets")||new p}set targets(t){this._set("targets",b(t,this.targets,p))}get spatialReference(){var t;return((t=this.observer)==null?void 0:t.position)!=null?this.observer.position.spatialReference:null}get requiredPropertiesForEditing(){var t;return[(t=this.observer)==null?void 0:t.position]}async waitComputeExtent(){const t=this._computeExtent();return t!=null?t.pending:Promise.resolve()}_computeExtent(){var m;const t=this.spatialReference;if(((m=this.observer)==null?void 0:m.position)==null||t==null)return null;const a=i=>R(i.position,i.elevationInfo)==="absolute-height",o=this.observer.position,u=w(o.x,o.y,o.z,o.x,o.y,o.z);for(const i of this.targets)if(i.position!=null){const s=$(i.position,t);if(s.pending!=null)return{pending:s.pending,extent:null};if(s.geometry!=null){const{x:c,y:d,z:f}=s.geometry;A(u,[c,d,f])}}const l=O(u,t);return a(this.observer)&&this.targets.every(a)||(l.zmin=void 0,l.zmax=void 0),{pending:null,extent:l}}clear(){this.observer=null,this.targets.removeAll()}};r([n({type:["line-of-sight"]})],e.prototype,"type",void 0),r([n({type:y,json:{read:!0,write:!0}})],e.prototype,"observer",void 0),r([n({cast:x,type:p,nonNullable:!0,json:{read:!0,write:!0}})],e.prototype,"targets",null),r([n({value:null,readOnly:!0})],e.prototype,"extent",void 0),r([n({readOnly:!0})],e.prototype,"spatialReference",null),r([n({readOnly:!0})],e.prototype,"requiredPropertiesForEditing",null),e=r([_("esri.analysis.LineOfSightAnalysis")],e);const S=e;export{S as v};
