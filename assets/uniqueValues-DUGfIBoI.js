const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngineAsync-D5578A3I.js","./workers-D8Q3pEzK.js","./Accessor-BHnuXKD2.js","./Queue-BOnccek2.js","./SimpleObservable-7oieNGD8.js","./cast-BA_-jlhc.js","./index-tefRSezt.js","./index-Cx51aysm.css","./JSONSupport-CGdeqxpk.js","./intl-Do3GEEJ7.js","./Promise-CmQqe-ke.js","./Point-XGrwlf63.js","./writer-B2bQV2uU.js","./jsonUtils-Cu7OBRmN.js","./Extent-CBBGeHb-.js","./Polyline-BmuD2-ZN.js","./mathUtils-DV9iOXpW.js"])))=>i.map(i=>d[i]);
import{M as pt,s as d,r as F,m as v,a as M,D as q,G as ct,bP as Ue,B as dt,q as yt,bQ as D}from"./Accessor-BHnuXKD2.js";import{N as ue,F as ye,U as V,b as Pe,T as ft,M as ht}from"./utils-D8exU0T6.js";import{j as Ze,M as R,$ as N,k as gt,U as B,f as Q}from"./utils-DLmnG8WZ.js";import{j as Ve,d as wt,c as Ft,m as ge,q as We,C as me,$ as pe,P as He,a as St,n as vt}from"./utils-B8VMZhYy.js";import{p as xt}from"./workers-D8Q3pEzK.js";import{b as Le}from"./Graphic-CFXUQZlS.js";import{P as qt,g as Vt}from"./cast-BA_-jlhc.js";import{F as Lt,x as C,I as zt,w as _t,b as Tt,o as bt,g as Ke}from"./opacityUtils-CSd4XoR2.js";import{t as Et}from"./jsonUtils-DD1NMzWj.js";import{f as $t}from"./utils-Cy8wFNQo.js";import{b as Xe,m as G,a as Ct}from"./Query-DCBIeen2.js";import{a as Nt}from"./executeQueryJSON-CLYdIUdF.js";import"./Point-XGrwlf63.js";import"./aaBoundingBox-CeBivBRq.js";import"./mathUtils-DV9iOXpW.js";import"./Extent-CBBGeHb-.js";import"./Polyline-BmuD2-ZN.js";import"./normalizeUtilsCommon-D0zPTJCj.js";import"./pbf-CFI-xDDp.js";import{d as ze}from"./FeatureSet-DpCN730g.js";import{S as Ye}from"./JSONSupport-CGdeqxpk.js";import{r as Mt}from"./enumeration-Cr5WIZs4.js";import{_ as It}from"./index-tefRSezt.js";import{w as Se}from"./reactiveUtils-BR0C1Kq4.js";import{s as Ot}from"./quantizationUtils-2Az-xHPA.js";import{i as _e}from"./fieldType-L-VlbZqy.js";import{summaryStatistics as J,uniqueValues as Te,histogram as ce,classBreaks as be,heatmapStatistics as At}from"./statsWorker-B2GRH8fO.js";import{m as kt}from"./Portal-CTRRujjZ.js";import{F as Pt}from"./Promise-CmQqe-ke.js";import Bt from"./AttributeBinsQuery-BPaJ86G0.js";import{a as Qt,b as Rt,m as Dt,c as Gt}from"./FixedIntervalBinParameters-uigAmvtd.js";import{y as Jt,p as jt,a as Ut}from"./Field-Cyk7Ur5d.js";import{a as Zt}from"./viewpointUtils-DmJh_Ev7.js";import"./screenUtils-_ZIvrt5o.js";import"./timeUtils-D2X862bk.js";import"./heatmapUtils-DA7NmY3d.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./vec3f64-BLpZdpfb.js";import"./intl-Do3GEEJ7.js";import"./timeZoneUtils-COos5xIr.js";import"./ClassBreaksDefinition-DvZJqFCP.js";import"./Queue-BOnccek2.js";import"./SimpleObservable-7oieNGD8.js";import"./Clonable-DvJsj5LF.js";import"./writer-B2bQV2uU.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./ActionToggle-__-l4AdQ.js";import"./Identifiable-BrT7zvUW.js";import"./jsonUtils-Cu7OBRmN.js";import"./typeUtils-BSg8Y507.js";import"./TextSymbol-BQ_NW9Xo.js";import"./collectionUtils-CbaToa73.js";import"./typeUtils-CfF4cYo5.js";import"./ClassBreaksRenderer-BBSNkSFx.js";import"./commonProperties-bGHL1a5M.js";import"./colorRamps-Dkx8zIVn.js";import"./SizeVariable-IzD1bP2e.js";import"./visualVariableUtils-Bp9QCb8E.js";import"./lengthUtils-DjJgJFRg.js";import"./ColorStop-CDpeFWOz.js";import"./jsonUtils-Dzgxk9pw.js";import"./layerUtils-dJgsXxkC.js";import"./defaults-Dwxdhopq.js";import"./defaultsJSON-GKolV7NZ.js";import"./RendererLegendOptions-mgfHoilI.js";import"./LRUCache-DS2O1kTf.js";import"./MemCache-CDoaVBHf.js";import"./Version-9k2AOv05.js";import"./FieldsIndex-DFdVonga.js";import"./utils-B91u8350.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./HeatmapColorStop-c4wClnpW.js";import"./SimpleRenderer-gSw1WaJS.js";import"./UniqueValueRenderer-Cri3tgP5.js";import"./diffUtils-CMkuJvD2.js";import"./styleUtils-BB-zx7mT.js";import"./FullTextSearch-BWm_kPUE.js";import"./TimeExtent-J5qnUFx_.js";import"./query-BS_L6I0Q.js";import"./normalizeUtils-XRAPXbWa.js";import"./utils-CkSELPnj.js";import"./pbfQueryUtils-AwPAOS5M.js";import"./OptimizedGeometry-7IxBWtHr.js";import"./memoryEstimations-5gFNwkKK.js";import"./OptimizedFeature-DcMLlxvB.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-DwN6mTru.js";import"./projection-B2I9Bzj_.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./Evented-DCWccWGU.js";import"./queryUtils-DBeaQ3x_.js";import"./json-Wa8cmqdu.js";import"./NormalizationBinParametersMixin-D6iHLB7I.js";import"./Viewpoint-Cv8Otrne.js";import"./Camera-DJtV7zYb.js";import"./Cyclical-CPiNl4ru.js";import"./mat2d-D9DBP-jx.js";import"./mat2df64-CBKYtunK.js";import"./vec2-maR1OrZI.js";import"./vec2f64-Dy6m9Nrb.js";async function Wt(e,t,a,r){return Kt(t,await Ht(e,t,a,r))}async function Ht(e,t,a,r){var m;const i={...r},n=Xt(t,a),o=((m=t.outStatistics)==null?void 0:m[0])!=null,s=pt("featurelayer-pbf-statistics"),l=!o||s;let u;return l||(u=await Nt(e,n,i)),a==null||a.fieldsIndex,u.fields,u}async function Kt(e,t,a,r){return ze.fromJSON(t)}function Xt(e,t){let a=Xe.from(e);return a.sourceSpatialReference=a.sourceSpatialReference??(t==null?void 0:t.sourceSpatialReference)??null,a}function Yt(e,t){if(!e.view)throw new d(`${t}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new d(`${t}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if(e.view.type==="3d")throw new d(`${t}:invalid-parameters`,"3d view is not supported for binning")}let ae=class Z{constructor(){this.connection=null}async open(t){this.connection=await xt("statsWorker",{strategy:"distributed",signal:t})}destroy(){var t;(t=this.connection)==null||t.close()}static getInstance(){return Z.instance||(Z.instance=new Z),Z.instance}async summaryStatistics(t,a){if(!this.connection)throw new d("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:t,features:a})}async uniqueValues(t,a){if(!this.connection)throw new d("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:t,features:a})}async classBreaks(t,a){if(!this.connection)throw new d("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:t,features:a})}async histogram(t,a){if(!this.connection)throw new d("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:t,features:a})}async heatmapStatistics(t,a){if(!this.connection)throw new d("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:t,features:a})}};async function ea(e,t,a,r){const i=$t(e),{source:n,checkValueRange:o}=t,{classificationDefinition:s}=a,l={...a.toJSON(),f:"json"};let u=null;if(u=(s==null?void 0:s.type)==="class-breaks-definition"?s.classificationField:s==null?void 0:s.attributeField,n){const y={source:n==null?void 0:n.toJSON()};l.layer=JSON.stringify(y)}l.classificationDef&&(l.classificationDef=JSON.stringify(l.classificationDef));let m={query:l};r&&(m={...r,...m});const p={url:i.path,field:u,checkValueRange:o},c=i.path+"/generateRenderer";return qt(c,m).then(y=>ta(p,y))}function ta(e,t){const{field:a,checkValueRange:r,url:i}=e,n=t==null?void 0:t.data;if(!n)return;if(!r){const u=Be(n);return Promise.resolve(u)}const o=new G({statisticType:"min",onStatisticField:a}),s=new G({statisticType:"max",onStatisticField:a}),l=new Xe({outStatistics:[o,s]});return Wt(i,l).then(u=>{const m=u.features[0].attributes;let p=null,c=null;for(const y in m)y.toLowerCase().indexOf("min")===0?p=m[y]:c=m[y];return Be(n,p,c)})}function Be(e,t,a){if(e.type==="classBreaks"){const i=Et(e);return{classBreaks:i.classBreakInfos.map((n,o)=>(o===0&&t!=null&&(n.minValue=t),o===i.classBreakInfos.length-1&&a!=null&&(n.maxValue=a),{minValue:n.minValue,maxValue:n.maxValue,label:n.label})),normalizationTotal:i.normalizationTotal}}const{uniqueValueInfos:r}=e;return{uniqueValues:(r==null?void 0:r.map((i,n)=>(n===0&&t!=null&&(i.value=t),n===r.length-1&&a!=null&&(i.value=a),{count:i.count,value:i.value,label:i.label})))??[]}}let W=class extends Ye{constructor(e){super(e),this.classificationDefinition=null,this.where=null}};F([v({json:{name:"classificationDef",write:!0}})],W.prototype,"classificationDefinition",void 0),F([v({type:String,json:{write:!0}})],W.prototype,"where",void 0),W=F([M("esri.rest.support.GenerateRendererParameters")],W);const ve=W;let I=class extends Ye{constructor(t){super(t),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const t=[];return this.attributeField&&t.push(this.attributeField),this.attributeField2&&t.push(this.attributeField2),this.attributeField3&&t.push(this.attributeField3),t}};F([Mt({uniqueValueDef:"unique-value-definition"})],I.prototype,"type",void 0),F([v()],I.prototype,"attributeField",void 0),F([v()],I.prototype,"attributeField2",void 0),F([v()],I.prototype,"attributeField3",void 0),F([v({json:{write:!0}})],I.prototype,"fieldDelimiter",void 0),F([v({json:{write:!0}})],I.prototype,"uniqueValueFields",null),I=F([M("esri.rest.support.UniqueValueDefinition")],I);const aa=I,et="no_dominant_category";function ra(e){return{expression:ia(e,{returnFieldName:!0,defaultValue:`'${et}'`})}}function ia(e,t){const{returnFieldName:a,defaultValue:r,layer:i}=t,n=[];if(a&&r){const o=e.map(s=>`${s} <= 0`).join(" AND ");n.push(`WHEN ${o} THEN ${r}`)}for(const o of e){const s=e.reduce((m,p)=>(o!==p&&m.push(`${o} > ${p}`),m),[]).join(" AND "),l=i&&Ze(i,o),u=a&&`'${o}'`?`'${o}'`:l?R(o):o;n.push(`WHEN ${s} THEN ${u}`)}return`CASE ${n.join(" ")} ELSE ${r||"0"} END`}function na(e){return e&&e.map(t=>`$feature["${t}"];`).join(`
`)+`
`||""}function sa(e,t=!1){const a=e.map(i=>`"${i}"`);return`
  var fieldNames = [ ${a.join(", ")} ];
  var numFields = ${a.length};
  var maxValueField = null;
  var maxValue = -Infinity;
  var value, i, totalValue = null;

  for(i = 0; i < numFields; i++) {
    value = $feature[fieldNames[i]];

    if(value > 0) {
      if(value > maxValue) {
        maxValue = value;
        maxValueField = fieldNames[i];
      }
      else if (value == maxValue) {
        maxValueField = null;
      }
    }
    ${t?`
  if(value != null && value >= 0) {
    if (totalValue == null) { totalValue = 0; }
    totalValue = totalValue + value;
  }
  `:""}
  }
  `}function Ee(e){const t=sa(e);return`
  ${na(e)}
  ${t}
  return maxValueField;
  `}let b=class extends kt{constructor(t){super(t),this.adapterName="layer-adapter"}};F([v({readOnly:!0})],b.prototype,"adapterName",void 0),F([v({constructOnly:!0})],b.prototype,"layer",void 0),F([v()],b.prototype,"geometryType",void 0),F([v()],b.prototype,"objectIdField",void 0),F([v()],b.prototype,"supportsSQLExpression",void 0),F([v()],b.prototype,"hasQueryEngine",void 0),F([v()],b.prototype,"minScale",void 0),F([v()],b.prototype,"maxScale",void 0),F([v()],b.prototype,"fullExtent",void 0),b=F([M("esri.smartMapping.support.adapters.LayerAdapter")],b);const $e=b,oa=/_value$/i,la=Math.LOG10E,ua={SECOND:1e3,MINUTE:6e4,HOUR:36e5},ee=10;function te(e){return e.map(t=>t.toJSON())}function Qe(e,t){var s;const a=[],r=e.layer,i="featureReduction"in r?r.featureReduction:null,n=(i==null?void 0:i.type)==="binning",o=i!=null&&"fields"in i?(s=i.fields)==null?void 0:s.map(l=>{var u;return(u=l.name)==null?void 0:u.toLowerCase()}).filter(Boolean):[];if(!n||!t)return a;for(const l of t)o.includes(l.toLowerCase())||a.push(l);return a}function de(e,t,a){var i;const r=[];if(t)for(const n of t){const o=e.getField(n);o&&a&&"availableFields"in a&&!((i=a.availableFields)!=null&&i.includes(o.name))&&r.push(o.name)}return r}function Ce(e,t){var n;const a=e&&e.features;if((a==null?void 0:a.length)===0)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const r=(n=a==null?void 0:a[0])==null?void 0:n.attributes,i={};for(const o in r)i[o.replace(oa,"").toLowerCase()]=r[o];return i.totalcount!=null&&i.totalcount>=i.count&&(i.nullcount=i.totalcount-i.count),delete i.totalcount,i.min===i.max&&i.min!=null&&i.stddev==null&&(i.stddev=i.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach(o=>{i[o]!=null&&(i[o]=Math.ceil(i[o]))}),i.min===i.max&&i.min!=null&&(i.avg=i.min,i.stddev=i.variance=0)),i}function ma(e){const t=[],a=e.classBreaks,r=a[0].minValue,i=a[a.length-1].maxValue;a.forEach(o=>{t.push([o.minValue,o.maxValue])});const n={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:r,max:i,intervals:t,sqlExpr:j(n),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function j(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:n}=e,o=Ze(n,t);let s=t;return a==="percent-of-total"?s=`((${o?R(t):t} / ${i}) * 100)`:a==="log"?s=`(log(${t}) * ${la})`:a==="field"?s=`(${o?R(t):t} / ${r})`:a==="natural-log"?s=`(log(${o?R(t):t}))`:a==="square-root"&&(s=`(power(${o?R(t):t}, 0.5))`),s}function tt(e,t){let a;if(t=t.toLowerCase(),e){for(const r in e)if(r.toLowerCase()!==t){a=e[r];break}}return a}function H(e,t){let a;if(t=t.toLowerCase(),e){for(const r in e)if(r.toLowerCase()===t){a=e[r];break}}return a}function at(e,t,a,r,i){const n={},o="countOFExpr";e&&e.features&&e.features.forEach(l=>{const u=l.attributes,m=tt(u,o),p=H(u,o);m!=null&&p!=null&&m!==0&&(n[m]=p)});const s=[];return Ve(t,a,r).forEach((l,u)=>{const m=(u+1).toString();s.push({minValue:l[0],maxValue:l[1],count:n.hasOwnProperty(m)?n[m]:0})}),{bins:s,minValue:t,maxValue:a,normalizationTotal:i}}async function Ne(e,t){const a=e&&e.features,{field:r,field2:i,field3:n,fieldDelimiter:o,layer:s,view:l,signal:u,labels:m}=t,p=`countOF${(!r||!i)&&r||"Expr"}`,c={};let y=!1;for(const g of a){const h=g.attributes,S=H(h,p);let w=r?H(h,r):tt(h,p),x=i?H(h,i):null,z=n?H(h,n):null;w===null&&S===0&&(y=!0),(w==null||typeof w=="string"&&w.trim()==="")&&(w=null),i&&(x==null||typeof x=="string"&&x.trim()==="")&&(x=null),n&&(z==null||typeof z=="string"&&z.trim()==="")&&(z=null);let L=w;i&&(L=`${ge(L)}${o}${ge(x)}`,n&&(L=`${L}${o}${ge(z)}`)),c[L]==null?c[L]={count:S,data:L}:c[L].count=c[L].count+S}if(r&&y){const g=r+" is NULL";try{const h=await s.queryFeatureCount({whereClause:g,view:l,signal:u});return c.null.count=c.null.count+h,we(c,m)}catch{return q(u),we(c,m)}}return we(c,m)}function we(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}async function Fe(e,t,a){const r=e?a.getField(e):null,i=r?a.getFieldDomain(r.name):null;if(i)return i;const{uniqueValueInfos:n}=await a.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),o=n.map(s=>new jt({code:s.value}));return new Ut({codedValues:o})}async function fe(e,t){if(!e.returnAllCodedValues)return[];const{field:a,field2:r,field3:i}=e;if(a&&!r){const o=a?t.getField(a):null,s=o?t.getFieldDomain(o.name):null;return s?[s]:[]}const n=[];return a&&(n.push(Fe(a,e,t)),r&&(n.push(Fe(r,e,t)),i&&n.push(Fe(i,e,t)))),Promise.all(n)}function pa(e,t){return gt(e,new Date(0),t,"milliseconds").sqlExpression}function ca(e,t){return`EXTRACT(${t} FROM ${e}) * ${ua[t]}`}function da(e){return e?R(["HOUR","MINUTE","SECOND"].map(t=>`(${ca(e,t)})`).join(" + ")):null}function E(e){var t;return{viewingMode:e.type==="2d"?"map":e.viewingMode,scale:e.scale,spatialReference:(t=e.spatialReference)==null?void 0:t.toJSON()}}function Me(e,t){const a=new Set(e.map(i=>i.value)),r=t.filter(i=>!a.has(i));for(const i of r)e.push({value:i,count:0});e.sort((i,n)=>t.indexOf(i.value)-t.indexOf(n.value));for(const i of e)i.value===et&&(i.value=null);return{predominantCategoryInfos:e}}function Re(e){const t="featureReduction"in e?e.featureReduction:null;return((t!=null&&"fields"in t?t.fields:null)??[]).map(a=>{const r=ya(a,e.fieldsIndex);return r?new Jt({type:r,name:a.name,alias:a.alias}):null}).filter(ct)}function ya(e,t){var a,r;switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?((a=t.get(e.onStatisticField))==null?void 0:a.type)??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?null:"double":null;case"mode":return e.onStatisticField?((r=t.get(e.onStatisticField))==null?void 0:r.type)??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?"string":"double":null;default:return null}}function rt(e,t){return N(t)?pa(e,t==null?void 0:t.name):C(t)?da(t==null?void 0:t.name):null}function Ie(e,t,a){const{field:r,normalizationType:i,normalizationField:n,normalizationTotal:o,minValue:s,maxValue:l,filter:u}=t,m=e.supportsSQLExpression?rt(e,a)||t.sqlExpression:null,p=j({field:r,normalizationType:i,normalizationField:n,normalizationTotal:o,layer:e}),c=m||p,y=c?ue(c,s,l):null,g=ye({field:r,normalizationField:n,normalizationType:i}),h=V(t.sqlWhere,g),S=V(h,y),w=wt({normalizationField:n,normalizationType:i,sqlExpression:m,supportsSQLExpression:e.supportsSQLExpression,minValue:s,maxValue:l}),x=Lt(e.getField(r??void 0)),{include:z,exclude:L}=t.outStatisticTypes||{},O=Ft.filter(T=>(!z||z.includes(T))&&(!L||!L.includes(T))&&(T==="nullcount"?w:!x||T==="count")),A=e.createQuery();return A.where=V(A.where,S),A.sqlFormat=m?"standard":null,A.outStatistics=O.map(T=>{const k=new G;let P=null,U=null,ke=`${T}_value`;if(T==="variance")P="var",U=c;else if(T==="nullcount"){const he=e.objectIdField;P="count",U=he&&e.getField(he)?he:"1",ke="totalcount_value"}else T==="median"?(P="percentile-continuous",U=c,k.statisticParameters={value:.5}):(P=T,U=c);return k.statisticType=P,k.onStatisticField=U,k.outStatisticFieldName=ke,k}),$(A,u),A}function $(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function it(e,t){const{field:a,field2:r,field3:i,sqlExpression:n}=t,o=!(!a||!r),s=e.createQuery();return s.where=V(s.where,t.sqlWhere),s.sqlFormat=n?"standard":null,s.outStatistics=[fa(o?null:a,o?"1":n)].filter(Boolean),s.groupByFieldsForStatistics=[a||n,r,i].filter(Boolean),$(s,t.filter),s}function fa(e,t){const a="countOF"+(e||"Expr"),r=new G;return r.statisticType="count",r.onStatisticField=t?"1":e,r.outStatisticFieldName=a,r}function ie(e,t,a,r=ee,i,n,o){const{min:s,max:l,normTotal:u,excludeZerosExpr:m}=t,p=t.intervals||Ve(s,l,r),c=t.sqlExpr||a;return ha(e,p,c,m,i,n,o).then(y=>({bins:y.map((g,h)=>({minValue:p[h][0],maxValue:p[h][1],count:g.status==="fulfilled"?g.value:0})),minValue:s,maxValue:l,normalizationTotal:u}))}function ha(e,t,a,r,i,n,o){const s=[],l=t.length;for(let u=0;u<l;u++){const m=V(r,V(a+" >= "+t[u][0],t[u][1]!==null?a+(u===l-1?" <= ":" < ")+t[u][1]:""));s.push(m)}return Promise.allSettled(s.map(u=>e.queryFeatureCount({whereClause:u,view:i,filter:n,signal:o})))}const nt="countOFExpr",ga="lowerBoundary",wa="upperBoundary";function st(e,t,a){const r=e.valueExpression||e.sqlExpression,i=e.signal;if(!r){const{field:n,normalizationType:o,normalizationField:s}=e,l=n?t.getField(n):null,u=N(l)||C(l);return{sqlExpression:u?rt(t,l):j({field:n,normalizationType:o,normalizationField:s,normalizationTotal:a,layer:t}),sqlWhere:u?null:e.sqlWhere||ye({field:n,normalizationType:o,normalizationField:s}),filter:e.filter,signal:i}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:i}}async function xe(e,t,a){const{field:r,normalizationType:i,normalizationField:n,signal:o}=e,s=ye({field:r,normalizationType:i,normalizationField:n}),l=new ve({classificationDefinition:We({field:r,normalizationType:i,normalizationField:n,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numBins||ee}),where:V(s,a)});return t.generateRenderer(l,o).then(u=>{const{normalizationTotal:m,classBreaks:p}=u;return ma({field:r,normalizationType:i,normalizationField:n,normalizationTotal:m,classBreaks:p,where:s,layer:t})})}async function Fa(e,t,a,r,i){const{field:n,sqlExpression:o,normalizationField:s,classificationMethod:l,normalizationType:u}=e,m=n?t.getField(n):null,p=C(m),c=Tt(m)||p,y=e.numBins||ee;if(c){if(u||l)throw new d(`${t.adapterName}:not-supported`,"NormalizationType and classificationMethod are not supported for date-only and time-only fields");const g=(r-a)/y/1e3,h=g/86400;return new Qt({field:n,expression:o,interval:{unit:p?"seconds":"days",value:Math.ceil(p?g:h)},start:a,end:r})}if(l==="defined-interval")return new Rt({field:n,expression:o,normalizationField:s,normalizationTotal:i,normalizationType:u,interval:e.definedInterval??Math.ceil((r-a)/y),start:u?null:a,end:u?null:r,normalizationMinValue:u?a:null,normalizationMaxValue:u?r:null});if(l==="manual")throw new d(`${t.adapterName}:not-supported`,"Layer does not support manual classificationMethod");if(l==="natural-breaks"||l==="quantile"||l==="standard-deviation"){const g=j({field:n,normalizationField:s,normalizationTotal:i,normalizationType:u,layer:t}),h=e.minValue!==null&&e.maxValue!==null?ue(g,e.minValue,e.maxValue):void 0,S=await xe(e,t,h);if(!S.intervals)throw new d(`${t.adapterName}:invalid`,"Invalid intervals returned from generate renderer");const w=[a,...S.intervals.map(x=>x[1])];return new Dt({field:u?null:n,expression:u?g:o,boundaries:w})}return new Gt({field:n,normalizationField:s,normalizationTotal:i,normalizationType:u,expression:o,numBins:y,start:u?null:a,end:u?null:r,normalizationMinValue:u?a:null,normalizationMaxValue:u?r:null})}function ot(e,t,a,r){return a!=null&&r!=null?Promise.resolve({min:a,max:r}):t.summaryStatistics({...e,outStatisticTypes:{include:["min","max"]}}).then(i=>({min:i.min,max:i.max}))}async function lt(e,t,a,r){const{field:i,minValue:n,maxValue:o,filter:s,view:l}=e,u=i?t.getField(i):null,m=zt(u)||_t(u),p=st(e,t,a),{min:c,max:y}=await ot(p,t,n,o);if(c==null||y==null)return{query:null,min:c,max:y};const g=new G({statisticType:"count",outStatisticFieldName:nt,onStatisticField:"1"}),h=V(r,p.sqlWhere),S="lowerBoundary",w="upperBoundary",x=new Bt({binParameters:await Fa(e,t,c,y,a),outStatistics:[g],binOrder:e.sortOrder,where:h,lowerBoundaryAlias:S,upperBoundaryAlias:w,outTimeZone:l!=null&&l.timeZone&&m?Pt(l.timeZone):null});return $(x,s),{query:x,min:c,max:y}}function De(e,t=!1){return typeof e!="string"?e:(t?new Date(`1970-01-01T${e}Z`):new Date(e)).getTime()}function ut(e,t,a){const r=C(t);return{...a,bins:e.features.map(i=>({minValue:De(i.attributes[ga],r),maxValue:De(i.attributes[wa],r),count:i.attributes[nt]}))}}function Ge(e,t,a){const{valueExpression:r,view:i}=e,{featuresJSON:n,graphics:o,fieldInfos:s}=t,l={field:e.field,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:a,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return r&&i&&(n||o)&&(l.viewInfoParams=E(i),l.timeZone=i.timeZone,l.fieldInfos=s),l}const Sa=5;let re=null,K=class extends $e{constructor(){super(...arguments),this._hasLocalSource=!1,this.adapterName="in-memory-layer-adapter"}destroy(){var e;(e=this.workerClient)==null||e.destroy()}async _waitForLayerViewUpdate(e){if(!e)throw new d(`${this.adapterName}:insufficient-data", "layerView is required to fetch the features`);const t=new AbortController,a=Se(()=>!e.updating,t.signal);await Ue(a,5e3,t).catch(r=>{throw dt.getLogger(this).warn("LayerView is taking too long to update. Aborting fetch from layerView."),r})}async _fetchFeatureSetFromMemory(e,t,a){const r=this.layer;if(this._hasLocalSource&&"queryFeatures"in r)return r.queryFeatures(e);if(!t)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const i=await t.whenLayerView(this.layer);return await this._waitForLayerViewUpdate(i),i.queryFeatures(e,{signal:a})}async _fetchFeaturesFromMemory(e,t,a,r){const i=this.layer,n=r==="json";if(this._hasLocalSource&&"queryFeatures"in i){const s=await i.queryFeatures(t);return n?te(s.features):s.features}if(await this._waitForLayerViewUpdate(e),n&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:s}=await e.queryFeaturesJSON(t,{signal:a});return s}if(!("queryFeatures"in e))throw new d(`${this.adapterName}:not-supported`,"'queryFeatures' is not supported on the layerView");const o=await e.queryFeatures(t,{signal:a});return n?te(o.features):o.features}_fetchFeaturesForStats(e,t){return B({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t))}async _summaryStatsFromClientQuery(e,t){const{view:a,signal:r}=e,i=Ie(this,e,t),n=await this._fetchFeatureSetFromMemory(i,a,r),o=Ce(n,N(t)||C(t));return me(o,e.outStatisticTypes)}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:r,graphics:i,layerView:n,query:o}=t,s={include:["sum"]},l=(!r&&!i&&n&&"querySummaryStatistics"in n?await n.querySummaryStatistics(o,{field:e},{signal:a}):r?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:s},r):await J({attribute:{field:e,outStatisticTypes:s},features:i??[]})).sum;if(l==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _summaryStatsFromMemory(e,t){const{view:a,field:r,valueExpression:i,normalizationType:n,signal:o}=e,s={field:r,valueExpression:i,normalizationType:n,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:m,query:p,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return i&&a&&(l||u)&&(s.fieldType=t!=null&&t.type?_e.toJSON(t.type):null,s.viewInfoParams=E(a),s.timeZone=a.timeZone,s.fieldInfos=c),n==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:l,graphics:u,layerView:m,query:p},o)),!l&&!u&&m&&"querySummaryStatistics"in m?m.querySummaryStatistics(p,s,{signal:o}):l?this.workerClient.summaryStatistics(s,l):J({attribute:s,features:u})}async _getFilteredFeatures(e,t){let a=[];if((t==null?void 0:t.spatialRelationship)==="intersects"){const{intersect:r}=await It(()=>import("./geometryEngineAsync-D5578A3I.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),import.meta.url),i=t.geometry!=null?t.geometry:null;for(const n of e){const o=n.geometry!=null?n.geometry:null;o&&i&&await r(o,i)&&a.push(n)}}else a=e;return e.length&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic"?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t!=null&&t.length)return this._getFilteredFeatures(t,a);const{view:r,field:i,field2:n,field3:o,normalizationField:s,valueExpression:l,layerViewFunc:u,signal:m}=e;let p=e.returnGeometry;if(p==null&&l){if(!re){const{arcadeUtils:x}=await bt();re=x}const w=re.hasGeometryOperations(l);w&&await re.enableGeometryOperations(),p=w}let c=null,y=null,g=null,h=null,S=null;if(r)try{const w=this.layer.type==="subtype-sublayer"?this.layer.parent:this.layer;c=await r.whenLayerView(w),y=u!=null&&u in c&&typeof c[u]=="function"}catch{y=!1}if(y)try{await this._waitForLayerViewUpdate(c);const w=await B({field:i,field2:n,field3:o,normalizationField:s,valueExpression:l});de(this,w,c).length?y=!1:(g=this.layer.createQuery(),g.outFields=w,g.returnGeometry=!1,$(g,a)),c.suspended&&(y=!1)}catch{y=!1}return y||(h=await this._fetchFeaturesForStats({field:i,field2:n,field3:o,valueExpression:l,normalizationField:s,returnGeometry:p,filter:a,view:r,signal:m},"json"),S=(await B({valueExpression:l})).map(w=>{var x;return(x=this.getField(w))==null?void 0:x.toJSON()}).filter(Boolean)),{layerView:c,query:g,featuresJSON:h,fieldInfos:S}}async _uvFromClientQuery(e,t){const{view:a,signal:r}=e,i=it(this,e),n=await this._fetchFeatureSetFromMemory(i,a,r),o=await Ne(n,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:Q,view:e.view,signal:e.signal});return pe(o,t,e.returnAllCodedValues,Q)}async _uvFromMemory(e,t){const{view:a,field:r,valueExpression:i,returnAllCodedValues:n,signal:o}=e,{featuresJSON:s,graphics:l,layerView:u,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),c={field:r,field2:e.field2,field3:e.field3,fieldDelimiter:Q,valueExpression:i,domains:t,returnAllCodedValues:n};return i&&a&&(s||l)&&(c.viewInfoParams=E(a),c.timeZone=a.timeZone,c.fieldInfos=p),!s&&!l&&u&&"queryUniqueValues"in u?u.queryUniqueValues(m,c,{signal:o}):s?this.workerClient.uniqueValues(c,s):Te({attribute:c,features:l})}_histogramForField(e){let t=null;return t=e.minValue!=null&&e.maxValue!=null?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics({...e,outStatisticTypes:{include:["min","max","count"]}}).then(a=>{if(!a.count)throw new d(`${this.adapterName}:insufficient-data`,"Either the layer has no features or none of the features have data for the field");return{min:a.min,max:a.max}}),t.then(a=>ie(this,{min:a.min,max:a.max},e.field,e.numBins??void 0,e.view,e.filter,e.signal))}async _histogramFromQueryAttributeBinsFromMemory(e){const{field:t,normalizationType:a,signal:r}=e,i=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAttributeBins"}),{featuresJSON:n,graphics:o,layerView:s,query:l}=i,u=a==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,i,r):void 0;if(!s||!("queryAttributeBins"in s)||n||o){const g=Ge(e,i,u);return n?this.workerClient.histogram(g,n):ce({attribute:g,features:o})}const{query:m,min:p,max:c}=await lt(e,this,u,l==null?void 0:l.where);if(!m)return{bins:[],minValue:p,maxValue:c,normalizationTotal:u};const y=await s.queryAttributeBins(m,{signal:r});return ut(y,t?this.getField(t):null,{minValue:p,maxValue:c,normalizationTotal:u})}async _histogramFromMemory(e){const{field:t,signal:a}=e,r=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),{featuresJSON:i,graphics:n,layerView:o,query:s}=r,l=e.normalizationType==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,r,a):void 0,u=Ge(e,r,l);return!i&&!n&&o&&"queryHistogram"in o?o.queryHistogram(s,u,{signal:a}):i?this.workerClient.histogram(u,i):ce({attribute:u,features:n})}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,r=e.numClasses||Sa,i=[],n=(a-t)/r;for(let l=0;l<r;l++){const u=t+l*n;i.push({minValue:u,maxValue:u+n})}i[r-1].maxValue=a;const o={classBreaks:i,normalizationTotal:e.normalizationTotal},s=He(o,e.classificationMethod);return Promise.resolve(s)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:n,graphics:o,layerView:s,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return r&&t&&(n||o)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:n,graphics:o,layerView:s,query:l},i)),!n&&!o&&s&&"queryClassBreaks"in s?s.queryClassBreaks(l,m,{signal:i}):n?this.workerClient.classBreaks(m,n):be({attribute:m,features:o})}async _heatmapStatsFromMemory(e){var u,m;const{view:t,field:a,radius:r,signal:i}=e;yt(t,"InMemoryLayerAdapter: must have a view");try{const p=await t.whenLayerView(this.layer);if("queryHeatmapStatistics"in p&&!p.updating&&!e.filter)return await p.queryHeatmapStatistics({field:e.field,radius:e.radius})}catch{q(i)}const{featuresJSON:n,graphics:o}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),s=new Ct({extent:t.extent,tolerance:t.type==="2d"?t.state.resolution:(u=t.pixelSizeAt)==null?void 0:u.call(t,t.center)}),l={field:a,radius:r,transform:Ot(s),spatialReference:(m=t.spatialReference)==null?void 0:m.toJSON(),size:t.size};return n!=null&&n.length||o!=null&&o.length?n?this.workerClient.heatmapStatistics(l,n):At({attribute:l,features:o}):{min:null,max:null}}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}createQuery(){return this.layer.createQuery()}async summaryStatistics(e){const{field:t,valueExpression:a,sqlExpression:r,features:i,view:n}=e,o=t?this.getField(t):null,s=!!a,l=(n==null?void 0:n.type)==="3d";if(!a&&r&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return s||i||l?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,o)}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:r,view:i}=e,n=await fe(e,this),o=!!t,s=(i==null?void 0:i.type)==="3d";if(!t&&a&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return o||r||s?this._uvFromMemory(e,n):this._uvFromClientQuery(e,n)}async histogram(e){const{features:t,valueExpression:a,normalizationType:r,sqlExpression:i}=e,n=t||!!a;if(!a&&i&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return n||r?this._histogramFromMemory(e):this._histogramForField(e)}async classBreaks(e){return e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:r}=e;if(!a)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const i=this.layer.createQuery();i.where=V(i.where,t);const n=await a.whenLayerView(this.layer);return await Se(()=>!n.updating,r),n.queryFeatureCount(i,{signal:r})}async generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:r,filter:i}=e,n=Ee(t),o=await this._uvFromMemory({valueExpression:n,view:a,signal:r,filter:i});return Me(o.uniqueValueInfos,t)}async heatmapStatistics(e){return this._heatmapStatsFromMemory(e)}async getSampleFeatures(e,t){const{view:a,sampleSize:r,requiredFields:i,returnGeometry:n,filter:o,signal:s}=e,l=this.layer.createQuery(),u=1;if(l.outSpatialReference=a==null?void 0:a.spatialReference,l.returnGeometry=!!n,l.outFields=i,$(l,o),!a)throw new d(`${this.adapterName}:not-supported`,"view is required to get sample features for Layer");const m=await a.whenLayerView(this.layer);if(de(this,i,m).length)throw new d(`${this.adapterName}:not-supported`,"Required fields need to be passed in the outFields for Layer");const p=await this._fetchFeaturesFromMemory(m,l,s,t),c=r!=null&&r>0&&r<=p.length?r:p.length;return D(p,c,u)}load(e){const t=this.layer.load(e).then(async a=>{var r,i,n;this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.type==="stream"||!!((i=(r=a.capabilities)==null?void 0:r.query)!=null&&i.supportsSqlExpression),this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent="fullExtent"in a?a.fullExtent:(n=a.parent)==null?void 0:n.fullExtent,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],K.prototype,"adapterName",void 0),F([v({constructOnly:!0})],K.prototype,"layer",void 0),K=F([M("esri.smartMapping.support.adapters.InMemoryLayerAdapter")],K);const Oe=K,Je=5,je=2e4,va=4e5;let X=class extends Oe{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){var t,a;const e=this.layer;if(!((a=(t=e.capabilities)==null?void 0:t.query)!=null&&a.supportsStatistics)||this.geometryType==="multipatch"&&!Vt(e.url)&&e.version<10.5)throw new d(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then(a=>a.features)}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(te)}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:Je,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:t==="field"?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then(r=>{var l;let i,n,o;if((l=r.classBreakInfos)==null||l.some(u=>(u.hasAvg&&(i=u),!!i)),i){const u=i.maxValue-i.minValue;n=i.minValue+u/2,o=4*u}const s={min:r.minValue,max:r.maxValue,avg:n,stddev:o};return me(s,e.outStatisticTypes)})}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),e.normalizationType==="percent-of-total"&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=N(t)||C(t),r=Ie(this,e,t),i=await this.layer.queryFeatures(r,{signal:e.signal}),n=Ce(i,a);return me(n,e.outStatisticTypes)}_uvFromGenRenderer(e,t){const a=e.field??void 0,r=new aa({attributeField:a}),i=new ve({classificationDefinition:r});return this.generateRenderer(i,e.signal).then(n=>{const o={},s=this.getField(a);return n.uniqueValues.forEach(l=>{let u=l.value;u!=null&&u!==""&&(typeof u!="string"||u.trim()!==""&&u.toLowerCase()!=="<null>")||(u=null),o[u]==null?o[u]={count:l.count,data:Ke(s)&&u?Number(u):u}:o[u].count=o[u].count+l.count}),{count:o}}).then(n=>pe(n,[t],e.returnAllCodedValues))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(it(this,e),{signal:e.signal})).then(a=>Ne(a,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:Q,view:e.view,signal:e.signal})).then(a=>pe(a,t,e.returnAllCodedValues,Q))}_getNormalizationTotal(e,t,a,r){return e&&t==="percent-of-total"?this.summaryStatistics({field:e,outStatisticTypes:{include:["sum"]},filter:a,signal:r}).then(i=>i.sum):Promise.resolve(null)}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then(t=>{const a=st(e,this,t);return ot(a,this,e.minValue,e.maxValue).then(r=>{const i=r.min,n=r.max;if(i==null||n==null)return{bins:[],minValue:i,maxValue:n,normalizationTotal:t};const o=e.numBins||ee,s=Ve(i,n,o),l=xa(a.sqlExpression,s,e.minValue!=null&&e.maxValue!=null),u=new G({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),m=this.layer.createQuery();return m.where=V(m.where,a.sqlWhere),m.sqlFormat="standard",m.outStatistics=[u],m.groupByFieldsForStatistics=[l],m.orderByFields=[l],$(m,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(m,{signal:a.signal})).then(p=>at(p,i,n,o,t))})})}async _histogramFromQueryAttributeBins(e){const{field:t,normalizationType:a,filter:r,signal:i}=e,n=await this._getNormalizationTotal(t,a,r,i),o=this.layer.createQuery(),{query:s,min:l,max:u}=await lt(e,this,n,o==null?void 0:o.where);if(!s)return{bins:[],minValue:l,maxValue:u,normalizationTotal:n};const m=await this.layer.queryAttributeBins(s,{signal:i});return ut(m,t?this.getField(t):null,{minValue:l,maxValue:u,normalizationTotal:n})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,signal:n}=e,o=ye({field:t,normalizationType:a,normalizationField:r}),s=j({field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:this}),l=ue(s,e.minValue,e.maxValue),u=We({field:t,normalizationType:a,normalizationField:r,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||Je}),m=new ve({classificationDefinition:u});return m.where=V(o,l),this.generateRenderer(m,n).then(p=>He(p,e.classificationMethod))}async summaryStatistics(e){const{field:t,normalizationType:a,valueExpression:r,sqlExpression:i,view:n,features:o,useFeaturesInView:s}=e,l=t?this.getField(t):null,u=N(l)||C(l),m=r&&!(i&&this.supportsSQLExpression),p=this._hasLocalSource||o||s,c=n&&n.type==="3d";if(p||m)return m||o||s||c?this._summaryStatsFromMemory(e,l):this._summaryStatsFromClientQuery(e,l);if(!this.supportsSQLExpression&&(u||i||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(a&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,l)).catch(()=>(q(e.signal),this._summaryStatsFromMemory(e,l)))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:r,useFeaturesInView:i,signal:n}=e,o=t&&!(a&&this.supportsSQLExpression),s=this._hasLocalSource||r||i||o,l=e.view,u=l&&l.type==="3d",m=await fe(e,this);return s?o||r||i||u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m):this._uvFromServiceQuery(e,m).catch(p=>(q(n),!e.field||e.field2||e.field3||e.filter?p:this._uvFromGenRenderer(e,m[0]))).catch(()=>(q(n),u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m)))}async histogram(e){var z,L;const{field:t,normalizationType:a,normalizationField:r,classificationMethod:i,view:n,filter:o,signal:s}=e,l=t?this.getField(t):null,u=N(l)||C(l),m=e.valueExpression||e.sqlExpression,p=e.valueExpression&&!(e.sqlExpression&&this.supportsSQLExpression),c=this._hasLocalSource||e.features||e.useFeaturesInView||p,y=this.supportsSQLExpression,g=!i||i==="equal-interval",h=e.minValue,S=e.maxValue,w=h!=null&&S!=null,x=e.numBins||ee;if(c)return this._histogramFromMemory(e);if((L=(z=this.layer.capabilities)==null?void 0:z.operations)!=null&&L.supportsQueryBins&&e.useQueryAttributeBins)try{return await this._histogramFromQueryAttributeBins(e)}catch{return q(s),this._histogramFromQueryAttributeBinsFromMemory(e)}if((m||y)&&g){if(!y&&(m||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(u&&g)throw new d(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return a||!g?xe(e,this).then(O=>{if(!w)return ie(this,O,t,x,n,o,s);if(h>O.max||S<O.min)throw new d(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(g)return ie(this,{min:h,max:S,sqlExpr:O.sqlExpr,excludeZerosExpr:O.excludeZerosExpr},t,x,n,o,s);{const A={field:t,normalizationType:a,normalizationField:r,normalizationTotal:O.normTotal,layer:this},T=j(A),k=ue(T,h,S);return xe(e,this,k).then(P=>ie(this,P,t,x,n,o,s))}}):this._histogramForField(e)}async classBreaks(e){const t=e.analyzeData!==!1,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch(()=>(q(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){if(this._hasLocalSource)throw new d(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,a=t.createQuery();return a.where=V(a.where,e.whereClause),$(a,e.filter),t.queryFeatureCount(a,{signal:e.signal})}async generateRenderer(e,t){var i;const a=this.layer;if(this._hasLocalSource||a.version<10.1)throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const r=a.createQuery();return e.where=V(e.where,r.where),ea(((i=a.parsedUrl)==null?void 0:i.path)??"",{source:a.dynamicDataSource??void 0,gdbVersion:a.gdbVersion??void 0},e,{signal:t})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:r,filter:i}=e,n=Ee(t),o=ra(t),s=a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:n,view:a,signal:r,filter:i}):await this._uvFromServiceQuery({sqlExpression:o.expression,valueExpression:n,signal:r,filter:i});return Me(s.uniqueValueInfos,t)}async getSampleFeatures(e,t){var y,g;const{view:a,requiredFields:r,returnGeometry:i,filter:n,signal:o}=e,s=e.sampleSize;if(s==null||s===0)return[];const l=this.layer.createQuery(),u=1,m=t==="json";l.outSpatialReference=a==null?void 0:a.spatialReference,l.returnGeometry=!!i,l.outFields=r,$(l,n);let p=[],c=!1;if(a)try{const h=await a.whenLayerView(this.layer);if(c=!de(this,r,h).length,c){if(s>=1&&!e.filter&&"getSampleFeatures"in h){await this._waitForLayerViewUpdate(h);const S=await h.getSampleFeatures({minFeatureCount:s,sampleSize:s});if(S!=null)return m?S:S.map(w=>Le.fromJSON(w))}if(p=await this._fetchFeaturesFromMemory(h,l,o,t),p.length>=s&&s>0)return D(p,s,u)}}catch{q(o)}try{if(this._hasLocalSource)return c?p:m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o);const h=await this.queryFeatureCount({view:a,filter:n,signal:o}),S=this.layer.capabilities.query.maxRecordCount;let w=s===-1?h:s;if(w=S&&w>S?S:w,h<=p.length||p.length>=S)return p;if(l.maxAllowableOffset=e.resolution||(a?a.extent.width/a.width/a.scale:Zt(this.layer.spatialReference))*va,h<=w)return m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o);if(h<=je){const x=this.layer.createQuery();$(x,n);const z=await this.layer.queryObjectIds();return l.objectIds=D(z,w,u),m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o)}return(g=(y=this.layer.capabilities)==null?void 0:y.query)!=null&&g.supportsPagination&&(l.num=Math.min(w,je)),m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o)}catch{return q(o),p}}load(e){const t=this.layer.load(e).then(async a=>{var r,i;this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=(i=(r=a.capabilities)==null?void 0:r.query)==null?void 0:i.supportsSqlExpression,this._hasLocalSource=!a.url&&!!a.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};function xa(e,t,a){const r=[],i=t.length;return t.forEach((n,o)=>{const[s,l]=n;let u=null;u=o!==0||a?o!==i-1||a?V(`${e} >= ${s}`,`${e} ${o===i-1?" <= ":" < "} ${l}`):`${e} >= ${s}`:`${e} < ${l}`,r.push("WHEN ("+u+") THEN "+(o+1))}),["CASE",r.join(" "),"ELSE 0","END"].join(" ")}F([v({readOnly:!0})],X.prototype,"adapterName",void 0),F([v({constructOnly:!0})],X.prototype,"layer",void 0),X=F([M("esri.smartMapping.support.adapters.FeatureLayerAdapter")],X);const _=X;let ne=class extends _{constructor(){super(...arguments),this.adapterName="csv-layer-adapter"}async _createGenerateRendererResult(t,a,r,i,n){const o=t==null?void 0:t.features;if(!(o==null?void 0:o.length))throw new d("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const l=te(o);let u=null;if(i==="percent-of-total"&&(u=(await this.workerClient.summaryStatistics({field:a},l)).sum,u==null))throw new d("csv-layer-adapter:invalid","invalid normalizationTotal");if((n==null?void 0:n.type)==="class-breaks-definition"){const p=(await Pe({field:a,normalizationType:i,normalizationField:r,normalizationTotal:u},l)).filter(c=>Number.isFinite(c));return St({definition:n,values:p,normalizationTotal:u})}const m=(await Pe({field:a},l)).filter(p=>p!=null&&typeof p=="string"&&p.trim()!=="");return vt(m)}generateRenderer(t,a){const r=t.classificationDefinition;let i=null,n=null,o=null;(r==null?void 0:r.type)==="class-breaks-definition"?(i=r.classificationField,n=r.normalizationField,o=r.normalizationType):i=r==null?void 0:r.attributeField;const s=this.layer;return B({field:i,normalizationField:n}).then(l=>{const u=s.createQuery();return u.returnGeometry=!1,u.outFields=l,u.where=V(u.where,t.where),s.queryFeatures(u,{signal:a}).then(m=>this._createGenerateRendererResult(m,i,n,o,r))})}load(t){const a=this.layer.load(t).then(async r=>{this.geometryType=r.geometryType,this.objectIdField=r.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ae.getInstance(),await this.workerClient.open(t.signal)});return this.addResolvingPromise(a),Promise.resolve(this)}};F([v({readOnly:!0})],ne.prototype,"adapterName",void 0),ne=F([M("esri.smartMapping.support.adapters.CSVLayerAdapter")],ne);const qa=ne;let se=class extends _{constructor(){super(...arguments),this.adapterName="feature-layer-binning-adapter"}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:r,graphics:i,layerView:n,query:o}=t,s={include:["sum"]},l=(!r&&!i&&n&&"queryAggregateSummaryStatistics"in n?await n.queryAggregateSummaryStatistics(o,{field:e,outStatisticTypes:s},{signal:a}):r?await this.workerClient.summaryStatistics({field:e},r):await J({attribute:{field:e,outStatisticTypes:s},features:i})).sum;if(l==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t!=null&&t.length)return this._getFilteredFeatures(t,a);const{view:r,field:i,field2:n,field3:o,normalizationField:s,valueExpression:l,returnGeometry:u,layerViewFunc:m,signal:p}=e;let c=null,y=null,g=null,h=null,S=null;if(r)try{if(c=await r.whenLayerView(this.layer),y=m!=null&&m in c&&typeof c[m]=="function",y){await this._waitForLayerViewUpdate(c);const w=await B({field:i,field2:n,field3:o,normalizationField:s,valueExpression:l});Qe(this,w).length?y=!1:(g="createAggregateQuery"in c?c.createAggregateQuery():null,g?(g.outFields=w,g.returnGeometry=!1,$(g,a)):y=!1),c.suspended&&(y=!1)}}catch{y=!1}if(!y&&(S=Re(this.layer).map(w=>w.toJSON()),h=await this._fetchFeaturesForStats({field:i,field2:n,field3:o,valueExpression:l,normalizationField:s,returnGeometry:u,filter:a,view:r,signal:p},"json"),!(h!=null&&h.length)))throw new d(`${this.adapterName}:insufficient-data`,"No features are available to calculate statistics");return{layerView:c,query:g,featuresJSON:h,fieldInfos:S}}async _summaryStatsFromMemory(e,t){const{view:a,field:r,valueExpression:i,normalizationType:n,signal:o}=e,s={field:r,valueExpression:i,normalizationType:n,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:m,query:p,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return i&&a&&(l||u)&&(s.fieldType=t!=null&&t.type?_e.toJSON(t.type):null,s.viewInfoParams=E(a),s.timeZone=a.timeZone,s.fieldInfos=c),n==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:l,graphics:u,layerView:m,query:p},o)),!l&&!u&&m&&"queryAggregateSummaryStatistics"in m?m.queryAggregateSummaryStatistics(p,s,{signal:o}):l?this.workerClient.summaryStatistics(s,l):J({attribute:s,features:u})}async _uvFromMemory(e,t){const{view:a,field:r,valueExpression:i,returnAllCodedValues:n,signal:o}=e,{featuresJSON:s,graphics:l,layerView:u,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),c={field:r,field2:e.field2,field3:e.field3,fieldDelimiter:Q,valueExpression:i,domains:t,returnAllCodedValues:n};return i&&a&&(s||l)&&(c.viewInfoParams=E(a),c.timeZone=a.timeZone,c.fieldInfos=p),!s&&!l&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(m,c,{signal:o}):s?this.workerClient.uniqueValues(c,s):Te({attribute:c,features:l})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:n,graphics:o,layerView:s,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return r&&t&&(n||o)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:n,graphics:o,layerView:s,query:l},i)),!n&&!o&&s&&"queryAggregateHistogram"in s?s.queryAggregateHistogram(l,m,{signal:i}):n?this.workerClient.histogram(m,n):ce({attribute:m,features:o})}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:n,graphics:o,layerView:s,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return r&&t&&(n||o)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:n,graphics:o,layerView:s,query:l},i)),!n&&!o&&s&&"queryAggregateClassBreaks"in s?s.queryAggregateClassBreaks(l,m,{signal:i}):n?this.workerClient.classBreaks(m,n):be({attribute:m,features:o})}getField(e=""){const t=Re(this.layer);return t==null?void 0:t.find(a=>a.name.toLowerCase()===(e==null?void 0:e.toLowerCase()))}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(e,t){return null}async summaryStatistics(e){const{field:t}=e,a=t?this.getField(t):null,r=N(a)||C(a),i=e.sqlExpression&&!e.valueExpression&&!t;if(r||i)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,a)}async uniqueValues(e){const t=await fe(e,this);return this._uvFromMemory(e,t)}async histogram(e){const{field:t}=e,a=t?this.getField(t):null,r=N(a)||C(a),i=e.sqlExpression&&!e.valueExpression&&!t;if(r||i)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}async classBreaks(e){return(e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch(()=>(q(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){var r;const t=await((r=e.view)==null?void 0:r.whenLayerView(this.layer));if(!t||!("queryAggregateCount"in t)||!t.queryAggregateCount)throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");await this._waitForLayerViewUpdate(t);const a=t.createAggregateQuery();return a.where=V(a.where,e.whereClause),$(a,e.filter),t.queryAggregateCount(a,{signal:e.signal})}generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"'generateRenderer' is not supported.")}heatmapStatistics(e){throw new d(`${this.adapterName}:not-supported`,"'heatmapStatistics' is not supported.")}async predominantCategories(e){const{fields:t,view:a,signal:r}=e,i=Ee(t),n=await this._uvFromMemory({valueExpression:i,view:a,signal:r});return Me(n.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:r,requiredFields:i,returnGeometry:n,filter:o,signal:s}=e;if(!a)throw new d(`${this.adapterName}:not-supported`,"'view' is required to get sample features for binning.");if(a.type==="3d")throw new d(`${this.adapterName}:not-supported`,"3d 'view' is not supported to get sample features for binning.");const l=await a.whenLayerView(this.layer);if(!("queryAggregateJSON"in l&&l.queryAggregateJSON&&"queryAggregates"in l&&l.queryAggregates))throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");if(await this._waitForLayerViewUpdate(l),Qe(this,i).length)throw new d(`${this.adapterName}:insufficient-data`,"Layer does not have required fields");const u=1,m=t==="json",p=l.createAggregateQuery();p.outSpatialReference=a==null?void 0:a.spatialReference,p.returnGeometry=!!n,p.outFields=i,$(p,o);const{features:c}=m?await l.queryAggregateJSON(p,{signal:s}):await l.queryAggregates(p,{signal:s});return c.length&&r!=null&&r>0&&r<=c.length?D(c,r,u):c}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType="polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent;const r="featureReduction"in a?a.featureReduction:null;if((r==null?void 0:r.type)!=="binning"&&(r==null?void 0:r.type)!=="cluster")throw new d(`${this.adapterName}:invalid-parameters`,`Feature reduction type ${r==null?void 0:r.type} is not supported`);this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],se.prototype,"adapterName",void 0),se=F([M("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],se);const Va=se;let Y=class extends $e{constructor(e){super(e),this._featureLayerAdapter=null,this.workerClient=null,this.adapterName="scene-layer-adapter"}destroy(){var e;(e=this.workerClient)==null||e.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!e||!a.length)return e;const r=this.layer.objectIdField,i=e.clone(),n=t.filter(s=>{const l=this.layer.getField(s);return!a.includes(l.name)}),o=n.some(s=>this.layer.getField(s).name===r);return i.outFields=o?n:[...n,r],i}async _fetchFeaturesFromMemory(e,t,a){if(!e)throw new d("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const r=await e.whenLayerView(this.layer),i=new AbortController,n=i.signal,o=Se(()=>!r.updating,n);await Ue(o,5e3,i);const s=de(this,a,r);q(n);const l=this._updateQuery(t,a??[],s),u=await r.queryFeatures(l,{signal:n});q(n);const m=u.features;return s.length?r.whenGraphicAttributes(m,s):m}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(te)}_fetchFeaturesForStats(e,t){return B({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t))}async _processStatsFromMemoryParams(e){const t=e.features;if(t!=null&&t.length)return t.length&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic"?{graphics:t}:{featuresJSON:t};const{view:a,field:r,normalizationField:i,valueExpression:n,signal:o}=e,s=await this._fetchFeaturesForStats({field:r,valueExpression:n,normalizationField:i,view:a,signal:o},null);if(!(s!=null&&s.length))throw new d("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:s}}_getCachedStatistics(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):a.queryCachedStatistics(t==null?void 0:t.name,{signal:e.signal}).then(r=>{const i=r.stats,{min:n,max:o,totalValuesCount:s}=i;let{avg:l,stddev:u,sum:m,variance:p,count:c}=i;return n===0&&o===0||(l=l===0?null:l,m=m===0?null:m,u=u===0?null:u,p=p===0?null:p,c=c===0?null:c),c==null&&(m!=null&&l!=null?c=Math.round(m/l):s!=null&&(c=s)),{avg:l,count:c,max:o,min:n,stddev:u,sum:m,variance:p}})}async _getNormalizationTotal(e,t,a){const r={include:["sum"]},i=(t?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:r},t):await J({attribute:{field:e,outStatisticTypes:r},features:a})).sum;if(i==null)throw new d("scene-layer-adapter:invalid","invalid normalizationTotal");return i}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:r,normalizationField:i,valueExpression:n}=e,{featuresJSON:o,graphics:s}=await this._processStatsFromMemoryParams(e),l={field:r,valueExpression:n,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes};return e.valueExpression&&a&&o&&(l.fieldType=t!=null&&t.type?_e.toJSON(t.type):null,l.viewInfoParams=E(a),l.timeZone=a.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(l.normalizationTotal=await this._getNormalizationTotal(r,o,s)),o?this.workerClient.summaryStatistics(l,o):J({attribute:l,features:s})}_getCachedStatisticsForUniqueValues(e,t){const a=this.layer,r=t==null?void 0:t.name,i=t&&e.field?this.getFieldDomain(e.field):null;return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(r,{signal:e.signal}).then(n=>{var c;const o=n.stats;if(!o.mostFrequentValues)throw new Error;const s=(c=n.labels)==null?void 0:c.labels,l={},u=[],m="countOF"+r;o.mostFrequentValues.forEach(y=>{const g=new Le({attributes:{}});g.attributes[r]=t&&t.name!==a.objectIdField&&(Ke(t)||N(t))?Number(y.value):y.value,g.attributes[m]=y.count,u.push(g)}),s&&s.forEach(y=>{l[y.value]=y.label});const p=new ze({features:u});return Ne(p,{layer:this,field:e.field,labels:l,view:e.view,signal:e.signal})}).then(n=>pe(n,[i],e.returnAllCodedValues))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:r,field2:i,field3:n,valueExpression:o,returnAllCodedValues:s}=e,l={field:r,field2:i,field3:n,fieldDelimiter:Q,valueExpression:o,domains:t,returnAllCodedValues:s},{featuresJSON:u,graphics:m}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(l.viewInfoParams=E(a),l.timeZone=a.timeZone),u?this.workerClient.uniqueValues(l,u):Te({attribute:l,features:m})}_getCachedStatisticsForHistogram(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then(r=>{const i=r.stats,{minValue:n,maxValue:o}=e,s=n??i.min,l=o??i.max,u=e.numBins||10,m=La(i.histogram,s,l,u);return at(m,s,l,u)})}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:r,valueExpression:i}=e,{featuresJSON:n,graphics:o}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&n&&(s.viewInfoParams=E(t),s.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotal(a,n,o)),n?this.workerClient.classBreaks(s,n):be({attribute:s,features:o})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:r,graphics:i}=await this._processStatsFromMemoryParams(e),n={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&r&&(n.viewInfoParams=E(t),n.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotal(a,r,i)),r?this.workerClient.histogram(n,r):ce({attribute:n,features:i})}getField(e){return this.layer.getField(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}createQuery(){return this.layer.createQuery()}summaryStatistics(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t==null?void 0:t.name)?this._getCachedStatistics(e,t).catch(()=>(q(e.signal),this._getSummaryStatisticsFromMemory(e,t))):this._getSummaryStatisticsFromMemory(e,t)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const t=await fe(e,this),{field:a,field2:r}=e,i=a&&r,n=this.getField(a);return!i&&n&&this._hasCachedStatistics(n.name)?this._getCachedStatisticsForUniqueValues(e,n).catch(()=>(q(e.signal),this._getUniqueValuesFromMemory(e,t))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return t&&this._hasCachedStatistics(t.name)?this._getCachedStatisticsForHistogram(e,t).catch(()=>(q(e.signal),this._getHistogramFromMemory(e))):this._getHistogramFromMemory(e)}classBreaks(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t==null?void 0:t.name)?Promise.reject(new d("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const{view:a,sampleSize:r,requiredFields:i,returnGeometry:n,signal:o}=e,s=1,l=t==="json",u=this.createQuery();u.outFields=i,u.returnGeometry=!!n,u.where=null,u.num=r;let m=[];try{if(m=l?await this._fetchFeaturesJSONFromMemory(a,u,i):await this._fetchFeaturesFromMemory(a,u,i),m.length&&r!=null&&r>0&&r<=m.length)return D(m,r,s)}catch{q(o)}let p=null;if(this._featureLayerAdapter){const c={...e};delete c.view,p=await this._featureLayerAdapter.getSampleFeatures(c,t)}return p!=null&&p.length?p:D(m,m.length,s)}load(e){const t=this.layer.load(e).then(async a=>{this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal);const r=a.associatedLayer;if(this.geometryType=a.geometryType,r!=null)return this._featureLayerAdapter=new _({layer:r}),this._featureLayerAdapter.load(e).then(()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent});this.objectIdField=a.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=a.fullExtent});return this.addResolvingPromise(t),Promise.resolve(this)}};function La(e,t=e.minimum,a=e.maximum,r){const i=[];for(let u=0;u<r;u++)i[u]=0;const n=e.counts.length,o=e.minimum,s=e.maximum;for(let u=0;u<n;u++){const m=(u+.5)/n,p=((1-m)*o+m*s-t)/(a-t)*r;p>=0&&p<=r&&(i[p===r?r-1:Math.floor(p)]+=e.counts[u])}const l=[];return i.forEach((u,m)=>{const p=new Le({attributes:{}});p.attributes.EXPR_1=m+1,p.attributes.countOFExpr=u,l.push(p)}),new ze({features:l})}F([v({readOnly:!0})],Y.prototype,"adapterName",void 0),F([v({constructOnly:!0})],Y.prototype,"layer",void 0),Y=F([M("esri.smartMapping.support.adapters.SceneLayerAdapter")],Y);const mt=Y;let oe=class extends mt{constructor(e){super(e),this.adapterName="point-cloud-layer-adapter"}getField(e){return this.layer.fieldsIndex.get(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then(()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],oe.prototype,"adapterName",void 0),oe=F([M("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],oe);const za=oe;let le=class extends Oe{constructor(){super(...arguments),this.adapterName="stream-layer-adapter"}async _summaryStatsFromClientQuery(e,t){var s;const{signal:a,view:r}=e,i=Ie(this,e,t);i.outStatistics=(s=i.outStatistics)==null?void 0:s.filter(l=>l.outStatisticFieldName!=="totalcount_value");const n=await this._fetchFeatureSetFromMemory(i,r,a),o=Ce(n,N(t)||C(t));return me(o,e.outStatisticTypes)}};F([v({readOnly:!0})],le.prototype,"adapterName",void 0),le=F([M("esri.smartMapping.support.adapters.StreamLayerAdapter")],le);const _a=le;var f;(function(e){e[e.CatalogLayer=0]="CatalogLayer",e[e.CatalogFootprintLayer=1]="CatalogFootprintLayer",e[e.CSVLayer=2]="CSVLayer",e[e.FeatureLayer=3]="FeatureLayer",e[e.GeoJSONLayer=4]="GeoJSONLayer",e[e.KnowledgeGraphSublayer=5]="KnowledgeGraphSublayer",e[e.OGCFeatureLayer=6]="OGCFeatureLayer",e[e.OrientedImageryLayer=7]="OrientedImageryLayer",e[e.ParquetLayer=8]="ParquetLayer",e[e.PointCloudLayer=9]="PointCloudLayer",e[e.SceneLayer=10]="SceneLayer",e[e.StreamLayer=11]="StreamLayer",e[e.SubtypeGroupLayer=12]="SubtypeGroupLayer",e[e.SubtypeSublayer=13]="SubtypeSublayer",e[e.WFSLayer=14]="WFSLayer"})(f||(f={}));const qe={[f.CatalogLayer]:{adapter:_,type:"catalog",label:"CatalogLayer"},[f.CatalogFootprintLayer]:{adapter:_,type:"catalog-footprint",label:"CatalogFootprintLayer"},[f.CSVLayer]:{adapter:qa,type:"csv",label:"CSVLayer"},[f.FeatureLayer]:{adapter:_,type:"feature",label:"FeatureLayer"},[f.GeoJSONLayer]:{adapter:_,type:"geojson",label:"GeoJSONLayer"},[f.KnowledgeGraphSublayer]:{adapter:_,type:"knowledge-graph-sublayer",label:"KnowledgeGraphSublayer"},[f.OGCFeatureLayer]:{adapter:Oe,type:"ogc-feature",label:"OGCFeatureLayer"},[f.OrientedImageryLayer]:{adapter:_,type:"oriented-imagery",label:"OrientedImageryLayer"},[f.ParquetLayer]:{adapter:_,type:"parquet",label:"ParquetLayer"},[f.PointCloudLayer]:{adapter:za,type:"point-cloud",label:"PointCloudLayer"},[f.SceneLayer]:{adapter:mt,type:"scene",label:"SceneLayer"},[f.StreamLayer]:{adapter:_a,type:"stream",label:"StreamLayer"},[f.SubtypeGroupLayer]:{adapter:_,type:"subtype-group",label:"SubtypeGroupLayer"},[f.SubtypeSublayer]:{adapter:_,type:"subtype-sublayer",label:"SubtypeSublayer"},[f.WFSLayer]:{adapter:_,type:"wfs",label:"WFSLayer"}},Ae=[f.CatalogLayer,f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.PointCloudLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer];f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer;const Ta=[f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.OGCFeatureLayer,f.KnowledgeGraphSublayer,f.OrientedImageryLayer,f.ParquetLayer,f.StreamLayer,f.WFSLayer];function ba(e){return e.map(t=>qe[t].label)}function Ea(e,t=Ae,a){if(e instanceof $e)return e;const r=$a(e,t);return r?a?new Va({layer:e}):new r({layer:e}):null}function $a(e,t=Ae){let a=null;return t.some(r=>{const i=e.type===qe[r].type;return i&&(a=qe[r].adapter),i}),a}async function Ca(e){if(!(e!=null&&e.layer)||!e.field&&!e.valueExpression)throw new d("unique-values:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");const t=e.valueExpression||e.sqlExpression,a=t&&!e.sqlExpression;if(t){if(a){if(!e.view)throw new d("unique-values:missing-parameters","View is required when 'valueExpression' is specified")}else if(!e.valueExpression)throw new d("unique-values:missing-parameters","'valueExpression' parameters are required")}e.forBinning&&Yt(e,"unique-values");const{layer:r,...i}=e,n=e.forBinning?Ta:Ae,o=Ea(r,n,e.forBinning);if(!o)throw new d("unique-values:invalid-parameters","'layer' must be one of these types: "+ba(n).join(", "));const s={layerAdapter:o,...i},l=s.signal!=null?{signal:s.signal}:null;await o.load(l);const u=await B({field:s.field,field2:s.field2,field3:s.field3,valueExpression:s.valueExpression}),m=ft(o,u,"unique-values:invalid-parameters");if(m)throw m;s.filter&&!s.filter.spatialRelationship&&(s.filter.spatialRelationship="intersects");const p=ht(s.filter,"summary-statistics:invalid-parameters");if(p)throw p;return s}async function Ii(e){const{layerAdapter:t,...a}=await Ca(e);return t.uniqueValues(a)}export{Ii as default};
