import{c as i,f as n,g as y,j as d,D as u,ee as h,e as _}from"./index-XUlETPJZ.js";import{d as f}from"./FeatureSet-41fq-equ.js";import S from"./FeatureLayerView2D-EUPrl2lm.js";import{e as g}from"./util-YiNIELKj.js";import{d as v}from"./FeatureEffect-reT_3K_v.js";import"./Field-BZWZB6E0.js";import"./fieldType-h3FAXGdT.js";import"./Container-wjZhPXxP.js";import"./parser-5WRmuohq.js";import"./definitions-pFhxwyTZ.js";import"./enums-8pc8f5Ge.js";import"./Texture-TdolM--P.js";import"./Query-XYhmJAcm.js";import"./LayerView-MOh07vIm.js";import"./scaleUtils-A_wgkqWZ.js";import"./AttributeStoreView-swZipg7H.js";import"./TiledDisplayObject-92su5uUP.js";import"./diffUtils-FaRWg0DV.js";import"./labelingInfo-yCRiW8FB.js";import"./LabelClass-lFhwM9-Q.js";import"./labelUtils-bgvBkKE5.js";import"./defaultsJSON-HVtDPFXZ.js";import"./jsonUtils-FMkyl16O.js";import"./color-C27rj85x.js";import"./enums--FbEXJ87.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./WGLContainer-UwEFGrEY.js";import"./FramebufferObject-Kk4P80ua.js";import"./ProgramTemplate-DqifB79O.js";import"./GeometryUtils-TMKIi98m.js";import"./heatmapUtils-mFECwRl0.js";import"./vec4f64-_4WP0ZGf.js";import"./StyleDefinition-ohiNeWtS.js";import"./config-z2KFXUcx.js";import"./earcut-TAPsTCSu.js";import"./featureConversionUtils-AHVFLuq1.js";import"./OptimizedGeometry-1RFAES06.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./visualVariablesUtils-u2oh7Ajb.js";import"./ExpandedCIM-Lrijv-EB.js";import"./BidiEngine-8z8MVveq.js";import"./GeometryUtils-CEMOhUyj.js";import"./utils-SpCi_Vow.js";import"./Rect-pT1ASav_.js";import"./quantizationUtils-pXT9r_8v.js";import"./floatRGBA-snPG7MiA.js";import"./clusterUtils-oFjX4ysJ.js";import"./MD5-uECS9GB-.js";import"./SizeVariable-eDAmtsU9.js";import"./colorRamps-ucREs6wJ.js";import"./LegendOptions-KuTIRvg3.js";import"./lengthUtils-uQbLh4h5.js";import"./BitmapTileContainer-cThELuf3.js";import"./Bitmap-Fb2rPaXO.js";import"./TileContainer-U3z3fPMo.js";import"./CircularArray-1_thnT0U.js";import"./BufferPool-XXLt8utX.js";import"./FeatureContainer-c-vnQxNJ.js";import"./commonProperties-vCf9FiI6.js";import"./ElevationInfo-W4L0wkkh.js";import"./floorFilterUtils-zOdaZIyV.js";import"./popupUtils-FesS0pg0.js";import"./RefreshableLayerView-j9Zrh6cu.js";import"./jsonUtils-SBL1xwKC.js";const O=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return this._isUserPaused?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],t.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],t.prototype,"connectionStatus",null),i([n({type:v})],t.prototype,"filter",void 0),t=i([y("esri.layers.mixins.StreamLayerView")],t),t};function c(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t.toJSON()),e!=null&&(r.where=e),r}let o=class extends O(S){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null,this._enabledEventTypes=new Set}initialize(){this.addHandles([d(()=>this.layer.customParameters,e=>this._proxy.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._proxy.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>this._proxy.sendMessageToClient(e)),d(()=>this.layer.purgeOptions,()=>this._update()),d(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new u("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return h(e.map(p=>this.on(p,t)));const r=["data-received","message-received"].includes(e);r&&(this._enabledEventTypes.add(e),this._proxy.enableEvent(e,!0));const a=super.on(e,t),s=this;return _(()=>{a.remove(),r&&(s._proxy.closed||s.hasEventListener(e)||s._proxy.enableEvent(e,!1))})}queryLatestObservations(e,t){var r,a,s;if(!((r=this.layer.timeInfo)!=null&&r.endField||(a=this.layer.timeInfo)!=null&&a.startField||(s=this.layer.timeInfo)!=null&&s.trackIdField))throw new u("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(p=>{const m=f.fromJSON(p);return m.features.forEach(l=>{l.layer=this.layer,l.sourceLayer=this.layer}),m})}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){var e;(e=this._proxy)==null||e.pauseStream()}_doResume(){var e;(e=this._proxy)==null||e.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(c(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){var m;const e=this.layer,{objectIdField:t}=e,r=e.fields.map(l=>l.toJSON()),a=g(e.geometryType),s=((m=e.timeInfo)==null?void 0:m.toJSON())||null,p=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:r,fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:a,objectIdField:t,timeInfo:s,source:this.layer.parsedUrl,serviceFilter:c(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:p,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};i([n()],o.prototype,"pipelineConnectionStatus",void 0),i([n()],o.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],o.prototype,"connectionError",null),i([n({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=i([y("esri.views.2d.layers.StreamLayerView2D")],o);const Je=o;export{Je as default};
