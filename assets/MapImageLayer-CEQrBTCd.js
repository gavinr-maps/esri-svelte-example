import{V as w,ab as v,u as f,s as x,E as O,r as i,m as a,a as P,$ as T}from"./Accessor-BHnuXKD2.js";import{P as g}from"./cast-BA_-jlhc.js";import{t as E}from"./loadAll-Do8S8AWH.js";import{S as L}from"./MultiOriginJSONSupport-nGLpCFeg.js";import{o as F,r as M}from"./writer-B2bQV2uU.js";import{w as R}from"./Extent-CBBGeHb-.js";import{i as _}from"./scaleUtils-CfLu-sg1.js";import{a2 as j}from"./Point-XGrwlf63.js";import{f as J}from"./Layer-C9uQlTBT.js";import{i as N}from"./APIKeyMixin-Btq102Nx.js";import{m as q,f as U,s as A}from"./SublayersOwner-CFe19gPw.js";import{l as V}from"./ArcGISService-BHkTabnw.js";import{p as k,t as z}from"./ScaleRangeLayer-C59zG_yk.js";import{e as Z}from"./CustomParametersMixin-uo3x70vd.js";import{b as B}from"./OperationalLayer-Bts9W3HA.js";import{j as C}from"./PortalLayer-jhi5QQgB.js";import{f as D}from"./RefreshableLayer-Cn2UpWQD.js";import{l as G}from"./TemporalLayer-CYEvmdjr.js";import{y as H}from"./commonProperties-C0eC30J9.js";import{y as K}from"./ExportImageParameters-D29STznD.js";import{t as W}from"./imageBitmapUtils-BSeMtYaY.js";import{e as S}from"./sublayerUtils--wN8JjVc.js";import{t as Q}from"./versionUtils-DSsYFI36.js";import{p as X}from"./TimeExtent-J5qnUFx_.js";import{a as I}from"./timeZoneUtils-COos5xIr.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./reactiveUtils-BR0C1Kq4.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./Portal-CTRRujjZ.js";import"./Promise-CmQqe-ke.js";import"./mathUtils-DV9iOXpW.js";import"./Identifiable-BrT7zvUW.js";import"./Version-9k2AOv05.js";import"./portalItemUtils-rm7sAgcm.js";import"./projection-B2I9Bzj_.js";import"./vec3f64-BLpZdpfb.js";import"./Polyline-BmuD2-ZN.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./CollectionFlattener-B9CFCLSp.js";import"./Graphic-CFXUQZlS.js";import"./Clonable-DvJsj5LF.js";import"./opacityUtils-CSd4XoR2.js";import"./enumeration-Cr5WIZs4.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./ActionToggle-__-l4AdQ.js";import"./jsonUtils-Cu7OBRmN.js";import"./typeUtils-BSg8Y507.js";import"./TextSymbol-BQ_NW9Xo.js";import"./screenUtils-_ZIvrt5o.js";import"./collectionUtils-CbaToa73.js";import"./aaBoundingBox-CeBivBRq.js";import"./QueryTask-BTjeI7Co.js";import"./infoFor3D-CsJzgCF0.js";import"./Query-DCBIeen2.js";import"./Field-Cyk7Ur5d.js";import"./fieldType-L-VlbZqy.js";import"./FullTextSearch-BWm_kPUE.js";import"./utils-Cy8wFNQo.js";import"./executeForIds-CUQYF7Pj.js";import"./query-BS_L6I0Q.js";import"./normalizeUtils-XRAPXbWa.js";import"./normalizeUtilsCommon-D0zPTJCj.js";import"./utils-CkSELPnj.js";import"./pbfQueryUtils-AwPAOS5M.js";import"./pbf-CFI-xDDp.js";import"./memoryEstimations-5gFNwkKK.js";import"./OptimizedGeometry-7IxBWtHr.js";import"./OptimizedFeature-DcMLlxvB.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-DwN6mTru.js";import"./executeQueryJSON-CLYdIUdF.js";import"./FeatureSet-DpCN730g.js";import"./featureConversionUtils-DpmsPUmt.js";import"./OrderedLayer-BP2hvfL_.js";import"./OrderByInfo-E-O9nvtm.js";import"./featureLayerUtils-BzWCGee1.js";import"./uuid-Cl5lrJ4c.js";import"./featureQueryAll-xezK3WCp.js";import"./layerUtils-dJgsXxkC.js";import"./SimpleRenderer-gSw1WaJS.js";import"./commonProperties-bGHL1a5M.js";import"./colorRamps-Dkx8zIVn.js";import"./SizeVariable-IzD1bP2e.js";import"./visualVariableUtils-Bp9QCb8E.js";import"./lengthUtils-DjJgJFRg.js";import"./ColorStop-CDpeFWOz.js";import"./jsonUtils-Dzgxk9pw.js";import"./defaults-Dwxdhopq.js";import"./defaultsJSON-GKolV7NZ.js";import"./UniqueValueRenderer-Cri3tgP5.js";import"./diffUtils-CMkuJvD2.js";import"./RendererLegendOptions-mgfHoilI.js";import"./styleUtils-BB-zx7mT.js";import"./AttachmentQuery-BceVlzuF.js";import"./NormalizationBinParametersMixin-D6iHLB7I.js";import"./RelationshipQuery-W-4bfgaH.js";import"./timeUtils-D2X862bk.js";import"./FeatureType-DjGGrg1i.js";import"./FeatureTemplate-DqbLvkbZ.js";import"./FieldsIndex-DFdVonga.js";import"./labelingInfo-BvMdv93l.js";import"./labelUtils-Dq8OkaT-.js";import"./LayerFloorInfo-BXAHB-yQ.js";import"./Relationship-BBBusoKs.js";import"./serviceCapabilitiesUtils-BuKg0yWx.js";import"./typeUtils-CfF4cYo5.js";import"./ClassBreaksRenderer-BBSNkSFx.js";import"./LRUCache-DS2O1kTf.js";import"./MemCache-CDoaVBHf.js";import"./utils-B91u8350.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./HeatmapColorStop-c4wClnpW.js";import"./heatmapUtils-DA7NmY3d.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./popupUtils-pQ0CVidQ.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-TjZmCq6l.js";import"./utils-DYurMneM.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./PortalItem-CXk7DqVv.js";import"./TimeInfo-LjqhhubF.js";import"./TimeInterval-BDTTJ9Uw.js";import"./ElevationInfo-Di4W6v5U.js";import"./unitConversionUtils-C4AR5obr.js";import"./AttributeTableTemplate-B7rH2qLr.js";import"./floorFilterUtils-DZ5C6FQv.js";let o=class extends k(G(z(q(U(V(B(C(L(D(N(Z(J)))))))))))){constructor(...r){super(...r),this._exportImageParameters=new K({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(r,e){return typeof r=="string"?{url:r,...e}:r}load(r){const e=r!=null?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch(w).then(()=>this._fetchService(e))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(r,e){const n=e.supportedImageFormatTypes;return n&&n.includes("PNG32")?"png32":"png24"}writeSublayers(r,e,n,t){var l,c,b;if(!this.loaded||!r)return;const s=r.slice().reverse().flatten(({sublayers:m})=>m&&m.toArray().reverse()).toArray();let p=!1;const h=v(t.origin);if((l=this.capabilities)!=null&&l.operations.supportsExportMap&&((b=(c=this.capabilities)==null?void 0:c.exportMap)!=null&&b.supportsDynamicLayers)){if(h===f.PORTAL_ITEM){const m=this.createSublayersForOrigin("service").sublayers;p=S(s,m,f.SERVICE)}else if(h>f.PORTAL_ITEM){const m=this.createSublayersForOrigin("portal-item");p=S(s,m.sublayers,v(m.origin))}}const u=[],d={writeSublayerStructure:p,...t};let y=p||this.hasVisibleLayersForOrigin(h);s.forEach(m=>{const $=m.write({},d);u.push($),y=y||m.originOf("visible")==="user"}),u.some(m=>Object.keys(m).length>1)&&(e.layers=u),y&&(e.visibleLayers=s.filter(m=>m.visible).map(m=>m.id))}createExportImageParameters(r,e,n,t){const s=(t==null?void 0:t.pixelRatio)||1;r&&this.version>=10&&(r=r.clone().shiftCentralMeridian()),this._exportImageParameters.floors=(t==null?void 0:t.floors)??null,this._exportImageParameters.scale=_({extent:r,width:e})*s;const p=this._exportImageParameters.toJSON(),h=!(t!=null&&t.rotation)||this.version<10.3?{}:{rotation:-t.rotation},u=r==null?void 0:r.spatialReference,d=j(u);p.dpi*=s;const y={};if(t!=null&&t.timeExtent){const{start:l,end:c}=t.timeExtent.toJSON();y.time=l&&c&&l===c?""+l:`${l??"null"},${c??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(y.time="null,null");return{bbox:r?r.xmin+","+r.ymin+","+r.xmax+","+r.ymax:void 0,bboxSR:d,imageSR:d,size:e+","+n,...p,...h,...y}}async fetchImage(r,e,n,t){const{data:s}=await this._fetchImage("image",r,e,n,t);return s}async fetchImageBitmap(r,e,n,t){const{data:s,url:p}=await this._fetchImage("blob",r,e,n,t);return W(s,p,t==null?void 0:t.signal)}async fetchRecomputedExtents(r={}){const e={...r,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:n}=await g(this.url,e),{extent:t,fullExtent:s,timeExtent:p}=n,h=t||s;return{fullExtent:h&&R.fromJSON(h),timeExtent:p&&X.fromJSON({start:p[0],end:p[1]})}}loadAll(){return E(this,r=>{r(this.allSublayers),r(this.subtables)})}serviceSupportsSpatialReference(r){return Q(this,r)}async _fetchImage(r,e,n,t,s){var u,d,y;const p={responseType:r,signal:(s==null?void 0:s.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(e,n,t,s),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},h=this.parsedUrl.path+"/export";if(((u=p.query)==null?void 0:u.dynamicLayers)!=null&&!((y=(d=this.capabilities)==null?void 0:d.exportMap)!=null&&y.supportsDynamicLayers))throw new x("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:p.query});try{const{data:l}=await g(h,p);return{data:l,url:h}}catch(l){throw O(l)?l:new x("mapimagelayer:image-fetch-error",`Unable to load image: ${h}`,{error:l})}}async _fetchService(r){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:e,ssl:n}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:r});n&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=e,this.read(e,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(r){var e;return!(r==null||!((e=this.sublayersSourceJSON[r])!=null&&e.visibleLayers))}};i([a(I("dateFieldsTimeReference"))],o.prototype,"dateFieldsTimeZone",void 0),i([a({type:Boolean})],o.prototype,"datesInUnknownTimezone",void 0),i([a()],o.prototype,"dpi",void 0),i([a()],o.prototype,"gdbVersion",void 0),i([a()],o.prototype,"imageFormat",void 0),i([F("imageFormat",["supportedImageFormatTypes"])],o.prototype,"readImageFormat",null),i([a({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],o.prototype,"imageMaxHeight",void 0),i([a({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],o.prototype,"imageMaxWidth",void 0),i([a()],o.prototype,"imageTransparency",void 0),i([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],o.prototype,"isReference",void 0),i([a({json:{read:!1,write:!1}})],o.prototype,"labelsVisible",void 0),i([a({type:["ArcGISMapServiceLayer"]})],o.prototype,"operationalLayerType",void 0),i([a({json:{read:!1,write:!1}})],o.prototype,"popupEnabled",void 0),i([a(I("preferredTimeReference"))],o.prototype,"preferredTimeZone",void 0),i([a()],o.prototype,"sourceJSON",void 0),i([a({json:{write:{ignoreOrigin:!0}}})],o.prototype,"sublayers",void 0),i([M("sublayers",{layers:{type:[A]},visibleLayers:{type:[T]}})],o.prototype,"writeSublayers",null),i([a({type:["show","hide","hide-children"]})],o.prototype,"listMode",void 0),i([a({json:{read:!1},readOnly:!0,value:"map-image"})],o.prototype,"type",void 0),i([a(H)],o.prototype,"url",void 0),o=i([P("esri.layers.MapImageLayer")],o);const Oe=o;export{Oe as default};
