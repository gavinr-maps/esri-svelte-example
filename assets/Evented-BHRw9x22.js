import{r as _}from"./tslib.es6-B3Jf3DVX.js";import{b as d}from"./Accessor-BLX9ikPh.js";import{t as E,e as f,a as p}from"./subclass-BZA_h8Db.js";class l{constructor(){this._emitter=new l.EventEmitter(this)}emit(i,c){return this._emitter.emit(i,c)}on(i,c){return this._emitter.on(i,c)}once(i,c){return this._emitter.once(i,c)}hasEventListener(i){return this._emitter.hasEventListener(i)}}(function(u){class i{constructor(e=null){this._target=e,this._listenersMap=null}clear(){var e;(e=this._listenersMap)==null||e.clear(),this._listenersMap=null}destroy(){this.clear()}emit(e,s){var a;let t=(a=this._listenersMap)==null?void 0:a.get(e);if(!t)return!1;const r=this._target||this;let n=!1;for(const h of t.slice()){const m="deref"in h?h.deref():h;m?m==null||m.call(r,s):n=!0}return n&&(t=t.filter(h=>!("deref"in h)||h.deref()!=null),this._listenersMap.set(e,t)),t.length>0}on(e,s){if(Array.isArray(e)){const r=e.map(n=>this.on(n,s));return E(r)}if(e.includes(","))throw new TypeError("Evented.on() with a comma delimited string of event types is not supported");this._listenersMap??(this._listenersMap=new Map);const t=this._listenersMap.get(e)||[];return t.push(s),this._listenersMap.set(e,t),f(()=>{var a;const r=(a=this._listenersMap)==null?void 0:a.get(e),n=(r==null?void 0:r.indexOf(s))??-1;n>=0&&r.splice(n,1)})}once(e,s){const t=this.on(e,r=>{t.remove();const n="deref"in s?s.deref():s;n==null||n.call(null,r)});return t}hasEventListener(e){var t;const s=(t=this._listenersMap)==null?void 0:t.get(e);return s!=null&&s.length>0}}u.EventEmitter=i,u.EventedMixin=o=>{let e=class extends o{constructor(){super(...arguments),this._emitter=new i}destroy(){this._emitter.clear()}emit(t,r){return this._emitter.emit(t,r)}on(t,r){return this._emitter.on(t,r)}once(t,r){return this._emitter.once(t,r)}hasEventListener(t){return this._emitter.hasEventListener(t)}};return e=_([p("esri.core.Evented")],e),e};let c=class extends d{constructor(){super(...arguments),this._emitter=new l.EventEmitter(this)}destroy(){this._emitter.clear()}emit(o,e){return this._emitter.emit(o,e)}on(o,e){return this._emitter.on(o,e)}once(o,e){return this._emitter.once(o,e)}hasEventListener(o){return this._emitter.hasEventListener(o)}};c=_([p("esri.core.Evented.EventedAccessor")],c),u.EventedAccessor=c})(l||(l={}));const y=l;export{y as o};
