const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./imageryUtils-C1WGwsfa.js","./utils-Co76u243.js","./subclass-BR3PhgZG.js","./originUtils-D69mHv66.js","./multiOriginJSONSupportUtils-C0wm8_Yw.js","./Portal-DCqdz-K4.js","./index-BVncS3aY.js","./index-CjOb8WjV.css","./Evented-CXIxDjmW.js","./Accessor-D6mNnsWy.js","./assets-BNizZMOZ.js","./Promise-CZrWwByK.js","./jsonMap-DCC6W5ex.js","./writer-3zufXUNV.js","./Extent-B4rrMrqp.js","./Point-TlcsOcXV.js","./PortalItem-CaeKabGc.js","./persistableUrlUtils-Dx61-x4K.js","./jsonContext-CAJ7-auS.js","./portalItemUtils-C4O2jNL5.js","./projection-tSh-0UvX.js","./reactiveUtils-BFQ0BtrB.js","./shared-B3wH2qpO.js","./mathUtils-ClvKsMak.js","./Polyline-BQFeqYXi.js","./projectBuffer-iyGwL2dv.js","./geodesicConstants-kj1AtlGg.js","./saveAPIKeyUtils-BLpn6O2f.js","./saveUtils-BlgyRdsU.js"])))=>i.map(i=>d[i]);
import{_ as Qt}from"./index-BVncS3aY.js";import{e as r}from"./Evented-CXIxDjmW.js";import{k as kt}from"./PopupTemplate-D8mXPxzU.js";import{i as Se}from"./Clonable-cKbRam6-.js";import{a as C,y as o,b as v,N as Qe,n as we,R as $,c as I,M as Wt,K as Zt}from"./subclass-BR3PhgZG.js";import{S as Kt}from"./MultiOriginJSONSupport-CvjUw5hc.js";import{O as Ve,x as Xt,a as Yt}from"./Accessor-D6mNnsWy.js";import{r as T,o as M}from"./writer-3zufXUNV.js";import{f as ei}from"./Layer-CfUiPX3n.js";import{n as oe}from"./geometry-CnaxvJsv.js";import{d as ti}from"./Graphic-Bi5hWHps.js";import{N as S,e as ve,i as Ue,j as k,h as ii,a as ri,l as si,d as ni,n as mt,b as ai,p as oi,f as li,c as ui,B as pi,U as ci,L as mi,$ as di,t as yi}from"./ImageHistogramParameters-DneJuZmU.js";import{f as j,U as D,I as hi}from"./assets-BNizZMOZ.js";import{d as gi}from"./reactiveUtils-BFQ0BtrB.js";import{_ as A,f as se,aq as be,ap as ot,ay as lt,a8 as gt}from"./Point-TlcsOcXV.js";import{w as fi,p as wi,y as Ri,s as vi}from"./commonProperties-BTyJ6vjt.js";import{m as dt,g as bi,p as Si,d as xi}from"./multidimensionalUtils-BMbLhPO8.js";import{s as Ii}from"./pixelRangeUtils-DR2RxTkt.js";import{G as At,e as Vt,f as Fi,s as Di,A as Ti,n as ji,a as Mt,L as Pi,j as _t,P as Ni}from"./RasterSymbolizer-BzK6A2vQ.js";import{b as _i}from"./SizeVariable-Bq7jlw1r.js";import{y as Fe}from"./Field-poIiHWUc.js";import{Z as Oi}from"./FieldsIndex-DHql50vu.js";import{t as Ot}from"./imageBitmapUtils-6_PpAuCS.js";import{g as yt,s as Ci,l as $i}from"./dataUtils-BTw6iaAi.js";import{R as Ne}from"./normalizeUtils-CuTX3yb4.js";import{f as J,s as U,i as H}from"./utils-Blh5cXWv.js";import{p as te,y as ie}from"./jsonUtils-DtWlwXHP.js";import{n as Ai}from"./jsonMap-DCC6W5ex.js";import{w as He}from"./Extent-B4rrMrqp.js";import{j as Ke,u as Vi}from"./Polyline-BQFeqYXi.js";import{c as Tt}from"./TimeExtent-Dl-qaORu.js";import{o as Mi}from"./enumeration--HlxOQ_N.js";import{s as Ji,b as ht}from"./Query-BpMwiNVl.js";import{d as Jt}from"./FeatureSet-4rZsDUx9.js";import"./DataLayerSource-BX7Ap_tY.js";import{s as Ei}from"./executeQueryJSON-CYTAkBk5.js";import"./aaBoundingBox-BGxkJAW0.js";import"./mathUtils-ClvKsMak.js";import"./normalizeUtilsCommon-DNPu20r0.js";import"./pbf-CmaozfCN.js";import"./AttachmentInfo-DUBOwII6.js";import"./AttachmentQuery-Ccywtvr9.js";import{a as qi,s as Gi}from"./executeForIds-CXP6dmFt.js";import"./RelationshipQuery-DuLVs9A4.js";import"./TopFeaturesQuery-CoSK-G18.js";import{l as Li}from"./ArcGISService-aI6tC6k0.js";import{l as zi}from"./BlendLayer-DmvCcS5c.js";import{e as Ui}from"./CustomParametersMixin-BStBpako.js";import{b as Hi}from"./OperationalLayer-Bq6MAeyc.js";import{j as Bi}from"./PortalLayer-CX96aZTI.js";import{f as Qi}from"./RefreshableLayer-B26jSd3d.js";import{t as ki}from"./ScaleRangeLayer-CKYXLXxK.js";import{l as Wi}from"./TemporalLayer-DwHwsJsP.js";import{t as Zi}from"./versionUtils-BzPsp3a1.js";import{p as Ki}from"./popupUtils-D3OP9u3f.js";import{A as Ze}from"./interfaces-CL2NbQte.js";import"./fieldUtils-C5R42-PY.js";import"./intl-CArXn1et.js";import"./Promise-CZrWwByK.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./Portal-DCqdz-K4.js";import"./symbols-CfvYGR4J.js";import"./TextSymbol-zZq0BA1M.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./collectionUtils-Dm1icNvk.js";import"./workers-D8NOwm_V.js";import"./Queue-DpHko4Yk.js";import"./ClassBreaksRenderer-B2uJHW90.js";import"./UniqueValueRenderer-Q9ooDuxf.js";import"./diffUtils--7ofoPN-.js";import"./colorRamps-BBM5Timv.js";import"./ColorStop-DEfc5Idt.js";import"./jsonUtils-aUmUTP_F.js";import"./layerUtils-BzjQnEdj.js";import"./defaults-CIM29kXM.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-C7rrjuqd.js";import"./visualVariableUtils-CrTsYJ9f.js";import"./compilerUtils-BA04t1lN.js";import"./lengthUtils-vgIBtB6M.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./shared-B3wH2qpO.js";import"./utils-CvMr5svk.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./cimSymbolUtils-Ctf0ZrmH.js";import"./utils-D8D39sLt.js";import"./LRUCache-ju6LnIBZ.js";import"./MemCache-C6WUx-5V.js";import"./ClassBreaksDefinition-BpZNgsmK.js";import"./layerContainerType-C5CzMsLd.js";import"./ElevationInfo-jptbPjRY.js";import"./unitConversionUtils-BUA_O87q.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./colorUtils-D5nOabzP.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./fieldType-CIG5ey7e.js";import"./UnknownTimeZone-D0GlcniK.js";import"./utils-Bh7lx_TM.js";import"./timeUtils-DQR2jUPL.js";import"./FullTextSearch-BhJOgh_r.js";import"./query-DQxxoK17.js";import"./pbfQueryUtils-BxTeJmn3.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-DGW6qDy9.js";import"./projection-tSh-0UvX.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./arcgisLayerUrl-ETqee4Bd.js";import"./PortalItem-CaeKabGc.js";import"./portalItemUtils-C4O2jNL5.js";import"./TimeInterval-DtVUy51q.js";import"./TimeInfo-C84oEL3g.js";const Xi={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},Yi=new Set(["u1","u2","u4","u8","s8","u16","s16"]),er={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},tr=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Et(s){return tr.has(s.type)}function ft(s,i){var e;if(!s||!i)return C(s||i);const a=C(s);if(a.functionDefinition&&i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=void 0),qt(a.functionDefinition.arguments,i),a.rasterFunctionDefinition=a.functionDefinition.toJSON()}else((e=i.functionName)==null?void 0:e.toLowerCase())!=="none"&&(Gt(a.functionArguments).Raster=i);return a}function qt(s,i){for(const a in s)a.toLowerCase()==="raster"&&(s[a].type==="RasterFunctionVariable"?(s[a]=i.rasterFunctionDefinition,s[a].type="RasterFunctionTemplate"):s[a].type==="RasterFunctionTemplate"&&qt(s[a].arguments,i))}function ne(s){const i=C(Xi[s.functionName+"Function"]),a=s.functionArguments;for(const e in a)e.toLowerCase()==="raster"?(i.arguments[e]=ne(a[e]),i.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(i.arguments[e].value=pr(a[e]),i.arguments.ColorSchemeType.value=0):i.arguments[e].value=a[e];return i}function ir(s,i){switch(i=i||{},s.type){case"raster-stretch":return nr(s,i);case"class-breaks":return ar(s,i);case"unique-value":return or(s,i);case"raster-colormap":return lr(s,i);case"vector-field":return rr(s,i);case"raster-shaded-relief":return sr(s,i);case"flow":throw new Error("Unsupported rendering rule.")}}function Gt(s){const i=(s==null?void 0:s.Raster)??(s==null?void 0:s.raster);return i&&i.declaredClass==="esri.layers.support.RasterFunction"?Gt(i.functionArguments):s}const Ee={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function rr(s,i){const a=new S;a.functionName="VectorFieldRenderer";const{dataType:e,bandNames:t}=i,n=e==="vector-uv";let l,u;if(t&&t.length===2){const w=t.map(R=>R.toLowerCase());l=w.indexOf("magnitude"),u=w.indexOf("direction")}l!==-1&&l!==null||(l=0,u=1);const p=s.rotationType==="arithmetic"?1:2,m=s.flowRepresentation==="flow-from"?0:1,c=s.visualVariables?s.visualVariables.find(w=>w.field==="Magnitude"):new _i,d={magnitudeBandID:l,directionBandID:u,isUVComponents:n,referenceSystem:p,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:er[s.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};a.functionArguments=d;const h=ne(a);return i.convertToRFT?S.fromJSON({rasterFunctionDefinition:h}):a}function sr(s,i){const a=i.convertToRFT;if(i.dataType!=="elevation"&&(i.dataType!=="generic"||i.bandCount!==1||i.pixelType!=="s16"&&i.pixelType!=="s32"&&i.pixelType!=="f32"&&i.pixelType!=="f64"))return new S;const e=new S;e.functionName="Hillshade";const t=s.hillshadeType==="traditional"?0:1,n=s.scalingType==="none"?1:3,l={HillshadeType:t,SlopeType:n,ZFactor:s.zFactor};return t===0&&(l.Azimuth=s.azimuth,l.Altitude=s.altitude),n===3&&(l.PSPower=s.pixelSizePower,l.PSZFactor=s.pixelSizeFactor),e.functionArguments=l,e.variableName="Raster",s.colorRamp&&(e.functionName="ShadedRelief",a?l.ColorRamp=At(s.colorRamp):l.Colormap=Vt(s.colorRamp)),a?new S({rasterFunctionDefinition:ne(e)}):e}function nr(s,i){var u;const a=i.convertToRFT,e=new S;e.functionName="Stretch";const t=Ee[Fi.toJSON(s.stretchType)],n="u8",l={StretchType:t,Statistics:ur(s.statistics??[]),DRA:s.dynamicRangeAdjustment,UseGamma:s.useGamma,Gamma:s.gamma,ComputeGamma:s.computeGamma};if(s.outputMin!=null&&(l.Min=s.outputMin),s.outputMax!=null&&(l.Max=s.outputMax),t===Ee.standardDeviation?(l.NumberOfStandardDeviations=s.numberOfStandardDeviations,e.outputPixelType=n):t===Ee.percentClip?(l.MinPercent=s.minPercent,l.MaxPercent=s.maxPercent,e.outputPixelType=n):t===Ee.minMax?e.outputPixelType=n:t===Ee.sigmoid&&(l.SigmoidStrengthLevel=s.sigmoidStrengthLevel),e.functionArguments=l,e.variableName="Raster",s.colorRamp){const p=s.colorRamp,m=new S;if(a)m.functionArguments={ColorRamp:At(p)};else{const c=Di(p,!0);if(c)m.functionArguments={colorRampName:c};else if(!i.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const d=s.colorRamp.toJSON();d.type==="algorithmic"?d.algorithm=d.algorithm||"esriCIELabAlgorithm":d.type==="multipart"&&((u=d.colorRamps)!=null&&u.length)&&d.colorRamps.forEach(h=>h.algorithm=h.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:d}}else m.functionArguments={Colormap:Vt(p)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=e,a?new S({rasterFunctionDefinition:ne(m)}):m}return a?new S({rasterFunctionDefinition:ne(e)}):e}function ar(s,i){const a=[],e=[],t=[],n=[],{pixelType:u,rasterAttributeTable:p}=i,m=p==null?null:p.features,c=Lt(p);if(c&&m&&Array.isArray(m)&&s.classBreakInfos){s.classBreakInfos.forEach((y,g)=>{var L;const b=(L=y.symbol)==null?void 0:L.color;let V;b!=null&&b.a&&y.minValue!=null&&y.maxValue!=null&&m.forEach(E=>{y.minValue!=null&&y.maxValue!=null&&(V=E.attributes[s.field],(V>=y.minValue&&V<y.maxValue||g===s.classBreakInfos.length-1&&V>=y.minValue)&&n.push([E.attributes[c],b.r,b.g,b.b]))})});const R=u?ut(n,u):n,f=new S;return f.functionName="Colormap",f.functionArguments={},f.functionArguments.Colormap=R,f.variableName="Raster",i.convertToRFT?new S({rasterFunctionDefinition:ne(f)}):f}s.classBreakInfos.forEach((R,f)=>{if(R.minValue==null||R.maxValue==null)return;const y=R.symbol&&R.symbol.color;y!=null&&y.a?(f===0?a.push(R.minValue,R.maxValue+1e-4):a.push(R.minValue+1e-4,R.maxValue+1e-4),e.push(f),n.push([f,y.r,y.g,y.b])):t.push(R.minValue,R.maxValue)});const d=u?ut(n,u):n,h=new S;h.functionName="Remap",h.functionArguments={InputRanges:a,OutputValues:e,NoDataRanges:t},h.variableName="Raster";const w=new S;return w.functionName="Colormap",w.functionArguments={Colormap:d,Raster:h},i.convertToRFT?new S({rasterFunctionDefinition:ne(w)}):w}function ut(s,i){const a=Yi.has(i)?Ii(i):null;return a&&s.push([Math.floor(a[0]-1),0,0,0],[Math.ceil(a[1]+1),0,0,0]),s}function Lt(s){if(s==null)return;const{fields:i}=s,a=i==null?void 0:i.find(e=>(e==null?void 0:e.name)&&e.name.toLowerCase()==="value");return a==null?void 0:a.name}function or(s,i){var d,h;const a=[],{pixelType:e,rasterAttributeTable:t}=i,n=t==null?null:t.features,l=Lt(t),u=(h=(d=s.defaultSymbol)==null?void 0:d.color)==null?void 0:h.toRgb(),p=s.uniqueValueInfos;if(p)if(n){if(l){const w=new Map;p.forEach(f=>{const y=f.value,g=Ct(f);y!=null&&(g!=null&&g.a)&&w.set(String(y),g.toRgb())});const R=s.field;R&&n.forEach(({attributes:f})=>{const y=String(f[R]),g=f[l],b=w.get(y);b?a.push([g,...b]):u&&a.push([g,...u])})}}else for(let w=0;w<p.length;w++){const R=p[w],f=Ct(R),y=+R.value;if(f!=null&&f.a){if(isNaN(y))return null;a.push([y,f.r,f.g,f.b])}}const m=e?ut(a,e):a,c=new S;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",i.convertToRFT?new S({rasterFunctionDefinition:ne(c)}):c}function Ct(s){var i,a,e,t,n;return((i=s.symbol)==null?void 0:i.type)==="polygon-3d"?(t=(e=(a=s.symbol.symbolLayers)==null?void 0:a.find(l=>l.type==="fill"))==null?void 0:e.material)==null?void 0:t.color:(n=s.symbol)==null?void 0:n.color}function lr(s,i){const a=s.extractColormap();if(!a||a.length===0)return null;const{pixelType:e}=i,t=e?ut(a,e):a,n=new S;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=t,i.convertToRFT?new S({rasterFunctionDefinition:ne(n)}):n}function ur(s){const i=[];return s==null||s.forEach(a=>{const e=a;if(Array.isArray(e))i.push(e);else{if(e.min==null||e.max==null)return;const t=[e.min,e.max,e.avg||0,e.stddev||0];i.push(t)}}),i}function pr(s){const i=[],a=[];return s.forEach(e=>{i.push(e[0]),a.push(Ti([...e.slice(1),255]))}),{type:"RasterColormap",values:i,colors:a}}let _=class extends j{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(i,a,e){this.layer.version<10.3||(a[e]=i)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(i,a,e){this.format&&this.format.toLowerCase().includes("jpg")&&i!=null&&(a[e]=i)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(i,a,e){this.format==="lerc"&&i!=null&&(a[e]=i)}get format(){var i;return((i=this.layer.renderer)==null?void 0:i.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(i,a,e){this.format==="lerc"&&this.layer.version>=10.5&&(a[e]=i)}get version(){const i=this.layer;return i.commitProperty("bandIds"),i.commitProperty("format"),i.commitProperty("compressionQuality"),i.commitProperty("compressionTolerance"),i.commitProperty("interpolation"),i.commitProperty("noData"),i.commitProperty("noDataInterpretation"),i.commitProperty("mosaicRule"),i.commitProperty("rasterFunction"),i.commitProperty("adjustAspectRatio"),i.commitProperty("pixelFilter"),i.commitProperty("definitionExpression"),i.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(i){this._set("version",i)}get mosaicRule(){const i=this.layer;let a=i.mosaicRule;const e=i.definitionExpression;return a?e&&e!==a.where&&(a=a.clone(),a.where=e):e&&(a=new k({where:e})),a}get rasterFunction(){var l,u;const i=this.layer;let{rasterFunction:a}=i;const e=i.pixelFilter,t=!i.format||i.format.includes("jpg")||i.format.includes("png");a=this._addResampleRasterFunction(a);const n=(l=i.multidimensionalSubset)==null?void 0:l.areaOfInterest;return n&&(a=cr(a,n)),t&&!e&&((u=i.renderer)==null?void 0:u.type)!=="vector-field"&&(a=this.combineRendererWithRenderingRule(a)),a}combineRendererWithRenderingRule(i){const a=this.layer,{rasterInfo:e,renderer:t}=a;return i=i||a.rasterFunction,!t||!Et(t)?i:ft(ir(t,{rasterAttributeTable:e.attributeTable,pixelType:e.pixelType,dataType:e.dataType,bandNames:e.bandInfos.map(({name:n})=>n),convertColorRampToColormap:a.version<10.6,convertToRFT:!!(i!=null&&i.rasterFunctionDefinition),bandCount:e.bandCount}),i)}_addResampleRasterFunction(i){var n;if(((n=this.layer.renderer)==null?void 0:n.type)!=="vector-field"||(i==null?void 0:i.functionName)==="Resample")return i;const a=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,e=this.layer.serviceRasterInfo.pixelSize;let t=new S({functionName:"Resample",functionArguments:{ResamplingType:a,InputCellSize:e}});return t=i!=null&&i.rasterFunctionDefinition?new S({rasterFunctionDefinition:ne(t)}):t,ft(t,i)}};function cr(s,i){const a=new S({functionName:"Clip",functionArguments:{ClippingGeometry:i.toJSON(),ClippingType:1}});return ft(a,s)}r([o()],_.prototype,"layer",void 0),r([o({json:{write:!0}})],_.prototype,"adjustAspectRatio",null),r([T("adjustAspectRatio")],_.prototype,"writeAdjustAspectRatio",null),r([o({json:{write:!0}})],_.prototype,"bandIds",null),r([o({json:{write:!0}})],_.prototype,"compression",void 0),r([o({json:{write:!0}})],_.prototype,"compressionQuality",null),r([T("compressionQuality")],_.prototype,"writeCompressionQuality",null),r([o({json:{write:!0}})],_.prototype,"compressionTolerance",null),r([T("compressionTolerance")],_.prototype,"writeCompressionTolerance",null),r([o({json:{write:!0}})],_.prototype,"format",null),r([o({type:String,json:{read:{reader:ve.read},write:{writer:ve.write}}})],_.prototype,"interpolation",null),r([o({json:{write:!0}})],_.prototype,"noData",null),r([o({type:String,json:{read:{reader:Ue.read},write:{writer:Ue.write}}})],_.prototype,"noDataInterpretation",null),r([o({json:{write:!0}})],_.prototype,"pixelType",void 0),r([o({json:{write:!0}})],_.prototype,"lercVersion",void 0),r([T("lercVersion")],_.prototype,"writeLercVersion",null),r([o({type:Number})],_.prototype,"version",null),r([o({json:{write:!0}})],_.prototype,"mosaicRule",null),r([o({json:{write:!0,name:"renderingRule"}})],_.prototype,"rasterFunction",null),_=r([v("esri.layers.support.ExportImageServiceParameters")],_);let he=class extends Se(j){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};r([o({type:A,json:{read:!0}})],he.prototype,"fromGeometry",void 0),r([o({type:A,json:{read:!0,write:!0}})],he.prototype,"toGeometry",void 0),r([o({json:{write:!0}})],he.prototype,"objectIds",void 0),r([o({type:String,json:{write:!0}})],he.prototype,"where",void 0),r([o({type:Number,json:{write:!0}})],he.prototype,"maxCount",void 0),he=r([v("esri.rest.support.FindImagesParameters")],he);const mr=he,zt=s=>{let i=class extends s{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return r([o({json:{write:!0}})],i.prototype,"make",void 0),r([o({json:{write:!0}})],i.prototype,"model",void 0),r([o({json:{write:!0}})],i.prototype,"focalLength",void 0),r([o({json:{write:!0}})],i.prototype,"pixelSize",void 0),r([o({json:{write:!0}})],i.prototype,"rows",void 0),r([o({json:{write:!0}})],i.prototype,"cols",void 0),i=r([v("esri.rest.support.CameraInfoMixin")],i),i};let K=class extends zt(j){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(i,a){a.acquisitionDate=i==null?void 0:i.getTime()}};r([o({json:{write:!0}})],K.prototype,"id",void 0),r([o({json:{name:"uri",write:!0}})],K.prototype,"referenceUri",void 0),r([o({type:Date,json:{write:!0}})],K.prototype,"acquisitionDate",void 0),r([T("acquisitionDate")],K.prototype,"writeAcquisitionDate",null),r([o({json:{write:!0}})],K.prototype,"cameraID",void 0),r([o({type:A,json:{write:!0}})],K.prototype,"center",void 0),r([o({type:A,json:{write:!0}})],K.prototype,"perspectiveCenter",void 0),r([o({json:{write:!0}})],K.prototype,"orientation",void 0),K=r([v("esri.rest.support.ImageInspectionInfo")],K);const dr=K;let Xe=class extends j{constructor(){super(...arguments),this.images=null}};r([o({type:[dr],json:{write:!0}})],Xe.prototype,"images",void 0),Xe=r([v("esri.rest.support.FindImagesResult")],Xe);const yr=Xe;var wt;let De=wt=class extends j{constructor(s){super(s),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new wt(C({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};r([o({type:[String],json:{name:"angleName",write:!0}})],De.prototype,"angleNames",void 0),r([o({type:A,json:{write:!0}})],De.prototype,"point",void 0),r([o({type:se,json:{write:!0}})],De.prototype,"spatialReference",void 0),r([o({type:Qe,json:{write:!0}})],De.prototype,"rasterId",void 0),De=wt=r([v("esri.rest.support.ImageAngleParameters")],De);const hr=De;let _e=class extends j{constructor(i){super(i),this.north=null,this.up=null,this.spatialReference=null}};r([o({type:Number,json:{write:!0}})],_e.prototype,"north",void 0),r([o({type:Number,json:{write:!0}})],_e.prototype,"up",void 0),r([o({type:se,json:{write:!0}})],_e.prototype,"spatialReference",void 0),_e=r([v("esri.rest.support.ImageAngleResult")],_e);const gr=_e,W=new Ai({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ee=class extends j{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};r([o()],ee.prototype,"type",void 0),r([o({type:W.apiValues,json:{read:W.read,write:W.write}})],ee.prototype,"measureOperation",void 0),r([o({type:k,json:{write:!0}})],ee.prototype,"mosaicRule",void 0),r([o({type:A,json:{write:!0}})],ee.prototype,"pixelSize",void 0),r([o({json:{write:!0}})],ee.prototype,"raster",void 0),ee=r([v("esri.rest.support.BaseImageMeasureParameters")],ee);var Rt;let ue=Rt=class extends ee{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=s.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new Rt(C({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({types:oe,json:{name:"fromGeometry",read:!0,write:!0}})],ue.prototype,"geometry",void 0),r([T("geometry")],ue.prototype,"writeGeometry",null),r([o({type:W.apiValues,json:{write:W.write}})],ue.prototype,"measureOperation",null),r([o({json:{read:!0}})],ue.prototype,"is3D",void 0),r([o({type:String,json:{read:be.read,write:be.write}})],ue.prototype,"linearUnit",void 0),r([o({type:String,json:{read:ot.read,write:ot.write}})],ue.prototype,"areaUnit",void 0),ue=Rt=r([v("esri.rest.support.ImageAreaParameters")],ue);const fr=ue;let fe=class extends j{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};r([o({type:Number,json:{read:!0,write:!0}})],fe.prototype,"value",void 0),r([o({type:String,json:{read:!0,write:!0}})],fe.prototype,"displayValue",void 0),r([o({type:Number,json:{read:!0,write:!0}})],fe.prototype,"uncertainty",void 0),fe=r([v("esri.rest.support.BaseImageMeasureResult.BaseImageMeasureResultValue")],fe);let Me=class extends fe{constructor(){super(...arguments),this.unit=null}};r([o({type:String,json:{read:be.read,write:be.write}})],Me.prototype,"unit",void 0),Me=r([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultLengthValue")],Me);let Ye=class extends fe{constructor(){super(...arguments),this.unit=null}};r([o({type:String,json:{read:ot.read,write:ot.write}})],Ye.prototype,"unit",void 0),Ye=r([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAreaValue")],Ye);let Be=class extends fe{constructor(){super(...arguments),this.unit=null}};r([o({type:String,json:{read:lt.read,write:lt.write}})],Be.prototype,"unit",void 0),Be=r([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAngleValue")],Be);let Re=class extends j{constructor(){super(...arguments),this.name=null,this.sensorName=null}};r([o({type:String,json:{read:!0,write:!0}})],Re.prototype,"name",void 0),r([o({type:String,json:{read:!0,write:!0}})],Re.prototype,"sensorName",void 0),Re=r([v("esri.rest.support.BaseImageMeasureResult")],Re);let qe=class extends Re{constructor(){super(...arguments),this.area=null,this.perimeter=null}};r([o({type:Ye,json:{read:!0,write:!0}})],qe.prototype,"area",void 0),r([o({type:Me,json:{read:!0,write:!0}})],qe.prototype,"perimeter",void 0),qe=r([v("esri.rest.support.ImageAreaResult")],qe);const wr=qe;let et=class extends Se(j){constructor(){super(...arguments),this.outSpatialReference=null}};r([o({type:se,json:{name:"outSR",write:!0}})],et.prototype,"outSpatialReference",void 0),et=r([v("esri.rest.support.ImageBoundaryParameters")],et);const Rr=et;let Oe=class extends j{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(i,a){return i==null?null:i.rings?Ke.fromJSON(i):He.fromJSON(i)}};r([o({type:Number,json:{write:!0}})],Oe.prototype,"area",void 0),r([o({json:{name:"shape",write:!0}})],Oe.prototype,"geometry",void 0),r([M("geometry")],Oe.prototype,"readGeometry",null),Oe=r([v("esri.rest.support.ImageBoundaryResult")],Oe);const vr=Oe;var vt;let re=vt=class extends ee{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=s.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new vt(C({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({type:A,json:{read:!0,write:!0}})],re.prototype,"fromGeometry",void 0),r([T("fromGeometry")],re.prototype,"writeFromGeometry",null),r([o({type:A,json:{read:!0,write:!0}})],re.prototype,"toGeometry",void 0),r([o({type:W.apiValues,json:{write:W.write}})],re.prototype,"measureOperation",null),r([o({json:{read:!0}})],re.prototype,"is3D",void 0),r([o({type:String,json:{read:be.read,write:be.write}})],re.prototype,"linearUnit",void 0),r([o({type:String,json:{read:lt.read,write:lt.write}})],re.prototype,"angularUnit",void 0),re=vt=r([v("esri.rest.support.ImageDistanceParameters")],re);const br=re;let Ce=class extends Re{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};r([o({type:Me,json:{read:!0,write:!0}})],Ce.prototype,"distance",void 0),r([o({type:Be,json:{read:!0,write:!0}})],Ce.prototype,"azimuthAngle",void 0),r([o({type:Be,json:{read:!0,write:!0}})],Ce.prototype,"elevationAngle",void 0),Ce=r([v("esri.rest.support.ImageDistanceResult")],Ce);const Sr=Ce;let pe=class extends Se(j){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(i,a,e){i!=null&&(a.geometryType=te(i),a[e]=JSON.stringify(i.toJSON()))}};r([o({types:oe,json:{read:ie,write:!0}})],pe.prototype,"geometry",void 0),r([T("geometry")],pe.prototype,"writeGeometry",null),r([o({json:{write:!0}})],pe.prototype,"objectIds",void 0),r([Mi(Ji,{ignoreUnknown:!1,name:"spatialRel"})],pe.prototype,"spatialRelationship",void 0),r([o({type:Tt,json:{name:"time",write:!0}})],pe.prototype,"timeExtent",void 0),r([o({type:String,json:{write:!0}})],pe.prototype,"where",void 0),pe=r([v("esri.rest.support.ImageGPSInfoParameters")],pe);const xr=pe;let tt=class extends zt(j){constructor(){super(...arguments),this.id=null}};r([o({json:{write:!0}})],tt.prototype,"id",void 0),tt=r([v("esri.rest.support.CameraInfo")],tt);const Ir=tt;let X=class extends j{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(i,a){a.acquisitionDate=i==null?void 0:i.getTime()}};r([o({json:{write:!0}})],X.prototype,"id",void 0),r([o({json:{write:!0}})],X.prototype,"name",void 0),r([o({type:Date,json:{write:!0}})],X.prototype,"acquisitionDate",void 0),r([T("acquisitionDate")],X.prototype,"writeAcquisitionDate",null),r([o({json:{write:!0}})],X.prototype,"cameraID",void 0),r([o({type:A,json:{write:!0}})],X.prototype,"center",void 0),r([o({json:{write:!0}})],X.prototype,"gps",void 0),r([o({json:{write:!0}})],X.prototype,"orientation",void 0),X=r([v("esri.rest.support.ImageGPSInfo")],X);const Fr=X;let Ge=class extends j{constructor(){super(...arguments),this.images=null,this.cameras=null}};r([o({type:[Fr],json:{write:!0}})],Ge.prototype,"images",void 0),r([o({type:[Ir],json:{write:!0}})],Ge.prototype,"cameras",void 0),Ge=r([v("esri.rest.support.ImageGPSInfoResult")],Ge);const Dr=Ge;var bt;let ce=bt=class extends ee{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=s.toJSON())}get measureOperation(){return this.operationType}clone(){return new bt(C({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({type:A,json:{read:!0}})],ce.prototype,"fromGeometry",void 0),r([T("fromGeometry")],ce.prototype,"writeFromGeometry",null),r([o({type:A,json:{read:!0,write:!0}})],ce.prototype,"toGeometry",void 0),r([o({type:W.apiValues,json:{write:W.write}})],ce.prototype,"measureOperation",null),r([o({json:{read:!0}})],ce.prototype,"operationType",void 0),r([o({type:String,json:{read:be.read,write:be.write}})],ce.prototype,"linearUnit",void 0),ce=bt=r([v("esri.rest.support.ImageHeightParameters")],ce);const Tr=ce;let it=class extends Re{constructor(){super(...arguments),this.height=null}};r([o({type:Me,json:{read:!0,write:!0}})],it.prototype,"height",void 0),it=r([v("esri.rest.support.ImageHeightResult")],it);const jr=it;var St;let N=St=class extends j{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=JSON.stringify(s.toJSON()))}set mosaicRule(s){let i=s;i!=null&&i.mosaicMethod&&(i=k.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}writeMosaicRule(s,i,a){s!=null&&(i[a]=JSON.stringify(s.toJSON()))}get renderingRule(){return Ve(we.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(s){Ve(we.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",s)}get renderingRules(){return Ve(we.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._get("rasterFunctions")}set renderingRules(s){Ve(we.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._set("rasterFunctions",s)}set rasterFunction(s){let i=s;i!=null&&i.rasterFunction&&(i=S.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("rasterFunction",i)}writeRasterFunction(s,i,a){s!=null&&(i[a]=JSON.stringify(s.toJSON())),s.rasterFunctionDefinition&&(i[a]=JSON.stringify(s.rasterFunctionDefinition))}writeRasterFunctions(s,i,a){s!=null&&(i[a]=JSON.stringify(s.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(s,i,a){s!=null&&(i[a]=JSON.stringify(s))}writeTimeExtent(s,i,a){if(s!=null){const e=s.start!=null?s.start.getTime():null,t=s.end!=null?s.end.getTime():null;i[a]=e!=null?t!=null?`${e},${t}`:`${e}`:null}}clone(){return new St(C({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};r([o({json:{write:!0}})],N.prototype,"geometry",void 0),r([T("geometry")],N.prototype,"writeGeometry",null),r([o({type:k,json:{write:!0}})],N.prototype,"mosaicRule",null),r([T("mosaicRule")],N.prototype,"writeMosaicRule",null),r([o({type:S})],N.prototype,"renderingRule",null),r([o({type:[S]})],N.prototype,"renderingRules",null),r([o({type:S,json:{write:!0,name:"renderingRule"}})],N.prototype,"rasterFunction",null),r([T("rasterFunction")],N.prototype,"writeRasterFunction",null),r([o({type:[S],json:{write:!0,name:"renderingRules"}})],N.prototype,"rasterFunctions",void 0),r([T("rasterFunctions")],N.prototype,"writeRasterFunctions",null),r([o({type:A,json:{write:!0}})],N.prototype,"pixelSize",void 0),r([T("pixelSize")],N.prototype,"writePixelSize",null),r([o({type:Boolean,json:{write:!0}})],N.prototype,"returnGeometry",void 0),r([o({type:Boolean,json:{write:!0}})],N.prototype,"returnCatalogItems",void 0),r([o({type:Boolean,json:{write:!0}})],N.prototype,"returnPixelValues",void 0),r([o({type:Number,json:{write:!0}})],N.prototype,"maxItemCount",void 0),r([o({type:Tt,json:{write:{target:"time"}}})],N.prototype,"timeExtent",void 0),r([T("timeExtent")],N.prototype,"writeTimeExtent",null),r([o({json:{write:!0}})],N.prototype,"raster",void 0),r([o({json:{write:!0}})],N.prototype,"viewId",void 0),r([o({type:Boolean,json:{write:!0}})],N.prototype,"processAsMultidimensional",void 0),N=St=r([v("esri.rest.support.ImageIdentifyParameters")],N);const Ut=N;let Y=class extends j{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};r([o({json:{write:!0}})],Y.prototype,"catalogItemVisibilities",void 0),r([o({type:Jt,json:{write:!0}})],Y.prototype,"catalogItems",void 0),r([o({type:A,json:{write:!0}})],Y.prototype,"location",void 0),r([o({json:{write:!0}})],Y.prototype,"name",void 0),r([o({json:{write:!0}})],Y.prototype,"objectId",void 0),r([o({json:{write:!0}})],Y.prototype,"processedValues",void 0),r([o({json:{write:!0}})],Y.prototype,"properties",void 0),r([o({json:{write:!0}})],Y.prototype,"value",void 0),Y=r([v("esri.rest.support.ImageIdentifyResult")],Y);const Pr=Y;var xt;let $e=xt=class extends j{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(s,i,a){i.geometries={geometryType:"esriGeometryPoint",geometries:s.map(e=>e.toJSON())}}clone(){var s;return new xt({geometries:((s=this.geometries)==null?void 0:s.map(i=>i.clone()))??[],rasterId:this.rasterId})}};r([o({type:[A],json:{write:!0}})],$e.prototype,"geometries",void 0),r([T("geometries")],$e.prototype,"writeGeometry",null),r([o({type:Qe,json:{write:!0}})],$e.prototype,"rasterId",void 0),$e=xt=r([v("esri.rest.support.ImagePixelLocationParameters")],$e);const Nr=$e;let rt=class extends j{constructor(){super(...arguments),this.geometries=null}};r([o({json:{write:!0}})],rt.prototype,"geometries",void 0),rt=r([v("esri.rest.support.ImagePixelLocationResult")],rt);const _r=rt;var It;let Te=It=class extends ee{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=s.toJSON())}get measureOperation(){const{is3D:s,geometry:i}=this;return i.type==="point"?s?"point-3D":"point":s?"centroid-3D":"centroid"}clone(){return new It(C({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({types:oe,json:{name:"fromGeometry",read:ie}})],Te.prototype,"geometry",void 0),r([T("geometry")],Te.prototype,"writeGeometry",null),r([o({type:W.apiValues,json:{read:W.read,write:W.write}})],Te.prototype,"measureOperation",null),r([o({json:{read:!0}})],Te.prototype,"is3D",void 0),Te=It=r([v("esri.rest.support.ImagePointParameters")],Te);const Or=Te;let st=class extends Re{constructor(){super(...arguments),this.point=null}};r([o({type:A,json:{name:"point.value",read:!0,write:!0}})],st.prototype,"point",void 0),st=r([v("esri.rest.support.ImagePointResult")],st);const Cr=st;var Ft;let G=Ft=class extends j{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=s.toJSON())}set locations(s){if(s!=null&&s.length){const i=new Vi({spatialReference:s[0].spatialReference,points:s.map(({x:a,y:e})=>[a,e])});this._set("locations",s),this.geometry=i}}clone(){return new Ft(C({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};r([o({types:oe,json:{read:ie}})],G.prototype,"geometry",void 0),r([T("geometry")],G.prototype,"writeGeometry",null),r([o()],G.prototype,"locations",null),r([o({type:String,json:{type:ve.jsonValues,read:ve.read,write:ve.write}})],G.prototype,"interpolation",void 0),r([o({type:k,json:{write:!0}})],G.prototype,"mosaicRule",void 0),r([o({type:[String],json:{write:!0}})],G.prototype,"outFields",void 0),r([o({type:A,json:{write:!0}})],G.prototype,"pixelSize",void 0),r([o({type:String,json:{write:!0}})],G.prototype,"raster",void 0),r([o({type:Boolean,json:{write:!0}})],G.prototype,"returnFirstValueOnly",void 0),r([o({type:Number,json:{write:!0}})],G.prototype,"sampleDistance",void 0),r([o({type:Number,json:{write:!0}})],G.prototype,"sampleCount",void 0),r([o({type:Number,json:{write:!0}})],G.prototype,"sliceId",void 0),r([o({type:Tt,json:{read:{source:"time"},write:{target:"time"}}})],G.prototype,"timeExtent",void 0),G=Ft=r([v("esri.rest.support.ImageSampleParameters")],G);const $r=G;let me=class extends j{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};r([o({json:{write:!0}})],me.prototype,"attributes",void 0),r([o({type:A,json:{write:!0}})],me.prototype,"location",void 0),r([o({json:{write:!0}})],me.prototype,"locationId",void 0),r([o({json:{write:!0}})],me.prototype,"rasterId",void 0),r([o({json:{write:!0}})],me.prototype,"resolution",void 0),r([o({json:{write:!0}})],me.prototype,"pixelValue",void 0),me=r([v("esri.rest.support.ImageSample")],me);const Ar=me;let nt=class extends j{constructor(){super(...arguments),this.samples=null}};r([o({type:[Ar],json:{write:!0}})],nt.prototype,"samples",void 0),nt=r([v("esri.rest.support.ImageSampleResult")],nt);const Vr=nt;let je=class extends Se(j){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(i,a,e){a.geometries=i!=null&&i.length?{geometryType:te(i[0]),geometries:i.map(t=>({...t.toJSON(),spatialReference:void 0}))}:null}};r([o({types:[oe]})],je.prototype,"geometries",void 0),r([T("geometries")],je.prototype,"writeGeometries",null),r([o({type:[Qe],json:{write:!0}})],je.prototype,"rasterIds",void 0),r([o({type:se,json:{name:"outSR",write:!0}})],je.prototype,"outSpatialReference",void 0),je=r([v("esri.rest.support.ImageToMapMultirayParameters")],je);const Mr=je;let de=class extends Se(j){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(i,a,e){i!=null&&(a.geometryType=te(i),a[e]={...i.toJSON(),spatialReference:void 0})}};r([o({types:oe,json:{read:ie,write:!0}})],de.prototype,"geometry",void 0),r([T("geometry")],de.prototype,"writeGeometry",null),r([o({json:{write:!0}})],de.prototype,"rasterId",void 0),r([o({type:se,json:{name:"outSR",write:!0}})],de.prototype,"outSpatialReference",void 0),r([o({json:{name:"options.DOff",write:!0}})],de.prototype,"depthOffset",void 0),r([o({json:{name:"options.Adjust",write:!0}})],de.prototype,"adjust",void 0),de=r([v("esri.rest.support.ImageToMapParameters")],de);const Jr=de;let Le=class extends Se(j){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};r([o({type:String,json:{name:"uri",write:!0}})],Le.prototype,"referenceUri",void 0),r([o({type:Number,json:{write:!0}})],Le.prototype,"rasterId",void 0),Le=r([v("esri.rest.support.ImageUrlParameters")],Le);const Er=Le;let at=class extends j{constructor(){super(...arguments),this.url=null}};r([o({json:{name:"imageURL",write:!0}})],at.prototype,"url",void 0),at=r([v("esri.rest.support.ImageUrlResult")],at);const qr=at;let Pe=class extends Se(j){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=JSON.stringify(s))}};r([o({types:oe,json:{read:ie,write:!0}})],Pe.prototype,"geometry",void 0),r([T("geometry")],Pe.prototype,"writeGeometry",null),r([o({json:{write:!0}})],Pe.prototype,"rasterId",void 0),r([o({json:{name:"options.VisibleOnly",write:!0}})],Pe.prototype,"visibleOnly",void 0),Pe=r([v("esri.rest.support.MapToImageParameters")],Pe);const Gr=Pe;let ge=class extends j{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(i,a){return i.spatialReference||(i={...i,spatialReference:a.Shape.spatialReference}),A.fromJSON(i)}};r([o({types:oe,json:{name:"Shape",read:ie,write:!0}})],ge.prototype,"geometry",void 0),r([o({json:{name:"Length",write:!0}})],ge.prototype,"length",void 0),r([o({json:{name:"Area",write:!0}})],ge.prototype,"area",void 0),r([o({json:{name:"Center",write:!0}})],ge.prototype,"center",void 0),r([M("center")],ge.prototype,"readCenter",null),ge=r([v("esri.rest.support.MeasureAreaFromImageResult")],ge);const Lr=ge;var Dt;let Ae=Dt=class extends j{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]={...s.toJSON(),spatialReference:void 0})}clone(){const s=C({geometry:this.geometry,rasterId:this.rasterId});return new Dt(s)}};r([o({types:oe,json:{name:"fromGeometry",read:ie,write:!0}})],Ae.prototype,"geometry",void 0),r([T("geometry")],Ae.prototype,"writeGeometry",null),r([o({json:{write:!0}})],Ae.prototype,"rasterId",void 0),Ae=Dt=r([v("esri.rest.support.MeasureFromImageParameters")],Ae);const zr=Ae;let ze=class extends j{constructor(){super(...arguments),this.geometry=null,this.length=null}};r([o({types:oe,json:{name:"Shape",read:ie,write:!0}})],ze.prototype,"geometry",void 0),r([o({json:{name:"Length",write:!0}})],ze.prototype,"length",void 0),ze=r([v("esri.rest.support.MeasureLengthFromImageResult")],ze);const Ur=ze;function jt(s){const i=s==null?void 0:s.time;if(i&&(i.start!=null||i.end!=null)){const a=[];i.start!=null&&a.push(i.start),i.end==null||a.includes(i.end)||a.push(i.end),s.time=a.join(",")}}async function Ht(s,i,a){i=$(ii,i);const e=J(s),t=i.geometry?[i.geometry]:[],n=await Ne(t),l=i.toJSON();jt(l);const u=n==null?void 0:n[0];u!=null&&(l.geometry=ae(u));const p=U({...e.query,f:"json",...l});return H(p,a)}async function Hr(s,i,a){var p,m,c;const e=(i=$(hr,i)).toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),(m=(p=i==null?void 0:i.point)==null?void 0:p.spatialReference)!=null&&m.imageCoordinateSystem&&(e.point.spatialReference=ct(i.point.spatialReference)),(c=i==null?void 0:i.spatialReference)!=null&&c.imageCoordinateSystem&&(e.spatialReference=Je(i.spatialReference));const t=J(s),n=U({...t.query,f:"json",...e}),l=H(n,a),{data:u}=await D(`${t.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new se({wkid:0,imageCoordinateSystem:u.spatialReference}):se.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new gr(u)}async function Br(s,i,a){var m;const e=(i=$(Nr,i)).toJSON(),{geometries:t}=i;if(t)for(let c=0;c<t.length;c++)(m=t[c].spatialReference)!=null&&m.imageCoordinateSystem&&(e.geometries.geometries[c].spatialReference=ct(t[c].spatialReference));const n=J(s),l=U({...n.query,f:"json",...e}),u=H(l,a),{data:p}=await D(`${n.path}/computePixelLocation`,u);return _r.fromJSON(p)}async function Qr(s,i,a){const e=await Ht(s,i,a),t=J(s),{data:n}=await D(`${t.path}/computeStatisticsHistograms`,e),{statistics:l}=n;return l!=null&&l.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:n.histograms}}async function kr(s,i,a){const e=await Ht(s,i,a),t=J(s),{data:n}=await D(`${t.path}/computeHistograms`,e);return{histograms:n.histograms}}async function Wr(s,i,a){var d,h;const e=(i=$($r,i)).toJSON();jt(e),(d=e.outFields)!=null&&d.length&&(e.outFields=e.outFields.join(","));const t=await Ne(i.geometry),n=t==null?void 0:t[0];n!=null&&(e.geometry=ae(n));const l=J(s),u=U({...l.query,f:"json",...e}),p=H(u,a),{data:m}=await D(`${l.path}/getSamples`,p),c=(h=m==null?void 0:m.samples)==null?void 0:h.map(w=>{const R=w.value==="NaN"||w.value===""?null:w.value.split(" ").map(f=>Number(f));return{...w,pixelValue:R}});return Vr.fromJSON({samples:c})}async function $t(s,i,a){i=$(Ut,i);const e=J(s),t=i.geometry?[i.geometry]:[];return Ne(t).then(n=>{const l=i.toJSON(),u=n==null?void 0:n[0];u!=null&&(l.geometry=JSON.stringify(ae(u)));const p=U({...e.query,f:"json",...l}),m=H(p,a);return D(e.path+"/identify",m)}).then(n=>Pr.fromJSON(n.data))}async function Zr(s,i,a){i=$(Tr,i);const e=await pt(s,i,[i.fromGeometry,i.toGeometry],a);return jr.fromJSON(e)}async function Kr(s,i,a){i=$(fr,i);const e=await pt(s,i,[i.geometry],a);return wr.fromJSON(e)}async function Xr(s,i,a){i=$(Or,i);const e=await pt(s,i,[i.geometry],a);return Cr.fromJSON(e)}async function Yr(s,i,a){i=$(br,i);const e=await pt(s,i,[i.fromGeometry,i.toGeometry],a);return Sr.fromJSON(e)}async function pt(s,i,a,e){const t=J(s),n=await Ne(a),l=i.toJSON();n[0]!=null&&(l.fromGeometry=JSON.stringify(ae(n[0]))),n[1]!=null&&(l.toGeometry=JSON.stringify(ae(n[1])));const u=U({...t.query,f:"json",...l}),p=H(u,e),{data:m}=await D(t.path+"/measure",p);return m}async function es(s,i,a){const e=await Bt(s,i,a);return Ur.fromJSON(e)}async function ts(s,i,a){const e=await Bt(s,i,a);return Lr.fromJSON(e)}async function Bt(s,i,a){i=$(zr,i);const e=J(s),t=i.toJSON(),n=U({...e.query,f:"json",...t}),l=H(n,a),{data:u}=await D(e.path+"/measureFromImage",l);return u}function ae(s){var a;const i=s.toJSON();return(a=s.spatialReference)!=null&&a.imageCoordinateSystem&&(i.spatialReference=ct(s.spatialReference)),i}function ct(s){const{imageCoordinateSystem:i}=s;if(i){const{id:a,referenceServiceName:e}=i;return a!=null?e?{icsid:a,icsns:e}:{icsid:a}:{ics:i}}return s.toJSON()}function Je(s,i){if(!s.imageCoordinateSystem)return gt(s);const a=ct(s),{icsid:e,icsns:t}=a;return e==null||t!=null&&!(i!=null&&i.toLowerCase().includes("/"+t.toLowerCase()+"/"))?JSON.stringify(a):`0:${e}`}async function is(s,i,a){i=$(Rr,i);const e=J(s),t=i.toJSON();i.outSpatialReference&&(t.outSR=Je(i.outSpatialReference));const n=U({...e.query,f:"json",...t}),l=H(n,a),{data:u}=await D(e.path+"/queryBoundary",l);return vr.fromJSON(u)}async function rs(s,i,a){var d,h;const e=(i=$(xr,i)).toJSON();jt(e),(d=e.objectIds)!=null&&d.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");const t=await Ne(i.geometry),n=t==null?void 0:t[0];n!=null&&(e.geometry=ae(n));const l=(n==null?void 0:n.spatialReference)??((h=i.geometry)==null?void 0:h.spatialReference);l&&(e.inSR=Je(l));const u=J(s),p=U({...u.query,f:"json",...e}),m=H(p,a),{data:c}=await D(`${u.path}/queryGPSInfo`,m);return Dr.fromJSON(c)}async function ss(s,i,a){const e=(i=$(Jr,i)).toJSON();i.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=ae(i.geometry)),i.depthOffset&&i.adjust||delete e.options;const t=J(s),n=U({...t.query,f:"json",...e}),l=H(n,a),{data:u}=await D(`${t.path}/imageToMap`,l);return ie(u)}async function ns(s,i,a){var p;const e=(i=$(Mr,i)).toJSON();(p=i.rasterIds)!=null&&p.length&&(e.rasterIds=i.rasterIds.join(","));const t=J(s),n=U({...t.query,f:"json",...e}),l=H(n,a),{data:u}=await D(`${t.path}/imageToMapMultiray`,l);return ie(u)}async function as(s,i,a){var d;const e=(i=$(Gr,i)).toJSON(),t=await Ne(i.geometry),n=t==null?void 0:t[0];n!=null&&(e.geometry=ae(n)),i.visibleOnly||delete e.options;const l=(n==null?void 0:n.spatialReference)??((d=i.geometry)==null?void 0:d.spatialReference);l&&(e.inSR=Je(l));const u=J(s),p=U({...u.query,f:"json",...e}),m=H(p,a),{data:c}=await D(`${u.path}/mapToImage`,m);return ie(c)}async function os(s,i,a){const e=(i=$(Er,i)).toJSON(),t=J(s),n=U({...t.query,f:"json",...e}),l=H(n,a),{data:u}=await D(`${t.path}/getImageUrl`,l);return qr.fromJSON(u)}async function ls(s,i,a){var m;const e=(i=$(mr,i)).toJSON(),t=await Ne([i.fromGeometry,i.toGeometry]);t[0]!=null&&(e.fromGeometry=ae(t[0]),t[0].spatialReference&&(e.inSR=Je(t[0].spatialReference))),t[1]!=null&&(e.toGeometry=ae(t[1])),(m=i.objectIds)!=null&&m.length&&(e.objectIds=e.objectIds.join(","));const n=J(s),l=U({...n.query,f:"json",...e}),u=H(l,a),{data:p}=await D(`${n.path}/find`,u);return yr.fromJSON(p)}async function us(s,i,a){var L,E;const e=J(s),t=U({...e==null?void 0:e.query,f:"json"}),n=H(t,a),l=`${e==null?void 0:e.path}/${i}/info`,u=D(`${l}`,n),p=D(`${l}/keyProperties`,n),m=await Promise.allSettled([u,p]),c=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let h=null;(L=c.statistics)!=null&&L.length&&(h=c.statistics.map(F=>({min:F[0],max:F[1],avg:F[2],stddev:F[3]})));const w=He.fromJSON(c.extent),R=Math.ceil(w.width/c.pixelSizeX-.1),f=Math.ceil(w.height/c.pixelSizeY-.1),y=w.spatialReference,g=new A({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:y}),b=(E=c.histograms)!=null&&E.length?c.histograms:null,V=new ji({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new Mt({width:R,height:f,bandCount:c.bandCount,extent:w,spatialReference:y,pixelSize:g,pixelType:c.pixelType.toLowerCase(),statistics:h,histograms:b,keyProperties:d,storageInfo:V})}const ps=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),cs=Wt(Zt,{min:0,max:255});function ms(s){if(!s)return null;const i=JSON.stringify(s).match(/"rasterFunction":"(.*?")/gi),a=i==null?void 0:i.map(e=>e.slice(18,-1));return a?a.join("/"):null}const ds=s=>{let i=class extends s{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new _({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(n=>typeof n=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,n){e!=null&&this.format!=="lerc"&&(t[n]=e)}writeCompressionTolerance(e,t,n){this.format==="lerc"&&e!=null&&(t[n]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?k.fromJSON(t):null}get fieldsIndex(){return this.fields?new Oi(this.fields):null}set format(e){e&&ps.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t!=null&&t.mosaicMethod&&(t=k.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const n=e||t.mosaicRule;return n?k.fromJSON(n):this._isMosaicRuleSupported(t)?k.fromJSON(t):null}writeMosaicRule(e,t,n){let l=this.mosaicRule;const u=this.definitionExpression;l?u&&u!==l.where&&(l=l.clone(),l.where=u):u&&(l=new k({where:u})),this._isValidCustomizedMosaicRule(l)&&(t[n]=l.toJSON())}writeNoData(e,t,n){e!=null&&typeof e=="number"&&(t[n]=cs(e))}readObjectIdField(e,t){if(!e){const n=t.fields.find(l=>l.type==="esriFieldTypeOID"||l.type==="oid");e=n==null?void 0:n.name}return e}get parsedUrl(){return hi(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,n){var p,m;const l=(m=(p=t==null?void 0:t.layerDefinition)==null?void 0:p.drawingInfo)==null?void 0:m.renderer,u=ai(l,n);return u==null?null:(u.type==="vector-field"&&t.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),Et(u)||we.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,n){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var m;const e=this._rasterAttributeTableFieldPrefix,t=new Fe({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new Fe({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),l=new Fe({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?C(this.fields):[];u.push(n),(m=this.capabilities)!=null&&m.operations.supportsQuery&&this.fields&&this.fields.length>0&&u.push(t),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(c=>c.name.toLowerCase()==="none")&&u.push(l),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(c=>c.name.toLowerCase()!=="none").forEach(c=>{u.push(new Fe({name:"Raster.ServicePixelValue."+c.name,alias:c.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new Fe({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new Fe({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:p}=this.rasterInfo??{};if(p!=null){const c=p.fields.filter(d=>d.type!=="esriFieldTypeOID"&&d.name.toLowerCase()!=="value").map(d=>{const h=C(d);return h.name=e+d.name,h});u=u.concat(c)}return u}get renderingRule(){return Ve(we.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this.rasterFunction}set renderingRule(e){Ve(we.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}set rasterFunction(e){let t=e;t!=null&&t.rasterFunction&&(t=S.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const n=t.rasterFunctionInfos;return t.renderingRule||n!=null&&n.length&&n[0].name!=="None"?this._isRFTJson(t.renderingRule)?S.fromJSON({rasterFunctionDefinition:t.renderingRule}):S.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const n=e||t.extent.spatialReference;return n?se.fromJSON(n):null}readPixelType(e){return mt.fromJSON(e)||e}writePixelType(e,t,n){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(t[n]=mt.toJSON(e))}readVersion(e,t){let n=t.currentVersion;return n||(n=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),n}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let n=e;const{renderer:l,symbolizer:u,pixelFilter:p,bandIds:m}=this;if(!this._isPicture()&&l&&u&&!p){const c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(l.toJSON()),d=this._rasterJobHandler.instance;if(d){c&&(u.bind(),await d.updateSymbolizer(u,t),this._cachedRendererJson=l.toJSON());const h=await d.symbolize({bandIds:m,...e},t);n={extent:e.extent,pixelBlock:h}}else n={extent:e.extent,pixelBlock:u.symbolize({bandIds:m,...e})}}return n}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeAngles)throw new I("imagery-layer:compute-angles","this operation is not supported on the input image service");return Hr(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputePixelLocation)throw new I("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return Br(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeHistograms)throw new I("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),kr(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new I("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Qr(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(e.operationType==="base-and-top"?n.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?n.mensuration.supportsHeightFromBaseAndTopShadow:n.mensuration.supportsHeightFromTopAndTopShadow))throw new I("imagery-layer:measure-height","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Zr(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsAreaAndPerimeter&&(!e.is3D||n.mensuration.supports3D)))throw new I("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Kr(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsDistanceAndAngle&&(!e.is3D||n.mensuration.supports3D)))throw new I("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Yr(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsPointOrCentroid&&(!e.is3D||n.mensuration.supports3D)))throw new I("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Xr(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new I("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new I("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return es(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new I("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new I("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return ts(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return t!=null?t.get(e):void 0}getFieldDomain(e,t){const n=this.getField(e);return n?n.domain:null}async fetchImage(e,t,n,l={}){if(e==null||t==null||n==null)throw new I("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this._generateRasterInfo(this.rasterFunction,{signal:l.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(e,t,n,l.timeExtent);if(u==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){const g=document.createElement("canvas");return g.width=t,g.height=n,l.returnImageBitmap?{imageBitmap:await Ot(g,`${a(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:g}}const{bandIds:d,rasterInfo:h}=this,w=((d==null?void 0:d.length)||h.bandCount)??0,R=t*n,f=h.pixelType,y=[];for(let g=0;g<w;g++)y.push(yt.createEmptyBand(f,R));return{pixelData:{pixelBlock:new yt({width:t,height:n,pixels:y,mask:new Uint8Array(R),pixelType:f}),extent:e}}}const p=!!l.requestAsImageElement&&!this.pixelFilter,m=p&&!!l.returnImageBitmap,c={imageServiceParameters:u,imageProps:{extent:e,width:t,height:n,format:this.format},requestAsImageElement:p,returnImageBitmap:m,signal:l.signal};return this._requestArrayBuffer(c)}fetchKeyProperties(e){return D(a(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new I("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):D(a(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>Jt.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const n={...t,query:this._getQueryParams()};return us(a(this.parsedUrl),e,n)}async getCatalogItemICSInfo(e,t){var xe,Ie,le,Pt,Nt;const{data:n}=await D(a(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),l=n==null?void 0:n.ics;if(!l)return;let u=null;try{u=(await D(a(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!(u!=null&&u.spatialReference))return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?D(a(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(x=>x.data).catch(()=>({})):{},m=u.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:gt(m),outSR:"0:"+e},d=D(a(this.parsedUrl)+"/project",{query:this._getQueryParams(c),...t}).then(x=>x.data).catch(()=>({})),h=5,w=(u.xmin+u.xmax)/2,R=(u.ymax-u.ymin)/(h+1),f=u.ymin+R,y=[];for(let x=0;x<h;x++)y.push({x:w,y:f+R*x});const g={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:y}),inSR:gt(m),outSR:"0:"+e},b=D(a(this.parsedUrl)+"/project",{query:this._getQueryParams(g),...t}).then(x=>x.data).catch(()=>({})),V=await Promise.all([p,d,b]);let L=V[0].ipxf;if(L==null){const x=(xe=l.geodataXform)==null?void 0:xe.xf_0;((Ie=x==null?void 0:x.name)==null?void 0:Ie.toLowerCase())==="topup"&&((le=x==null?void 0:x.coefficients)==null?void 0:le.length)===6&&(L={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:x.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const E=He.fromJSON((Nt=(Pt=V[1])==null?void 0:Pt.geometries)==null?void 0:Nt[0]);E&&(E.spatialReference=new se({wkid:0,imageCoordinateSystem:l}));const F=V[2].geometries?V[2].geometries.filter(x=>(x==null?void 0:x.x)!=null&&x.y!=null&&x.x!=="NaN"&&x.y!=="NaN"):[],B=F.length;if(B<3)return{ics:l,icsToPixelTransform:L,icsExtent:E,northDirection:null};let Z=0,O=0,P=0,z=0;for(let x=0;x<B;x++)Z+=F[x].x,O+=F[x].y,P+=F[x].x*F[x].x,z+=F[x].x*F[x].y;const q=(B*z-Z*O)/(B*P-Z*Z);let ye=0;const ke=F[h-1].x>F[0].x,We=F[h-1].y>F[0].y;return q===1/0?ye=We?90:270:q===0?ye=ke?0:180:q>0?ye=ke?180*Math.atan(q)/Math.PI:180*Math.atan(q)/Math.PI+180:q<0&&(ye=We?180+180*Math.atan(q)/Math.PI:360+180*Math.atan(q)/Math.PI),{ics:l,icsToPixelTransform:L,icsExtent:E,northDirection:ye}}async generateRasterInfo(e,t){var p;if(e=$(S,e),this.serviceRasterInfo&&(!e||((p=e.functionName)==null?void 0:p.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const n=ms(e);if(!n)throw new I("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[n])return this._functionRasterInfos[n];const l={...t,query:this._getQueryParams()},u=oi(a(this.parsedUrl),e,l);this._functionRasterInfos[n]=u;try{return await u}catch(m){throw this._functionRasterInfos[n]=null,m}}getExportImageServiceParameters(e,t,n,l){var y;e=e.clone().shiftCentralMeridian();const u=Je(e.spatialReference,a(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:c}=p;let{renderingRule:d}=p;const h=(y=this.rasterFunction)==null?void 0:y.rasterFunctionDefinition,w=!this.renderer||this.renderer.type==="raster-stretch";if(m!=null&&m.length&&this._hasRasterFunction(this.rasterFunction)&&!h&&w){const g={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if(d.rasterFunction==="Stretch")g.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=g;else if(d.rasterFunction==="Colormap"){const b=d.rasterFunctionArguments.Raster;(b==null?void 0:b.rasterFunction)==="Stretch"?(g.rasterFunctionArguments.Raster=b.rasterFunctionArguments.Raster,b.rasterFunctionArguments.Raster=g):(g.rasterFunctionArguments.Raster=b,d.rasterFunctionArguments.Raster=g)}else g.rasterFunctionArguments.Raster=d,d=g;p.bandIds=void 0}else p.bandIds=m==null?void 0:m.join(",");Array.isArray(c)&&c.length>0&&(p.noData=c.join(","));const R=this._processMultidimensionalIntersection(null,l,this.exportImageServiceParameters.mosaicRule);if(R.isOutSide)return null;p.mosaicRule=R.mosaicRule!=null?JSON.stringify(R.mosaicRule):null,l=R.timeExtent,p.renderingRule=this._getRenderingRuleString(S.fromJSON(d));const f={};if(l!=null){const{start:g,end:b}=l.toJSON();g&&b&&g===b?f.time=""+g:g==null&&b==null||(f.time=`${g??"null"},${b??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+n,...p,...f}}async getSamples(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n!=null&&n.operations.supportsGetSamples))throw new I("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=C(e);const{raster:l}=this;return l&&e.raster==null&&(e.raster=l),Wr(this.url,e,this._getRequestOptions(t))}async identify(e,t){var p;if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsIdentify)throw new I("imagery-layer:identify","identify operation is not supported on the input image service");e=C(e),this.version<10.91&&((p=e.geometry)==null?void 0:p.type)==="extent"&&(e.geometry=Ke.fromExtent(e.geometry));const n=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(n.isOutSide)throw new I("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=n.timeExtent,e.mosaicRule=n.mosaicRule;const{raster:l,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),l&&e.raster==null&&(e.raster=l),$t(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMap)throw new I("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return ss(a(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMapMultiray)throw new I("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return ns(a(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMapToImage)throw new I("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return as(a(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsFindImages)throw new I("imagery-layer:find-images","findImages operation is not supported on the input image service");return ls(a(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsGetImageUrl)throw new I("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return os(a(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new ht({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryBoundary)throw new I("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},is(a(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Ei(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),qi(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryGPSInfo)throw new I("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},rs(a(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Gi(this.url,e,t)}async queryVisibleRasters(e,t){var E,F,B,Z;if(!e)throw new I("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:n,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:p}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,c=null,d=null;const h="raster.servicepixelvalue",w=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(m=e.outFields.some(O=>!O.toLowerCase().includes(h)),this.version>=10.4)){const O=e.outFields.filter(z=>z.toLowerCase().includes(h)&&z.length>h.length).map(z=>{const q=z.slice(h.length+1);return[this._updateRenderingRulesFunctionName(q,w),q]});c=O.map(z=>new S({functionName:z[0]})),d=O.map(z=>z[1]);const{rasterFunction:P}=this;c.length===0?P!=null&&P.functionName?(c.push(P),d.push(P.functionName)):c=null:P!=null&&P.functionName&&!c.some(z=>z.functionName===P.functionName)&&(c.push(P),d.push(P.functionName))}const R=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:f}=this;let y=e.timeExtent||this.timeExtent;if(f){const{isOutside:O,intersection:P}=dt(f,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:(E=this.exportImageServiceParameters.mosaicRule)==null?void 0:E.multidimensionalDefinition});if(O)throw new I("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");(P==null?void 0:P.timeExtent)!=null&&(y=P.timeExtent)}const g=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y);let b=e.geometry;this.version<10.91&&(b==null?void 0:b.type)==="extent"&&(b=Ke.fromExtent(b));const V=this._getQueryParams({geometry:b,timeExtent:y,mosaicRule:g,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:c,pixelSize:n,returnCatalogItems:m,returnGeometry:R,raster:this.raster,maxItemCount:u?1:null});delete V.f;const L=new Ut(V);try{await this._generateRasterInfo(this.rasterFunction);const O=await $t(this.url,L,{signal:t==null?void 0:t.signal,query:{...this.customParameters}}),P=e.outFields,z=O.value!=null&&O.value.toLowerCase().includes("nodata");if(!(m&&!R&&((F=O==null?void 0:O.catalogItems)!=null&&F.features.length)&&(p||!z)))return this._processVisibleRastersResponse(O,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:P});const q=this.objectIdField||"ObjectId",ye=((B=O.catalogItems)==null?void 0:B.features)??[],ke=ye.map(Ie=>{var le;return(le=Ie.attributes)==null?void 0:le[q]}),We=new ht({objectIds:ke,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[q]}),xe=await this.queryRasters(We);return(Z=xe==null?void 0:xe.features)!=null&&Z.length&&xe.features.forEach(Ie=>{ye.forEach(le=>{le.attributes[q]===Ie.attributes[q]&&(le.geometry=new Ke(Ie.geometry),e.outSpatialReference!=null&&(le.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(O,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:P})}catch{throw new I("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const n=D(a(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.statistics}),l=D(a(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.histograms}),u=await Promise.all([n,l]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(e,t){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(e,t):Ci(e.meshType,e.simulationSettings,e.flowData,t.signal!=null?t.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return bi(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,n=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):li(a(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),ui(p,t),p)),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([n,l,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),we.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([gi(()=>this.rasterFunction,c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(c).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:m}=this;m.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(m)})}_combineMosaicRuleWithTimeExtent(e,t){var f;const n=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(e==null||l==null||t==null||(n==null?void 0:n.startField)==null)return e;const{startField:u}=n,p=l.variables.some(y=>y.dimensions.some(g=>g.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=(f=e.multidimensionalDefinition)==null?void 0:f.filter(y=>y.dimensionName!==p),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const m=e.multidimensionalDefinition.filter(y=>y.dimensionName===p),c=t.start!=null?t.start.getTime():null,d=t.end!=null?t.end.getTime():null,h=c==null||d==null||c===d,w=h?[c||d]:[[c,d]],R=this.version>=10.8;if(m.length)m.forEach(y=>{y.dimensionName===p&&(R?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=h,y.values=w))});else if(!R){const y=e.multidimensionalDefinition.filter(g=>g.variableName!=null&&g.dimensionName==null);y.length?y.forEach(g=>{g.dimensionName=p,g.isSlice=h,g.values=w}):e.multidimensionalDefinition.push(new Si({variableName:"",dimensionName:p,isSlice:h,values:w}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQuery)throw new I("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?$(ht,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new yi;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:n}=this;return e.type==="unique-value"&&this._hasRasterFunction(n)&&(t==null?void 0:t.bandCount)===1&&["u8","s8"].includes(t.pixelType)||t!=null&&e!=null&&pi(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var n;let t=this.sourceJSON;if(!t){const{data:l,ssl:u}=await D(a(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=l,this.sourceJSON=t,u&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((n=t.capabilities)==null?void 0:n.toLowerCase().split(",").map(l=>l.trim()).indexOf("tilesonly"))>-1)throw new I("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var l;if(!e)return!1;const t=this._isMosaicDataset(e),n=e.currentVersion>=10.71&&e.hasMultidimensions&&!(((l=e.fields)==null?void 0:l.length)>1);return t||n}_isVectorFieldResampleFunction(e){if(e==null)return!1;const{functionName:t,functionArguments:n}=e,l=(t==null?void 0:t.toLowerCase())==="resample",u=(n==null?void 0:n.ResampleType)||(n==null?void 0:n.resampleType);return l&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var l,u;const t=this._isPicture(),{rasterInfo:n}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&n.bandCount>=3){const m=ci(n);!m||n.bandCount===3&&m[0]===0&&m[1]===1&&m[2]===2||(this.bandIds=m)}e||(e=mi(n,{bandIds:this.bandIds,variableName:this.rasterFunction?null:(u=(l=this.mosaicRule)==null?void 0:l.multidimensionalDefinition)==null?void 0:u[0].variableName}));const p=di(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=p,this.symbolizer.rasterInfo=n):this.symbolizer=new Pi({rendererJSON:p,rasterInfo:n}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){(e==null?void 0:e.renderingRule)!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:n}=this;return{raster:t,viewId:n,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e==null?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,n){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):_t(e,t,n)}async _getRasterFunctionInfos(e){var n;const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(n=(await D(a(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:n.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:n,returnImageBitmap:l,signal:u}=e;if(n&&this._canRequestImageElement(t.format)){const f=`${a(this.parsedUrl)}/exportImage`,{data:y}=await D(f,{responseType:l?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return y instanceof Blob?{imageBitmap:await Ot(y,f,u),params:t}:{imageOrCanvasElement:y,params:t}}const p=this._initJobHandler(),m=D(a(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),c=(await Promise.all([m,p]))[0].data,d=t.format||"jpgpng";let h=d;if(h!=="bsq"&&h!=="bip"&&(h=Ni(c)),!h)throw new I("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const w={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(h==="png"||h==="jpg")?_t(c,{useCanvas:!0,...t},w):this._decodePixelBlock(c,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:d},w)),extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this.defaultMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){var n;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=xi(e,{multidimensionalSubset:this.multidimensionalSubset});if(t!=null&&t.length>0){this.mosaicRule=this.mosaicRule||new k;const l=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&((n=this.rasterFunction.functionName)==null?void 0:n.toLowerCase())!=="none"&&t.forEach(u=>u.variableName=""),t=t.filter(({variableName:u,dimensionName:p})=>u&&u!=="*"||p),!(l!=null&&l.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){var V,L,E;t=t||{};const n=e.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:p,templateFields:m}=t,c=e.processedValues;let d=(V=e.catalogItems)==null?void 0:V.features,h=((E=(L=e.properties)==null?void 0:L.Values)==null?void 0:E.map(F=>F.replaceAll(/ /gi,", ")))||[];const w=this.objectIdField||"ObjectId",R=typeof n=="string"&&n.toLowerCase().includes("nodata"),f=[];if(n&&!d&&!R){const F={};F[w]=0,h=[n],d=[new ti({geometry:this.fullExtent,attributes:F})]}if(!d)return[];let y,g,b;this._updateResponseFieldNames(d,m),R&&!u&&(d=[]);for(let F=0;F<d.length;F++){if(y=d[F],n!=null){if(g=h[F],b=this.rasterFunction&&c&&c.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?c[l.indexOf(this.rasterFunction.functionName)]:n,g.toLowerCase()==="nodata"&&!u)continue;const B="Raster.ItemPixelValue",Z="Raster.ServicePixelValue";y.attributes[B]=g,y.attributes[Z]=b,this._updateFeatureWithMagDirValues(y,g);const O=this.fields&&this.fields.length>0;let P=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?O?g:n:b;this.rasterFunction||(P=O?g:n),this._updateFeatureWithRasterAttributeTableValues(y,P)}if(y.sourceLayer=y.layer=this,p&&this._updateFeatureWithDomainValues(y),l&&c&&l.length===c.length)for(let B=0;B<l.length;B++){const Z="Raster.ServicePixelValue."+l[B];y.attributes[Z]=c[B]}f.push(d[F])}return f}_processMultidimensionalIntersection(e,t,n){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:t,mosaicRule:n=this._combineMosaicRuleWithTimeExtent(n,t)};if(l){const{isOutside:u,intersection:p}=dt(l,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};(p==null?void 0:p.timeExtent)!=null&&(t=p.timeExtent)}if(n=this._combineMosaicRuleWithTimeExtent(n,t),n==null?void 0:n.multidimensionalDefinition){const{isOutside:u}=dt(l,{multidimensionalDefinition:n.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:n}}_updateFeatureWithRasterAttributeTableValues(e,t){const n=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(n==null)return;const{features:l,fields:u}=n,p=u.map(c=>c.name).find(c=>c.toLowerCase()==="value");if(!p)return;const m=l.filter(c=>c.attributes[p]===(t!=null?parseInt(t,10):null));m&&m[0]&&u.forEach(c=>{const d=this._rasterAttributeTableFieldPrefix+c.name;e.attributes[d]=m[0].attributes[c.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const n=t.split(/,\s*/).map(c=>parseFloat(c)),l=n.map(c=>[c]),u=n.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new yt({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new He(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:$i([p.pixels[0][0],p.pixels[1][0]]);e.attributes["Raster.Magnitude"]=m[0],e.attributes["Raster.Direction"]=m[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(n=>n.domain&&n.domain.type==="coded-value");t!=null&&t.forEach(n=>{const l=e.attributes[n.name];if(l!=null){const u=n.domain.codedValues.find(p=>p.code===l);u&&(e.attributes[n.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const n=this.fieldsIndex;n!=null&&e.forEach(l=>{var u;if(l!=null&&l.attributes)for(const p of t){const m=(u=n.get(p))==null?void 0:u.name;m&&m!==p&&(l.attributes[p]=l.attributes[m],delete l.attributes[m])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return(e==null?void 0:e.functionName)!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const n=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(n)?t.get(n):e}_isRFTJson(e){return(e==null?void 0:e.name)&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:n,rasterFunction:l}=this;l&&"rasterFunction"in e&&e.rasterFunction==null&&(e.rasterFunction=l),n&&e.mosaicRule==null&&(e.mosaicRule=n),t&&e.raster==null&&(e.raster=t)}_readCapabilities(e){var g;const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(b=>b.trim()):["image","catalog"],{currentVersion:n,advancedQueryCapabilities:l,maxRecordCount:u}=e,p=t.includes("image"),m=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!(!e.spatialReference&&!((g=e.extent)!=null&&g.spatialReference)),d=t.includes("edit"),h=t.includes("mensuration")&&c,w=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(b=>b.trim()),R=h&&w.includes("basic"),f=this._isMosaicDataset(e)&&t.includes("catalog"),y=t.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsImageToMap:n>=11.2&&f,supportsImageToMapMultiray:n>=11.2&&f,supportsMapToImage:n>=11.2&&f,supportsFindImages:n>=11.2&&f,supportsGetImageUrl:n>=11.3&&y,supportsMeasure:h,supportsMeasureFromImage:n>=11.2,supportsDownload:y,supportsQuery:f&&e.fields&&e.fields.length>0,supportsGetSamples:n>=10.2&&p,supportsProject:n>=10.3&&p,supportsComputeStatisticsHistograms:n>=10.4&&p,supportsQueryBoundary:n>=10.6&&p,supportsCalculateVolume:n>=10.7&&m,supportsComputePixelLocation:n>=10.7&&f,supportsComputeAngles:n>=10.91,supportsQueryGPSInfo:n>=11.2&&f,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!(l!=null&&l.supportsStatistics),supportsOrderBy:!!(l!=null&&l.supportsOrderBy),supportsDistinct:!!(l!=null&&l.supportsDistinct),supportsPagination:!!(l!=null&&l.supportsPagination),supportsStandardizedQueriesOnly:!!(l!=null&&l.useStandardizedQueries),supportsPercentileStatistics:!!(l!=null&&l.supportsPercentileStatistics),supportsCentroid:!!(l!=null&&l.supportsReturningGeometryCentroid),supportsDistance:!!(l!=null&&l.supportsQueryWithDistance),supportsExtent:!!(l!=null&&l.supportsReturningQueryExtent),supportsGeometryProperties:!!(l!=null&&l.supportsReturningGeometryProperties),supportsHavingClause:!!(l!=null&&l.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(l!=null&&l.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:R,supportsAreaAndPerimeter:R,supportsPointOrCentroid:R,supportsHeightFromBaseAndTop:h&&w.includes("base-top height"),supportsHeightFromBaseAndTopShadow:h&&w.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:h&&w.includes("top-top shadow height"),supports3D:h&&w.includes("3d")}}}};function a(e){return(e==null?void 0:e.path)??""}return r([o({clonable:!1})],i.prototype,"_functionRasterInfos",void 0),r([o({clonable:!1})],i.prototype,"_rasterJobHandler",void 0),r([o({clonable:!1})],i.prototype,"_cachedRendererJson",void 0),r([o({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),r([M("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),r([o({readOnly:!0})],i.prototype,"_rasterAttributeTableFieldPrefix",void 0),r([o({readOnly:!0})],i.prototype,"_rasterFunctionNamesIndex",null),r([o()],i.prototype,"adjustAspectRatio",void 0),r([o({type:[Qe],json:{write:!0}})],i.prototype,"bandIds",void 0),r([M("bandIds")],i.prototype,"readBandIds",null),r([o({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),r([M("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),r([o({type:Number})],i.prototype,"compressionQuality",void 0),r([T("compressionQuality")],i.prototype,"writeCompressionQuality",null),r([o({type:Number})],i.prototype,"compressionTolerance",void 0),r([T("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),r([o({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),r([o({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"defaultMosaicRule",void 0),r([M("defaultMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultMosaicRule",null),r([o({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),r([o({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),r([o()],i.prototype,"rasterInfo",void 0),r([o({readOnly:!0,type:[Fe]})],i.prototype,"fields",void 0),r([o({readOnly:!0})],i.prototype,"fieldsIndex",null),r([o({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],i.prototype,"format",null),r([M("service","format",["serviceDataType"])],i.prototype,"readFormat",null),r([o({type:He})],i.prototype,"fullExtent",void 0),r([o({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),r([o({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),r([o({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),r([o({type:String,json:{type:ve.jsonValues,read:ve.read,write:ve.write}})],i.prototype,"interpolation",void 0),r([o()],i.prototype,"minScale",void 0),r([M("service","minScale")],i.prototype,"readMinScale",null),r([o()],i.prototype,"maxScale",void 0),r([M("service","maxScale")],i.prototype,"readMaxScale",null),r([o({type:k})],i.prototype,"mosaicRule",null),r([M("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),r([T("mosaicRule")],i.prototype,"writeMosaicRule",null),r([o()],i.prototype,"multidimensionalInfo",void 0),r([o({type:ri,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),r([o({json:{type:Qe}})],i.prototype,"noData",void 0),r([T("noData")],i.prototype,"writeNoData",null),r([o({type:String,json:{type:Ue.jsonValues,read:Ue.read,write:Ue.write}})],i.prototype,"noDataInterpretation",void 0),r([o({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),r([M("objectIdField")],i.prototype,"readObjectIdField",null),r([o({readOnly:!0})],i.prototype,"geometryType",void 0),r([o({})],i.prototype,"typeIdField",void 0),r([o({})],i.prototype,"types",void 0),r([o({readOnly:!0})],i.prototype,"parsedUrl",null),r([o({type:Function})],i.prototype,"pixelFilter",void 0),r([o()],i.prototype,"raster",void 0),r([o({readOnly:!0})],i.prototype,"sourceType",void 0),r([M("sourceType",["serviceSourceType","fields"])],i.prototype,"readSourceType",null),r([o()],i.prototype,"viewId",void 0),r([o({types:si,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ni,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"renderer",null),r([M("renderer")],i.prototype,"readRenderer",null),r([T("renderer")],i.prototype,"writeRenderer",null),r([o({clonable:!1})],i.prototype,"symbolizer",void 0),r([o(fi)],i.prototype,"opacity",void 0),r([o({readOnly:!0})],i.prototype,"rasterFields",null),r([o({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),r([o({type:S})],i.prototype,"renderingRule",null),r([o({type:S,json:{name:"renderingRule"}})],i.prototype,"rasterFunction",null),r([M("rasterFunction",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRasterFunction",null),r([o({readOnly:!0})],i.prototype,"serviceDataType",void 0),r([o({readOnly:!0,type:se})],i.prototype,"spatialReference",void 0),r([M("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),r([o({json:{type:mt.jsonValues}})],i.prototype,"pixelType",void 0),r([M("pixelType")],i.prototype,"readPixelType",null),r([T("pixelType")],i.prototype,"writePixelType",null),r([o({constructOnly:!0,type:Mt})],i.prototype,"serviceRasterInfo",void 0),r([o()],i.prototype,"sourceJSON",void 0),r([o(wi)],i.prototype,"url",void 0),r([o({readOnly:!0})],i.prototype,"version",void 0),r([M("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=r([v("esri.layers.mixins.ArcGISImageService")],i),i};let Q=class extends zi(Wi(ki(Hi(Bi(ds(Qi(Ui(Li(Kt(Se(ei))))))))))){constructor(...s){super(...s),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=Xt(async(i,a,e)=>{const{save:t,saveAs:n}=await Qt(()=>import("./imageryUtils-C1WGwsfa.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]),import.meta.url);switch(i){case Ze.SAVE:return t(this,a);case Ze.SAVE_AS:return n(this,e,a)}})}normalizeCtorArgs(s,i){return typeof s=="string"?{url:s,...i}:s}load(s){const i=s!=null?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch(Yt).then(()=>this._fetchService(i))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(s){this._set("legendEnabled",s)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(s){this._set("listMode",s)}writeOperationalLayerType(s,i,a){var t;const e=((t=this.renderer)==null?void 0:t.type)==="vector-field";i[a]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var s;return!(!this.raster||!((s=this.url)!=null&&s.toLowerCase().includes("/rasterrendering/imageserver")))}createPopupTemplate(s){var p;const i=this.rasterFields,a=this.title,e=new Set;let t=!1,n=!1;this.capabilities&&(t=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const l=new Set;t&&l.add("raster.itempixelvalue");for(const m of i){const c=m.name.toLowerCase();l.has(c)||c.includes("raster.servicepixelvalue.")||e.add(m.name)}n&&e.add("raster.magnitude").add("raster.direction");const u=Ki({fields:i,title:a},{...s,visibleFieldNames:e});return u!=null&&u.fieldInfos&&((p=this.rasterInfo)!=null&&p.pixelType.startsWith("f"))&&u.fieldInfos.forEach(({format:m,fieldName:c})=>{m&&c&&/^raster\.(item|service)pixelvalue/i.test(c)&&(m.places=2)}),u}queryFeatures(s,i){return this.queryRasters(s,i).then(a=>{if(a!=null&&a.features)for(const e of a.features)e.layer=e.sourceLayer=this;return a})}queryFeatureCount(s,i){return this.queryRasterCount(s,i)}redraw(){this.emit("redraw")}async save(s){return this._debouncedSaveOperations(Ze.SAVE,s)}async saveAs(s,i){return this._debouncedSaveOperations(Ze.SAVE_AS,i,s)}serviceSupportsSpatialReference(s){return Zi(this,s)}write(s,i){if(!this._isPreviewLayer)return super.write(s,i);if(i!=null&&i.messages){const a=`${i.origin}/${i.layerContainerType||"operational-layers"}`;i.messages.push(new I("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${a}'`,{layer:this}))}return null}};r([o(Ri)],Q.prototype,"legendEnabled",null),r([o({type:["show","hide"]})],Q.prototype,"listMode",null),r([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Q.prototype,"isReference",void 0),r([o({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Q.prototype,"operationalLayerType",void 0),r([T("web-map","operationalLayerType")],Q.prototype,"writeOperationalLayerType",null),r([o(vi)],Q.prototype,"popupEnabled",void 0),r([o({type:kt,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Q.prototype,"popupTemplate",void 0),r([o({readOnly:!0})],Q.prototype,"defaultPopupTemplate",null),r([o({readOnly:!0,json:{read:!1}})],Q.prototype,"type",void 0),r([o({readOnly:!0})],Q.prototype,"_isPreviewLayer",null),Q=r([v("esri.layers.ImageryLayer")],Q);const ao=Q;export{ao as default};
