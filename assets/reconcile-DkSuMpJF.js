import{f as d,U as v}from"./assets-C43MgM-v.js";import{m as t,a as w,b as c}from"./subclass-BZA_h8Db.js";import{f as y,i as g,s as j}from"./utils-6jMaHUrH.js";import{r as $}from"./serverVersionUtils-XL3pUZsI.js";import{r}from"./tslib.es6-B3Jf3DVX.js";import"./index-Bh2oEzTI.js";import"./Accessor-BLX9ikPh.js";let s=class extends d{constructor(e){super(e),this.hasConflicts=!1,this.moment=null,this.didPost=!1,this.success=!1}};r([t({type:Boolean,json:{write:!0}})],s.prototype,"hasConflicts",void 0),r([t({type:Date,json:{type:Number,write:{writer:(e,o)=>{o.moment=e?e.getTime():null}}}})],s.prototype,"moment",void 0),r([t({type:Boolean,json:{write:!0}})],s.prototype,"didPost",void 0),r([t({type:Boolean,json:{write:!0}})],s.prototype,"success",void 0),s=r([w("esri.rest.versionManagement.gdbVersion.support.ReconcileResult")],s);const b=s,n=new Map;async function V(e,o,p,m){n.has(e)||await $(n,e);const i=n.get(e);if(((i==null?void 0:i.serverVersion)??0)<=11.1)throw new c("reconcile:enterprise-version","versioning API requires ArcGIS Enterprise version 11.2 or higher");if(!o)throw new c("reconcile:missing-guid","guid for version is missing");const a=y(e),l=p.toJSON(),f=g(a.query,{query:j({...l,f:"json"}),...m,method:"post"});o.startsWith("{")&&(o=o.slice(1,-1));const h=`${a.path}/versions/${o}/reconcile`,{data:u}=await v(h,f);return b.fromJSON(u)}export{V as reconcile,n as serverVersionCacheMap};
