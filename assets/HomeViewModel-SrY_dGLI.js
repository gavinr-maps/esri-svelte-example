import{r as o}from"./tslib.es6-B3Jf3DVX.js";import{m as l}from"./Viewpoint-C4FqWA2d.js";import{b as s,m as e,a as p}from"./subclass-BZA_h8Db.js";import{o as a}from"./Evented-BHRw9x22.js";import{t as m}from"./GoTo-Wtu9mgoE.js";import"./Clonable-D3rtuBWg.js";import"./Accessor-BLX9ikPh.js";import"./Cyclical-oTUX3aX7.js";import"./mathUtils-C4_ghTv4.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./cast-Bjksrh93.js";import"./writer-DNAwXnhG.js";import"./Point-Cg0-ChZE.js";import"./jsonMap-0cxwUWs2.js";import"./geometry-D964gYQX.js";import"./Extent-Bf3YTe7m.js";import"./Polyline-D9YkgmM_.js";import"./jsonUtils-CEfjT-BK.js";let i=class extends m(a.EventedAccessor){constructor(t){super(t),this._initialViewpoint=null,this._goingHomeController=null,this.go=this.go.bind(this)}destroy(){this._cancelGo(),this.view=null}get state(){var t;return(t=this.view)!=null&&t.ready?this._goingHomeController?"going-home":"ready":"disabled"}set view(t){this._initialViewpoint=null,this._set("view",t),t&&t.when().then(()=>{this.view===t&&(this._initialViewpoint=t.viewpoint.clone(),this.notifyChange("viewpoint"))})}get viewpoint(){return this._get("viewpoint")||this._initialViewpoint}set viewpoint(t){this._set("viewpoint",t)}async go(){var n,r;if(!((n=this.view)!=null&&n.ready))throw new s("home:disabled-state","Cannot go when disabled.");this._cancelGo(),this.emit("go");const t=new AbortController;this._goingHomeController=t;try{await((r=this.view)==null?void 0:r.when()),await this.callGoTo({target:this.viewpoint,options:{signal:t.signal}})}catch{}this._goingHomeController=null}cancelGo(){this._cancelGo()}_cancelGo(){const{_goingHomeController:t}=this;t&&t.abort(),this._goingHomeController=null}};o([e()],i.prototype,"_goingHomeController",void 0),o([e({readOnly:!0})],i.prototype,"state",null),o([e()],i.prototype,"view",null),o([e({type:l})],i.prototype,"viewpoint",null),o([e()],i.prototype,"go",null),o([e()],i.prototype,"cancelGo",null),i=o([p("esri.widgets.Home.HomeViewModel")],i);const O=i;export{O as default};
