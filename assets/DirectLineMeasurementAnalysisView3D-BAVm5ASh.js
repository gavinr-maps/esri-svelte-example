import{r as a}from"./tslib.es6-B3Jf3DVX.js";import{b as rt,W as zt,q as C}from"./Accessor-BLX9ikPh.js";import{m as l,a as ot,n as $t}from"./subclass-BZA_h8Db.js";import{e as Vt}from"./defaultUnit-_T4IY-sW.js";import{s as Mt}from"./AnalysisView3D-BBHxe6zf.js";import{e as z}from"./interfaces-js1RL7O8.js";import{watch as E,syncAndInitial as S,initial as Tt}from"./reactiveUtils-C5zUhJQJ.js";import{r as Dt,t as xt,d as N}from"./LineVisualElement-mUtX7dGi.js";import{h as Rt,g as B,c as at,d as Gt,e as lt,w as jt}from"./quantityFormatUtils-CX8UdSzC.js";import{f as Ht}from"./geodesicLengthMeasurementUtils-he3vjGJN.js";import{p as Ct}from"./geodesicMeasurementUtils-Bt9h4589.js";import"./intl-CChhNOV8.js";import{J as dt,D as ct,N as It,R as ht,L as Nt,I as ut}from"./colorUtils-aL8wj-8G.js";import{a as kt,s as Wt}from"./mathUtils-C4_ghTv4.js";import{s as q}from"./quantityUtils-D0GB2dMc.js";import{y as Et,s as nt}from"./screenUtils-_ZIvrt5o.js";import{m as Qt,I as Ut}from"./Point-Cg0-ChZE.js";import{j as pt}from"./vec2-maR1OrZI.js";import{o as F,A as Y,c as At,_ as Ot,p as Bt,E as J,s as qt,R as Ft,Y as Yt,g as Jt,u as Kt}from"./vec32-Dvg_eL9J.js";import{n as f}from"./vec3f64-BLpZdpfb.js";import{e as y,o as P}from"./interfaces-CjSZqm0S.js";import{n as K}from"./viewUtils-DrPohWV3.js";import{a as X,_ as mt,f as G,C as gt}from"./Segment-DZGyf3mS.js";import{e as Xt}from"./mat4f64-Dk4dwAN8.js";import{a as _t}from"./vec42-YcqnINSP.js";import{r as Z,n as vt}from"./vec4f64-o2zAXfmz.js";import{c as k}from"./plane-IENfwZlB.js";import{a as Zt}from"./Object3DVisualElement-BVfa8i_P.js";import{Y as te,h as ee}from"./viewpointUtils-Bq9TFP4R.js";import{w as ie}from"./sdfPrimitives-CUWZbMRe.js";import{n as se,d as re,p as H}from"./Material-_xx7OZxD.js";import{H as oe}from"./InterleavedLayout-e-di2fxs.js";import{o as tt,n as yt}from"./Matrix3DrawUniform-CiBFaSz6.js";import{o as W}from"./AlphaCutoff-UcccL64p.js";import{o as ne,d as ae,e as et,h as le,j as de,y as ce,E as he,A as wt,m as ue}from"./Texture-Fac_8AOC.js";import{e as w}from"./VertexAttribute-Cq4MnHjR.js";import{_ as pe}from"./index-Bh2oEzTI.js";import{E as me,O as ge}from"./enums-D9v74xTE.js";import{B as _e,p as ve,g as ye}from"./renderState-DQLu6AJX.js";import{i as bt}from"./ShaderTechniqueConfiguration-CBbn2DCi.js";import{D as we}from"./RightAngleQuadVisualElement-9e1qCkJI.js";import{h as it}from"./lineStippleUtils-C89mzWlO.js";import{g as be}from"./locale-C9TlLpzi.js";import{h as fe}from"./messages-OmQvZhAg.js";import"./mat4-GpOFENPA.js";import"./BindType-BmZEZMMh.js";import{o as j}from"./interfaces-DDtDqZYj.js";import"./getDefaultUnitForView-Ce2vZZap.js";import"./Portal-C10FKnaA.js";import"./assets-C43MgM-v.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./writer-DNAwXnhG.js";import"./Extent-Bf3YTe7m.js";import"./jsonMap-0cxwUWs2.js";import"./asyncUtils-CWX51uTe.js";import"./Collection-CEdjem1-.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./projection-B971H0Re.js";import"./Polyline-D9YkgmM_.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./ElevationProvider-C95wyCKc.js";import"./dehydratedFeatureUtils-B--Sgpdi.js";import"./sphere-C77djCO6.js";import"./common-DQOJ18NT.js";import"./mat3-BRl2i9Bz.js";import"./mat3f64-BBpwCtoL.js";import"./ViewingMode-Dodu7ZZk.js";import"./intersectorUtils-BK9EUwUf.js";import"./boundedPlane-EV1sS2Ke.js";import"./lineSegment-D7sKPPYf.js";import"./verticalOffsetUtils-BDQLpfho.js";import"./orientedBoundingBox-DOAJUK5g.js";import"./quat-4pa1e6ds.js";import"./quatf64-CCm9z-pX.js";import"./spatialReferenceEllipsoidUtils-DBE_OFra.js";import"./computeTranslationToOriginAndRotation-Q27G6TBL.js";import"./vec2f64-miziP1SN.js";import"./line-CML3g7Ng.js";import"./aaBoundingBox-BE7cC1jD.js";import"./Indices-DflDlU4Z.js";import"./RibbonLine.glsl-BZu1FDpE.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";import"./hydratedFeatures-DBKLr8hT.js";import"./geometry-D964gYQX.js";import"./Graphic-DsxsIjhH.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./cast-Bjksrh93.js";import"./fieldUtils-tmQlKvWo.js";import"./date-DlqISzcw.js";import"./enumeration-Ba5njXdz.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./jsonUtils-CEfjT-BK.js";import"./projectVectorToVector-G2uWGoIb.js";import"./projectPointToVector-GINIbYMz.js";import"./mathUtils-BG-eq9fO.js";import"./Util-BIfApRF5.js";import"./Octree-C8d4sqjv.js";import"./frustum-CQrOepbv.js";import"./Float4DrawUniform-N58YDhuZ.js";import"./floatRGBA-CfH_2xsy.js";import"./Texture-Begq2x5n.js";import"./Cyclical-oTUX3aX7.js";import"./unitFormatUtils-CZ2bRlFg.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./geometryEngine-DGiYLHJy.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-C9rxSL4a.js";import"./geodesicUtils-FCYOaNwu.js";import"./elevationInfoUtils-BC_66_Fg.js";import"./VisualElement-Bz1W-x8t.js";import"./jsxFactory-CJa39Fro.js";import"./uuid-fwrPAdZb.js";import"./TextOverlayItem-zxgmE06K.js";import"./Viewpoint-C4FqWA2d.js";import"./projectVectorToPoint-DcLtSZYw.js";import"./scaleUtils-D_Nw3nhM.js";import"./earthUtils-ByXwmaX5.js";import"./spatialReferenceSupport-yRFduOSO.js";import"./vec3f32-nZdmKIgz.js";import"./doublePrecisionUtils-B0owpBza.js";import"./BufferView-_QDXRCew.js";import"./compilerUtils-Dw3R0f-Z.js";import"./triangle-PTGDC_xJ.js";import"./requestImageUtils-DgMiQwsm.js";import"./EngineVisualElement-DAbK0X3b.js";import"./MergedRenderer-Dli9s1X5.js";import"./VertexArrayObject-lPxPk5E-.js";import"./NestedMap-GuqgquCN.js";import"./glUtil-D0YUa0ow.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./OverlayCompositing.glsl-CiE3Tt8y.js";import"./signal-D4lghLjV.js";import"./axisAngleDegrees-Ci2HA7Jo.js";import"./weather-eV4wTXCK.js";import"./HighlightDefaults-D4ckYWWJ.js";import"./BufferObject-BVi1lwBq.js";import"./Intersector-wXoCuQ8W.js";import"./Scheduler-CJu5awNf.js";import"./debugFlags-BF6Z0j0F.js";import"./ColorMaterial.glsl-BF1fDRqL.js";import"./VertexColor.glsl-_ARMpsAT.js";import"./TriangleMaterial-BiHR3MKx.js";let $=class extends rt{constructor(t){super(t)}initialize(){this.addHandles([E(()=>({viewData:this.viewData,startPoint:this.analysis.startPoint}),({viewData:t,startPoint:i})=>{t.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(i)},S),E(()=>({viewData:this.viewData,endPoint:this.analysis.endPoint}),({viewData:t,endPoint:i})=>{t.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(i)},S),E(()=>({result:this._computedResult,viewData:this.viewData}),({result:t,viewData:i})=>{i.result=t},S)])}_applyProjectionAndElevationAlignment(t){if(t==null)return t;const{spatialReference:i,elevationProvider:s}=this.view;return Dt(t,i,s)??(xt(this.analysis,t.spatialReference,$t.getLogger(this)),null)}get _computedResult(){const{elevationAlignedStartPoint:t,elevationAlignedEndPoint:i,measurementMode:s}=this.viewData;if(t==null||i==null)return null;const r=Rt(t,i),o=Ht(t,i);if(r==null)return null;let h,d;switch(s){case z.Auto:d=o!=null?"geodesic":"euclidean",h=o??r.horizontal;break;case z.Geodesic:if(o==null)return null;d="geodesic",h=o;break;case z.Euclidean:d="euclidean",h=r.horizontal}return{mode:d,directDistance:r.direct,horizontalDistance:h,verticalDistance:r.vertical,distance:s===z.Euclidean||r.horizontal.value<=Ct?r.direct:o??r.horizontal}}};a([l()],$.prototype,"view",void 0),a([l()],$.prototype,"analysis",void 0),a([l()],$.prototype,"viewData",void 0),a([l()],$.prototype,"_computedResult",null),$=a([ot("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],$);function Pt(e){const t=new ne,{vertex:i,fragment:s}=t;ae(i,e),i.uniforms.add(new tt("width",o=>o.width)),t.attributes.add(w.POSITION,"vec3"),t.attributes.add(w.NORMAL,"vec3"),t.attributes.add(w.UV0,"vec2"),t.attributes.add(w.LENGTH,"float"),t.varyings.add("vtc","vec2"),t.varyings.add("vlength","float"),t.varyings.add("vradius","float"),i.main.add(j`vec3 bitangent = normal;
vtc = uv0;
vlength = length;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;`),s.uniforms.add(new tt("outlineSize",o=>o.outlineSize),new et("outlineColor",o=>o.outlineColor),new tt("stripeLength",o=>o.stripeLength),new et("stripeEvenColor",o=>o.stripeEvenColor),new et("stripeOddColor",o=>o.stripeOddColor));const r=1/Math.sqrt(2);return s.code.add(j`
    const float INV_SQRT2 = ${j.float(r)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      }
      if (d < outlineSize) {
        return outlineColor;
      }
      return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
    }`),s.main.add(j`
    vec2 ntc = vec2(vtc.x / vradius, vtc.y);
    vec4 color = arrowColor(ntc, vlength / vradius);
    if (color.a < ${j.float(W)}) {
      discard;
    }
    fragColor = color;`),t}const Le=Object.freeze(Object.defineProperty({__proto__:null,build:Pt},Symbol.toStringTag,{value:"Module"}));class Ce extends le{constructor(t,i,s){super(t,i,new de(Le,()=>pe(()=>Promise.resolve().then(()=>We),void 0,import.meta.url)),s,St),this.primitiveType=me.TRIANGLE_STRIP}initializePipeline(t){return _e({blending:t.transparent?ce(t.oitPass):null,polygonOffset:t.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:ge.LESS},depthWrite:ve,colorWrite:ye})}}const St=new Map([[w.POSITION,0],[w.NORMAL,1],[w.UV0,2],[w.LENGTH,3]]);class st extends he{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1}}a([bt()],st.prototype,"polygonOffsetEnabled",void 0),a([bt()],st.prototype,"transparent",void 0);class Ee extends se{constructor(t){super(t,Oe),this._configuration=new st,this.vertexAttributeLocations=St,this.produces=new Map([[wt.OPAQUE_MATERIAL,i=>!this._transparent&&i===yt.Color],[wt.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,i=>this._transparent&&i===yt.Color]])}getConfiguration(t,i){return this._configuration.polygonOffsetEnabled=this.parameters.polygonOffset,this._configuration.transparent=this._transparent,this._configuration.oitPass=i.oitPass,this._configuration}get visible(){const{outlineColor:t,stripeEvenColor:i,stripeOddColor:s}=this.parameters;return t[3]>=W||i[3]>=W||s[3]>=W}intersect(){}createGLMaterial(t){return new Ae(t)}createBufferWriter(){return new Te}get _transparent(){const{parameters:t}=this;return t.outlineColor[3]<1||t.stripeEvenColor[3]<1||t.stripeOddColor[3]<1}}let Ae=class extends ue{beginSlot(t){return this.acquireTechnique(Ce,t)}},Oe=class extends re{constructor(){super(...arguments),this.width=32,this.outlineSize=.2,this.outlineColor=Z(1,.5,0,1),this.stripeEvenColor=Z(1,1,1,1),this.stripeOddColor=Z(1,.5,0,1),this.stripeLength=1,this.polygonOffset=!1}};const Pe=oe().vec3f(w.POSITION).vec3f(w.NORMAL).vec2f(w.UV0).f32(w.LENGTH),Se=f(),ze=f(),$e=f(),Ve=f(),Me=f();class Te{constructor(){this.vertexBufferLayout=Pe}elementCount(t){return 2*(t.get(w.POSITION).indices.length/2+1)}write(t,i,s,r,o,h){const{data:d,indices:c}=s.get(w.POSITION),p=s.get(w.NORMAL).data,n=d.length/3;c&&c.length!==2*(n-1)&&console.warn("MeasurementArrowMaterial does not support indices");const u=Se,m=ze,_=$e,L=Ve,V=Me,M=o.position,T=o.normal,A=o.uv0;let D=0;for(let b=0;b<n;++b){const R=3*b;if(F(u,d[R],d[R+1],d[R+2]),b<n-1){const x=3*(b+1);F(m,d[x],d[x+1],d[x+2]),F(V,p[x],p[x+1],p[x+2]),Y(V,V),At(_,m,u),Y(_,_),Ot(L,V,_),Y(L,L)}const U=Bt(u,m);t&&i&&(J(u,u,t),J(m,m,t),J(L,L,i));const O=h+2*b,I=O+1;M.setVec(O,u),M.setVec(I,u),T.setVec(O,L),T.setVec(I,L),A.set(O,0,D),A.set(O,1,-1),A.set(I,0,D),A.set(I,1,1),b<n-1&&(D+=U)}const Q=o.length;for(let b=0;b<2*n;++b)Q.set(h+b,D)}}let De=class extends Zt{constructor(t){super(t),this._arrowWidth=16,this._arrowSubdivisions=128,this._origin=f(),this._originTransform=Xt(),this._arrowCenter=f(),this._renderOccluded=H.OccludeAndTransparent,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._color=vt(),this._contrastColor=vt(),this.applyProperties(t)}get renderOccluded(){return this._renderOccluded}set renderOccluded(t){var i;t!==this._renderOccluded&&(this._renderOccluded=t,(i=this._arrowMaterial)==null||i.setParameters({renderOccluded:t}))}get geometry(){return this._geometry}set geometry(t){this._geometry=t,this._geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(t){this._stripeLength=t,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(t){if(this._stripesEnabled=t,this.attached){const i=this._stripesEnabled?this._contrastColor:this._color;this._arrowMaterial.setParameters({stripeEvenColor:i})}}get color(){return this._color}set color(t){dt(t,this._color)||(_t(this._color,t),this._updateArrowColor())}get contrastColor(){return this._contrastColor}set contrastColor(t){dt(t,this._color)||(_t(this._contrastColor,t),this._updateArrowColor())}createExternalResources(){const t=this._color,i=this._contrastColor,s=this._stripesEnabled?i:t;this._arrowMaterial=new Ee({outlineColor:t,stripeEvenColor:s,stripeOddColor:t,renderOccluded:this.renderOccluded,polygonOffset:!0,isDecoration:this.isDecoration}),this._handles=new zt,this._handles.add(E(()=>this.view.state.camera,()=>{this._viewChanged()}))}destroyExternalResources(){this._arrowMaterial=null,this._handles=C(this._handles)}forEachExternalMaterial(t){t(this._arrowMaterial)}createGeometries(t){var s;if(((s=this._geometry)==null?void 0:s.startRenderSpace)==null||this._geometry.endRenderSpace==null)return;const i=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);i.transformation=this._originTransform,t.addGeometry(i),this._viewChanged()}_createArrowGeometry(t,i,s,r){const o=this.view,h=o.renderCoordsHelper,d=[],c=[],p=(n,u)=>{const m=k.get();At(m,n,s),d.push(m),c.push(u)};if(r.type==="euclidean"){r.eval(.5,this._arrowCenter);const n=k.get();if(h.worldUpAtPosition(this._arrowCenter,n),xe(t,i,n)){const{heading:u,tilt:m}=o.camera,{direction:_}=te(o,t,u,m,Re);qt(n,_)}p(t,n),p(i,n)}else{r.eval(.5,this._arrowCenter);const n=this._arrowSubdivisions+1&-2;for(let u=0;u<n;++u){const m=u/(n-1),_=k.get(),L=k.get();r.eval(m,_),h.worldUpAtPosition(_,L),p(_,L)}}return ie(this._arrowMaterial,d,c)}_geometryChanged(){this.recreateGeometry()}_viewChanged(){if(this.view.ready&&this.attached&&this._geometry!=null){const t=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._arrowWidth*t})}}_updateArrowColor(){if(!this.attached)return;const t=this._color,i=this._contrastColor,s=this._stripesEnabled?i:t,r=t,o=t;this._arrowMaterial.setParameters({stripeEvenColor:s,outlineColor:r,stripeOddColor:o})}};function xe(e,t,i){const s=Ft(ft,t,e),r=Ot(ft,s,i);return Yt(r)===0}const ft=f(),Re=ee();let v=class extends rt{get _parameters(){const e=this.view.effectiveTheme,{accentColor:t,textColor:i}=e,s=ct(t),r=It(t,.75),o=ct(ht(t)),h=ht(i,Nt.Low);return{accentColor:s,contrastColor:o,translucentAccentColor:r,triangleLineWidth:3,geodesicProjectionLineWidth:2,guideLineWidth:2,guideStippleLengthPixels:3,directLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12,textColor:i,textBackgroundColor:ut(h,.6),textCalloutColor:ut(h,.5)}}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView;if(e==null||t==null||e.equals(t))return y.None;const i=this.analysisView.result;if(i==null)return y.Direct;if(this.actualVisualizedMeasurement==="geodesic")return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?y.ProjectedGeodesic:y.Direct;const{verticalDistance:s,horizontalDistance:r}=i,o=s.value,h=r.value;return Math.min(o/h,h/o)<this.triangleCollapseRatioThreshold?y.Direct:y.Triangle}get actualVisualizedMeasurement(){const{measurementMode:e,result:t}=this.analysisView;switch(e){case z.Auto:return t!=null&&t.horizontalDistance.value>Ct?"geodesic":"euclidean";case z.Euclidean:return"euclidean";case z.Geodesic:return"geodesic"}}get allowVisualElementsOrientationChange(){return this._triangleOrientationOverride==null}set allowVisualElementsOrientationChange(e){this._triangleOrientationOverride==null!==e&&(this._triangleOrientationOverride==null?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){return this.actualVisualizedMeasurement==="geodesic"?{direct:null,horizontal:this._segmentLabel,vertical:this._verticalLabel}:{direct:this._segmentLabel,horizontal:this._horizontalLabel,vertical:this._verticalLabel}}constructor(e){super(e),this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=f(),this._endPosition=f(),this._cornerPosition=f(),this._startPositionAtSeaLevel=f(),this._endPositionAtSeaLevel=f(),this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=P.Auto,this.triangleCollapseRatioThreshold=.03}initialize(){const e=this._parameters,t={attached:!0,view:this.view,isDecoration:!0},{guideLineWidth:i,guideStippleLengthPixels:s,triangleLineWidth:r,geodesicProjectionLineWidth:o,directLabelFontSize:h,verticalLabelFontSize:d,horizontalLabelFontSize:c}=e;this._segmentVisualElement=new De({...t,geometry:null,renderOccluded:H.OccludeAndTransparent}),this._triangleVisualElement=new N({...t,width:r,renderOccluded:H.OccludeAndTransparent}),this._rightAngleQuad=new we({...t,renderOccluded:H.OccludeAndTransparent});const p={...t,polygonOffset:!0,renderOccluded:H.OccludeAndTransparent};this._projectedGeodesicLine=new N({...p,width:o,stipplePattern:it(s)}),this._geodesicStartHint=new N({...p,width:i,stipplePattern:it(s)}),this._geodesicEndHint=new N({...p,width:i,stipplePattern:it(s)}),this._segmentLabel=new X({...t,fontSize:h}),this._verticalLabel=new X({...t,fontSize:d}),this._horizontalLabel=new X({...t,fontSize:c}),this.addHandles([E(()=>{const{elevationAlignedStartPoint:n,elevationAlignedEndPoint:u}=this.analysisView,m=this.view;return{view:m,camera:m.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:n,elevationAlignedEndPoint:u,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}},n=>this._updateGeometryAndViewMode(n),S),E(()=>({visible:this.visible,viewMode:this.viewMode}),n=>this._updateVisualElementVisibility(n),S),E(()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement}),n=>this._updateLabelText(n),S),E(()=>({visible:this.visible,viewMode:this.viewMode}),n=>this._updateLabelVisibility(n),S),E(()=>this._measurementArrowStripeLength,n=>this._updateSegmentStripeLength(n),S),be(async()=>this._updateMessageBundle()),E(()=>this._parameters,({textBackgroundColor:n,textCalloutColor:u,textColor:m,translucentAccentColor:_,accentColor:L,contrastColor:V})=>{const{_segmentLabel:M,_verticalLabel:T,_horizontalLabel:A,_triangleVisualElement:D,_rightAngleQuad:Q,_projectedGeodesicLine:b,_geodesicStartHint:R,_geodesicEndHint:U,_segmentVisualElement:O}=this;M.backgroundColor=n,M.calloutColor=u,M.textColor=m,T.backgroundColor=n,T.calloutColor=u,T.textColor=m,A.backgroundColor=n,A.calloutColor=u,A.textColor=m,D.color=_,Q.color=_,b.color=_,R.color=_,U.color=_,O.color=L,O.contrastColor=V},Tt)]),this._updateMessageBundle()}destroy(){this._segmentVisualElement=C(this._segmentVisualElement),this._triangleVisualElement=C(this._triangleVisualElement),this._rightAngleQuad=C(this._rightAngleQuad),this._projectedGeodesicLine=C(this._projectedGeodesicLine),this._geodesicStartHint=C(this._geodesicStartHint),this._geodesicEndHint=C(this._geodesicEndHint),this._segmentLabel=C(this._segmentLabel),this._verticalLabel=C(this._verticalLabel),this._horizontalLabel=C(this._horizontalLabel),this.set("view",null)}_updateVisualElementVisibility({visible:e,viewMode:t}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,e)switch(t){case y.None:break;case y.Direct:this._segmentVisualElement.visible=!0;break;case y.Triangle:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case y.ProjectedGeodesic:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:e,camera:t,viewMode:i,elevationAlignedStartPoint:s,elevationAlignedEndPoint:r,orientation:o,visualizedMeasurement:h,stripeLength:d}){const c=e.renderCoordsHelper;if(c==null||s==null||r==null||s.equals(r))return;let p=this._startPosition,n=this._endPosition;c.toRenderCoords(s,p),c.toRenderCoords(r,n);const u=o===P.AboveSegment?1:-1,m=u*(c.getAltitude(n)-c.getAltitude(p));m<0&&(p=this._endPosition,n=this._startPosition);const _=h==="geodesic"?new mt(this._startPosition,this._endPosition,c.spatialReference):new G(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=_,this._updateSegmentStripeLength(d),i){case y.Direct:this._updateSegment(_,o);break;case y.Triangle:this._updateSegmentAndTriangle({view:e,camera:t,segment:_,orientation:o,startPosition:p,endPosition:n,deltaSign:u,altitudeDelta:m});break;case y.ProjectedGeodesic:this._updateSegmentAndProjection({view:e,orientation:o,startPosition:p,endPosition:n})}}_updateSegment(e,t){this._segmentLabel.anchor=t===P.AboveSegment?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:e},camera:t,segment:i,orientation:s,startPosition:r,endPosition:o,deltaSign:h,altitudeDelta:d}){const c=this._cornerPosition;e.worldUpAtPosition(r,c),Jt(c,c,h*Math.abs(d)),Kt(c,c,r),this._triangleVisualElement.geometry=[[[r[0],r[1],r[2]],[c[0],c[1],c[2]],[o[0],o[1],o[2]]]],this._rightAngleQuad.geometry={previous:r,center:c,next:o};const p=new G(r,c),n=new G(c,o),u=Ge(r,o,c,s,t);this._segmentLabel.anchor=u.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:p,sampleLocation:"center"},this._verticalLabel.anchor=u.vertical,this._horizontalLabel.geometry={type:"segment",segment:n,sampleLocation:"center"},this._horizontalLabel.anchor=u.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:e},orientation:t,startPosition:i,endPosition:s}){e.setAltitude(this._startPositionAtSeaLevel,0,i),e.setAltitude(this._endPositionAtSeaLevel,0,s);const r=new mt(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,e.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(r),this._geodesicStartHint.setGeometryFromSegment(new G(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new G(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},this._segmentLabel.anchor=t===P.AboveSegment?"top":"bottom"}_updateLabelText({text:e,visualizedMeasurement:t}){e!=null?(this._segmentLabel.text=t==="euclidean"?e.directDistance:e.horizontalDistance,this._horizontalLabel.text=e.horizontalDistance,this._verticalLabel.text=e.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({visible:e,viewMode:t}){const i=this._segmentLabel,s=this._horizontalLabel,r=this._verticalLabel;if(i.visible=!1,s.visible=!1,r.visible=!1,e)switch(t){case y.Direct:i.visible=!0;break;case y.Triangle:i.visible=!0,s.visible=!0,r.visible=!0;break;case y.ProjectedGeodesic:i.visible=!0;case y.None:}}get _labelsText(){if(this.destroyed)return null;const e=this.messages,t=this.analysisView.result;if(t==null||e==null)return null;const{directDistance:i,horizontalDistance:s,verticalDistance:r}=t,o=this.analysisView.unit,h=d=>({directDistance:"",horizontalDistance:"",verticalDistance:"",...d});switch(o){case"metric":return h({directDistance:i&&lt(e,i),horizontalDistance:s&&lt(e,s),verticalDistance:r&&jt(e,r)});case"imperial":return h({directDistance:i&&at(e,i),horizontalDistance:s&&at(e,s),verticalDistance:r&&Gt(e,r)});default:return h({directDistance:i&&B(e,i,o),horizontalDistance:s&&B(e,s,o),verticalDistance:r&&B(e,r,o)})}}_updateSegmentStripeLength(e){const t=this._segmentVisualElement;e!=null?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(this._triangleOrientationOverride!=null)return this._triangleOrientationOverride;const e=this.visualElementOrientation;return e===P.Auto?this.view.state.camera.aboveGround?P.AboveSegment:P.BelowSegment:e}_requiresGeodesicGuideAt(e){const t=this.view;if(!(t!=null&&t.state))return!1;const i=t.state.camera,s=t.renderCoordsHelper;if(!s)return!1;const r=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/r>=10}get _measurementArrowStripeLength(){const{result:e,unit:t}=this.analysisView;if(e==null)return null;let i=null;const s=e.directDistance;switch(t){case"metric":i=s&&q(s,"meters");break;case"imperial":i=s&&q(s,Qt(s.value,s.unit));break;default:i=s&&q(s,t)}return i==null?null:kt(i.value/30)*Ut(1,i.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0,fe("esri/core/t9n/Units").then(e=>{this.messages=e}).finally(()=>{this.loadingMessages=!1})}get testData(){}};function Ge(e,t,i,s,r){const o=je,h=He;r.projectToRenderScreen(i,o),r.projectToRenderScreen(t,h);const d={segment:"bottom",horizontal:"top",vertical:o[0]<h[0]?"left":"right"};{const c=Ie,p=Ne;if(K(e,i,r,c),K(e,t,r,p),pt(c,p)>=Lt){const n=Math.sign(c[1])===Math.sign(p[1]);d.segment=n?gt(d.vertical):d.vertical}else{const n=ke;K(i,t,r,n),pt(n,p)>=Lt&&(d.segment=Math.sign(n[0])===Math.sign(p[0])?gt(d.horizontal):d.horizontal)}}if(s===P.BelowSegment){const c=p=>p==="top"?"bottom":"top";d.segment=c(d.segment),d.horizontal=c(d.horizontal),d.vertical=c(d.vertical)}return d}a([l()],v.prototype,"_parameters",null),a([l()],v.prototype,"_triangleOrientationOverride",void 0),a([l()],v.prototype,"messages",void 0),a([l()],v.prototype,"view",void 0),a([l()],v.prototype,"analysis",void 0),a([l()],v.prototype,"analysisView",void 0),a([l()],v.prototype,"loadingMessages",void 0),a([l()],v.prototype,"visible",null),a([l()],v.prototype,"viewMode",null),a([l()],v.prototype,"actualVisualizedMeasurement",null),a([l()],v.prototype,"visualElementOrientation",void 0),a([l()],v.prototype,"triangleCollapseRatioThreshold",void 0),a([l()],v.prototype,"allowVisualElementsOrientationChange",null),a([l()],v.prototype,"labels",null),a([l()],v.prototype,"_labelsText",null),a([l()],v.prototype,"_actualVisualElementsOrientation",null),a([l()],v.prototype,"_measurementArrowStripeLength",null),v=a([ot("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],v);const Lt=Math.cos(Wt(12)),je=Et(),He=Et(),Ie=nt(),Ne=nt(),ke=nt();let g=class extends Mt(rt){constructor(e){super(e),this.type="direct-line-measurement-view-3d",this.analysis=null,this.result=null,this.measurementMode=z.Auto,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null}initialize(){const e=this.view,t=this.analysis;this._analysisVisualization=new v({view:e,analysis:t,analysisView:this}),this._analysisController=new $({view:e,analysis:t,viewData:this})}destroy(){this._analysisController=C(this._analysisController),this._analysisVisualization=C(this._analysisVisualization)}get updating(){var e;return!!((e=this._analysisVisualization)!=null&&e.loadingMessages)}get viewMode(){return this._analysisVisualization.viewMode}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(e){this._analysisVisualization.visualElementOrientation=e}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(e){this._analysisVisualization.allowVisualElementsOrientationChange=e}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._analysisVisualization.triangleCollapseRatioThreshold=e}get directLabelText(){var e;return((e=this._analysisVisualization.labels.direct)==null?void 0:e.text)??""}get horizontalLabelText(){var e;return((e=this._analysisVisualization.labels.horizontal)==null?void 0:e.text)??""}get verticalLabelText(){var e;return((e=this._analysisVisualization.labels.vertical)==null?void 0:e.text)??""}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){}};a([l()],g.prototype,"updating",null),a([l({readOnly:!0})],g.prototype,"type",void 0),a([l({constructOnly:!0,nonNullable:!0})],g.prototype,"analysis",void 0),a([l()],g.prototype,"result",void 0),a([l()],g.prototype,"measurementMode",void 0),a([l()],g.prototype,"elevationAlignedStartPoint",void 0),a([l()],g.prototype,"elevationAlignedEndPoint",void 0),a([l({readOnly:!0})],g.prototype,"viewMode",null),a([l({readOnly:!0})],g.prototype,"actualVisualizedMeasurement",null),a([l()],g.prototype,"visualElementOrientation",null),a([l()],g.prototype,"allowVisualElementsOrientationChange",null),a([l()],g.prototype,"triangleCollapseRatioThreshold",null),a([l({readOnly:!0})],g.prototype,"directLabelText",null),a([l({readOnly:!0})],g.prototype,"horizontalLabelText",null),a([l({readOnly:!0})],g.prototype,"verticalLabelText",null),a([l()],g.prototype,"_analysisVisualization",void 0),a([l()],g.prototype,"_analysisController",void 0),a([l()],g.prototype,"unit",null),a([l(Vt)],g.prototype,"_defaultUnit",void 0),g=a([ot("esri.views.3d.analysis.DirectLineMeasurementAnalysisView3D")],g);const Qr=g,We=Object.freeze(Object.defineProperty({__proto__:null,build:Pt},Symbol.toStringTag,{value:"Module"}));export{Qr as default};
