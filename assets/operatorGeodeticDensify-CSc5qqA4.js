const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./OperatorGeodeticDensifyByLength-Cll1KERK.js","./SimpleGeometryCursor-B92kdZ15.js","./Transformation2D-BSBl8u-h.js","./ProjectionTransformation-DzMxxvj3.js","./Accessor-BHnuXKD2.js"])))=>i.map(i=>d[i]);
import{_ as i}from"./index-tefRSezt.js";import{s as a}from"./SimpleGeometryCursor-B92kdZ15.js";import{_ as m,a6 as s,r as _}from"./Point-XGrwlf63.js";let n;function c(){return!!n&&_()}async function y(){if(!c()){const[r,e]=await Promise.all([i(()=>import("./OperatorGeodeticDensifyByLength-Cll1KERK.js"),__vite__mapDeps([0,1,2,3,4]),import.meta.url),i(()=>import("./ProjectionTransformation-DzMxxvj3.js").then(t=>t.aW),__vite__mapDeps([3,2,1,4]),import.meta.url).then(t=>t.aG).then(({injectPe:t})=>t),m()]);n=new r.OperatorGeodeticDensifyByLength,e(s)}}function P(r,e,t,o){return n.execute(r,e,t,o,null)}function d(r,e,t,o){const u=n.executeMany(new a(r),e,t,o,null);return Array.from(u)}function h(){return n.supportsCurves()}export{h as a,d as c,y as i,c as s,P as u};
