import{e as s}from"./Evented-CXIxDjmW.js";import{x as n}from"./Accessor-D6mNnsWy.js";import{p as d}from"./reactiveUtils-BFQ0BtrB.js";import{b as l}from"./subclass-BR3PhgZG.js";import{N as h}from"./DynamicLayerView3D-TRWDlXIS.js";import{m as g}from"./ImageryLayerView-QgEQZbzj.js";import"./shared-B3wH2qpO.js";import"./Extent-DHjqVB-p.js";import"./Point-DB4Hp4hH.js";import"./jsonMap-DCC6W5ex.js";import"./writer-3zufXUNV.js";import"./assets-C2mb-ea2.js";import"./index-CeCSsEgo.js";import"./Polyline-D97hl-6E.js";import"./mathUtils-ClvKsMak.js";import"./RenderGeometry-CXcYvifi.js";import"./vec2f64-Diu2Kaa8.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-CF_CpVBS.js";import"./Texture-CcsX4Ue_.js";import"./NormalAttribute.glsl-Dqf1UPF9.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./compilerUtils-BA04t1lN.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-BMqL_pkg.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./enums-BlUEVwJR.js";import"./Texture-BbJIOVx_.js";import"./basicInterfaces-wONHx_SN.js";import"./vec2-B_ymkwGp.js";import"./mat3-DRqs2t5W.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./mat4-ybYUU6jq.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-B6BGScAS.js";import"./Material-BN_i9QRJ.js";import"./ViewingMode-Dodu7ZZk.js";import"./triangle-B7rKLsGW.js";import"./sphere-7666U3LO.js";import"./plane-Bz78OrLf.js";import"./quatf64-BrpT0VRp.js";import"./mathUtils-kvswLROa.js";import"./lineSegment-BvgMMk26.js";import"./lengthUtils-D7_DvYH0.js";import"./renderState-PYzNpa1K.js";import"./requestImageUtils-DgB0_9qP.js";import"./orientedBoundingBox-COq6pSqo.js";import"./quat-ChS85qAG.js";import"./spatialReferenceEllipsoidUtils-BL8s_3ls.js";import"./computeTranslationToOriginAndRotation-CLzktXYu.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./ElevationProvider-BHZsEIDd.js";import"./boundedPlane-CZE_hxQR.js";import"./verticalOffsetUtils-DaB1QvwW.js";import"./unitConversionUtils-Dl04YuQU.js";import"./hydratedFeatures-Cy9DBeYQ.js";import"./geometry-DpwwkAX1.js";import"./Graphic-Dc7F67nR.js";import"./PopupTemplate-ByHks6sq.js";import"./Clonable-cKbRam6-.js";import"./fieldUtils-CNduWQU9.js";import"./intl-Dpfm8vPB.js";import"./Promise-CZrWwByK.js";import"./enumeration--HlxOQ_N.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./symbols-CsUQ5BxR.js";import"./TextSymbol-gKE-H_J6.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-rJEWaOSN.js";import"./persistableUrlUtils-BcifXQ1Z.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-liet8xHC.js";import"./jsonUtils-Cma_7A64.js";import"./projectVectorToVector-Chzd0Pq0.js";import"./projectPointToVector-D3506wm2.js";import"./projection-A9yUaaTs.js";import"./frustum-DqmLJYYu.js";import"./axisAngleDegrees-CHCWDIqP.js";import"./weather-TVtZwW4o.js";import"./Scheduler-CDoWuxMK.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./Float4DrawUniform-CWdxHXQ-.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-DQVAqpsn.js";import"./InterleavedLayout-UIhsB8jd.js";import"./BufferView-B7Z-dzh4.js";import"./floatRGBA-C8rGFKJ0.js";import"./Intersector-CYIO18dt.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./MemCache-C6WUx-5V.js";import"./VertexArrayObject-Cwnso4un.js";import"./BufferObject-CjYoWxgZ.js";import"./LayerView3D-DMyi427V.js";import"./heightModelInfoUtils-BSzg1Wnl.js";import"./HeightModelInfo-CSXZysDz.js";import"./arcgisLayerUrl-Cgl5IQFD.js";import"./projectExtentUtils-C8xmByoE.js";import"./geometryServiceUtils-K7u_-O-B.js";import"./project-C_6NxEch.js";import"./utils-D61i9O7E.js";import"./utils-Dx8bgRIB.js";import"./ImageMaterial.glsl-RtQG_3xX.js";import"./VertexColor.glsl-lPkEAKYQ.js";import"./DefaultLayouts-Bz7P2wdj.js";import"./ColorMaterial.glsl-CJh1RTEZ.js";import"./LayerView-CbIY_4n2.js";import"./UpdatingHandles-CMtXpTiG.js";import"./layerViewUtils-D2JqIDZ8.js";import"./RefreshableLayerView-BClKL0FL.js";import"./timeSupport-BapPa47N.js";import"./timeUtils-4eYw5pLA.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./utils-CXgSw6Sd.js";import"./tagSymbols-BPcGfZon.js";import"./Query-Cx4awVKu.js";import"./DataLayerSource-6X35yXpo.js";import"./Field-C8SaaeoI.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BNIhEccm.js";import"./popupUtils-sb3Ob2mW.js";let m=class extends g(h){constructor(){super(...arguments),this.type="imagery-3d",this.redrawDebounced=n(async t=>{this.redraw((i,r)=>this._redrawImage(i,r),t)},2e3)}initialize(){this.addHandles([d(()=>this.view.basemapTerrain.ready,()=>this._initializeMaximumDataResolution(),{once:!0,initial:!0}),this.layer.on("redraw",()=>this._updatingHandles.addPromise(this.redrawDebounced()))]),this._updatingHandles.add(()=>{var t,i;return(i=(t=this.layer)==null?void 0:t.exportImageServiceParameters)==null?void 0:i.version},()=>{this._updatingHandles.addPromise(this.refreshDebounced())}),this._updatingHandles.add(()=>{var t;return(t=this.layer)==null?void 0:t.renderer},()=>{this._updatingHandles.addPromise(this.refreshDebounced())}),this._updatingHandles.add(()=>this.timeExtent,()=>this._updatingHandles.addPromise(this.refreshDebounced()))}_initializeMaximumDataResolution(){this.maximumDataResolution=this.layer.loaded?this.layer.serviceRasterInfo.pixelSize:null}getFetchOptions(){return{timeExtent:this.timeExtent}}async processResult(t,i,r){i.imageOrCanvasElement?t.image=i.imageOrCanvasElement:(t.image=document.createElement("canvas"),t.pixelData=i.pixelData,await this._redrawImage(t,r))}async _redrawImage(t,i){if(!(t.image instanceof HTMLCanvasElement)||t.pixelData==null)throw new Error;const r=t.image,p=r.getContext("2d"),a=await this.layer.applyRenderer(t.pixelData,{signal:i}),o=this.layer.applyFilter(a).pixelBlock;if(o==null)throw new Error;r.width=o.width,r.height=o.height;const e=p.createImageData(o.width,o.height);e.data.set(o.getAsRGBA()),p.putImageData(e,0,0)}};m=s([l("esri.views.3d.layers.ImageryLayerView3D")],m);const Ti=m;export{Ti as default};
