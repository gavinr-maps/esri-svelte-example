import{e as p}from"./Evented-CXIxDjmW.js";import{S as F,s,z as E}from"./Accessor-D6mNnsWy.js";import{t as V}from"./memoize-DsJmrG76.js";import{d as c,P as h,v as $}from"./reactiveUtils-BFQ0BtrB.js";import{y as n,b as C}from"./subclass-BR3PhgZG.js";import{y as D}from"./elevationInfoUtils-C0SzfJu0.js";import{j as A,y as I}from"./SnappingManager-DFm0py-D.js";import{o as P,i as z}from"./queryEngineUtils-YM7vbhkh.js";import{i as d,r as G,n as v}from"./symbologySnappingCandidates-DjmIkAOi.js";import"./shared-B3wH2qpO.js";import"./Point-TlcsOcXV.js";import"./jsonMap-DCC6W5ex.js";import"./writer-3zufXUNV.js";import"./assets-BNizZMOZ.js";import"./index-BVncS3aY.js";import"./unitConversionUtils-BUA_O87q.js";import"./lengthUtils-vgIBtB6M.js";import"./projection-tSh-0UvX.js";import"./mathUtils-ClvKsMak.js";import"./Extent-B4rrMrqp.js";import"./Polyline-BQFeqYXi.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./projectVectorToVector-BLdiwuTJ.js";import"./projectPointToVector-C-hGM2ap.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./vec2-B_ymkwGp.js";import"./UpdatingHandles-CMtXpTiG.js";import"./vec2f64-Diu2Kaa8.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./geodesicUtils-DyOqnDq-.js";import"./geometry-CnaxvJsv.js";import"./plane-Bz78OrLf.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./mathUtils-kvswLROa.js";import"./sphere-DIv2hmik.js";import"./mat4-ybYUU6jq.js";import"./geometry2dUtils-BraNT6Fs.js";import"./fieldUtils-C5R42-PY.js";import"./intl-CArXn1et.js";import"./Promise-CZrWwByK.js";import"./FeatureFilter-DqmBE6ye.js";import"./TimeExtent-Dl-qaORu.js";import"./timeUtils-DQR2jUPL.js";import"./Query-BpMwiNVl.js";import"./enumeration--HlxOQ_N.js";import"./jsonUtils-DtWlwXHP.js";import"./DataLayerSource-BX7Ap_tY.js";import"./Field-poIiHWUc.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BhJOgh_r.js";import"./Clonable-cKbRam6-.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./layerUtils-BzjQnEdj.js";import"./InputManager-C4xu1R9l.js";import"./Queue-DpHko4Yk.js";import"./signal-DzOfzcfh.js";import"./keybindings-DYR2fa8r.js";import"./utils-CXgSw6Sd.js";import"./layerViewUtils-D2JqIDZ8.js";import"./geodesicLengthMeasurementUtils-YCCCQWpE.js";import"./screenUtils-PfxkaaMN.js";import"./quantityUtils-Cz8e0KG8.js";import"./geometryEngine-DyRMGqqp.js";import"./geometryEngineBase-RmbNeFm7.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-CRSW297p.js";import"./Cyclical-BY_I03kj.js";import"./VertexSnappingCandidate-DG5gTQ3a.js";import"./PointSnappingHint-DJuRAzp4.js";import"./LRUCache-ju6LnIBZ.js";import"./MemCache-C6WUx-5V.js";let o=class extends F{get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:t}=this,{layer:i}=this.layerSource,e=t!=null&&t.type==="3d";if(!e||i.type==="subtype-group")return d();const r=async(a,l)=>(await E(t.whenLayerView(i),l)).elevationAlignPointsInFeatures(a,l);return d(e,{elevationInfo:i.elevationInfo,alignPointsInFeatures:r})}get _snappingElevationFilter(){const{view:t}=this,i=t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="subtype-group";return G(i)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:i}=this.layerSource;return t!=null&&t.type==="3d"&&i.type!=="subtype-group"?v(this._symbologySnappingSupported,async(e,r)=>{const a=await t.whenLayerView(i);return s(r),a.queryForSymbologySnapping({candidates:e,spatialReference:t.spatialReference},r)}):v()}get _symbologySnappingSupported(){return this._layerView3D!=null&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:t}=this,{layer:i}=this.layerSource;t!=null&&t.type==="3d"&&i.type!=="subtype-group"&&(t.whenLayerView(i).then(e=>this._layerView3D=e),this.addHandles([t.elevationProvider.on("elevation-change",({context:e})=>{const{elevationInfo:r}=i;D(e,r)&&this._snappingElevationAligner.notifyElevationSourceChange()}),c(()=>i.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),h),c(()=>{var e;return this._layerView3D!=null?(e=this._layerView3D.layer)==null?void 0:e.renderer:null},()=>this._symbologySnappingFetcher.notifySymbologyChange(),h),$(()=>{var e;return(e=this._layerView3D)==null?void 0:e.layer},["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())]))}constructor(t){super(t),this.view=null,this._layerView3D=null,this._memoizedMakeGetGroundElevation=V(z)}refresh(){}async fetchCandidates(t,i){var g;const{layer:e}=this.layerSource,r=e.source;if(!(r!=null&&r.querySnapping))return[];const a=A(e),l=I(t,((g=this.view)==null?void 0:g.type)??"2d",a),S=await r.querySnapping(l,{signal:i});s(i);const y=t.coordinateHelper.spatialReference,m=await this._snappingElevationAligner.alignCandidates(S.candidates,y,i);s(i);const u=await this._symbologySnappingFetcher.fetch(m,i);s(i);const w=u.length===0?m:[...m,...u],f=this._snappingElevationFilter.filter(l,w),_=this._memoizedMakeGetGroundElevation(this.view,y);return f.map(b=>P(b,_))}};p([n({constructOnly:!0})],o.prototype,"layerSource",void 0),p([n({constructOnly:!0})],o.prototype,"view",void 0),p([n()],o.prototype,"_snappingElevationAligner",null),p([n()],o.prototype,"_snappingElevationFilter",null),p([n()],o.prototype,"_symbologySnappingFetcher",null),p([n()],o.prototype,"_layerView3D",void 0),p([n()],o.prototype,"_symbologySnappingSupported",null),o=p([C("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],o);export{o as FeatureCollectionSnappingSource};
