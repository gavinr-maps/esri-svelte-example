import"./index-CMxz6F2k.js";import{S as c}from"./jsxFactory-Cnml7uXM.js";import{n as d}from"./ref-D9wHsL_T.js";import{L as m,s as a,x as n,i as h}from"./index-4eY77cms.js";import{b as p}from"./observers-Co4E8E8j.js";import{C as g}from"./dom-DEluURzl.js";import{s as f}from"./useT9n-C1Hrfc-A.js";import"./guid-ejniuQmw.js";import"./Accessor-BmwT4B0c.js";import"./intl-Duiy0OzY.js";import"./Promise-DfET-uns.js";import"./cast-CsZslgGN.js";import"./JSONSupport-DcrLLGjL.js";import"./Evented-Dw4_VOGn.js";import"./reactiveUtils-XM7cS2OP.js";import"./SimpleObservable-CvOkykwM.js";import"./uuid-Cl5lrJ4c.js";import"./directive-helpers-DaBykg1t.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.0.3 */const o={scrim:"scrim",content:"content"},r={s:72,l:480},b=h`:host{position:absolute;inset:0;z-index:var(--calcite-z-index-overlay);display:flex;block-size:100%;inline-size:100%;flex-direction:column;align-items:stretch}@keyframes calcite-scrim-fade-in{0%{--tw-bg-opacity: 0 }to{--tw-text-opacity: 1 }}.scrim{position:absolute;inset:0;display:flex;flex-direction:column;align-content:center;align-items:center;justify-content:center;overflow:hidden;animation:calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;background-color:var(--calcite-scrim-background, var(--calcite-color-transparent-scrim))}.content{padding:1rem}:host([hidden]){display:none}[hidden]{display:none}`,i=class i extends m{constructor(){super(...arguments),this.resizeObserver=p("resize",()=>this.handleResize()),this.hasContent=!1,this.loading=!1,this.messages=f()}connectedCallback(){var e;super.connectedCallback(),(e=this.resizeObserver)==null||e.observe(this.el)}disconnectedCallback(){var e;super.disconnectedCallback(),(e=this.resizeObserver)==null||e.disconnect()}handleDefaultSlotChange(e){this.hasContent=g(e)}storeLoaderEl(e){this.loaderEl=e,this.handleResize()}getScale(e){return e<r.s?"s":e>=r.l?"l":"m"}handleResize(){const{loaderEl:e,el:t}=this;e&&(this.loaderScale=this.getScale(Math.min(t.clientHeight,t.clientWidth)??0))}render(){const{hasContent:e,loading:t,messages:l}=this;return n`<div class=${a(o.scrim)}>${t?n`<calcite-loader .label=${l.loading} .scale=${this.loaderScale} ${d(this.storeLoaderEl)}></calcite-loader>`:null}<div class=${a(o.content)} .hidden=${!e}><slot @slotchange=${this.handleDefaultSlotChange}></slot></div></div>`}};i.properties={hasContent:16,loaderScale:16,loading:7,messageOverrides:0},i.styles=b;let s=i;c("calcite-scrim",s);export{s as Scrim};
