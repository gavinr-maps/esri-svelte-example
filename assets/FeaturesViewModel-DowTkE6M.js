const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngineAsync-D5578A3I.js","./workers-D8Q3pEzK.js","./Accessor-BHnuXKD2.js","./Queue-BOnccek2.js","./SimpleObservable-7oieNGD8.js","./cast-BA_-jlhc.js","./index-tefRSezt.js","./index-Cx51aysm.css","./JSONSupport-CGdeqxpk.js","./intl-Do3GEEJ7.js","./Promise-CmQqe-ke.js","./Point-XGrwlf63.js","./writer-B2bQV2uU.js","./jsonUtils-Cu7OBRmN.js","./Extent-CBBGeHb-.js","./Polyline-BmuD2-ZN.js","./mathUtils-DV9iOXpW.js"])))=>i.map(i=>d[i]);
import{_ as j}from"./index-tefRSezt.js";import{s as y,b2 as G,E as I,B as E,k as H,G as D,r as o,m as l,a as Z}from"./Accessor-BHnuXKD2.js";import{b as q}from"./Graphic-CFXUQZlS.js";import{t as W}from"./ReactiveSet-CoXPgSt3.js";import{d as m,p as V,C as N}from"./reactiveUtils-BR0C1Kq4.js";import{E as Q,j as U,g as k}from"./Point-XGrwlf63.js";import{Q as J,O as K}from"./projection-B2I9Bzj_.js";import{n as R}from"./geometryUtils-3VSSujWc.js";import{o as X}from"./LayerConstants-B33OP6sh.js";import{S as Y}from"./TextSymbol-BQ_NW9Xo.js";import{R as B}from"./symbolUtils-C5ImIHMe.js";import{e as ee}from"./Promise-CmQqe-ke.js";import{n as te}from"./layerViewUtils-tkZ5z_iY.js";import{c as ie}from"./Feature-B-8YZl_M.js";import{n as C,l as P,m as F,r as T,i as M}from"./actions-Bp0YlyZO.js";import{l as se}from"./AnchorElementViewModel-CqI4lmqA.js";import{t as re}from"./GoTo-BsXOAO95.js";const g="esri-features",Re={icon:`${g}__icon`,actionImage:`${g}__action-image`,base:g,container:`${g}__container`,contentContainer:`${g}__content-container`,contentFeature:`${g}__content-feature`,flowItemCollapsed:`${g}__flow-item--collapsed`,header:`${g}__header`,footer:`${g}__footer`,featureMenuObserver:`${g}__feature-menu-observer`,actionExit:`${g}__action--exit`,loader:`${g}__loader`,featuresHeading:`${g}__heading`,paginationText:`${g}__pagination-text`,paginationActionBar:`${g}__pagination-action-bar`,paginationMenuButton:`${g}__pagination-menu-button`,paginationPrevious:`${g}__pagination-previous`,paginationNext:`${g}__pagination-next`},ae="esri.widgets.Popup.PopupViewModel",$=()=>E.getLogger(ae),ne=e=>{const{event:t,view:i,viewModel:s}=e,{action:r}=t;if(!r)return Promise.reject(new y("trigger-action:missing-arguments","Event has no action"));const{disabled:a,id:u}=r;if(!u)return Promise.reject(new y("trigger-action:invalid-action","action.id is missing"));if(a)return Promise.reject(new y("trigger-action:invalid-action","Action is disabled"));if(u===C.id)return le(s).catch(G);if(u===P.id)return ue(s);if(u===F.id)return s.browseClusterEnabled=!s.browseClusterEnabled,s.featureMenuOpen=s.browseClusterEnabled,Promise.resolve();if(u===T.id){s.visible=!1;const{selectedFeature:c}=s;if(!c)return Promise.reject(new y(`trigger-action:${T.id}`,"selectedFeature is required",{selectedFeature:c}));const{sourceLayer:h}=c;return h?h.remove(c):i==null||i.graphics.remove(c),Promise.resolve()}return Promise.resolve()};function O(e){const{selectedFeature:t,location:i,view:s}=e;return s?t??i??null:null}function b(e){var t,i;return!!e&&e.isAggregate&&((i=(t=e.sourceLayer)==null?void 0:t.featureReduction)==null?void 0:i.type)==="cluster"}async function oe(e,t){if((t==null?void 0:t.type)!=="3d"||!e||e.declaredClass!=="esri.Graphic")return!0;const i=t.getViewForGraphic(e);if(i&&"whenGraphicBounds"in i){let s=null;try{s=await i.whenGraphicBounds(e,{useViewElevation:!0})}catch{}return!s||!s.boundingBox||s.boundingBox[0]===s.boundingBox[3]&&s.boundingBox[1]===s.boundingBox[4]&&s.boundingBox[2]===s.boundingBox[5]}return!0}async function le(e,t){var v,w;const{location:i,selectedFeature:s,view:r,zoomFactor:a}=e;await((v=t==null?void 0:t.viewModel)==null?void 0:v.updateGeometry());const u=t==null?void 0:t.graphic,c=u!=null&&u.geometry?u:O(e);if(!r||!c){const f=new y("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:c,view:r});throw $().error(f),f}const h=r.scale/a,d=(u==null?void 0:u.geometry)??((w=e.selectedFeature)==null?void 0:w.geometry)??i,p=d!=null&&d.type==="point"&&await oe(u??s,r);C.active=!0,C.disabled=!0;try{await e.zoomTo({target:{target:c,scale:p?h:void 0}})}catch(f){if(I(f))return;const _=new y("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:u??s});$().error(_)}finally{C.active=!1,C.disabled=!1,e.zoomToLocation=null,p&&(e.location=d)}}async function ue(e){const{selectedFeature:t,view:i}=e;if((i==null?void 0:i.type)!=="2d"){const u=new y("zoomToCluster:invalid-view","View must be 2d MapView.",{view:i});throw $().error(u),u}if(!t||!b(t)){const u=new y("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:t});throw $().error(u),u}const[s,r]=await A(i,t);P.active=!0,P.disabled=!0;const{extent:a}=await s.queryExtent(r);a&&await e.zoomTo({target:a}),P.active=!1,P.disabled=!1}async function ce(e){const{view:t,selectedFeature:i}=e;if(!t||!i)return;const[s,r]=await A(t,i),{extent:a}=await s.queryExtent(r);e.selectedClusterBoundaryFeature.geometry=a,t.graphics.add(e.selectedClusterBoundaryFeature)}async function he(e){const{selectedFeature:t,view:i}=e;if(!i||!t)return;const[s,r]=await A(i,t);F.active=!0,F.disabled=!0;const{features:a}=await s.queryFeatures(r);F.active=!1,F.disabled=!1,F.value=!0;const u={features:[t].concat(a)};(e==null?void 0:e.initialDisplayMode)==="feature"&&(u.featureMenuOpen=!0),e==null||e.open(u)}async function A(e,t){const i=await e.whenLayerView(t.sourceLayer),s=i.createQuery(),r=t.getObjectId();return s.aggregateIds=r!=null?[r]:[],[i,s]}function de(e){F.value=!1;const t=e.features.filter(i=>b(i));t.length&&(e.features=t)}const L="location-scale-handle",pe=()=>[C.clone()],ge=()=>[P.clone(),F.clone()];let x=null;function fe(e,t){return e==="building-scene"||t==="2d"&&(e==="map-image"||e==="tile"||e==="imagery"||e==="imagery-tile")}let n=class extends re(se){constructor(e){super(e),this._pendingPromises=new W,this._fetchFeaturesController=null,this._highlightPromises={"highlight-active-feature":null,"highlight-selected-feature":null},this._selectedClusterFeature=null,this.actions=new M,this.activeFeature=null,this.autoCloseEnabled=!1,this.browseClusterEnabled=!1,this.content=null,this.defaultPopupTemplateEnabled=!1,this.featurePage=null,this.featuresPerPage=20,this.featureMenuOpen=!1,this.featureMenuTitle=null,this.featureViewModelAbilities=null,this.featureViewModels=[],this.highlightEnabled=!0,this.includeDefaultActions=!0,this.initialDisplayMode="feature",this.selectedClusterBoundaryFeature=new q({symbol:new Y({outline:{width:1.5,color:"cyan"},style:"none"})}),this.title=null,this.updateLocationEnabled=!1,this.view=null,this.visible=!1,this.zoomFactor=4,this.zoomToLocation=null,this._debouncedLocationUpdate=H(async t=>{var a,u,c,h;const{spatialReference:i}=this,s=(u=(a=this.selectedFeature)==null?void 0:a.geometry)==null?void 0:u.type,r=this.location??t;if(s&&s!=="mesh"&&i&&r&&this.selectedFeature)if(s!=="point")try{const d=this.selectedFeature;let p=d.geometry;const v=this._getHighlightLayer(d),w=d.getObjectId();if(!v||!this.view)return;if(w){const f=(c=this.view)==null?void 0:c.allLayerViews.find(S=>S.layer.uid===v.uid);if(!f||!("queryFeatures"in f))return;const _=f.createQuery();_.outSpatialReference=i,_.objectIds=[w],_.returnGeometry=!0;const{features:z}=await f.queryFeatures(_);p=(h=z[0])==null?void 0:h.geometry}if(!p||p.type==="mesh")return;if(p=K(p,i),x||(x=await j(()=>import("./geometryEngineAsync-D5578A3I.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),import.meta.url)),!await x.intersects(p,r)){const f=(await x.nearestCoordinate(p,r)).coordinate??r;this.selectedFeature===d&&(this.location=f)}}catch(d){I(d)||E.getLogger(this).error(d)}else this.location=R(this.selectedFeature.geometry)??r})}initialize(){this.addHandles([this.on("view-change",()=>this._autoClose()),m(()=>[this.highlightEnabled,this.selectedFeature,this.visible,this.view],()=>this._highlightSelectedFeature()),m(()=>[this.highlightEnabled,this.activeFeature,this.visible,this.view],()=>this._highlightActiveFeature()),m(()=>{var e,t;return(t=(e=this.view)==null?void 0:e.animation)==null?void 0:t.state},e=>this._animationStateChange(e)),m(()=>this.location,e=>this._locationChange(e)),m(()=>this.selectedFeature,e=>this._selectedFeatureChange(e)),m(()=>[this.selectedFeatureIndex,this.featureCount,this.featuresPerPage],()=>this._selectedFeatureIndexChange()),m(()=>[this.featurePage,this.selectedFeatureIndex,this.featureCount,this.featuresPerPage,this.featureViewModels],()=>this._setGraphicOnFeatureViewModels()),m(()=>this.featureViewModels,()=>this._featureViewModelsChange()),this.on("trigger-action",e=>ne({event:e,viewModel:this,view:this.view})),V(()=>!this.waitingForResult,()=>this._waitingForResultChange(),N),m(()=>[this.features,this.map,this.spatialReference,this.timeZone],()=>this._updateFeatureVMs()),m(()=>{var e;return(e=this.view)==null?void 0:e.scale},()=>this._viewScaleChange()),V(()=>!this.visible,()=>this.browseClusterEnabled=!1),m(()=>this.browseClusterEnabled,e=>e?this.enableClusterBrowsing():this.disableClusterBrowsing())])}destroy(){this._cancelFetchingFeatures(),this._pendingPromises.clear(),this.browseClusterEnabled=!1,this.view=null,this.map=null,this.spatialReference=null,this.timeZone=null}get active(){return!(!this.visible||this.waitingForResult)}get allActions(){const e=this._get("allActions")||new M;e.removeAll();const{actions:t,defaultActions:i,defaultPopupTemplateEnabled:s,includeDefaultActions:r,selectedFeature:a}=this,u=r?i.concat(t):t,c=a&&(typeof a.getEffectivePopupTemplate=="function"&&a.getEffectivePopupTemplate(s)||a.popupTemplate),h=c==null?void 0:c.actions,d=c!=null&&c.overwriteActions?h:(h==null?void 0:h.concat(u))??u;return d==null||d.filter(Boolean).forEach(p=>e.add(p)),e}get defaultActions(){const e=this._get("defaultActions")||new M;return e.removeAll(),e.addMany(b(this.selectedFeature)?ge():pe()),e}get featureCount(){return this.features.length}set features(e){const t=e||[];this._set("features",t);const{pendingPromisesCount:i,promiseCount:s,selectedFeatureIndex:r}=this,a=s&&t.length;this.initialDisplayMode!=="list"?a&&i&&r===-1?this.selectedFeatureIndex=0:a&&r!==-1||(this.selectedFeatureIndex=t.length?0:-1):(!a||a&&i===s)&&(this.selectedFeatureIndex=-1)}set location(e){var r,a;let t=e;const i=(r=this.spatialReference)==null?void 0:r.isWebMercator;((a=e==null?void 0:e.spatialReference)==null?void 0:a.isWGS84)&&i&&(t=Q(e)),this._set("location",t)}get map(){var e;return((e=this.view)==null?void 0:e.map)??null}set map(e){this._override("map",e)}get pendingPromisesCount(){return this._pendingPromises.size}get promiseCount(){return this.promises.length}get promises(){return this._get("promises")||[]}set promises(e){this._pendingPromises.clear(),this.features=[],Array.isArray(e)&&e.length?(this._set("promises",e),(e=e.slice()).forEach(t=>this._pendingPromises.add(t)),e.reduce((t,i)=>t.finally(()=>i.then(s=>{this._pendingPromises.has(i)&&this._updateFeatures(s)}).finally(()=>this._pendingPromises.delete(i)).catch(()=>{})),Promise.resolve())):this._set("promises",[])}get selectedFeature(){const{features:e,selectedFeatureIndex:t}=this;return t===-1?null:e[t]||null}get selectedFeatureIndex(){const e=this._get("selectedFeatureIndex");return typeof e=="number"?e:-1}set selectedFeatureIndex(e){const{featureCount:t}=this;(isNaN(e)||e<0||!t)&&(e=-1),this.activeFeature=null,this._set("selectedFeatureIndex",e)}get selectedFeatureViewModel(){return this.featureViewModels[this.selectedFeatureIndex]||null}get spatialReference(){var e;return((e=this.view)==null?void 0:e.spatialReference)??null}set spatialReference(e){this._override("spatialReference",e)}get state(){const{view:e,map:t}=this;return e?e.ready?"ready":"disabled":t?"ready":"disabled"}get timeZone(){var e;return((e=this.view)==null?void 0:e.timeZone)??ee}set timeZone(e){this._overrideIfSome("timeZone",e)}get waitingForContents(){return this.featureViewModels.some(e=>e.waitingForContent)}get waitingForResult(){return!(!(this._fetchFeaturesController||this.pendingPromisesCount>0)||this.featureCount!==0)}centerAtLocation(){const{view:e}=this,t=O(this);return t&&e?this.callGoTo({target:{target:t,scale:e.scale}}):Promise.reject(new y("center-at-location:invalid-target-or-view","Cannot center at a location without a target and view.",{target:t,view:e}))}zoomTo(e){return this.callGoTo(e)}clear(){this.set({promises:[],features:[],content:null,title:null,location:null,activeFeature:null})}fetchFeatures(e,t){var s;const{view:i}=this;if(!i||!e)throw new y("fetch-features:invalid-screenpoint-or-view","Cannot fetch features without a screenPoint and view.",{screenPoint:e,view:i});return i.fetchPopupFeatures(e,{pointerType:(s=t==null?void 0:t.event)==null?void 0:s.pointerType,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,signal:t==null?void 0:t.signal})}open(e){const t={updateLocationEnabled:!1,promises:[],fetchFeatures:!1,...e,visible:!0},{fetchFeatures:i}=t;delete t.fetchFeatures,i&&this._setFetchFeaturesPromises(t.location);const s=["actionsMenuOpen","collapsed"];for(const r of s)delete t[r];this.set(t)}triggerAction(e){const t=this.allActions.at(e);t&&!t.disabled&&this.emit("trigger-action",{action:t})}next(){return this.selectedFeatureIndex=this._getRoundRobinIndex(this.selectedFeatureIndex+1,this.featureCount),this}previous(){return this.selectedFeatureIndex=this._getRoundRobinIndex(this.selectedFeatureIndex-1,this.featureCount),this}disableClusterBrowsing(){de(this),this._clearBrowsedClusterGraphics()}async enableClusterBrowsing(){const{view:e,selectedFeature:t}=this;(e==null?void 0:e.type)==="2d"?b(t)?(await ce(this),await he(this)):E.getLogger(this).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.",t):E.getLogger(this).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.",t)}handleViewClick(e){this._fetchFeaturesAndOpen(e)}_getRoundRobinIndex(e,t){return(e+t)%t}_animationStateChange(e){this.zoomToLocation||(C.disabled=e==="waiting-for-target")}_clearBrowsedClusterGraphics(){var t,i;const e=[this.selectedClusterBoundaryFeature,this._selectedClusterFeature].filter(D);(i=(t=this.view)==null?void 0:t.graphics)==null||i.removeMany(e),this._selectedClusterFeature=null,this.selectedClusterBoundaryFeature.geometry=null}_viewScaleChange(){if(b(this.selectedFeature))return this.browseClusterEnabled=!1,this.visible=!1,void this.clear();this.browseClusterEnabled&&(this.features=this.selectedFeature?[this.selectedFeature]:[])}_locationChange(e){const{selectedFeature:t,updateLocationEnabled:i,view:s}=this;s&&i&&e&&(!t||t.geometry)&&this.centerAtLocation()}_selectedFeatureIndexChange(){this.featurePage=this.featureCount>0?Math.floor((this.selectedFeatureIndex+1)/this.featuresPerPage):null}_featureViewModelsChange(){this.featurePage=this.featureCount>0?1:null}_setGraphicOnFeatureViewModels(){const{features:e,featureCount:t,featurePage:i,featuresPerPage:s,featureViewModels:r}=this;if(i==null)return;const a=((i-1)*s+t)%t,u=a+s;r.slice(a,u).forEach((c,h)=>{c&&(c.graphic??(c.graphic=e[a+h]))})}async _selectedFeatureChange(e){var a,u;const{location:t,updateLocationEnabled:i,view:s}=this;if(!e||!s)return;if(this.browseClusterEnabled)return this._selectedClusterFeature&&(s.graphics.remove(this._selectedClusterFeature),this._selectedClusterFeature=null),b(e)?void 0:(e.symbol=await B(e),this._selectedClusterFeature=e,void s.graphics.add(this._selectedClusterFeature));const r=(a=e.sourceLayer)==null?void 0:a.type;if(r!=="map-image"&&r!=="imagery"&&r!=="imagery-tile"||(e.symbol=await B(e)),!i&&t||!e.geometry){if(i&&!e.geometry){await this.centerAtLocation();const c=(u=s.center)==null?void 0:u.clone();c&&(this.location=c)}}else this.location=R(e.geometry)}_waitingForResultChange(){!this.featureCount&&this.promises&&(this.visible=!1)}async _setFetchFeaturesPromises(e){const{pendingFeatures:t}=await this._fetchFeaturesWithController({mapPoint:e});this.promises=t}_destroyFeatureVMs(){this.featureViewModels.forEach(e=>e&&!e.destroyed&&e.destroy()),this._set("featureViewModels",[])}_updateFeatureVMs(){const{selectedFeature:e,features:t,featureViewModels:i,view:s,spatialReference:r,map:a,timeZone:u,location:c}=this;if(b(t[0])||(this.browseClusterEnabled=!1),this._destroyFeatureVMs(),!(t!=null&&t.length))return;const h=i.slice(),d=[];t.forEach((p,v)=>{if(!p)return;let w=null;if(h.some((f,_)=>(f&&f.graphic===p&&(w=f,h.splice(_,1)),!!w)),w)d[v]=w;else{const f=new ie({abilities:this.featureViewModelAbilities,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,spatialReference:r,graphic:p===e?p:null,location:c,map:a,view:s,timeZone:u});d[v]=f}}),h.forEach(p=>p&&!p.destroyed&&p.destroy()),this._set("featureViewModels",d)}async _getScreenPoint(e,t){const{spatialReference:i,view:s}=this;if(!s)return null;await(s==null?void 0:s.when());const r=e==null?void 0:e.spatialReference;return r&&i?(await J(r,i,null,t),s.toScreen(e)):null}_cancelFetchingFeatures(){const e=this._fetchFeaturesController;e&&e.abort(),this._fetchFeaturesController=null}async _projectScreenPointAndFetchFeatures({mapPoint:e,screenPoint:t,event:i,signal:s}){return this.fetchFeatures(t??await this._getScreenPoint(e??this.location,{signal:s}),{signal:s,event:i})}_fetchFeaturesWithController({mapPoint:e,screenPoint:t,event:i}){this._cancelFetchingFeatures();const s=new AbortController,{signal:r}=s;this._fetchFeaturesController=s;const a=this._projectScreenPointAndFetchFeatures({mapPoint:e,screenPoint:t,signal:r,event:i});return a.catch(()=>{}).then(()=>{this._fetchFeaturesController=null}),a}async _fetchFeaturesAndOpen(e){const{mapPoint:t,screenPoint:i}=e,{view:s}=this;this.removeHandles(L),this.addHandles([m(()=>{var a;return(a=this.view)==null?void 0:a.scale},()=>this._debouncedLocationUpdate(t).catch(a=>{I(a)||E.getLogger(this).error(a)})),V(()=>!this.visible,()=>{this.removeHandles(L)},{once:!0})],L);const{pendingFeatures:r}=await this._fetchFeaturesWithController({mapPoint:t,screenPoint:i,event:e});s!=null&&s.popup&&"open"in s.popup&&s.popup.open({location:t??void 0,promises:r})}_autoClose(){this.autoCloseEnabled&&(this.visible=!1)}async _getLayerView(e,t){return await e.when(),e.whenLayerView(t)}_getHighlightLayer(e){const{layer:t,sourceLayer:i}=e;return i&&"layer"in i&&i.layer?i.layer:(i==null?void 0:i.type)==="map-notes"||(i==null?void 0:i.type)==="subtype-group"?i:t}_getHighlightLayerView(e,t){return t.type==="subtype-sublayer"&&t.parent&&this._mapIncludesLayer(t.parent)?this._getLayerView(e,t.parent):t&&this._mapIncludesLayer(t)?this._getLayerView(e,t):null}_getHighlightTarget(e,t,i){if(fe(t.type,i))return e;const s=e.getObjectId();if(s!=null)return s;const r=t.type==="imagery"?void 0:"objectIdField"in t?t.objectIdField||X:null,a=e.attributes;return a&&r&&a[r]||e}_mapIncludesLayer(e){var t,i;return!!((i=(t=this.map)==null?void 0:t.allLayers)!=null&&i.includes(e))}async _highlightFeature(e,t){this.removeHandles(e);const i=this[t];if(!i)return;const{highlightEnabled:s,view:r,visible:a}=this;if(!r||!s||!a)return;const u=this._getHighlightLayer(i);if(!u)return;const c=this._getHighlightLayerView(r,u);if(!c)return;this._highlightPromises[e]=c;const h=await c;if(!(h&&te(h)&&this._highlightPromises[e]===c&&this[t]&&this.highlightEnabled))return;const d=h.highlight(this._getHighlightTarget(i,u,r.type));this.addHandles(d,e)}async _highlightActiveFeature(){return this._highlightFeature("highlight-active-feature","activeFeature")}async _highlightSelectedFeature(){return this._highlightFeature("highlight-selected-feature","selectedFeature")}_updateFeatures(e){const{features:t}=this,i=e.filter(s=>!t.includes(s));i!=null&&i.length&&(this.features=t.concat(i))}};o([l()],n.prototype,"_fetchFeaturesController",void 0),o([l({type:M})],n.prototype,"actions",void 0),o([l({readOnly:!0})],n.prototype,"active",null),o([l()],n.prototype,"activeFeature",void 0),o([l({readOnly:!0})],n.prototype,"allActions",null),o([l()],n.prototype,"autoCloseEnabled",void 0),o([l()],n.prototype,"browseClusterEnabled",void 0),o([l()],n.prototype,"content",void 0),o([l({type:M,readOnly:!0})],n.prototype,"defaultActions",null),o([l({type:Boolean})],n.prototype,"defaultPopupTemplateEnabled",void 0),o([l({readOnly:!0})],n.prototype,"featureCount",null),o([l()],n.prototype,"featurePage",void 0),o([l({value:[]})],n.prototype,"features",null),o([l()],n.prototype,"featuresPerPage",void 0),o([l()],n.prototype,"featureMenuOpen",void 0),o([l()],n.prototype,"featureMenuTitle",void 0),o([l()],n.prototype,"featureViewModelAbilities",void 0),o([l({readOnly:!0})],n.prototype,"featureViewModels",void 0),o([l()],n.prototype,"highlightEnabled",void 0),o([l()],n.prototype,"includeDefaultActions",void 0),o([l()],n.prototype,"initialDisplayMode",void 0),o([l({type:U})],n.prototype,"location",null),o([l()],n.prototype,"map",null),o([l({readOnly:!0})],n.prototype,"pendingPromisesCount",null),o([l({readOnly:!0})],n.prototype,"promiseCount",null),o([l()],n.prototype,"promises",null),o([l({readOnly:!0})],n.prototype,"selectedClusterBoundaryFeature",void 0),o([l({value:null,readOnly:!0})],n.prototype,"selectedFeature",null),o([l({value:-1})],n.prototype,"selectedFeatureIndex",null),o([l({readOnly:!0})],n.prototype,"selectedFeatureViewModel",null),o([l({type:k})],n.prototype,"spatialReference",null),o([l({readOnly:!0})],n.prototype,"state",null),o([l()],n.prototype,"timeZone",null),o([l()],n.prototype,"title",void 0),o([l()],n.prototype,"updateLocationEnabled",void 0),o([l()],n.prototype,"view",void 0),o([l()],n.prototype,"visible",void 0),o([l({readOnly:!0})],n.prototype,"waitingForContents",null),o([l({readOnly:!0})],n.prototype,"waitingForResult",null),o([l()],n.prototype,"zoomFactor",void 0),o([l()],n.prototype,"zoomToLocation",void 0),o([l()],n.prototype,"centerAtLocation",null),n=o([Z("esri.widgets.Features.FeaturesViewModel")],n);const Be=n;export{Be as D,le as f,Re as n};
