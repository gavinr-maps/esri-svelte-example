import{e as a}from"./Evented-CXIxDjmW.js";import{k as w,n as y,y as u,b as I}from"./subclass-BR3PhgZG.js";import{b as l}from"./Accessor-D6mNnsWy.js";import{G as V}from"./Point-TlcsOcXV.js";import{c as H}from"./GraphicsCollection-B0IuEpT5.js";import"./colorUtils-D5nOabzP.js";import"./mathUtils-ClvKsMak.js";import"./Extent-B4rrMrqp.js";import"./TextSymbol-zZq0BA1M.js";import"./Polyline-BQFeqYXi.js";import"./GeometryUtils-CXWuBstD.js";import"./CIMSymbolHelper-Ei9DhmLE.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./vec2f32-BbH2jxlN.js";import"./defaults-CIM29kXM.js";import"./OverrideHelper-0-cH6aQ2.js";import"./floatRGBA-C8rGFKJ0.js";import"./EffectView-D2q0Wr_W.js";import"./Container-BQo1Tfto.js";import"./WGLContainer-BPPb4wqa.js";import"./vec4f32-CjrfB-0a.js";import"./Texture-BbJIOVx_.js";import"./enums-BlUEVwJR.js";import"./Program-BE7XUO18.js";import"./DefaultVertexAttributeLayouts-BIPVF1RK.js";import"./LabelMetric-Agz2doNK.js";import"./StyleDefinition-BK3ROBTO.js";import"./enums-BRzLM11V.js";import"./MagnifierPrograms-DQDTAYgp.js";import"./assets-BNizZMOZ.js";import"./pbf-CmaozfCN.js";import"./FeatureCommandQueue-CXv6tVJy.js";import"./UpdateTracking2D-CBckaO4D.js";import"./PieChartMeshWriter-6zNUQ6Fs.js";import"./aaBoundingBox-BGxkJAW0.js";import"./Color-DDUWtbqR.js";import"./renderState-PYzNpa1K.js";import"./interfaces-B8ge7Jg9.js";import"./testSVGPremultipliedAlpha-CKx7iZPZ.js";import{V as v}from"./GraphicsView2D-u2hXgWGU.js";import"./reactiveUtils-BFQ0BtrB.js";import"./earcut-BqgeR2O3.js";import"./vec3f32-Cw9Q6TO_.js";import"./normalizeUtilsCommon-DNPu20r0.js";import"./geometry-CnaxvJsv.js";import"./UpdatingHandles-CMtXpTiG.js";import{r as T,o as g,n as f}from"./imageUtils-CL2bLt2Z.js";import{f as q}from"./LayerView2D-Dn0gqiP2.js";import{h as b}from"./HighlightGraphicContainer-DicKqNIZ.js";import{h as U,m as C,r as Q}from"./TileStrategy-Dx1mrlzq.js";import{e as d}from"./TileKey-CIqLSCov.js";import{y as S}from"./LayerView-CbIY_4n2.js";import{i as P}from"./RefreshableLayerView-BClKL0FL.js";import{U as k,_ as G}from"./MapServiceLayerViewHelper-DYMcPhwY.js";import{r as L}from"./drapedUtils-BgWOavfo.js";import"./jsonMap-DCC6W5ex.js";import"./writer-3zufXUNV.js";import"./index-BVncS3aY.js";import"./Graphic-Bi5hWHps.js";import"./PopupTemplate-D8mXPxzU.js";import"./Clonable-cKbRam6-.js";import"./fieldUtils-C5R42-PY.js";import"./intl-CArXn1et.js";import"./Promise-CZrWwByK.js";import"./enumeration--HlxOQ_N.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./symbols-CfvYGR4J.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-DCqdz-K4.js";import"./jsonUtils-DtWlwXHP.js";import"./shared-B3wH2qpO.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CILP_6vp.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./utils-D8D39sLt.js";import"./mat2d-DPkeMmgR.js";import"./mat2df32-orApM5a3.js";import"./vec2-B_ymkwGp.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./defaultsJSON-GKolV7NZ.js";import"./quantizationUtils-DFd0XKEL.js";import"./parser-BN6zmHl-.js";import"./colorUtils-CS9vdHXB.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./DefaultUI-Cy6B6U3V.js";import"./jsxFactory-Be5PKa9i.js";import"./uuid-fwrPAdZb.js";import"./InputManager-C4xu1R9l.js";import"./Queue-DpHko4Yk.js";import"./signal-DzOfzcfh.js";import"./Map-D9sO0Jqv.js";import"./Basemap-CKBB4cRW.js";import"./loadAll-z9YY33Kx.js";import"./PortalItem-CaeKabGc.js";import"./writeUtils-BUKZUL8X.js";import"./layerUtils-BzjQnEdj.js";import"./Ground-CSI-YC3C.js";import"./compilerUtils-BA04t1lN.js";import"./CollectionFlattener-CkyePFnC.js";import"./editableLayers-BdCikvlg.js";import"./catalogUtils--o1nDhfl.js";import"./basemapUtils-fcYt_ePc.js";import"./TablesMixin-BWPSKW45.js";import"./Layer-CfUiPX3n.js";import"./TimeExtent-Dl-qaORu.js";import"./timeUtils-DQR2jUPL.js";import"./HeightModelInfo-CzO-kRMK.js";import"./ReactiveMap-Dl_3-Rm5.js";import"./Query-BpMwiNVl.js";import"./DataLayerSource-BX7Ap_tY.js";import"./Field-poIiHWUc.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BhJOgh_r.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BGG3AyYa.js";import"./a11yUtils-DwloBVAu.js";import"./heightModelInfoUtils-C5nNknML.js";import"./arcgisLayerUrl-ETqee4Bd.js";import"./ViewingMode-Dodu7ZZk.js";import"./projection-tSh-0UvX.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-COYT31Am.js";import"./Compass-eoZ7sbNQ.js";import"./utils-DsJqvptN.js";import"./GoTo-CyjNnle5.js";import"./NavigationToggle-Dune4J79.js";import"./Zoom-BgowPovH.js";import"./DisplayObject-DFOkWAgp.js";import"./highlightReasons-CQmHiFo_.js";import"./HighlightOptions-BG8_qaKQ.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./BufferObject-CjYoWxgZ.js";import"./VertexArrayObject-Cwnso4un.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./WGLBrushVTLSymbol-BVZwlPlb.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-wM3hmZl7.js";import"./mat3-DRqs2t5W.js";import"./vec2f64-Diu2Kaa8.js";import"./featureConversionUtils-B-SknPj_.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./MapView-qZukyD5W.js";import"./Viewpoint-7_owAOZm.js";import"./Cyclical-BY_I03kj.js";import"./workers-D8NOwm_V.js";import"./TileInfo-Dm24FfTU.js";import"./TileKey-DZd6gJy7.js";import"./viewpointUtils-m5ps6MiV.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-CuTX3yb4.js";import"./utils-Blh5cXWv.js";import"./utils-Bh7lx_TM.js";import"./unitBezier-BX6NeAEr.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-Ds8mXmIZ.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-BezdLLOX.js";import"./labelFormatUtils-CJcADR3o.js";import"./labelUtils-Cczy0uDR.js";import"./FieldsIndex-DHql50vu.js";import"./UnknownTimeZone-D0GlcniK.js";import"./TimeOnly-BtK5SiqG.js";import"./centroid-DdLmOD72.js";import"./diffUtils--7ofoPN-.js";import"./timeSupport-86-Lo3YD.js";import"./json-Wa8cmqdu.js";import"./ZoomMomentumEstimator-BjFm7M7Z.js";import"./heatmapTextureUtils-DhR7tWLr.js";import"./constants-D5zmR9t2.js";import"./lengthUtils-vgIBtB6M.js";import"./QueueProcessor-Bu6RBZRX.js";import"./BindType-BmZEZMMh.js";import"./Util-BMqL_pkg.js";import"./TurboLine-DWtK5y8s.js";import"./basicInterfaces-wONHx_SN.js";import"./normalizeUtilsSync-DD8htqGn.js";import"./Bitmap-UVG-lDis.js";import"./TileContainer-nXcbD7rd.js";import"./ClipRect-CkQqwQzT.js";import"./layerViewUtils-D2JqIDZ8.js";import"./AGraphicContainer-DV1awRM6.js";import"./TechniqueInstance-CdE5J-S7.js";import"./scaleUtils-C_vWi-B7.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-_xnIyjYh.js";import"./popupUtils-BA90ku9o.js";const F=[0,0];let m=class extends P(T(q(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new H,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new U(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new C({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new Q({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),k(this,this.layer)){const e=this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new G({createFetchPopupFeaturesQueryGeometry:(r,o)=>L(r,o,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,o)=>{e.graphicUpdateHandler({graphic:r,property:o})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):w()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return V((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(F,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:o=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(p){if(!l(p)&&!this.resampling)return g(this._tileInfoView.tileInfo.size);if(o<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const c=new d(n),_=await this.fetchTile(c,{...i,resamplingLevel:o+1});return f(this._tileInfoView,_,c,t)}}throw p}const h=new d(0,0,0,0);let s;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,h,{signal:r}),h.level!==t.level&&!this.resampling)return g(this._tileInfoView.tileInfo.size);s=await this._fetchImage(h,r)}catch(p){if(l(p))throw p;s=await this._fetchImage(t,r)}return this.resampling?f(this._tileInfoView,s,h,t):s}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||y.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};a([u()],m.prototype,"resampling",null),a([u()],m.prototype,"tilemapCache",null),m=a([I("esri.views.2d.layers.TileLayerView2D")],m);const br=m;export{br as default};
