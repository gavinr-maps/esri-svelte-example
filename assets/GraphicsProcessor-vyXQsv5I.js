import{e as n}from"./Evented-CXIxDjmW.js";import{d as c}from"./Graphic-Bi5hWHps.js";import{S as m,b as f,u as d}from"./Accessor-D6mNnsWy.js";import{d as y,C as b,V as C,A as w}from"./reactiveUtils-BFQ0BtrB.js";import{y as a,b as V,k as u}from"./subclass-BR3PhgZG.js";import{d as v}from"./diffUtils--7ofoPN-.js";import{h as E}from"./UpdatingHandles-CMtXpTiG.js";import{f as S}from"./Layer-CfUiPX3n.js";import{c as _}from"./hydratedFeatures-DHwl8sGq.js";import{i as x,l as O,r as P}from"./WaterSurface.glsl-BpeZRtH_.js";import{b as G}from"./Query-BpMwiNVl.js";import{e as A,C as $}from"./RenderGeometry-C4TY81Cr.js";import{z as H,p as I,u as z,s as R,a as D}from"./Graphics3DObjectStates-BAOAOP8E.js";import{P as j}from"./ColorMaterial.glsl-8RSfQ59m.js";import{t as h}from"./basicInterfaces-wONHx_SN.js";let r=class extends m{constructor(i){super(i),this.type="graphics-3d",this.graphicsCore=null,this.drapeSourceType=A.Features,this.scaleVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this._suspendResumeExtent=null,this._updatingHandles=new E}initialize(){const{layer:i}=this,t="effectiveScaleRange"in i?i:null,o=this.scaleVisibilityEnabled&&t!=null,s=new H({owner:this,layer:this.owner.layer,preferredUpdatePolicy:$.SYNC,graphicSymbolSupported:!0,componentFactories:{elevationAlignment:(e,l)=>new I({graphicsCoreOwner:this,graphicsCore:e,queryGraphicUIDsInExtent:l,elevationProvider:this.view.elevationProvider}),scaleVisibility:o?(e,l)=>new z({graphicsCoreOwner:this,layer:t,queryGraphicUIDsInExtent:l,graphicsCore:e,basemapTerrain:this.owner.view.basemapTerrain}):null,objectStates:e=>new R(e)}});if(this._set("graphicsCore",s),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new D({graphicsCoreOwner:this})),"fullOpacity"in this.owner){const e=this.owner;this._updatingHandles.add(()=>e.fullOpacity,()=>this.graphicsCore.opacityChange())}if("elevationInfo"in i){const e=i;this._updatingHandles.add(()=>e.elevationInfo,(l,p)=>{v(l,p)&&this._updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())})}this._set("initializePromise",this._initializeAsync()),this._updatingHandles.addPromise(this.initializePromise)}async _initializeAsync(){try{await this.graphicsCore.initializePromise}catch(i){if(f(i))return;throw i}this.destroyed||(this.addHandles(y(()=>this.view.clippingArea,()=>this._updateClippingExtent(),b)),this._updateClippingExtent(),this._setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics())}destroy(){this._updatingHandles.destroy(),this._set("frustumVisibility",d(this.frustumVisibility)),this._set("graphicsCore",d(this.graphicsCore))}get layer(){return this.owner.layer}get view(){return this.owner.view}get scaleVisibility(){var i;return(i=this.graphicsCore)==null?void 0:i.scaleVisibility}get elevationAlignment(){var i;return(i=this.graphicsCore)==null?void 0:i.elevationAlignment}get scaleVisibilitySuspended(){return!(this.scaleVisibility==null||!this.scaleVisibility.suspended)}get frustumVisibilitySuspended(){return this.frustumVisibility!=null&&this.frustumVisibility.suspended}get suspended(){return this.owner.suspended??!1}get updating(){var i;return!!((i=this.graphicsCore)!=null&&i.updating||this.scaleVisibility!=null&&this.scaleVisibility.updating||this.frustumVisibility!=null&&this.frustumVisibility.updating||this._updatingHandles.updating)}get graphics3DGraphics(){var i;return(i=this.graphicsCore)==null?void 0:i.graphics3DGraphics}get graphics3DGraphicsByObjectID(){var i;return(i=this.graphicsCore)==null?void 0:i.graphics3DGraphicsByObjectID}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner.fullOpacity??1}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}notifyGraphicGeometryChanged(i){this.graphicsCore.notifyGraphicGeometryChanged(i)}notifyGraphicVisibilityChanged(i){this.graphicsCore.notifyGraphicVisibilityChanged(i)}getRenderingInfo(i,t,o){const s=x(i,{renderer:t,arcade:o});if(s!=null&&s.color){const e=s.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}return s}getRenderingInfoAsync(i,t,o,s){return O(i,{renderer:t,arcade:o,...s})}getHit(i){if(this.owner.loadedGraphics){const t=this.owner.loadedGraphics.find(o=>o.uid===i);if(t){const o=this.layer instanceof S?this.layer:null,s=_(t,o);return{type:"graphic",graphic:s,layer:s.layer}}}return null}whenGraphicBounds(i,t){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(i,t):Promise.reject()}computeAttachmentOrigin(i,t){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(i,t):null}getSymbolLayerSize(i,t){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(i,t):null}maskOccludee(i){var e;const t=(e=this.graphicsCore)==null?void 0:e.objectStates;if(!t)return u();const{set:o,handle:s}=t.acquireSet(h.MaskOccludee,null);return t.setUid(o,i.uid),s}highlight(i){var o;const t=(o=this.graphicsCore)==null?void 0:o.objectStates;if(!t)return u();if(i instanceof G)return g;if(typeof i=="number")return this.highlight([i]);if(i instanceof c)return this.highlight([i]);if(i instanceof C&&(i=i.toArray()),Array.isArray(i)&&i.length>0){if(i[0]instanceof c){const s=i.map(p=>p.uid),{set:e,handle:l}=t.acquireSet(h.Highlight,null);return t.setUids(e,s),l}if(typeof i[0]=="number"){const s=i,{set:e,handle:l}=t.acquireSet(h.Highlight,null);return t.setObjectIds(e,s),l}}return g}_setupSuspendResumeExtent(){const{scaleVisibility:i,frustumVisibility:t}=this;if(i==null&&t==null)return;const o=({computedExtent:s,extentPadding:e})=>{this._suspendResumeExtent=j(s,this._suspendResumeExtent,P,e),i!=null&&i.setExtent(this._suspendResumeExtent),t!=null&&t.setExtent(this._suspendResumeExtent)};this.addHandles(y(()=>{var s,e;return{computedExtent:(s=this.graphicsCore)==null?void 0:s.computedExtent,extentPadding:(e=this.graphicsCore)==null?void 0:e.extentPadding}},s=>o(s),w))}_updateClippingExtent(){const i=this.view.clippingArea;this.graphicsCore.setClippingExtent(i,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics()}};n([a()],r.prototype,"type",void 0),n([a({constructOnly:!0})],r.prototype,"owner",void 0),n([a()],r.prototype,"layer",null),n([a()],r.prototype,"view",null),n([a({constructOnly:!0})],r.prototype,"graphicsCore",void 0),n([a()],r.prototype,"scaleVisibility",null),n([a({constructOnly:!0})],r.prototype,"frustumVisibility",void 0),n([a()],r.prototype,"elevationAlignment",null),n([a()],r.prototype,"scaleVisibilitySuspended",null),n([a({readOnly:!0})],r.prototype,"frustumVisibilitySuspended",null),n([a()],r.prototype,"suspended",null),n([a({readOnly:!0})],r.prototype,"updating",null),n([a()],r.prototype,"loadedGraphics",null),n([a()],r.prototype,"fullOpacity",null),n([a()],r.prototype,"slicePlaneEnabled",null),n([a()],r.prototype,"drapeSourceType",void 0),n([a()],r.prototype,"updatePolicy",null),n([a({constructOnly:!0})],r.prototype,"scaleVisibilityEnabled",void 0),n([a({constructOnly:!0})],r.prototype,"frustumVisibilityEnabled",void 0),n([a()],r.prototype,"initializePromise",void 0),r=n([V("esri.views.3d.layers.graphics.GraphicsProcessor")],r);const g=u();export{r as O};
