import{r as i}from"./tslib.es6-B3Jf3DVX.js";import"./geometry-D964gYQX.js";import{d as G}from"./Graphic-DsxsIjhH.js";import"./symbols-CNimns--.js";import{V as w}from"./Collection-CEdjem1-.js";import{m as n,a as C,g as N,b as B,c as F,s as L}from"./subclass-BZA_h8Db.js";import{S as W}from"./MultiOriginJSONSupport-B5nfqtQh.js";import{o as c,r as k}from"./writer-DNAwXnhG.js";import{V as S,J as z,_ as A,W as K,K as V}from"./projection-B971H0Re.js";import{D as I,j as J,I as M,i as R,K as $}from"./Polyline-D9YkgmM_.js";import{R as q}from"./normalizeUtils-EVmAQ-ak.js";import{g as h,s as H}from"./Point-Cg0-ChZE.js";import U from"./FeatureLayer-wa_7EIxE.js";import X from"./GraphicsLayer-i3FeUJ_n.js";import Q from"./Layer-CVt7Hb5J.js";import{n as Y}from"./objectIdUtils-4dd1rf9p.js";import{l as Z}from"./BlendLayer-CXM4n_Ge.js";import{b as ee}from"./OperationalLayer-CVyVfSPu.js";import{j as te}from"./PortalLayer-CKja4bdW.js";import{t as re}from"./ScaleRangeLayer-Bb8Ig1Hz.js";import{y as D}from"./Field-ybkHhtnK.js";import{S as oe,d as ie,y as T,m as le}from"./TextSymbol-D8QO_KUV.js";import{w as pe}from"./Extent-Bf3YTe7m.js";import"./jsonMap-0cxwUWs2.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./Accessor-BLX9ikPh.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./cast-Bjksrh93.js";import"./fieldUtils-tmQlKvWo.js";import"./intl-CChhNOV8.js";import"./date-DlqISzcw.js";import"./locale-C9TlLpzi.js";import"./messages-OmQvZhAg.js";import"./mathUtils-C4_ghTv4.js";import"./enumeration-Ba5njXdz.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./reactiveUtils-C5zUhJQJ.js";import"./asyncUtils-CWX51uTe.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./jsonUtils-CEfjT-BK.js";import"./screenUtils-_ZIvrt5o.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./vec3f64-BLpZdpfb.js";import"./aaBoundingBox-BE7cC1jD.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./Portal-C10FKnaA.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./normalizeUtilsCommon-dT81xWiM.js";import"./utils-6jMaHUrH.js";import"./utils-Bema0iXE.js";import"./ClassBreaksRenderer-BuHwSyVK.js";import"./UniqueValueRenderer-BQtAHUSo.js";import"./diffUtils-BP7jmOAy.js";import"./colorRamps-pKd7I5WZ.js";import"./SizeVariable-936USOrb.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DX1kS9Se.js";import"./compilerUtils-Dw3R0f-Z.js";import"./lengthUtils-DL1-FDQQ.js";import"./ColorStop-Dk3U5tCk.js";import"./jsonUtils-Ds2Sqto-.js";import"./layerUtils-BrNoooE9.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./RendererLegendOptions-B-4se3aU.js";import"./styleUtils-BYTm14n3.js";import"./jsonUtils-DxpLMo6d.js";import"./LRUCache-B_PHMSGm.js";import"./MemCache-Dx1v3xLC.js";import"./Version-BSlAgupz.js";import"./FieldsIndex-DpwHKAMX.js";import"./UnknownTimeZone-BkowvBs8.js";import"./OverrideHelper-ti072FkP.js";import"./colorUtils-aL8wj-8G.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-D2PLyMFF.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-uj_P09aO.js";import"./HeatmapColorStop-BJc5nbwr.js";import"./heatmapUtils-Dwiv9IEa.js";import"./SimpleRenderer-BV2L9G_n.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureLayerBase-Ck7-w8TE.js";import"./formUtils-ylzKAM7E.js";import"./HeightModelInfo-9nOoV6LU.js";import"./arcgisLayerUrl-BX1FE5Hm.js";import"./commonProperties-CPyIG_-u.js";import"./ElevationInfo-CA5m_tHv.js";import"./unitConversionUtils-BMfW9yAe.js";import"./AttributeTableTemplate-BZeVyq-j.js";import"./featureLayerUtils-DBsQMhTm.js";import"./featureQueryAll-DnVoEjkM.js";import"./Query-5Xpquc1r.js";import"./DataLayerSource-BKkswDvG.js";import"./FullTextSearch-Csd1Hktu.js";import"./TimeExtent-DocT5yPf.js";import"./timeUtils-8fb_2oAt.js";import"./AttachmentQuery-BUlkjzkx.js";import"./RelationshipQuery-DPPNeuLK.js";import"./fieldType-BuzM0UHS.js";import"./LayerFloorInfo-CIQjg5Vk.js";import"./Relationship-COPq3qM4.js";import"./serviceCapabilitiesUtils-DAE5z8FP.js";import"./workers-D4HfeYKj.js";import"./Queue-yu3bZ02p.js";import"./editsZScale-Bs7_pSzI.js";import"./queryZScale-w66xFVGx.js";import"./FeatureSet-BHEkYP03.js";import"./APIKeyMixin-Di9kcRBS.js";import"./ArcGISService-B5qxetOY.js";import"./CustomParametersMixin-B4u7wiBT.js";import"./EditBusLayer-DoTks2sU.js";import"./uuid-fwrPAdZb.js";import"./FeatureEffectLayer-CpM66wLd.js";import"./FeatureEffect-BEzQmzeC.js";import"./jsonUtils-CSnQD004.js";import"./parser-CTsgEym6.js";import"./utils-93yNk4Xc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./FeatureFilter-BMHRQSxq.js";import"./FeatureReductionLayer-Ddbk727V.js";import"./FeatureReductionSelection-7vaL4DYT.js";import"./labelingInfo-DYPSPZCH.js";import"./labelUtils-B8petyBk.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-C5VLMHgA.js";import"./OrderByInfo-IYmS1EXF.js";import"./RefreshableLayer-D7lXUJRS.js";import"./TemporalLayer-Dpq2hKKV.js";import"./TimeInfo-LUiaSFyX.js";import"./TimeInterval-CNlkea1s.js";import"./FeatureTemplate-CssMa1yk.js";import"./FeatureType-C0q_coeM.js";import"./fieldProperties-Cgxj08ZE.js";import"./versionUtils-CQ_WhYSP.js";import"./styleUtils-KMFBtb6u.js";import"./popupUtils-BBuPGAHd.js";import"./AlphaCutoff-UcccL64p.js";import"./interfaces-CL2NbQte.js";import"./GraphicsCollection-FfahqxsR.js";import"./PortalItem-DzgXrpyc.js";import"./portalItemUtils-BzVoFAku.js";function b(t){return t.featureCollectionType==="markup"||t.layers.some(e=>e.layerDefinition.visibilityField!=null||!E(e))}function E({layerDefinition:t,featureSet:e}){const r=t.geometryType??e.geometryType;return v.find(o=>{var l,a,s;return r===o.geometryTypeJSON&&((s=(a=(l=t.drawingInfo)==null?void 0:l.renderer)==null?void 0:a.symbol)==null?void 0:s.type)===o.identifyingSymbol.type})}function _(){return new pe({xmin:-180,ymin:-90,xmax:180,ymax:90})}const x=new D({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),ae=new D({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0,length:255});let y=class extends X{constructor(t){super(t),this.visibilityMode="inherited"}initialize(){for(const t of this.graphics)t.sourceLayer=this.layer;this.graphics.on("after-add",t=>{t.item.sourceLayer=this.layer}),this.graphics.on("after-remove",t=>{t.item.sourceLayer=null})}get fullExtent(){var r;const t=(r=this.layer)==null?void 0:r.spatialReference,e=this.fullBounds;return t?e==null?S(_(),t).geometry:R(e,t):null}get fullBounds(){var r;const t=(r=this.layer)==null?void 0:r.spatialReference;if(!t)return null;const e=I();return this.graphics.forEach(o=>{const l=o.geometry!=null?S(o.geometry,t).geometry:null;l!=null&&J(e,l.type==="point"?l:l.extent,e)}),M(e,$)?null:e}get sublayers(){return this.graphics}};i([n({readOnly:!0})],y.prototype,"fullExtent",null),i([n({readOnly:!0})],y.prototype,"fullBounds",null),i([n({readOnly:!0})],y.prototype,"sublayers",null),i([n()],y.prototype,"layer",void 0),i([n()],y.prototype,"layerId",void 0),i([n({readOnly:!0})],y.prototype,"visibilityMode",void 0),y=i([C("esri.layers.MapNotesLayer.MapNotesSublayer")],y);const v=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:new oe().toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:new ie().toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:new T().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:new T().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:new le().toJSON()}];let p=class extends Z(re(ee(te(W(Q))))){constructor(t){super(t),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=h.WGS84,this.sublayers=new w(v.map(e=>new y({id:e.id,layerId:e.layerId,title:e.title,layer:this}))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(t,e,r){return{operations:{supportsMapNotesEditing:!b(e)&&(r==null?void 0:r.origin)!=="portal-item"}}}readFeatureCollections(t,e,r){if(!b(e))return null;const o=e.layers.map(l=>{const a=new U;return a.read(l,r),a});return new w({items:o})}readLegacyfeatureCollectionJSON(t,e){return b(e)?N(e.featureCollection):null}get fullExtent(){var r;const t=this.spatialReference,e=I();return this.sublayers!=null?this.sublayers.forEach(({fullBounds:o})=>o!=null?J(e,o,e):e,e):(r=this.featureCollectionJSON)!=null&&r.layers.some(o=>o.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(o=>{const l=S(o.layerDefinition.extent,t).geometry;l!=null&&J(e,l,e)}),M(e,$)?S(_(),t).geometry:R(e,t)}readMinScale(t,e){for(const r of e.layers)if(r.layerDefinition.minScale!=null)return r.layerDefinition.minScale;return 0}readMaxScale(t,e){for(const r of e.layers)if(r.layerDefinition.maxScale!=null)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(t,e){return e.layers.length?h.fromJSON(e.layers[0].layerDefinition.spatialReference):h.WGS84}readSublayers(t,e,r){if(b(e))return null;const o=[];let l=e.layers.reduce((a,s)=>Math.max(a,s.layerDefinition.id??-1),-1)+1;for(const a of e.layers){const{layerDefinition:s,featureSet:m}=a,u=s.id??l++,d=E(a);if(d!=null){const f=new y({id:d.id,title:s.name,layerId:u,layer:this,graphics:m.features.map(({geometry:g,symbol:O,attributes:j,popupInfo:P})=>G.fromJSON({attributes:j,geometry:g,symbol:O,popupTemplate:P}))});o.push(f)}}return new w(o)}writeSublayers(t,e,r,o){var d;const{minScale:l,maxScale:a}=this;if(t==null)return;const s=t.some(f=>f.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing)return void(s&&((d=o==null?void 0:o.messages)==null?void 0:d.push(new B("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"))));const m=[];let u=this.spatialReference.toJSON();e:for(const f of t)for(const g of f.graphics)if(g.geometry!=null){u=g.geometry.spatialReference.toJSON();break e}for(const f of v){const g=t.find(O=>f.id===O.id);this._writeMapNoteSublayer(m,g,f,l,a,u,o)}F("featureCollection.layers",m,e)}get textLayer(){return this._findSublayer("textLayer")}load(t){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},t)),Promise.resolve(this)}read(t,e){"featureCollection"in t&&(t=N(t),Object.assign(t,t.featureCollection)),super.read(t,e)}async beforeSave(){if(this.sublayers==null)return;let t=null;const e=[];for(const o of this.sublayers)for(const l of o.graphics)if(l.geometry!=null){const a=l.geometry;t?H(a.spatialReference,t)||(z(a.spatialReference,t)||A()||await K(),l.geometry=V(a,t)):t=a.spatialReference,e.push(l)}const r=await q(e.map(o=>o.geometry));e.forEach((o,l)=>o.geometry=r[l])}_findSublayer(t){var e;return this.sublayers==null?null:((e=this.sublayers)==null?void 0:e.find(r=>r.id===t))??null}_writeMapNoteSublayer(t,e,r,o,l,a,s){const m=[];if(e!=null){for(const u of e.graphics)this._writeMapNote(m,u,r.geometryType,s);this._normalizeObjectIds(m,x),t.push({layerDefinition:{name:e.title,drawingInfo:{renderer:{type:"simple",symbol:N(r.identifyingSymbol)}},id:e.layerId,geometryType:r.geometryTypeJSON,minScale:o,maxScale:l,objectIdField:"OBJECTID",fields:[x.toJSON(),ae.toJSON()],spatialReference:a},featureSet:{features:m,geometryType:r.geometryTypeJSON}})}}_writeMapNote(t,e,r,o){var u,d;if(e==null)return;const{geometry:l,symbol:a,popupTemplate:s}=e;if(l==null)return;if(l.type!==r)return void((u=o==null?void 0:o.messages)==null?void 0:u.push(new L("map-notes-layer:invalid-geometry-type",`Geometry "${l.type}" cannot be saved in "${r}" layer`,{graphic:e})));if(a==null)return void((d=o==null?void 0:o.messages)==null?void 0:d.push(new L("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:e})));const m={attributes:{...e.attributes},geometry:l.toJSON(),symbol:a.toJSON()};s!=null&&(m.popupInfo=s.toJSON()),t.push(m)}_normalizeObjectIds(t,e){const r=e.name;let o=Y(r,t)+1;const l=new Set;for(const a of t){a.attributes||(a.attributes={});const{attributes:s}=a;(s[r]==null||l.has(s[r]))&&(s[r]=o++),l.add(s[r])}}};i([n({readOnly:!0})],p.prototype,"capabilities",void 0),i([c(["portal-item","web-map"],"capabilities",["layers"])],p.prototype,"readCapabilities",null),i([n({readOnly:!0})],p.prototype,"featureCollections",void 0),i([c(["web-map","portal-item"],"featureCollections",["layers"])],p.prototype,"readFeatureCollections",null),i([n({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],p.prototype,"featureCollectionJSON",void 0),i([c(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],p.prototype,"readLegacyfeatureCollectionJSON",null),i([n({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],p.prototype,"featureCollectionType",void 0),i([n({readOnly:!0})],p.prototype,"fullExtent",null),i([n({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],p.prototype,"legendEnabled",void 0),i([n({type:["show","hide","hide-children"]})],p.prototype,"listMode",void 0),i([n({type:Number,nonNullable:!0,json:{write:!1}})],p.prototype,"minScale",void 0),i([c(["web-map","portal-item"],"minScale",["layers"])],p.prototype,"readMinScale",null),i([n({type:Number,nonNullable:!0,json:{write:!1}})],p.prototype,"maxScale",void 0),i([c(["web-map","portal-item"],"maxScale",["layers"])],p.prototype,"readMaxScale",null),i([n({readOnly:!0})],p.prototype,"multipointLayer",null),i([n({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],p.prototype,"operationalLayerType",void 0),i([n({readOnly:!0})],p.prototype,"pointLayer",null),i([n({readOnly:!0})],p.prototype,"polygonLayer",null),i([n({readOnly:!0})],p.prototype,"polylineLayer",null),i([n({type:h})],p.prototype,"spatialReference",void 0),i([c(["web-map","portal-item"],"spatialReference",["layers"])],p.prototype,"readSpatialReference",null),i([n({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],p.prototype,"sublayers",void 0),i([c("web-map","sublayers",["layers"])],p.prototype,"readSublayers",null),i([k("web-map","sublayers")],p.prototype,"writeSublayers",null),i([n({readOnly:!0})],p.prototype,"textLayer",null),i([n()],p.prototype,"title",void 0),i([n({readOnly:!0,json:{read:!1}})],p.prototype,"type",void 0),p=i([C("esri.layers.MapNotesLayer")],p);const oo=p;export{oo as default};
