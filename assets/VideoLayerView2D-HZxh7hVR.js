import{ba as g,ay as d,c as t,f as r,g as f,aX as b,l as n,u as c,j as h,P as y}from"./index-XUlETPJZ.js";import{h as T}from"./GraphicsLayer-T4JM27yc.js";import{m as _,u as v}from"./LayerView-MOh07vIm.js";import{i as O}from"./GraphicContainer-CFqji7Hd.js";import{r as C}from"./GraphicsView2D-L7nFEiq1.js";import"./BlendLayer-zma1Sosw.js";import"./jsonUtils-SBL1xwKC.js";import"./parser-5WRmuohq.js";import"./ScaleRangeLayer-yPctuALK.js";import"./ElevationInfo-W4L0wkkh.js";import"./lengthUtils-uQbLh4h5.js";import"./scaleUtils-A_wgkqWZ.js";import"./Container-wjZhPXxP.js";import"./definitions-pFhxwyTZ.js";import"./enums-8pc8f5Ge.js";import"./Texture-TdolM--P.js";import"./color-C27rj85x.js";import"./enums--FbEXJ87.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./BaseGraphicContainer-faW5uLaA.js";import"./FeatureContainer-c-vnQxNJ.js";import"./AttributeStoreView-swZipg7H.js";import"./TiledDisplayObject-92su5uUP.js";import"./diffUtils-FaRWg0DV.js";import"./labelingInfo-yCRiW8FB.js";import"./LabelClass-lFhwM9-Q.js";import"./labelUtils-bgvBkKE5.js";import"./defaultsJSON-HVtDPFXZ.js";import"./jsonUtils-FMkyl16O.js";import"./WGLContainer-UwEFGrEY.js";import"./FramebufferObject-Kk4P80ua.js";import"./ProgramTemplate-DqifB79O.js";import"./GeometryUtils-TMKIi98m.js";import"./heatmapUtils-mFECwRl0.js";import"./vec4f64-_4WP0ZGf.js";import"./StyleDefinition-ohiNeWtS.js";import"./config-z2KFXUcx.js";import"./earcut-TAPsTCSu.js";import"./featureConversionUtils-AHVFLuq1.js";import"./OptimizedGeometry-1RFAES06.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./visualVariablesUtils-u2oh7Ajb.js";import"./ExpandedCIM-Lrijv-EB.js";import"./BidiEngine-8z8MVveq.js";import"./GeometryUtils-CEMOhUyj.js";import"./utils-SpCi_Vow.js";import"./Rect-pT1ASav_.js";import"./quantizationUtils-pXT9r_8v.js";import"./floatRGBA-snPG7MiA.js";import"./clusterUtils-oFjX4ysJ.js";import"./MD5-uECS9GB-.js";import"./SizeVariable-eDAmtsU9.js";import"./colorRamps-ucREs6wJ.js";import"./LegendOptions-KuTIRvg3.js";import"./util-YiNIELKj.js";import"./TileContainer-U3z3fPMo.js";import"./vec3f32-6rWBPTzX.js";import"./normalizeUtilsSync-su-4erTU.js";import"./projectionSupport-H1hvmvka.js";import"./json-v6EOeNTY.js";import"./Matcher-R6cd7MHR.js";import"./tileUtils-pcBJnprf.js";import"./TurboLine-l3oLHYnY.js";import"./LRUCache-P08N0BvZ.js";import"./ComputedAttributeStorage-4oLrzD6G.js";import"./FieldsIndex-zLaqSf7A.js";import"./UnknownTimeZone-6z8cnIoM.js";import"./TimeOnly-teMsVSlr.js";let a=class extends g(d){constructor(e){super(e),this.frameCenter=null,this.frameOutline=null,this.lineOfSight=null,this.sensorLocation=null,this.sensorTrail=null}};t([r({type:Boolean})],a.prototype,"frameCenter",void 0),t([r({type:Boolean})],a.prototype,"frameOutline",void 0),t([r({type:Boolean})],a.prototype,"lineOfSight",void 0),t([r({type:Boolean})],a.prototype,"sensorLocation",void 0),t([r({type:Boolean})],a.prototype,"sensorTrail",void 0),a=t([f("esri.layers.support.TelemetryDisplay")],a);const u=a,p=new b([255,127,0]);let m=class extends _(v){constructor(){super(...arguments),this._graphicsLayer=new T,this._frameOutlineGraphic=new n({symbol:{type:"simple-fill",outline:{type:"simple-line",color:p}}}),this._sensorTrailGraphic=new n({symbol:{type:"simple-line",color:p}}),this._lineOfSightGraphic=new n({symbol:{type:"simple-line",color:p}}),this._sensorLocationGraphic=new n({symbol:{type:"simple-marker",color:p}}),this._frameCenterGraphic=new n({symbol:{type:"simple-marker",color:p}}),this.layer=null,this.symbolColor=p,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=c(this._graphicsLayer)}initialize(){var e,i,s,l,o;this.addHandles(h(()=>this.symbolColor,()=>{this._frameOutlineGraphic.symbol.outline.color=this.symbolColor,this._sensorTrailGraphic.symbol.color=this.symbolColor,this._lineOfSightGraphic.symbol.color=this.symbolColor,this._sensorLocationGraphic.symbol.color=this.symbolColor,this._frameCenterGraphic.symbol.color=this.symbolColor},y)),this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic]),this.visibleTelemetryElements=new u({frameCenter:((e=this.layer.telemetryDisplay)==null?void 0:e.frameCenter)??!0,frameOutline:((i=this.layer.telemetryDisplay)==null?void 0:i.frameOutline)??!0,lineOfSight:((s=this.layer.telemetryDisplay)==null?void 0:s.lineOfSight)??!0,sensorLocation:((l=this.layer.telemetryDisplay)==null?void 0:l.sensorLocation)??!0,sensorTrail:((o=this.layer.telemetryDisplay)==null?void 0:o.sensorTrail)??!0})}attach(){this.graphicsView=new C({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new O(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([h(()=>{var e,i,s,l,o;return[(e=this.layer.telemetryDisplay)==null?void 0:e.frameCenter,(i=this.layer.telemetryDisplay)==null?void 0:i.frameOutline,(s=this.layer.telemetryDisplay)==null?void 0:s.sensorLocation,(l=this.layer.telemetryDisplay)==null?void 0:l.sensorTrail,(o=this.layer.telemetryDisplay)==null?void 0:o.lineOfSight]},()=>this._updateVisibleTelemetryElements(),y),h(()=>{var e,i,s,l,o;return[this.layer.telemetry,(e=this.visibleTelemetryElements)==null?void 0:e.frameCenter,(i=this.visibleTelemetryElements)==null?void 0:i.frameOutline,(s=this.visibleTelemetryElements)==null?void 0:s.sensorLocation,(l=this.visibleTelemetryElements)==null?void 0:l.sensorTrail,(o=this.visibleTelemetryElements)==null?void 0:o.lineOfSight]},()=>this._updateGraphicGeometries(),y)])}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}supportsSpatialReference(e){return!0}moveStart(){}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(e){this.graphicsView.processUpdate(e)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:e}=this.layer,{visibleTelemetryElements:i}=this;e&&i&&(i.frameOutline&&e.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,i.sensorTrail&&e.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,i.lineOfSight&&e.lineOfSight?this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight:this._lineOfSightGraphic.geometry=null,i.sensorLocation&&e.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,i.frameCenter&&e.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}};t([r()],m.prototype,"graphicsView",void 0),t([r()],m.prototype,"layer",void 0),t([r()],m.prototype,"symbolColor",void 0),t([r({type:u})],m.prototype,"visibleTelemetryElements",void 0),m=t([f("esri.views.2d.layers.VideoLayerView2D")],m);const qe=m;export{qe as default};
