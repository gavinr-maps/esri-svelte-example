import{k as j,E as M,B as x,e as q,i as N,a4 as F,H as W,a6 as B,D as b,r as f,m as y,a as k}from"./Accessor-BmwT4B0c.js";import{e as K,_ as Y,w as Z}from"./reactiveUtils-XM7cS2OP.js";import{w as H}from"./Extent-g5W9hy0j.js";import{y as R,A as E,R as J,a as P,K as Q,f as D,B as X}from"./Polyline-s-JzsQqo.js";import{e as ee}from"./GridLocalOriginFactory-CngFIYNp.js";import{l as te}from"./LayerView3D-BJ3u1Cu5.js";import{t as re}from"./aaBoundingBox-Dw3yBk2f.js";import{n as ie,f as ae,N as se}from"./FloatArray-BQXWSSJh.js";import{t as $}from"./Attribute-DGhdp5lO.js";import{u as ne}from"./GeometryUtil-D-PMXorz.js";import{e as C}from"./VertexAttribute-Cq4MnHjR.js";import{r as oe}from"./projectExtentUtils-B6xjnIBe.js";import{t as le}from"./Material-C_-mgXN8.js";import{E as O,a as v,g as he}from"./OverlayCompositing.glsl-CUa8aMAb.js";import{C as me}from"./RibbonLine.glsl-DwJpAQ1c.js";import{I as de}from"./ImageMaterial.glsl-WwbGgv6U.js";import{y as ue}from"./LayerView-DUZfYZew.js";import{i as ce}from"./RefreshableLayerView-CmQe69iO.js";import{r as ge}from"./layerViewUtils-Bevty3Jm.js";import{D as z}from"./enums-D9v74xTE.js";function pe(t,e,r){const a=R(t)/E(t),i={width:r,height:r};return a>1.0001?i.height=r/a:a<.9999&&(i.width=r*a),i.width=Math.round(i.width/(R(t)/R(e))),i.height=Math.round(i.height/(E(t)/E(e))),i}function V(t,e){return ne(t,[[e[0],e[1],-1],[e[2],e[1],-1],[e[2],e[3],-1],[e[0],e[3],-1]])}function fe(t,e,r){if(!J(e,r))return V(t,r);const a=[e[1]-r[1],Math.min(e[3],r[3])-Math.max(e[1],r[1]),r[3]-e[3],123456],i=[e[0]-r[0],Math.min(e[2],r[2])-Math.max(e[0],r[0]),r[2]-e[2],123456],l=r[2]-r[0],n=r[3]-r[1],s=i[0]>0&&i[2]>0?3:2,h=a[0]>0&&a[2]>0?3:2,o=(h+1)*(s+1),d=re(3*o),u=ie(2*o),m=new Array(6*(h*s-1));let S=0,A=0,G=0,g=0,p=0;for(let w=0;w<4;w++){const T=a[w];if(T<=0)continue;let I=0;for(let _=0;_<4;_++){const L=i[_];L<=0||(d[A++]=r[0]+I,d[A++]=r[1]+S,d[A++]=-1,u[G++]=I/l,u[G++]=S/n,_<3&&w<3&&(_!==1||w!==1)&&(m[p++]=g,m[p++]=g+1,m[p++]=g+s+1,m[p++]=g+1,m[p++]=g+s+2,m[p++]=g+s+1),g++,I+=L)}S+=T}const U=new Array(m.length);return new ae(t,[[C.POSITION,new $(d,m,3,!0)],[C.NORMAL,new $(we,U,3,!0)],[C.UV0,new $(u,m,2,!0)]])}const we=[0,0,1];let c=class extends ce(te(ue)){constructor(){super(...arguments),this.drapeSourceType=ee.RasterImage,this.updatePolicy=me.SYNC,this.fullExtentInLocalViewSpatialReference=null,this.maximumDataResolution=null,this._images=new Array,this._extents=new Array,this._overlays=new Array,this.updateWhenStationary=!0,this._drapeSourceRenderer=null,this.refreshDebounced=j(async t=>{this.destroyed||await this._doRefresh(t).catch(e=>{M(e)||x.getLogger(this).error(e)})},2e3)}get visibleAtCurrentScale(){const t=this.layer,e="effectiveScaleRange"in t?t.effectiveScaleRange:null;return ge(e,this.view.scale)}initialize(){this._drapeSourceRenderer=this.view.basemapTerrain.overlayManager.registerGeometryDrapeSource(this),this.addHandles(q(()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this))),this.addResolvingPromise(oe(this).then(t=>this._set("fullExtentInLocalViewSpatialReference",t))),this._updatingHandles.add(()=>this.suspended,()=>this._suspendedChangeHandler())}destroy(){this.clear()}setDrapingExtent(t,e){this._spatialReference=e,t.forEach((r,a)=>{this._overlays[a]=r,this._updateImageExtent(r,a)})}_updateImageExtent(t,e){const r=this._clippedExtent(t.extent,_e);if(r==null)return;const a=pe(t.extent,r,t.resolution);let i=t.pixelRatio*this.view.state.pixelRatio;const{layer:l}=this;if("imageMaxWidth"in l&&l.imageMaxWidth!=null||"imageMaxHeight"in l&&l.imageMaxHeight!=null){const s=l.imageMaxWidth,h=l.imageMaxHeight;if(a.width>s){const o=s/a.width;a.height=Math.floor(a.height*o),a.width=s,i*=o}if(a.height>h){const o=h/a.height;a.width=Math.floor(a.width*o),a.height=h,i*=o}}const n=this._extents[e];n&&Q(n.extent,r)&&this._imageSizeEquals(r,n.imageSize,a)||(this._extents[e]={extent:P(r),imageSize:a,pixelRatio:i},this.suspended||this._fetch(e).catch(s=>{M(s)||x.getLogger(this).error(s)}))}clear(){for(let t=0;t<this._images.length;t++)this._clearImage(t)}async doRefresh(){return this._doRefresh()}async _doRefresh(t){if(this.suspended)return;const e=[];for(let r=0;r<this._extents.length;r++)this._extents[r]&&e.push(this._fetch(r,t));await Promise.allSettled(e)}async processResult(t,e,r){(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement)&&(t.image=e)}findExtentInfoAt(t){for(const e of this._extents){const r=e.extent;if(new H(r[0],r[1],r[2],r[3],this._spatialReference).contains(t))return e}return null}getFetchOptions(){}async redraw(t,e){await K(this._images,async(r,a)=>{r&&(await t(r,e),await this._createStageObjects(a,r.image,e))})}_imageSizeEquals(t,e,r){if(!this.maximumDataResolution)return!1;const a=R(t)/this.maximumDataResolution.x,i=E(t)/this.maximumDataResolution.y,l=a/e.width,n=i/e.height,s=a/r.width,h=i/r.height,o=Math.abs(l-s),d=Math.abs(n-h),u=le.TESTS_DISABLE_OPTIMIZATIONS?0:1.5;return o<=u&&d<=u}async _fetch(t,e){if(this.suspended)return;const r=this._extents[t],a=r.extent;this._images[t]||(this._images[t]={texture:null,material:null,renderGeometry:null,loadingPromise:null,loadingAbortController:null,image:null,pixelData:null,renderExtent:P(a)});const i=this._images[t];i.loadingAbortController=N(i.loadingAbortController);const l=new H(a[0],a[1],a[2],a[3],this._spatialReference);if(l.width===0||l.height===0)return void this._clearImage(t);const n=new AbortController;i.loadingAbortController=n,F(e,()=>n.abort());const s=n.signal,h=this._waitFetchReady(s).then(async()=>{const o={requestAsImageElement:!0,pixelRatio:this._overlays[t].pixelRatio,...this.getFetchOptions(),signal:s},{height:d,width:u}=r.imageSize;return this.layer.fetchImage(l,u,d,o)}).then(o=>{if(W(s))throw x.getLogger(this).warnOnce("A call to fetchImage resolved even though the request was aborted. fetchImage should not resolve if options.signal.aborted is true."),B();return this.processResult(i,o)}).then(()=>{D(i.renderExtent,a)});i.loadingPromise=h,await this._updatingHandles.addPromise(h.then(async()=>{b(s),await this._createStageObjects(t,i.image,s)}).catch(o=>{throw o&&!M(o)&&x.getLogger(this).error(o),o}).finally(()=>{h===i.loadingPromise&&(i.loadingPromise=null,i.loadingAbortController=null)}))}_clearImage(t){const e=this._images[t];if(e){e.renderGeometry!=null&&(this._drapeSourceRenderer.removeGeometries([e.renderGeometry],O.UPDATE),e.renderGeometry=null);const r=this.view._stage,a=e.texture;a==null||a.unload(),r.remove(a),e.texture=null,r.remove(e.material),e.material=null,e.loadingAbortController=N(e.loadingAbortController),e.loadingPromise=null,e.image=null,e.pixelData=null}}async _createStageObjects(t,e,r){const a=this.view._stage,i=this._images[t],l=()=>{var n;(n=i.texture)==null||n.unload(),a.remove(i.texture),i.texture=null,i.renderGeometry&&(this._drapeSourceRenderer.removeGeometries([i.renderGeometry],O.UPDATE),i.renderGeometry=null)};if(e){const n=new se(e,{width:e.width,height:e.height,preMultiplyAlpha:!0,wrap:{s:z.CLAMP_TO_EDGE,t:z.CLAMP_TO_EDGE}});let s;if(await Y(this._images[t===v.INNER?v.OUTER:v.INNER].loadingPromise),b(r),l(),await a.schedule(()=>n.load(a.renderView.renderingContext),r),a.add(n),i.texture=n,i.material==null?(i.material=new de({textureId:n.id}),a.add(i.material)):i.material.setParameters({textureId:n.id}),t===v.INNER)s=V(i.material,i.renderExtent);else{const h=this._images[0].renderExtent;if(!h)return void l();s=fe(i.material,h,i.renderExtent)}i.renderGeometry=new he(s),i.renderGeometry.localOrigin=this._overlays[t].renderLocalOrigin,this._drapeSourceRenderer.addGeometries([i.renderGeometry],O.UPDATE)}else l(),a.remove(i.material),i.material=null}_clippedExtent(t,e){if(this.view.viewingMode!=="local")return D(e,t);const r=this.view.basemapTerrain;return r.ready?X(t,r.extent,e):D(e,t)}_suspendedChangeHandler(){this.suspended?this.clear():this.refreshDebounced()}async _waitFetchReady(t){await Z(()=>this.view.stationary,t),b(t)}};f([y()],c.prototype,"layer",void 0),f([y()],c.prototype,"suspended",void 0),f([y({readOnly:!0})],c.prototype,"fullExtentInLocalViewSpatialReference",void 0),f([y({readOnly:!0})],c.prototype,"visibleAtCurrentScale",null),f([y()],c.prototype,"updating",void 0),c=f([k("esri.views.3d.layers.DynamicLayerView3D")],c);const ze=c,_e=P();export{ze as N};
