import{z as l,W as M}from"./Point-Cg0-ChZE.js";import{o as P}from"./vec32-Dvg_eL9J.js";import{n as S}from"./vec3f64-BLpZdpfb.js";import{a as T,b as A}from"./elevationInfoUtils-BC_66_Fg.js";import"./tslib.es6-B3Jf3DVX.js";import"./Accessor-BLX9ikPh.js";import"./subclass-BZA_h8Db.js";import"./cast-Bjksrh93.js";import"./writer-DNAwXnhG.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./jsonMap-0cxwUWs2.js";import"./common-DQOJ18NT.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";function Q(e,o){const m=e==null?void 0:e.geometry;if(!e||(m==null?void 0:m.type)!=="mesh"||!o)return;const{renderCoordsHelper:a,elevationProvider:x}=o,{camera:c}=o.state,{extent:r}=m,{center:h,spatialReference:t}=r,z=l(t),i=M(t),v=l(a.spatialReference),w=r.width*z,y=r.height*i,d=(r.zmax??0)*i,f=d-(r.zmin??0)*i,C=Math.max(w,y,f)/v,{x:p,y:s}=h,u=h.z??0;P(n,p,s,u),a.toRenderCoords(n,t,n);const g=C/c.computeScreenPixelSizeAt(n);if(g>c.width*U)return"meshTooClose";if(g<H)return"meshTooFar";const R=T(e),{absoluteZ:b}=A(p,s,d,t,o,R);return b<(x.getElevation(p,s,u,t,"ground")??0)*i+f*j?"meshUnderground":"mesh"}const H=20,U=1,j=.1,n=S();export{Q as getDrawMeshHelpMessage};
