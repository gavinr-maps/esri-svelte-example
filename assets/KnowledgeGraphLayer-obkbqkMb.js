import{e as s}from"./Evented-CXIxDjmW.js";import{V as u}from"./reactiveUtils-BFQ0BtrB.js";import{c as M,n as g,r as b,y as d,b as T}from"./subclass-BR3PhgZG.js";import{S as _}from"./MultiOriginJSONSupport-DjAXzJun.js";import{a as D,e as f,M as S,A as L}from"./Accessor-D6mNnsWy.js";import{Y as v,V as A}from"./assets-C2mb-ea2.js";import{n as E}from"./uuid-fwrPAdZb.js";import{o as N,r as k}from"./writer-3zufXUNV.js";import{f as R}from"./Layer-C96_yo4i.js";import{a as c,M as I,T as C,E as G}from"./KnowledgeGraphSublayer-C3tgCH75.js";import{l as $}from"./ArcGISService-Dr1J04Ka.js";import{l as O}from"./BlendLayer-DmvCcS5c.js";import{e as U}from"./CustomParametersMixin-BStBpako.js";import{b as j}from"./OperationalLayer-B61mRSes.js";import{j as z}from"./PortalLayer-iKUPhGZB.js";import{f as P}from"./RefreshableLayer-B26jSd3d.js";import{t as F}from"./ScaleRangeLayer-CKYXLXxK.js";import{p as K}from"./commonProperties-C-F8Nu9F.js";import{R as x}from"./knowledgeGraphService-wZbdTEQH.js";import{p as V,m as w}from"./persistableUrlUtils-BcifXQ1Z.js";import"./shared-B3wH2qpO.js";import"./index-CeCSsEgo.js";import"./geometry-DpwwkAX1.js";import"./Extent-DHjqVB-p.js";import"./Point-DB4Hp4hH.js";import"./jsonMap-DCC6W5ex.js";import"./Polyline-D97hl-6E.js";import"./mathUtils-ClvKsMak.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./Promise-CZrWwByK.js";import"./Identifiable-BLvpQbOc.js";import"./Portal-liet8xHC.js";import"./PopupTemplate-ByHks6sq.js";import"./Clonable-cKbRam6-.js";import"./fieldUtils-CNduWQU9.js";import"./intl-Dpfm8vPB.js";import"./enumeration--HlxOQ_N.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./ClassBreaksRenderer-DMO3d0Rn.js";import"./symbols-CsUQ5BxR.js";import"./TextSymbol-gKE-H_J6.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-rJEWaOSN.js";import"./collectionUtils-Dm1icNvk.js";import"./UniqueValueRenderer-dci9bLM8.js";import"./diffUtils--7ofoPN-.js";import"./colorRamps-CFlTi-ob.js";import"./SizeVariable-aYYWlweG.js";import"./ColorStop-CXfPDZon.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DzaXbn8H.js";import"./Graphic-Dc7F67nR.js";import"./jsonUtils-Cma_7A64.js";import"./compilerUtils-BA04t1lN.js";import"./lengthUtils-D7_DvYH0.js";import"./jsonUtils-C6dvhNjw.js";import"./layerUtils-erzwAANv.js";import"./defaults-DCm7iNI6.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-DQEZjdpw.js";import"./jsonUtils-CuoSmH2q.js";import"./LRUCache-ju6LnIBZ.js";import"./MemCache-C6WUx-5V.js";import"./Version-_Vxue7Ui.js";import"./FieldsIndex-IOXc-mnc.js";import"./UnknownTimeZone-D0GlcniK.js";import"./OverrideHelper-C4oumxVn.js";import"./colorUtils-D5nOabzP.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./utils-CO7DMJWl.js";import"./quantizationUtils-CIQDbQFJ.js";import"./HeatmapColorStop-CgvKf0-E.js";import"./heatmapUtils-C-uT6ZIV.js";import"./SimpleRenderer-DvJZ7cyq.js";import"./workers-8Q6jrI18.js";import"./Queue-DpHko4Yk.js";import"./projection-A9yUaaTs.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./FeatureStore-BudYmSEo.js";import"./featureConversionUtils-DdoZh_25.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-DmV4yive.js";import"./PooledRBush-CGlhTzFe.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./timeSupport-BvrtlmuZ.js";import"./normalizeUtils-Bi6Jza1f.js";import"./normalizeUtilsCommon-tgSpcwHH.js";import"./utils-D61i9O7E.js";import"./utils-Dx8bgRIB.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-Buta7wlw.js";import"./centroid-DdLmOD72.js";import"./QueryEngine-CDSTFuau.js";import"./WhereClause-B8B42Be_.js";import"./TimeOnly-cvONhzoK.js";import"./fieldType-CIG5ey7e.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-aRVn40Z7.js";import"./utils-BaQRRNPl.js";import"./Basemap-DhGpUWGY.js";import"./loadAll-DDw-urzS.js";import"./PortalItem-BuTU9OuN.js";import"./writeUtils-3wz9AuW7.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./utils-BTpbFBnk.js";import"./ClassBreaksDefinition-BbGMTL53.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Scheduler-CDoWuxMK.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./clientSideDefaults-DDr2PCsV.js";import"./Relationship-CTef30N3.js";import"./Query-Cx4awVKu.js";import"./DataLayerSource-6X35yXpo.js";import"./Field-C8SaaeoI.js";import"./FullTextSearch-BNIhEccm.js";import"./fieldProperties-DJEV41A1.js";import"./FeatureEffectLayer-B3ucpbgh.js";import"./FeatureEffect-BXMKpemG.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./FeatureFilter-BzdN7b7E.js";import"./FeatureReductionLayer-7Q3CJbxJ.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureReductionSelection-Do1LXJh7.js";import"./featureLayerUtils-CeNLEyq1.js";import"./featureQueryAll-CRo1-WqJ.js";import"./AttachmentQuery-Dn4NbT1Z.js";import"./RelationshipQuery-kHvI2dm7.js";import"./labelingInfo-C8CHVUWS.js";import"./labelUtils-Cczy0uDR.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-CfmzojSk.js";import"./OrderByInfo-Bn0SWspE.js";import"./TemporalLayer-D6vkocFU.js";import"./TimeInterval-CjSB1odC.js";import"./TimeInfo-Cq5mDY2W.js";import"./FeatureSet-DyOnd9Rj.js";import"./popupUtils-fsHWupnf.js";import"./arcgisLayerUrl-Cgl5IQFD.js";import"./portalItemUtils-DIZSrm3T.js";import"./ElevationInfo-BxYXLfrw.js";import"./unitConversionUtils-Dl04YuQU.js";let a=class extends O(F(P($(j(z(_(U(R)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(u.ofType(c)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(u.ofType(c)),this.type="knowledge-graph",this.url=null}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(t){D(t)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache()}async _fetchMetadata(){if(!this.url)throw new M("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await x(this.url);this.knowledgeGraph=e,this._forEachGraphType(t=>{t.name&&this._graphTypeLookup.set(t.name,t)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===f.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new I({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await C(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(t=>{const i=this._graphTypeLookup.get(t.graphTypeName);i&&!e.namedTypeDefinitions.has(i.name)&&e.namedTypeDefinitions.set(i.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,S(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:t}=e;if((t==null?void 0:t.size)>0)t.forEach((i,o)=>{const r=this._graphTypeLookup.get(o);if(!r)return g.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't in the data model and will be removed`),void t.delete(o);r.type!=="relationship"&&r.type!=="entity"&&(g.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't properly modeled and will be removed`),t.delete(o))});else if(!e.generateAllSublayers)throw new M("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var r,n;let e=[],t=[];const{inclusionModeDefinition:i}=this,o=i==null?void 0:i.namedTypeDefinitions;!i||i.generateAllSublayers?(e=((r=this.knowledgeGraph.dataModel)==null?void 0:r.entityTypes)??[],t=((n=this.knowledgeGraph.dataModel)==null?void 0:n.relationshipTypes)??[]):o&&o.size>0&&o.forEach((p,l)=>{const m=this._graphTypeLookup.get(l);switch(m==null?void 0:m.type){case"relationship":t.push(m);break;case"entity":e.push(m)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=t}_forEachGraphType(e){var t,i;[...((t=this.knowledgeGraph.dataModel)==null?void 0:t.entityTypes)??[],...((i=this.knowledgeGraph.dataModel)==null?void 0:i.relationshipTypes)??[]].forEach(o=>{e(o)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const o=this._graphTypeLookup.get(i);o&&(this._addSublayer(o).title=i,o.type==="entity"?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),this.dataManager.sublayerCaches.set(i,new Map))}this._refreshNamedTypes()}_createSublayers(e,t,i){e.forEach(o=>{const r=this._createSublayer(o);i(r)&&t.push(r),this._updateSublayerCaches(o)})}_addSublayer(e){const t=this._createSublayer(e);return t.geometryType?this.layers.push(t):this.tables.push(t),t}_createSublayer(e){return new c({objectType:e,parentCompositeLayer:this,graphType:e.type,title:e.name})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const o=e.find(r=>r.type===i.graphType&&r.name===i.graphTypeName);o&&(i.objectType=o,i.read({title:o.name},{origin:"service"}),this._updateSublayerCaches(o))})}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_saveUrlAsNewResource(e,t,i,o){e[t]="<pending>",i.pendingOperations.push(B(this.inclusionModeDefinition).then(r=>{const n=Y(o);e[t]=n.itemRelativeUrl,i.toAdd.push({resource:n,content:{type:"blob",blob:r},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:t}]of e.namedTypeDefinitions)if(!t)return!1;return!0}readDefinitionSetMap(e,t,i){return V(e,i)}writeDefinitionSetMap(e,t,i,o){const r=o==null?void 0:o.portalItem,n=o==null?void 0:o.resources,p=L(o==null?void 0:o.origin);if(!r||!n||p==null)return void(e&&(t[i]=w(e,o)));const{inclusionModeDefinition:l}=this;if(!l||this._displaysAllRecords(l))return void(this.definitionSetMap=null);const m=this.originIdOf("inclusionModeDefinition");if(m===f.USER||this._namedTypesModified||p<m)this._saveUrlAsNewResource(t,i,n,r);else if(p===m&&e){const y=w(e,o);v(y)?this._saveUrlAsNewResource(t,i,n,r):t[i]=y}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):g.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.originIdOf("layers")===f.DEFAULTS?this._createSublayers(e,this.layers,o=>!!o.geometryType):this._updateSublayers(e,this.layers),this.originIdOf("tables")===f.DEFAULTS?this._createSublayers(e,this.tables,o=>!o.geometryType):this._updateSublayers(e,this.tables),(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((o,r)=>{var p;const n=b(this.sublayerIdsCache,r,()=>new Set);(p=o.members)==null||p.forEach(l=>{n.add(l.id)})})}async addRecords(e){await this._handleNewRecords(e)}async removeRecords(e){var i,o,r,n,p,l,m,y;const t=[];for(const h of e)((r=(o=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null?void 0:o.get(h.typeName))==null?void 0:r.useAllData)===!1&&((m=(l=(p=(n=this.dataManager.inclusionModeDefinition)==null?void 0:n.namedTypeDefinitions)==null?void 0:p.get(h.typeName))==null?void 0:l.members)!=null&&m.has(h.id))&&t.push(h);this.dataManager.removeFromLayer(t);for(const h of t)(y=this.sublayerIdsCache.get(h.typeName))==null||y.delete(h.id);return this._refreshNamedTypes(),t}};s([d()],a.prototype,"dataManager",void 0),s([d({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],a.prototype,"definitionSetMap",void 0),s([N("definitionSetMap")],a.prototype,"readDefinitionSetMap",null),s([k("definitionSetMap")],a.prototype,"writeDefinitionSetMap",null),s([d()],a.prototype,"inclusionModeDefinition",null),s([d()],a.prototype,"knowledgeGraph",void 0),s([d({type:u.ofType(c),json:{write:{ignoreOrigin:!0}}})],a.prototype,"layers",void 0),s([d()],a.prototype,"memberEntityTypes",void 0),s([d()],a.prototype,"memberRelationshipTypes",void 0),s([d({type:["KnowledgeGraphLayer"]})],a.prototype,"operationalLayerType",void 0),s([d()],a.prototype,"sublayerIdsCache",void 0),s([d({type:u.ofType(c),json:{write:{ignoreOrigin:!0}}})],a.prototype,"tables",void 0),s([d({json:{read:!1}})],a.prototype,"type",void 0),s([d(K)],a.prototype,"url",void 0),a=s([T("esri.layers.KnowledgeGraphLayer")],a);const Pi=a;async function B(e){const t=await G(e);return new Blob([t],{type:"application/x-protobuf"})}function Y(e){const t=`definitionSetMap-${E()}.dat`,i=A("knowledgeGraphLayer",t);return e.resourceFromPath(i)}export{Pi as default};
