import{e as s}from"./Evented-CXIxDjmW.js";import{I as _,U as c,v as S,_ as T}from"./assets-C2mb-ea2.js";import{c as u,y as p,b}from"./subclass-BR3PhgZG.js";import{t as w}from"./loadAll-DDw-urzS.js";import{S as O}from"./MultiOriginJSONSupport-DjAXzJun.js";import{a as $}from"./Accessor-D6mNnsWy.js";import{s as R}from"./jsonMap-DCC6W5ex.js";import{o as U,r as W}from"./writer-3zufXUNV.js";import{f as v}from"./Point-DB4Hp4hH.js";import{f as P}from"./Layer-C96_yo4i.js";import{i as j}from"./APIKeyMixin-DpJrW91V.js";import{p as I}from"./ArcGISCachedService-DfVbgD7W.js";import{m as L,f as A,t as B}from"./SublayersOwner-D_MIJSWc.js";import{l as M}from"./ArcGISService-Dr1J04Ka.js";import{l as N}from"./BlendLayer-DmvCcS5c.js";import{e as C}from"./CustomParametersMixin-BStBpako.js";import{b as k}from"./OperationalLayer-B61mRSes.js";import{j as D}from"./PortalLayer-iKUPhGZB.js";import{f as J}from"./RefreshableLayer-B26jSd3d.js";import{t as q}from"./ScaleRangeLayer-CKYXLXxK.js";import{d as G,g as V,p as E}from"./arcgisLayerUrl-Cgl5IQFD.js";import{p as x}from"./commonProperties-C-F8Nu9F.js";import{o as f}from"./imageBitmapUtils-6_PpAuCS.js";import"./index-CeCSsEgo.js";import"./reactiveUtils-BFQ0BtrB.js";import"./shared-B3wH2qpO.js";import"./Portal-liet8xHC.js";import"./Promise-CZrWwByK.js";import"./Extent-DHjqVB-p.js";import"./geometry-DpwwkAX1.js";import"./Polyline-D97hl-6E.js";import"./mathUtils-ClvKsMak.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./Identifiable-BLvpQbOc.js";import"./TileInfo-DkEc90N-.js";import"./TileKey-DZd6gJy7.js";import"./TileInfoTilemapCache-jUzQoLho.js";import"./TilemapCache-SY5llsKN.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./LRUCache-ju6LnIBZ.js";import"./MemCache-C6WUx-5V.js";import"./Version-_Vxue7Ui.js";import"./portalItemUtils-DIZSrm3T.js";import"./projection-A9yUaaTs.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./CollectionFlattener-CkyePFnC.js";import"./PopupTemplate-ByHks6sq.js";import"./Clonable-cKbRam6-.js";import"./fieldUtils-CNduWQU9.js";import"./intl-Dpfm8vPB.js";import"./enumeration--HlxOQ_N.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./ClassBreaksRenderer-DMO3d0Rn.js";import"./symbols-CsUQ5BxR.js";import"./TextSymbol-gKE-H_J6.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-rJEWaOSN.js";import"./persistableUrlUtils-BcifXQ1Z.js";import"./collectionUtils-Dm1icNvk.js";import"./UniqueValueRenderer-dci9bLM8.js";import"./diffUtils--7ofoPN-.js";import"./colorRamps-CFlTi-ob.js";import"./SizeVariable-aYYWlweG.js";import"./ColorStop-CXfPDZon.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DzaXbn8H.js";import"./Graphic-Dc7F67nR.js";import"./jsonUtils-Cma_7A64.js";import"./compilerUtils-BA04t1lN.js";import"./lengthUtils-D7_DvYH0.js";import"./jsonUtils-C6dvhNjw.js";import"./layerUtils-erzwAANv.js";import"./defaults-DCm7iNI6.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-DQEZjdpw.js";import"./jsonUtils-CuoSmH2q.js";import"./FieldsIndex-IOXc-mnc.js";import"./UnknownTimeZone-D0GlcniK.js";import"./OverrideHelper-C4oumxVn.js";import"./colorUtils-D5nOabzP.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./utils-CO7DMJWl.js";import"./quantizationUtils-CIQDbQFJ.js";import"./HeatmapColorStop-CgvKf0-E.js";import"./heatmapUtils-C-uT6ZIV.js";import"./SimpleRenderer-DvJZ7cyq.js";import"./QueryTask-CC5ZOODI.js";import"./infoFor3D-CxOdoily.js";import"./DataLayerSource-6X35yXpo.js";import"./Field-C8SaaeoI.js";import"./fieldType-CIG5ey7e.js";import"./utils-D61i9O7E.js";import"./executeForIds-D-tq3ZnE.js";import"./query-DbJf0nTj.js";import"./normalizeUtils-Bi6Jza1f.js";import"./normalizeUtilsCommon-tgSpcwHH.js";import"./utils-Dx8bgRIB.js";import"./pbfQueryUtils-C7MaRxj2.js";import"./pbf-CmaozfCN.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-B_YkkRy9.js";import"./Query-Cx4awVKu.js";import"./FullTextSearch-BNIhEccm.js";import"./executeQueryJSON-CmP_8PTA.js";import"./FeatureSet-DyOnd9Rj.js";import"./executeQueryPBF-SPg7y6Hr.js";import"./featureConversionUtils-DdoZh_25.js";import"./featureLayerUtils-CeNLEyq1.js";import"./featureQueryAll-CRo1-WqJ.js";import"./AttachmentQuery-Dn4NbT1Z.js";import"./RelationshipQuery-kHvI2dm7.js";import"./FeatureType-ByEWGsln.js";import"./FeatureTemplate-BOr53vUa.js";import"./labelingInfo-C8CHVUWS.js";import"./labelUtils-Cczy0uDR.js";import"./LayerFloorInfo-BN2blBAm.js";import"./Relationship-WMN17mIX.js";import"./serviceCapabilitiesUtils-GL2GsHu0.js";import"./popupUtils-fsHWupnf.js";import"./sublayerUtils-_xnIyjYh.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./layerContainerType-C5CzMsLd.js";import"./PortalItem-BuTU9OuN.js";import"./ElevationInfo-BxYXLfrw.js";import"./unitConversionUtils-Dl04YuQU.js";var d;const y=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=d=class extends N(q(L(I(A(k(D(M(O(J(j(C(P)))))))))))){constructor(...r){super(...r),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(r,e){return typeof r=="string"?{url:r,...e}:r}load(r){const e=r!=null?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch($).then(()=>this._fetchService(e))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=(e=this.parsedUrl)==null?void 0:e.path.toLowerCase();return r?this._getDefaultAttribution(this._getMapName(r)):null}readSpatialReference(r,e){var t;return(r=r||((t=e.tileInfo)==null?void 0:t.spatialReference))&&v.fromJSON(r)}writeSublayers(r,e,t,o){if(!this.loaded||!r)return;const n=r.slice().reverse().flatten(({sublayers:a})=>a&&a.toArray().reverse()).toArray(),l=[],m={writeSublayerStructure:!1,...o};n.forEach(a=>{const h=a.write({},m);l.push(h)}),l.some(a=>Object.keys(a).length>1)&&(e.layers=l)}get tileServers(){var r;return this._getDefaultTileServers((r=this.parsedUrl)==null?void 0:r.path)}castTileServers(r){return Array.isArray(r)?r.map(e=>_(e).path):null}fetchTile(r,e,t,o={}){const{signal:n}=o,l=this.getTileUrl(r,e,t),m={responseType:"image",signal:n,query:{...this.refreshParameters}};return c(l,m).then(a=>a.data)}async fetchImageBitmapTile(r,e,t,o={}){const{signal:n}=o;if(this.fetchTile!==d.prototype.fetchTile){const h=await this.fetchTile(r,e,t,o);return f(h,r,e,t,n)}const l=this.getTileUrl(r,e,t),m={responseType:"blob",signal:n,query:{...this.refreshParameters}},{data:a}=await c(l,m);return f(a,r,e,t,n)}getTileUrl(r,e,t){var m,a;const o=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,n=S({...(m=this.parsedUrl)==null?void 0:m.query,blankTile:!o&&null,...this.customParameters,token:this.apiKey}),l=this.tileServers;return`${l&&l.length?l[e%l.length]:(a=this.parsedUrl)==null?void 0:a.path}/tile/${r}/${e}/${t}${n?"?"+n:""}`}loadAll(){return w(this,r=>{r(this.allSublayers)})}_fetchService(r){return new Promise((e,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void e({data:this.sourceJSON})}if(!this.parsedUrl)throw new u("tile-layer:undefined-url","layer's url is not defined");const o=G(this.parsedUrl.path);if(o!=null&&o.serverType==="ImageServer")throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(e,t)}).then(e=>{let t=this.url;if(e.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=e.data,this.read(e.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!V(t))return this._fetchServerVersion(t,r).then(o=>{this.read({currentVersion:o})}).catch(()=>{})})}_fetchServerVersion(r,e){if(!E(r))return Promise.reject();const t=r.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(o=>{if(o.data&&o.data.currentVersion)return o.data.currentVersion;throw new u("tile-layer:version-not-available")})}_getMapName(r){const e=r.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return e?e[2]:void 0}_getDefaultAttribution(r){if(r==null)return null;let e;r=r.toLowerCase();for(let t=0,o=y.length;t<o;t++)if(e=y[t],e.toLowerCase().includes(r))return T("//static.arcgis.com/attribution/"+e);return null}_getDefaultTileServers(r){if(r==null)return[];const e=r.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=r.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return e||t?[r,r.replace(e?/server\.arcgisonline/i:/services\.arcgisonline/i,e?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[g]}};s([p({readOnly:!0})],i.prototype,"attributionDataUrl",null),s([p({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),s([p({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),s([p({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),s([p({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([p({type:Boolean})],i.prototype,"resampling",void 0),s([p()],i.prototype,"sourceJSON",void 0),s([p({type:v})],i.prototype,"spatialReference",void 0),s([U("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),s([p({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),s([p({readOnly:!0})],i.prototype,"sublayers",void 0),s([W("sublayers",{layers:{type:[B]}})],i.prototype,"writeSublayers",null),s([p({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),s([p()],i.prototype,"tileServers",null),s([R("tileServers")],i.prototype,"castTileServers",null),s([p({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),s([p(x)],i.prototype,"url",void 0),i=d=s([b("esri.layers.TileLayer")],i);const g=Symbol("default-fetch-tile");i.prototype.fetchTile[g]=!0;const bt=i;export{bt as default};
