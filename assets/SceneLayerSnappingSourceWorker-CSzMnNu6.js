import{r as v,a as y,D as L}from"./Accessor-BHnuXKD2.js";import{q as l,p as f,u as h}from"./vec32-Dvg_eL9J.js";import{n as m,t as a}from"./vec3f64-BLpZdpfb.js";import{v as x,b as $,j}from"./lineSegment-C-CDF7QX.js";import{E as P,U as _,i as C}from"./sphere-DQxj5tsv.js";import{b}from"./Octree-B-jwmuW2.js";import{m as S}from"./edgeProcessing-BCtcmmbP.js";import"./common-DQOJ18NT.js";import"./mathUtils-DV9iOXpW.js";import"./plane-4dpuo6-e.js";import"./vec42-YcqnINSP.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./vec2f64-Dy6m9Nrb.js";import"./vec4f64-o2zAXfmz.js";import"./mathUtils-B9R7G-2c.js";import"./mat4-Fi6iAz29.js";import"./Polyline-BmuD2-ZN.js";import"./writer-B2bQV2uU.js";import"./Extent-CBBGeHb-.js";import"./Point-XGrwlf63.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./mat3-CR8GKnhD.js";import"./InterleavedLayout-Dvj-Snan.js";import"./BufferView-_QDXRCew.js";import"./vec2-maR1OrZI.js";import"./types-D0PSWh4d.js";import"./deduplicate-8uOXlcvp.js";import"./Indices-Db9lERgy.js";import"./VertexAttribute-Cq4MnHjR.js";import"./bufferLayouts-C7weggCO.js";import"./glUtil-D0YUa0ow.js";import"./enums-D9v74xTE.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Normals-OOhKYumi.js";const I=1e3;function V(t,o,i){const n=P(),e=_(n);return l(e,e,t,.5),l(e,e,o,.5),n[3]=f(e,t),h(e,e,i),n}let g=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=x(),this._tmpP1=m(),this._tmpP2=m(),this._tmpP3=m(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),L(o),await this._ensureEdgeLocations(t,o);const i=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(t,n,i),i.length<I),t.bounds),{result:{candidates:i}}}async _ensureEdgeLocations(t,o){const i=[];if(this._components.forEachNeighbor(s=>{if(s.info==null){const{id:c,uid:r}=s;i.push({id:c,uid:r})}return!0},t.bounds),!i.length)return;const n={components:i},e=await this.remoteClient.invoke("fetchAllEdgeLocations",n,o??{});for(const s of e.components)this._setFetchEdgeLocations(s)}async add(t){const o=new u(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const i=[];this._edges.forEachNeighbor(n=>(n.component===o&&i.push(n),!0),o.bounds),this._edges.remove(i),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(o==null||t.uid!==o.uid)return;const i=S.createView(t.locations),n=new Array(i.count),e=m(),s=m();for(let d=0;d<i.count;d++){i.position0.getVec(d,e),i.position1.getVec(d,s);const p=V(e,s,t.origin),E=new T(o,d,p);n[d]=E}this._edges.add(n);const{objectIds:c,origin:r}=t;o.info={locations:i,objectIds:c,origin:r}}_addCandidates(t,o,i){const{info:n}=o.component,{origin:e,objectIds:s}=n,c=n.locations,r=c.position0.getVec(o.index,this._tmpP1),d=c.position1.getVec(o.index,this._tmpP2);h(r,r,e),h(d,d,e);const p=s[c.componentIndex.get(o.index)];this._addEdgeCandidate(t,p,r,d,i),w(t,p,r,i),w(t,p,d,i)}_addEdgeCandidate(t,o,i,n,e){if(!t.returnEdge)return;const s=_(t.bounds),c=$(i,n,this._tmpLineSegment),r=j(c,s,this._tmpP3);C(t.bounds,r)&&e.push({type:"edge",objectId:o,target:a(r),distance:f(s,r),start:a(i),end:a(n)})}};g=v([y("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const lt=g;function w(t,o,i,n){if(!t.returnVertex||!C(t.bounds,i))return;const e=_(t.bounds);n.push({type:"vertex",objectId:o,target:a(i),distance:f(e,i)})}class u{constructor(o,i){this.id=o,this.bounds=i,this.info=null,this.uid=++u.uid}}u.uid=0;class T{constructor(o,i,n){this.component=o,this.index=i,this.bounds=n}}export{lt as default};
