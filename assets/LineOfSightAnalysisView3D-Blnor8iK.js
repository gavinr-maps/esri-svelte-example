import{e as r,o as At}from"./Evented-CXIxDjmW.js";import{S as k,C as Nt,T as et,q as mt,t as Ut,u as $}from"./Accessor-D6mNnsWy.js";import{P as R,c as Bt,d as Et,A as Wt,V as Jt}from"./reactiveUtils-BFQ0BtrB.js";import{y as a,b as D,a as W,J as qt,n as it,E as J,k as Ht}from"./subclass-BR3PhgZG.js";import{n as v,t as ut,a2 as Zt,p as Kt,r as O,z as pt,g as j,c as N,x as Qt,f as B,a1 as x,T as gt,E as A}from"./mathUtils-ClvKsMak.js";import{s as Xt}from"./AnalysisView3D-Bxdzk7YF.js";import"./geometry-DpwwkAX1.js";import{t as ot,u as vt,f as _t}from"./LineOfSightAnalysisTarget-A3DPGN1j.js";import{h as ht}from"./UpdatingHandles-CMtXpTiG.js";import{V as q}from"./projection-A9yUaaTs.js";import{a as Yt}from"./WaterSurface.glsl-BJUc652W.js";import{D as te,N as yt,P as ee}from"./Polyline-D97hl-6E.js";import{p as ie,m as Dt,b as Z,k as dt}from"./sphere-7666U3LO.js";import{b as ft,a as ne,m as oe}from"./elevationInfoUtils-Bl7QRRwv.js";import{d as re}from"./screenUtils-PfxkaaMN.js";import{t as se}from"./plane-Bz78OrLf.js";import{M as ae}from"./dehydratedFeatures-fOLmpfQS.js";import{a as le,p as ue,m as Y,w as pe,V as de}from"./ElevationQueryTileCache-Sgr0RZBH.js";import{g as ce}from"./ray-DM1mbnrb.js";import{n as he}from"./Intersector-CYIO18dt.js";import{T as me,e as nt,i as F}from"./ElevationProvider-BHZsEIDd.js";import{_ as Mt}from"./Point-DB4Hp4hH.js";import{t as bt}from"./projectionUtils-KFirXguG.js";import{F as Ct,I as K}from"./Scheduler-CDoWuxMK.js";import{u as g}from"./Color-DDUWtbqR.js";import{v as ge,h as ve}from"./lineSegment-BvgMMk26.js";import{h as wt}from"./ElevationInfo-BxYXLfrw.js";import{G as _e,F as ye}from"./colorUtils-D5nOabzP.js";import{e as kt,f as xt,a as Ft}from"./RenderObject-BOdCnfVB.js";import{r as zt}from"./manipulatorUtils-B1UTsyu_.js";import{s as Gt}from"./RenderGeometry-CXcYvifi.js";import{u as G}from"./interfaces-D6pIddIh.js";import{c as fe}from"./Laserlines.glsl-DSK5aMw9.js";import"./DefaultUI-DVON9ypr.js";import{o as be}from"./ShadedColorMaterial.glsl-DFzIg9fk.js";import{p as Tt}from"./InteractiveToolBase-SWVoyXWH.js";import{n as Ot}from"./screenUtils-BGG3AyYa.js";import{t as rt}from"./IViewEvents-Bci6PjlS.js";import{e as Ce}from"./mat4f64-Dk4dwAN8.js";import{f as st}from"./LineVisualElement-CI_1KXfW.js";import{x as It}from"./PointVisualElement-IRdvOlNZ.js";import"./Material-BN_i9QRJ.js";import{a as we,v as Te}from"./analysisViewUtils-CW7QQu79.js";import"./shared-B3wH2qpO.js";import"./Promise-CZrWwByK.js";import"./jsonMap-DCC6W5ex.js";import"./Extent-DHjqVB-p.js";import"./Clonable-cKbRam6-.js";import"./assets-C2mb-ea2.js";import"./index-CeCSsEgo.js";import"./persistable-ZhNvqYX-.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./uuid-fwrPAdZb.js";import"./resourceExtension-CNyCBDXT.js";import"./persistableUrlUtils-BcifXQ1Z.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./symbols-CsUQ5BxR.js";import"./enumeration--HlxOQ_N.js";import"./writer-3zufXUNV.js";import"./fieldUtils-CNduWQU9.js";import"./intl-Dpfm8vPB.js";import"./TextSymbol-gKE-H_J6.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-rJEWaOSN.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-liet8xHC.js";import"./vec4f64-CBQL1T0x.js";import"./ColorMaterial.glsl-CJh1RTEZ.js";import"./mat3-DRqs2t5W.js";import"./mat3f64-BBpwCtoL.js";import"./mat4-ybYUU6jq.js";import"./vec2f64-Diu2Kaa8.js";import"./BufferView-B7Z-dzh4.js";import"./vec2-B_ymkwGp.js";import"./vec42-B1mBkh1w.js";import"./Texture-CcsX4Ue_.js";import"./NormalAttribute.glsl-Dqf1UPF9.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./compilerUtils-BA04t1lN.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-BMqL_pkg.js";import"./enums-BlUEVwJR.js";import"./Texture-BbJIOVx_.js";import"./basicInterfaces-wONHx_SN.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-B6BGScAS.js";import"./triangle-B7rKLsGW.js";import"./lengthUtils-D7_DvYH0.js";import"./renderState-PYzNpa1K.js";import"./requestImageUtils-DgB0_9qP.js";import"./InterleavedLayout-UIhsB8jd.js";import"./VertexColor.glsl-lPkEAKYQ.js";import"./ViewingMode-Dodu7ZZk.js";import"./projectVectorToVector-Chzd0Pq0.js";import"./projectPointToVector-D3506wm2.js";import"./hydratedFeatures-Cy9DBeYQ.js";import"./Graphic-Dc7F67nR.js";import"./PopupTemplate-ByHks6sq.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./jsonUtils-Cma_7A64.js";import"./floatRGBA-C8rGFKJ0.js";import"./orientedBoundingBox-COq6pSqo.js";import"./quat-ChS85qAG.js";import"./quatf64-BrpT0VRp.js";import"./spatialReferenceEllipsoidUtils-BL8s_3ls.js";import"./computeTranslationToOriginAndRotation-CLzktXYu.js";import"./vec2f32-BbH2jxlN.js";import"./featureConversionUtils-DdoZh_25.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-BIb6yRHm.js";import"./DecodeSymbolColor.glsl-CeBC4xQe.js";import"./Float4DrawUniform-CWdxHXQ-.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./DoubleArray-CF_CpVBS.js";import"./vec3-C3Q-RF_i.js";import"./SnappingCandidate-O5eRSE6e.js";import"./visualVariableUtils-DzaXbn8H.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./colorUtils-CS9vdHXB.js";import"./triangulationUtils-D8OjVISe.js";import"./deduplicate-DxTSMkFY.js";import"./Normals-D1LdtP06.js";import"./objectResourceUtils-DwPhzmLp.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./vec4-L9zJLV3y.js";import"./Version-_Vxue7Ui.js";import"./NestedMap-DgiGbX8E.js";import"./verticalOffsetUtils-DaB1QvwW.js";import"./CIMSymbolHelper-C1Ghh-WW.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CILP_6vp.js";import"./GeometryUtils-BSPpv37S.js";import"./enums-BRXbslMp.js";import"./utils-CO7DMJWl.js";import"./definitions-ByNBSgP9.js";import"./mat2d-DPkeMmgR.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./defaults-DCm7iNI6.js";import"./defaultsJSON-GKolV7NZ.js";import"./OverrideHelper-C4oumxVn.js";import"./quantizationUtils-CIQDbQFJ.js";import"./cimSymbolUtils-D00GIWna.js";import"./utils-C1cS-0Yj.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./LRUCache-ju6LnIBZ.js";import"./MemCache-C6WUx-5V.js";import"./lineStippleUtils-BcQwIcXj.js";import"./projectVectorToPoint-Cwe6B2HP.js";import"./MeshComponent-D1ps11B9.js";import"./imageUtils-9KeT6Jbh.js";import"./MeshVertexAttributes-DVEL_Tlm.js";import"./meshVertexSpaceUtils-CtidK-ZY.js";import"./MeshLocalVertexSpace-Xt9zU6DE.js";import"./projection-CJ-ESJIf.js";import"./DefaultLayouts-Bz7P2wdj.js";import"./frustum-DqmLJYYu.js";import"./styleUtils-DQEZjdpw.js";import"./webStyleSymbolUtils-BtUE3Q7L.js";import"./jsonUtils-C6dvhNjw.js";import"./layerUtils-erzwAANv.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Octree-DQVAqpsn.js";import"./mathUtils-kvswLROa.js";import"./BufferObject-CjYoWxgZ.js";import"./Intersector-wnm5hmmT.js";import"./weather-TVtZwW4o.js";import"./unitConversionUtils-Dl04YuQU.js";import"./Field-C8SaaeoI.js";import"./fieldType-CIG5ey7e.js";import"./LayerConstants-B33OP6sh.js";import"./boundedPlane-CZE_hxQR.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./vec3f32-Cw9Q6TO_.js";import"./axisAngleDegrees-CHCWDIqP.js";import"./VertexArrayObject-Cwnso4un.js";import"./VisualElement-CT5Yhr5G.js";import"./jsxFactory-CbAu6VfF.js";import"./InputManager-C4xu1R9l.js";import"./Queue-DpHko4Yk.js";import"./Map-C4JPDBFj.js";import"./Basemap-DhGpUWGY.js";import"./loadAll-DDw-urzS.js";import"./PortalItem-BuTU9OuN.js";import"./writeUtils-3wz9AuW7.js";import"./Ground-BuxgFYJy.js";import"./CollectionFlattener-CkyePFnC.js";import"./editableLayers-BHlaPs85.js";import"./catalogUtils--o1nDhfl.js";import"./basemapUtils-CkCKogG3.js";import"./TablesMixin-BKe9x_jT.js";import"./Layer-C96_yo4i.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./GraphicsCollection-nEq2FD1R.js";import"./HeightModelInfo-CSXZysDz.js";import"./ReactiveMap-Dl_3-Rm5.js";import"./Query-Cx4awVKu.js";import"./DataLayerSource-6X35yXpo.js";import"./FullTextSearch-BNIhEccm.js";import"./selectionUtils-DYi6daQO.js";import"./a11yUtils-DwloBVAu.js";import"./heightModelInfoUtils-BSzg1Wnl.js";import"./arcgisLayerUrl-Cgl5IQFD.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-DFh8uIGE.js";import"./Compass-DD0Dkx4v.js";import"./utils-DsJqvptN.js";import"./GoTo-CyjNnle5.js";import"./NavigationToggle-C75z3F4y.js";import"./Zoom-DVO2GqC9.js";import"./EditGeometryOperations-BgVEmauk.js";import"./geometry2dUtils-BraNT6Fs.js";import"./Object3DVisualElement-439h3v21.js";let E=class extends k{constructor(t){super(t),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null,this.visible=void 0}};r([a()],E.prototype,"target",void 0),r([a()],E.prototype,"intersectedGraphic",void 0),r([a()],E.prototype,"intersectedLocation",void 0),r([a()],E.prototype,"elevationAlignedTargetLocation",void 0),r([a({type:Boolean})],E.prototype,"visible",void 0),E=r([D("esri.views.3d.analysis.LineOfSightAnalysisResult")],E);let H=class extends k{constructor(t){super(t),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:v(),observerSurfaceNormal:null,observerFeatureId:null,target:v(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:v(),targetAdjusted:v()},this.computationResult={start:v(),end:v(),intersection:v(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};r([a()],H.prototype,"target",void 0),r([a()],H.prototype,"elevationAlignedTargetLocation",void 0),r([a()],H.prototype,"inputPoints",void 0),r([a()],H.prototype,"computationResult",void 0),r([a()],H.prototype,"result",void 0),H=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],H);var ct;let I=ct=class extends k{constructor(e){super(e)}clone(){return new ct({type:this.type,id:W(this.id),mapPoint:W(this.mapPoint),renderPoint:ut(this.renderPoint),normal:W(this.normal),ray:W(this.ray),graphic:this.graphic})}equals(e){return this.type===e.type&&this.id===e.id&&Nt(this.mapPoint,e.mapPoint)&&Zt(this.renderPoint,e.renderPoint)&&qt(this.normal,e.normal)&&ie(this.ray,e.ray)&&this.graphic===e.graphic}};r([a()],I.prototype,"type",void 0),r([a({constructOnly:!0})],I.prototype,"id",void 0),r([a({constructOnly:!0})],I.prototype,"mapPoint",void 0),r([a({constructOnly:!0})],I.prototype,"renderPoint",void 0),r([a({constructOnly:!0})],I.prototype,"normal",void 0),r([a({constructOnly:!0})],I.prototype,"graphic",void 0),r([a({constructOnly:!0})],I.prototype,"ray",void 0),I=ct=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],I);let z=class extends k{constructor(t){super(t),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=me(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=nt.MIN}getScreenPointIntersection(t){const i=re(t,se.get()),n=ce(this.view.state.camera,i,at);return this._getRayIntersection(n)}_getRayIntersection(t,i){if(t==null||this.view.sceneIntersectionHelper==null)return null;const{intersector:n}=this;n.options.store=nt.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(t,n,i);const o=n.results.min,s=v();if(!o.getIntersectionPoint(s)||(i==null?void 0:i.maxDistance)!=null&&Kt(s,t.origin)>i.maxDistance**2)return null;const l=this.view.renderCoordsHelper.fromRenderCoords(s,new Mt({spatialReference:this.view.spatialReference})),c=ut(o.normal);if(le(o))return new I({type:F.OBJECT,id:`${o.target.layerUid}/${o.target.nodeIndex}/${o.target.componentIndex}`,mapPoint:l,renderPoint:s,normal:c,ray:Z(t),graphic:null});if(ue(o))return new I({type:F.OBJECT,id:`${o.target.layerUid}/${o.target.graphicUid}`,mapPoint:l,renderPoint:s,normal:c,ray:Z(t),graphic:null});if(he(o))return new I({type:F.TERRAIN,id:o.target.lij.slice(),mapPoint:l,renderPoint:s,normal:c,ray:Z(t),graphic:null});const p=Y(o,this.view);if(p!=null){const d=p.layer,u=p.sourceLayer;let h;return u&&u.type==="scene"?h=ae(p,u.objectIdField):h=p.uid,new I({type:F.OBJECT,id:`${d==null?void 0:d.uid}/${h}`,mapPoint:l,renderPoint:s,normal:c,ray:Z(t),graphic:p})}return null}updateFromGroundIntersection(t,i,n){const o=Oe,s=Ie,l=Pe,c=Pt;O(s,t),this.view.renderCoordsHelper.worldUpAtPosition(s,l),pt(l,l);const p=this.view.basemapTerrain.visibleElevationBounds,d=(i>=0?1:-1)*((p?Math.abs(p.max-p.min):100)+Math.abs(i));j(c,l,d),N(o,s,c),dt(o,s,at);const u=this._getRayIntersection(at,{include:this._terrainIntersectionOptionsLayerUids,maxDistance:d});if(u!=null){const h=Pt;return j(h,l,i),N(n,u.renderPoint,h),ut(u.normal)}return O(n,t),null}};r([a()],z.prototype,"view",void 0),r([a()],z.prototype,"intersector",void 0),z=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],z);const Oe=v(),Ie=v(),Pe=v(),Pt=v(),at=Dt();let y=class extends At.EventedMixin(k){constructor(e){super(e),this.updateOnCameraChange=!0,this._observerGroundOffsetRenderSpace=0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new ht,this._frameTask=Ct,this._computationHandles=new et,this._externalObserverUpdate=!0}initialize(){var t;const e=(t=this.view.resourceController)==null?void 0:t.scheduler;this._frameTask=e?e.registerTask(K.LINE_OF_SIGHT_TOOL):Ct,this._intersector=new z({view:this.view}),this.addHandles([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(e){this._frameTask.priority=e}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(e){this.analysisViewData.observerEngineLocation=e}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(e){const t=e.computation,{inputPoints:i,computationResult:n}=t,{observerAdjusted:o,targetAdjusted:s}=i,{start:l,end:c}=n;O(l,o),O(c,s),this._canCompute(t)?this._computeIntersection(e):Le(e),t.notifyResultChanged(),this.emit("result-changed",{target:e.computation.target,result:t.result})}_updateAdjustedPointsFromFeatures(e){const t=this.view,{sceneIntersectionHelper:i}=t,{inputPoints:n}=e,{observerAdjusted:o,observerFeatureId:s,targetFeatureId:l,targetAdjusted:c}=n;if(s==null&&l==null)return;const p=Qt(o,c),d=this._intersector.intersector,u=dt(n.observer,n.target,Rt);d.options.store=nt.ALL,i.intersectToolIntersectorRay(u,d);let h=null,m=null,C=null,f=null;for(const w of d.results.all){const _=Y(w,this.view);if(_==null||w.distanceInRenderSpace==null)continue;const L=ot(_);L!=null&&(s!=null&&L===s&&(h==null&&(h=Lt(w,t,p)),w.distanceInRenderSpace<h&&(C=w)),l!=null&&L===l&&(m==null&&(m=Lt(w,t,p)),f==null&&w.distanceInRenderSpace<p&&p-w.distanceInRenderSpace<m&&(f=w)))}C!=null&&C.getIntersectionPoint(o)&&(n.observerSurfaceNormal=C.getTransformedNormal(v())),f!=null&&f.getIntersectionPoint(c)&&(n.targetSurfaceNormal=f.getTransformedNormal(v()))}_adjustStartEndPositions(e){const t=this._screenPixelSize,i=this.view,{inputPoints:n}=e,{observer:o,observerSurfaceNormal:s,target:l,targetSurfaceNormal:c,observerAdjusted:p,targetAdjusted:d}=n,u=tt;O(p,o),O(d,l),this._updateAdjustedPointsFromFeatures(e),s!=null?O(u,s):B(u,d,p);const h=t;pt(u,u),j(u,u,Math.min(h,1)),N(p,p,u),c!=null?O(u,c):B(u,p,d);const m=i.state.camera.computeScreenPixelSizeAt(d);pt(u,u),j(u,u,Math.min(m,1)),N(d,d,u)}_computeIntersection({computation:e,interpolationInfo:t}){const{view:i}=this,{sceneIntersectionHelper:n,renderCoordsHelper:o}=i;if(n==null)return;const s=this._intersector.intersector,{computationResult:l,inputPoints:c}=e,{observer:p,target:d}=c,{start:u,end:h}=l,m=dt(u,h,Rt);s.options.store=nt.MIN,n.intersectToolIntersectorRay(m,s);const C=s.results.min,f=l.intersection,w=tt;let _=!0;if(C!=null&&C.getIntersectionPoint(f)){O(t.originalIntersection,f),O(t.originalObserver,u),O(t.originalTarget,h),o.fromRenderCoords(f,w,i.spatialReference);const P=1-x(h,d)/x(u,d);_=x(p,f)>=P*x(p,d)}const L=new Mt(w,i.spatialReference);{const{result:P,target:S}=e;P!=null?(P.target=S,P.intersectedGraphic=_?null:Y(C,i),P.intersectedLocation=_?null:L,P.visible=_):e.result=new E({target:S,elevationAlignedTargetLocation:e.elevationAlignedTargetLocation,intersectedGraphic:_?null:Y(C,i),intersectedLocation:_?null:L,visible:_})}l.isValid=c.isValid=!0,l.isTargetVisible=_}_canCompute(e){const t=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(t==null||e.elevationAlignedTargetLocation==null||i==null)return!1;const{observerAdjusted:n,targetAdjusted:o}=e.inputPoints,s=i.intersectsPoint(n),l=i.intersectsPoint(o);return s&&l}_onObserverPositionChange(e,t,i,n,o){if(this._externalObserverUpdate=o,e==null)return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(t==null)return bt(this.analysis,e.spatialReference,it.getLogger(this)),void(this.analysisViewData.elevationAlignedObserver=null);const s=Vt(t,i),{absoluteZ:l,elevation:c}=ft(t.x,t.y,t.z,this.view.spatialReference,this.view,s),p=t.clone();p.z=l,this._effectiveObserverElevationMode=s.mode,this.analysisViewData.elevationAlignedObserver=p;const d=v();this.view.renderCoordsHelper.toRenderCoords(p,d),this._elevationAlignedObserverPositionRenderSpace=d,this._observerGroundOffsetRenderSpace=l-c,this._observerFeatureId=ot(n),this.priority=K.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(e,t,i,n,o){const{inputPoints:s}=e;switch(O(s.observer,t),s.observerFeatureId=o,s.observerSurfaceNormal=null,n){case"on-the-ground":case"relative-to-ground":{const l=this._intersector.updateFromGroundIntersection(s.observer,i,s.observer);s.observerFeatureId==null&&(s.observerSurfaceNormal=l)}}this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=K.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(e,t,i,n,o,s=!0){const l=e.inputPoints;if(s&&(l.isValid=!1),i==null)return t!=null&&bt(this.analysis,t.spatialReference,it.getLogger(this)),e.elevationAlignedTargetLocation=null,void e.notifyInputPointsChanged();const c=Vt(i,n),{absoluteZ:p,elevation:d}=ft(i.x,i.y,i.z,this.view.spatialReference,this.view,c),u=i.clone();switch(u.z=p,e.elevationAlignedTargetLocation=u,this.view.renderCoordsHelper.toRenderCoords(e.elevationAlignedTargetLocation,l.target),l.targetFeatureId=ot(o),l.targetSurfaceNormal=null,c.mode){case"on-the-ground":case"relative-to-ground":{const h=this._intersector.updateFromGroundIntersection(l.target,p-d,l.target);l.targetFeatureId==null&&(l.targetSurfaceNormal=h)}}this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=K.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(e){return J([this._updatingHandles.add(()=>({computation:e,targetPosition:e.target.position,targetElevationInfo:e.target.elevationInfo,targetFeatureInfo:e.target.feature,projectedTargetPosition:q(e.target.position,this.view.spatialReference)}),({computation:t,targetPosition:i,targetElevationInfo:n,targetFeatureInfo:o,projectedTargetPosition:s})=>{s.pending==null?this._onTargetPositionChange(t,i,s.geometry,n,o):this._updatingHandles.addPromise(s.pending)},R)])}_connectComputationToObserver(e){return this._updatingHandles.add(()=>({computation:e,observer:this.analysisViewData.elevationAlignedObserver}),({computation:t})=>{this._externalObserverUpdate&&(t.inputPoints.isValid=!1,t.notifyInputPointsChanged())},R)}_connectComputationToRenderSpaceObserver(e){return this._updatingHandles.add(()=>({computation:e,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),({computation:t,observer:i,observerGroundOffset:n,observerElevationMode:o,observerFeatureId:s})=>{this._onObserverRenderSpacePositionChangeForComputation(t,i,n,o,s)},R)}_connectComputationToCamera(e){return this._updatingHandles.add(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:t})=>{!this.updateOnCameraChange||e.inputPoints.isValid&&!t||e.notifyInputPointsChanged()})}_connectComputationToSlicePlane(e){return this._updatingHandles.add(()=>this.view.slicePlane,()=>{e.inputPoints.isValid=!1,e.notifyInputPointsChanged()})}_connectComputationToElevation(e){const t=(i,n)=>{const o=this.analysis.observer,s=e.target;let l=null,c=null,p=null,d=null,u=null,h=null;if((o==null?void 0:o.position)!=null){const m=q(o.position,this.view.spatialReference);if(m.pending!=null)return this._updatingHandles.addPromise(m.pending),void m.pending.finally(()=>t(i,n));l=m.geometry,c=o.elevationInfo,p=o.feature}if(s.position!=null){const m=q(s.position,this.view.spatialReference);if(m.pending!=null)return this._updatingHandles.addPromise(m.pending),void m.pending.finally(()=>t(i,n));d=m.geometry,u=s.elevationInfo,h=s.feature}l==null&&d==null||(Yt(i,n,Q,this.view.spatialReference),l!=null&&yt(Q,l)&&this._onObserverPositionChange(o!=null?o.position:null,l,c,p,!1),d!=null&&yt(Q,d)&&this._onTargetPositionChange(e,s.position,d,u,h,!1),l!=null&&d!=null&&ee(Q,l,d)&&e.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",({extent:i,spatialReference:n})=>t(i,n))}_connectComputationToTask(e){let t=null;const i={computation:e,interpolationInfo:{originalIntersection:v(),originalObserver:v(),originalTarget:v()}};return J([this._updatingHandles.add(()=>e.inputPoints,()=>{t=mt(t),t=Bt(async n=>{await Ut(this._frameTask.schedule(()=>this._computeResult(i),n))})},{initial:!0,equals:()=>!1}),Ht(()=>t=mt(t))])}_connectComputation(e){const t=this._computationHandles;t.has(e)||t.add([this._connectComputationToTarget(e),this._connectComputationToObserver(e),this._connectComputationToRenderSpaceObserver(e),this._connectComputationToCamera(e),this._connectComputationToSlicePlane(e),this._connectComputationToElevation(e),this._connectComputationToTask(e)],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_onComputationCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_onTargetCollectionChange({added:e,removed:t}){for(const i of t)this._removeTarget(i);for(const i of e)this._addTarget(i)}_onCursorTargetChange(e,t){t!=null&&this._removeTarget(t),e!=null&&this._addTarget(e)}_addTarget(e){this._computations.some(t=>t.target===e)||this._computations.add(new H({target:e}))}_removeTarget(e){const t=this._computations.findIndex(i=>i.target===e);this._computations.removeAt(t)}_connectObserver(){return J([this._updatingHandles.add(()=>({observerPosition:this.analysis.observer!=null?this.analysis.observer.position:null,projectedObserverPosition:q(this.analysis.observer!=null?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:this.analysis.observer!=null?this.analysis.observer.elevationInfo:null,observerFeatureInfo:this.analysis.observer!=null?this.analysis.observer.feature:null}),({observerPosition:e,projectedObserverPosition:t,observerElevationInfo:i,observerFeatureInfo:n})=>{t.pending==null?this._onObserverPositionChange(e,t.geometry,i,n,!0):this._updatingHandles.addPromise(t.pending)},R)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this._computations,e=>this._onComputationCollectionChange(e),{initial:!0,final:!0})}_connectTargets(){return J([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,e=>this._onTargetCollectionChange(e),{initial:!0,final:!0}),this._updatingHandles.add(()=>this.analysisViewData.cursorTarget,(e,t)=>{this._onCursorTargetChange(e,t)})])}get _isCameraDirty(){const e=this.analysisViewData.elevationAlignedObserver,{view:t}=this,{renderCoordsHelper:i}=t;if(e==null||i==null)return!1;const n=tt;i.toRenderCoords(e,n);const o=t.state.camera.computeScreenPixelSizeAt(n);return Math.abs((o-this._screenPixelSize)/this._screenPixelSize)>Ve}};function Lt(e,t,i){if(pe(e)){const n=de(e,t);if(n!=null)return Math.min(n*Re,i)}return 1e-5*i}function Vt(e,t){return e.hasZ?t??{mode:"absolute-height",offset:0}:{mode:"on-the-ground",offset:0}}function Le({computation:e,interpolationInfo:t}){const{computationResult:i,inputPoints:n}=e,{start:o,end:s,intersection:l}=i,{originalIntersection:c,originalObserver:p,originalTarget:d}=t;if(O(l,c),n.isValid){const u=tt,h=x(p,c)/x(p,d);gt(u,o,p),j(u,u,1-h),N(l,l,u),gt(u,s,d),j(u,u,h),N(l,l,u),i.isValid=!0}else e.result=null,i.isValid=!1,i.isTargetVisible=!1}r([a({constructOnly:!0})],y.prototype,"analysis",void 0),r([a({constructOnly:!0})],y.prototype,"analysisViewData",void 0),r([a({constructOnly:!0})],y.prototype,"view",void 0),r([a()],y.prototype,"updating",null),r([a()],y.prototype,"priority",null),r([a()],y.prototype,"updateOnCameraChange",void 0),r([a()],y.prototype,"_computations",null),r([a()],y.prototype,"_elevationAlignedObserverPositionRenderSpace",null),r([a()],y.prototype,"_observerGroundOffsetRenderSpace",void 0),r([a()],y.prototype,"_effectiveObserverElevationMode",void 0),r([a()],y.prototype,"_observerFeatureId",void 0),r([a()],y.prototype,"_screenPixelSize",null),r([a({readOnly:!0})],y.prototype,"_updatingHandles",void 0),r([a()],y.prototype,"_frameTask",void 0),r([a()],y.prototype,"_isCameraDirty",null),y=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightController")],y);const Ve=.1,tt=v(),Rt=Dt(),Q=te(),Re=.05;let Se=class{constructor(){this.glowWidth=8,this.innerWidth=.75}};const $e=new Se;function Ae(e){const t=e.accentColor;return{glowColor:t,innerColor:_e(t),globalAlpha:.75*t.a}}class Ee{constructor(){this.size=.5}}const He=new Ee;function St(e){return ye(e.accentColor,.75)}class De{constructor(){this.size=.5,this.visibleColor=new g([3,252,111,.75]),this.occludedColor=new g([252,3,69,.75]),this.undefinedColor=new g([127,127,127,.75])}}const Me=new De;let ke=class{constructor(){this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new g([3,252,111,1]),this.visibleOuterColor=new g([3,252,111,.15]),this.occludedInnerColor=new g([252,3,69,1]),this.occludedOuterColor=new g([252,3,69,.1]),this.undefinedInnerColor=new g([255,255,255,1]),this.undefinedOuterColor=new g([127,127,127,.2])}};const X=new ke;class xe extends kt{constructor(t,i){const n=xt(St(t.effectiveTheme)),o=Gt(n,He.size,32,32),s=new Ft(o);super({view:t,renderObjects:[s],metadata:i,elevationInfo:{mode:"absolute-height",offset:0}}),zt(this),this.themeHandle=Et(()=>({color:St(t.effectiveTheme)}),l=>{n.setParameters(l)})}destroy(){this.themeHandle.remove(),super.destroy()}}let Fe=class extends kt{constructor(t,i){const{size:n,visibleColor:o,occludedColor:s,undefinedColor:l}=Me;super({view:t,renderObjects:[lt(n,o,G.Custom1),lt(n,s,G.Custom2),lt(n,l,G.Custom3)],metadata:i,elevationInfo:{mode:"absolute-height",offset:0}}),zt(this)}};function lt(e,t,i){return new Ft(Gt(xt(g.toUnitRGBA(t)),e,32,32),i)}var M;(function(e){e.Ready="ready",e.Creating="creating",e.Created="created"})(M||(M={}));let T=class extends be{constructor(t){super(t),this.removeIncompleteOnCancel=!1,this.analysisViewData=null,this._latestPointerMovePointerType=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new et,this._updatingHandles=new ht,this._manipulatorHandles=new et,this._targetTrackerManipulator=null}initialize(){this._intersector=new z({view:this.view}),this.addHandles(Et(()=>this.state,t=>{t===M.Created&&this.finishToolCreation()},Wt)),this._observerManipulator=this._createObserverManipulator(),this._createLaserLine(),this.addHandles([this._updatingHandles.add(()=>{var t;return(t=this.analysisViewData)==null?void 0:t.elevationAlignedObserver},t=>this._onObserverLocationChange(t),R),this._updatingHandles.add(()=>Ae(this.view.effectiveTheme),({glowColor:t,innerColor:i,globalAlpha:n})=>this._updateLaserLineStyle(t,i,n),R),this._updatingHandles.add(()=>this._laserLineRendererDependencies(),t=>this._updateLaserLineRenderer(t)),this._connectComputations(),this._updatingHandles.addWhen(()=>!this._shouldRenderTracker,()=>this._clearCursorTracker(),R)])}destroy(){this._updatingHandles=$(this._updatingHandles),this._manipulatorHandles=$(this._manipulatorHandles),this._analysisHandles=$(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeLaserLine(),this._intersector=null,this._set("analysis",null)}get state(){var t;return this.active?this.hasGrabbedManipulators?M.Created:M.Creating:((t=this.analysis.observer)==null?void 0:t.position)!=null?M.Created:M.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return this.analysisViewData!=null&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&this._latestPointerMovePointerType==="mouse"}get _shouldRenderTracker(){var t;return this._showTracker&&((t=this.analysis.observer)==null?void 0:t.position)!=null&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(t){switch(t.type){case"immediate-double-click":this._doubleClickHandler(t);break;case"key-down":this._keyDownHandler(t);break;case"pointer-move":this._pointerMoveHandler(t)}}onInputEventAfter(t){t.type==="immediate-click"&&this._clickHandler(t)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,t=>this._onComputationsCollectionChange(t),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:i}){for(const n of i)this._disconnectComputation(n);for(const n of t)this._connectComputation(n)}_connectComputation(t){if(this.destroyed)return void it.getLogger(this).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const i=this._analysisHandles;if(i.has(t))return;const n=this._createTargetManipulator(t.target);this._targetTrackerManipulator==null&&n.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=n,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),i.add([this._updatingHandles.add(()=>je(t),()=>Ge(n,t),R),this._updatingHandles.add(()=>t.elevationAlignedTargetLocation,o=>this._onTargetLocationChange(o,n),R)],t)}_disconnectComputation(t){if(this.destroyed)return void it.getLogger(this).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(t);const i=this._getTargetManipulator(t.target);i!=null&&(this.manipulators.remove(i),this._manipulatorHandles.remove(i),this._targetTrackerManipulator!=null&&this._targetTrackerManipulator===i&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=$(this.analysisViewData.cursorTarget)}_createTargetManipulator(t){const i={target:t,type:"target"},n=new Fe(this.view,i);return this._manipulatorHandles.add([this._createTargetManipulatorDragPipeline(n),n.events.on("grab-changed",o=>this._manipulatorGrabChanged(n,o)),n.events.on("immediate-click",o=>this._manipulatorClick(n,o))],n),this.manipulators.add(n),t.position!=null?n.elevationAlignedLocation=t.position:n.available=!1,n}_getTargetManipulator(t){let i=null;return this.manipulators.forEach(n=>{const o=n.manipulator;i==null&&o.metadata.type==="target"&&o.metadata.target===t&&(i=o)}),i}_createObserverManipulator(){const t=new xe(this.view,{type:"observer",intersection:null});return this._manipulatorHandles.add([this._createObserverManipulatorDragPipeline(t),t.events.on("grab-changed",i=>this._manipulatorGrabChanged(t,i)),t.events.on("immediate-click",i=>this._manipulatorClick(t,i))],t),this.manipulators.add(t),t}_screenToIntersection(){return t=>{const i=this._intersector.getScreenPointIntersection(t.screenEnd);return i==null?null:{...t,intersection:i}}}_createTargetManipulatorDragPipeline(t){return Tt(t,(i,n,o)=>{n.next(this._screenToIntersection()).next(this._updateTargetDragStep(t)).next(()=>this._updateLaserLineRenderer()),o.next(ze(t.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(t){return Tt(t,(i,n,o)=>{n.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>this._updateLaserLineRenderer()),o.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return t=>(t.intersection.mapPoint!=null?(this.analysis.observer==null&&(this.analysis.observer=new vt),this._updateFromIntersection(this.analysis.observer,t.intersection)):this.analysis.observer=null,t)}_cancelObserverDragStep(){var i;const t=((i=this.analysis.observer)==null?void 0:i.position)!=null?this.analysis.observer.clone():null;return n=>(this.analysis.observer=t,n)}_updateTargetDragStep(t){return i=>{this._updateFromIntersection(t.metadata.target,i.intersection);const n=i.intersection.mapPoint;return n!=null&&(t.elevationAlignedLocation=n),i}}_manipulatorGrabChanged(t,i){switch(i.action){case"start":this._grabbedManipulator=t;break;case"end":this._grabbedManipulator===t&&(this._grabbedManipulator=null)}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:this.analysis.observer!=null?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(t=this._laserLineRendererDependencies()){const{laserlineVisualElement:i,grabbedManipulator:n,shouldRenderTracker:o,observerPosition:s,visible:l}=t;if(i==null)return;const c=n??(o&&s!=null?this._targetTrackerManipulator:null);c!=null&&l?(i.visible=!0,i.heightManifoldTarget=c.renderLocation,c!==this._observerManipulator?i.lineVerticalPlaneSegment=ve(this._observerManipulator.renderLocation,c.renderLocation,Ne):i.lineVerticalPlaneSegment=null):(i.visible=!1,i.heightManifoldTarget=null,i.lineVerticalPlaneSegment=null)}_createLaserLine(){this._removeLaserLine();const{glowWidth:t,innerWidth:i}=$e;this._laserlineVisualElement=new fe({view:this.view,attached:!0,visible:this.visible,style:{glowWidth:t,innerWidth:i},isDecoration:!0})}_removeLaserLine(){this._laserlineVisualElement!=null&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_updateLaserLineStyle(t,i,n){const o=this._laserlineVisualElement;if(o==null)return;const s=o.style;o.style={...s,glowColor:g.toUnitRGB(t),innerColor:g.toUnitRGB(i),globalAlpha:n}}_onObserverLocationChange(t){t!=null?(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=t):this._observerManipulator.available=!1}_onTargetLocationChange(t,i){t!=null?(i.elevationAlignedLocation=t,i!==this._targetTrackerManipulator&&(i.available=!0)):i.available=!1}_addPointFromClickEvent(t){var n;const i=this._intersector.getScreenPointIntersection(t);if((i==null?void 0:i.mapPoint)!=null)if(((n=this.analysis.observer)==null?void 0:n.position)!=null){this._clearCursorTracker();const o=new _t;this._updateFromIntersection(o,i),this.analysis.targets.add(o)}else{const o=new vt;this._updateFromIntersection(o,i),this.analysis.observer=o}}_clickHandler(t){this.active&&t.button!==rt.Right&&(this._addPointFromClickEvent(Ot(t)),t.stopPropagation())}_doubleClickHandler(t){this.active&&t.button!==rt.Right&&(this.stop(),t.stopPropagation())}_keyDownHandler(t){this.active&&t.key==="Escape"&&(this.stop(),t.stopPropagation())}_pointerMoveHandler(t){var o;if(this.hasGrabbedManipulators||(this._latestPointerMovePointerType=t.pointerType,this._updateLaserLineRenderer(),!this._showTracker||((o=this.analysis.observer)==null?void 0:o.position)==null))return;const i=Ot(t),n=this._intersector.getScreenPointIntersection(i);(n==null?void 0:n.mapPoint)!=null&&(this.analysisViewData.cursorTarget==null&&(this.analysisViewData.cursorTarget=new _t),this._updateFromIntersection(this.analysisViewData.cursorTarget,n),this._updateLaserLineRenderer())}_updateFromIntersection(t,i){if(i.mapPoint==null)return t.position=null,t.elevationInfo=null,void(t.feature=null);switch(i.type){case F.OBJECT:if(i.graphic!=null){const o=i.graphic,s=ne(o);s.mode==="on-the-ground"&&(s.mode="relative-to-ground",s.offset=0),t.elevationInfo=new wt(s),t.feature=o}else t.elevationInfo=null,t.feature=null;break;case F.TERRAIN:t.elevationInfo=new wt({mode:"on-the-ground"}),t.feature=null;break;default:t.elevationInfo=null,t.feature=null}const n=i.mapPoint.clone();n.z=oe(this.view,n,{mode:"absolute-height",offset:0},t.elevationInfo),t.position=n}_manipulatorClick(t,i){if(t.metadata.type==="observer"||t.grabbing||t.dragging||i.button!==rt.Right||this.analysis.targets.length<=1)return;const{target:n}=t.metadata;this.analysis.targets.remove(n),i.stopPropagation()}get testInfo(){}};function ze(e){var i;const t=(i=e.position)==null?void 0:i.clone();return n=>(e.position=t,n)}function Ge(e,t){const{isValid:i,isTargetVisible:n}=t.computationResult;e.state=i?n?G.Custom1:G.Custom2:G.Custom3}function je(e){const{isValid:t,isTargetVisible:i}=e.computationResult;return{isValid:t,isTargetVisible:i}}r([a({constructOnly:!0})],T.prototype,"view",void 0),r([a({constructOnly:!0})],T.prototype,"analysis",void 0),r([a({readOnly:!0})],T.prototype,"state",null),r([a({readOnly:!0})],T.prototype,"cursor",null),r([a()],T.prototype,"removeIncompleteOnCancel",void 0),r([a({readOnly:!0})],T.prototype,"updating",null),r([a({constructOnly:!0})],T.prototype,"analysisViewData",void 0),r([a({readOnly:!0})],T.prototype,"_showTracker",null),r([a()],T.prototype,"_latestPointerMovePointerType",void 0),r([a()],T.prototype,"_shouldRenderTracker",null),r([a()],T.prototype,"_laserlineVisualElement",void 0),r([a()],T.prototype,"_grabbedManipulator",void 0),T=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightTool")],T);const Ne=ge();class Ue{constructor(t,i,n,o){this.visibleLineVisualElement=t,this.occludedLineVisualElement=i,this.undefinedLineVisualElement=n,this.targetVisualElement=o}destroy(){this.visibleLineVisualElement.destroy(),this.occludedLineVisualElement.destroy(),this.undefinedLineVisualElement.destroy(),this.targetVisualElement.destroy()}}let V=class extends k{constructor(e){super(e),this._lineOfSightVisualElements=new Array,this._computationHandles=new et,this._updatingHandles=new ht}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=$(this._updatingHandles),this._computationHandles=$(this._computationHandles),this._observerVisualElement=$(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get test(){}_createLineOfSightVisualization(){const e=X,t=this.view,i=this.isDecoration,n={view:t,attached:!0,width:e.outerWidth,innerWidth:e.innerWidth,isDecoration:i},o=g.toUnitRGBA(e.visibleOuterColor),s=g.toUnitRGBA(e.visibleInnerColor),l=g.toUnitRGBA(e.occludedOuterColor),c=g.toUnitRGBA(e.occludedInnerColor),p=g.toUnitRGBA(e.undefinedOuterColor),d=g.toUnitRGBA(e.undefinedInnerColor),u=new st({...n,color:o,innerColor:s}),h=new st({...n,color:l,innerColor:c}),m=new st({...n,color:p,innerColor:d}),C=new It({view:t,attached:!0,...$t,size:8,isDecoration:i}),f=new Ue(u,h,m,C);return this._lineOfSightVisualElements.push(f),f}_destroyLineOfSightVisualization(e){e.destroy(),this._lineOfSightVisualElements.splice(this._lineOfSightVisualElements.indexOf(e),1)}_updateLineOfSightVisualization(e,t,i){const n=X,{computationResult:o,inputPoints:s}=e,{start:l,end:c,intersection:p,isValid:d,isTargetVisible:u}=o,{observer:h}=s,m=qe;m[12]=h[0],m[13]=h[1],m[14]=h[2];const C=B(Be,l,h),f=B(We,c,h),w=B(Je,p,h),{visibleLineVisualElement:_,occludedLineVisualElement:L,undefinedLineVisualElement:P,targetVisualElement:S}=t,jt=this.analysisViewData.elevationAlignedObserver==null||e.elevationAlignedTargetLocation==null,U=this.visible&&!jt;_.visible=U,L.visible=U,P.visible=U,S.visible=U,S.attached=!i.interactiveAndEditable,U&&(_.geometry=null,L.geometry=null,P.geometry=null,S.geometry=e.elevationAlignedTargetLocation,d?u?(_.geometry=[[A(C),A(f)]],_.transform=m,_.color=g.toUnitRGBA(n.visibleOuterColor),S.color=g.toUnitRGBA(n.visibleInnerColor)):(_.geometry=[[A(C),A(w)]],_.transform=m,_.color=g.toUnitRGBA(n.occludedOuterColor),L.geometry=[[A(w),A(f)]],L.transform=m,S.color=g.toUnitRGBA(n.occludedInnerColor)):(P.geometry=[[A(C),A(f)]],P.transform=m,S.color=g.toUnitRGBA(n.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(e){const{computationResult:t}=e,{occludedOuterColor:i,visibleOuterColor:n}=X;return{computationResult:t,occludedOuterColor:i,visibleOuterColor:n,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(e){const t=this._computationHandles;if(t.has(e))return;const i=this._createLineOfSightVisualization();t.add([this._updatingHandles.add(()=>this._getLineOfSightVisualizationDependencies(e),n=>this._updateLineOfSightVisualization(e,i,n),{initial:!0,equals:()=>!1}),Ht(()=>this._destroyLineOfSightVisualization(i))],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,e=>this._onComputationsCollectionChange(e),{initial:!0,final:!0})}_onComputationsCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_createObserverVisualization(){const e=g.toUnitRGBA(X.visibleInnerColor),t=new It({view:this.view,color:e,...$t,isDecoration:this.isDecoration});this._observerVisualElement=t,this.addHandles(this._updatingHandles.add(()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible}),({observer:i,interactiveAndEditable:n,visible:o})=>{i!=null&&!n&&o?(t.geometry=i,this._observerVisualElement.attached=!0):t.attached=!1},R))}};r([a({constructOnly:!0})],V.prototype,"analysis",void 0),r([a({constructOnly:!0})],V.prototype,"analysisViewData",void 0),r([a({constructOnly:!0})],V.prototype,"view",void 0),r([a({readOnly:!0})],V.prototype,"visible",null),r([a({constructOnly:!0})],V.prototype,"isDecoration",void 0),r([a()],V.prototype,"updating",null),r([a()],V.prototype,"interactiveAndEditable",null),r([a()],V.prototype,"test",null),V=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],V);const $t={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},Be=v(),We=v(),Je=v(),qe=Ce();let b=class extends Xt(At.EventedMixin(k)){constructor(e){super(e),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new Jt,this.elevationAlignedObserver=null,this.observerEngineLocation=v(),this.cursorTarget=null,this.editable=!0}initialize(){const e=this.view,t=this.analysis;this._analysisController=new y({analysis:t,analysisViewData:this,view:e}),this._analysisVisualization=new V({analysis:t,analysisViewData:this,view:e,isDecoration:!this.parent}),this.addHandles([this._analysisController.on("result-changed",i=>{i.target!==this.cursorTarget&&this.emit("result-changed",i)}),we(this,T)])}destroy(){Te(this),this._analysisController=$(this._analysisController),this._analysisVisualization=$(this._analysisVisualization)}get results(){return this.computations.map(e=>e.result)}get priority(){return this._analysisController.priority}set priority(e){this._analysisController.priority=e}get updating(){return this._analysisController!=null&&this._analysisController.updating||this._analysisVisualization!=null&&this._analysisVisualization.updating}getResultForTarget(e){var t;return(t=this.computations.find(i=>i.target===e))==null?void 0:t.result}get testInfo(){}};r([a({readOnly:!0})],b.prototype,"type",void 0),r([a({constructOnly:!0,nonNullable:!0})],b.prototype,"analysis",void 0),r([a()],b.prototype,"tool",void 0),r([a({readOnly:!0})],b.prototype,"results",null),r([a()],b.prototype,"priority",null),r([a()],b.prototype,"computations",void 0),r([a()],b.prototype,"elevationAlignedObserver",void 0),r([a()],b.prototype,"observerEngineLocation",void 0),r([a()],b.prototype,"cursorTarget",void 0),r([a()],b.prototype,"updating",null),r([a()],b.prototype,"editable",void 0),r([a()],b.prototype,"_analysisController",void 0),r([a()],b.prototype,"_analysisVisualization",void 0),b=r([D("esri.views.3d.analysis.LineOfSightAnalysisView3D")],b);const fs=b;export{fs as default};
