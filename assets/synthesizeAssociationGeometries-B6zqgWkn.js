import{P as u}from"./cast-BA_-jlhc.js";import{f as y,s as d,i as h}from"./utils-Cy8wFNQo.js";import{r as i,m as n,a as l}from"./Accessor-BHnuXKD2.js";import{S as x}from"./JSONSupport-CGdeqxpk.js";import{d as G}from"./Association-OQzB-QIu.js";import"./index-tefRSezt.js";import"./writer-B2bQV2uU.js";import"./Polyline-BmuD2-ZN.js";import"./Extent-CBBGeHb-.js";import"./Point-XGrwlf63.js";import"./mathUtils-DV9iOXpW.js";import"./typeUtils-CUNOqFiB.js";import"./NetworkElement-Dpf4duUb.js";let r=class extends x{constructor(t){super(t),this.maxGeometryCountExceeded=!1,this.associations=[]}};i([n({type:Boolean,json:{write:!0}})],r.prototype,"maxGeometryCountExceeded",void 0),i([n({type:[G],json:{write:!0}})],r.prototype,"associations",void 0),r=i([l("esri.rest.networks.support.AssociationGeometriesResult")],r);const $=r;async function k(t,e,o){const s=y(t),m={...e.toJSON(),f:"json"},p=d({...s.query,...m});o?o.method="post":o={method:"post"};const a=h(p,o),c=`${s.path}/synthesizeAssociationGeometries`;return u(c,a).then(f=>R(f,e.outSpatialReference))}function R(t,e){const{data:o}=t;if(e)for(const s of o.associations)s.geometry.spatialReference||(s.geometry.spatialReference=e.clone());return $.fromJSON(o)}export{k as synthesizeAssociationGeometries};
