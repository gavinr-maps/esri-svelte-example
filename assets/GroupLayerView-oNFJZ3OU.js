import{r as l}from"./tslib.es6-B3Jf3DVX.js";import{V as n}from"./Collection-CEdjem1-.js";import{t as o,n as V}from"./collectionUtils-D_lHIu88.js";import{watch as y,sync as h}from"./reactiveUtils-C5zUhJQJ.js";import{m as a,a as p}from"./subclass-BZA_h8Db.js";import{y as d}from"./LayerView-CGYm21KA.js";import"./Accessor-BLX9ikPh.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./asyncUtils-CWX51uTe.js";import"./Identifiable-B1UbsKNt.js";import"./Promise-B2Hu02L7.js";import"./UpdatingHandles-GfwcIh5z.js";import"./layerViewUtils-DhFEu8Rd.js";let r=class extends d{constructor(i){super(i),this.type="group",this.layerViews=new n}destroy(){this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach(e=>{e.visible=i})}initialize(){this.addHandles([this.layerViews.on("change",i=>this._layerViewsChangeHandler(i)),y(()=>{var i;return(i=this.layer)==null?void 0:i.visibilityMode},()=>{this.layer&&this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(null))},h),y(()=>this.visible,i=>{this._applyVisibility(()=>this._allLayerViewVisibility(i),()=>{})},h)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}get creatingLayerViews(){var i,e;return((e=(i=this.view)==null?void 0:i.layerViewManager)==null?void 0:e.isCreatingLayerViewsForLayer(this.layer))??!1}set layerViews(i){this._set("layerViews",V(i,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((i,e)=>i+e.updatingProgress,0)/this.layerViews.length}isUpdating(){return this.creatingLayerViews||this.layerViews.some(i=>i.updating)}_hasLayerViewVisibleOverrides(){return this.layerViews.some(i=>i._isOverridden("visible"))}_findLayerViewForLayer(i){return i&&this.layerViews.find(e=>e.layer===i)}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find(e=>{const s=this._findLayerViewForLayer(e);return!!(s!=null&&s.visible)});return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){i==null&&(i=this._firstVisibleOnLayerOrder())==null&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach(e=>{e.visible=e===i})}_layerViewsChangeHandler(i){this.removeHandles("grouplayerview:visible"),this.addHandles(this.layerViews.map(s=>y(()=>s.visible,t=>this._applyVisibility(()=>{t!==this.visible&&(s.visible=this.visible)},()=>this._applyExclusiveVisibility(t?s:null)),h)).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(e!=null&&e.visible?e:null))}_applyVisibility(i,e){var s,t;this._hasLayerViewVisibleOverrides()&&(((s=this.layer)==null?void 0:s.visibilityMode)==="inherited"?i():((t=this.layer)==null?void 0:t.visibilityMode)==="exclusive"&&e())}};l([a({readOnly:!0})],r.prototype,"creatingLayerViews",null),l([a({cast:o})],r.prototype,"layerViews",null),l([a({readOnly:!0})],r.prototype,"updatingProgress",null),l([a()],r.prototype,"view",void 0),r=l([p("esri.views.layers.GroupLayerView")],r);const F=r;export{F as default};
