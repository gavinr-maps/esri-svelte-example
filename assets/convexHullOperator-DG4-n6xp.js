import{M as n,v as a,_ as s}from"./operatorConvexHull-BOgN0BK0.js";import{fromGeometry as c,toGeometry as r,fromGeometries as f,fromGeometryToGXGeometry as u}from"./jsonConverter-BddGRRgO.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Transformation2D-BSBl8u-h.js";import"./ProjectionTransformation-DzMxxvj3.js";import"./Accessor-BHnuXKD2.js";import"./Point-XGrwlf63.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./writer-B2bQV2uU.js";function S(e){const o=c(e);return r(n(o.getGeometry()),o.getSpatialReference())}function T(e,o={}){const{merge:t=!1}=o,[m,i]=f(e);return a(m,t).map(p=>r(p,i))}function V(e){return s(u(e))}export{S as execute,T as executeMany,V as isConvex};
