import{e as s}from"./Evented-CXIxDjmW.js";import{V as u}from"./reactiveUtils-BFQ0BtrB.js";import{c as M,n as g,r as b,y as d,b as T}from"./subclass-BR3PhgZG.js";import{S as _}from"./MultiOriginJSONSupport-CvjUw5hc.js";import{a as D,e as f,M as S,A as L}from"./Accessor-D6mNnsWy.js";import{Y as v,V as A}from"./assets-BNizZMOZ.js";import{n as E}from"./uuid-fwrPAdZb.js";import{o as N,r as k}from"./writer-3zufXUNV.js";import{f as R}from"./Layer-CfUiPX3n.js";import{a as c,M as I,T as C,E as G}from"./KnowledgeGraphSublayer-4I4zWbsl.js";import{l as $}from"./ArcGISService-aI6tC6k0.js";import{l as O}from"./BlendLayer-DmvCcS5c.js";import{e as U}from"./CustomParametersMixin-BStBpako.js";import{b as j}from"./OperationalLayer-Bq6MAeyc.js";import{j as z}from"./PortalLayer-CX96aZTI.js";import{f as P}from"./RefreshableLayer-B26jSd3d.js";import{t as F}from"./ScaleRangeLayer-CKYXLXxK.js";import{p as K}from"./commonProperties-BTyJ6vjt.js";import{R as x}from"./knowledgeGraphService-D9jMriz8.js";import{p as V,m as w}from"./persistableUrlUtils-Dx61-x4K.js";import"./shared-B3wH2qpO.js";import"./index-BVncS3aY.js";import"./geometry-CnaxvJsv.js";import"./Extent-B4rrMrqp.js";import"./Point-TlcsOcXV.js";import"./jsonMap-DCC6W5ex.js";import"./Polyline-BQFeqYXi.js";import"./mathUtils-ClvKsMak.js";import"./TimeExtent-Dl-qaORu.js";import"./timeUtils-DQR2jUPL.js";import"./Promise-CZrWwByK.js";import"./Identifiable-BLvpQbOc.js";import"./Portal-DCqdz-K4.js";import"./PopupTemplate-D8mXPxzU.js";import"./Clonable-cKbRam6-.js";import"./fieldUtils-C5R42-PY.js";import"./intl-CArXn1et.js";import"./enumeration--HlxOQ_N.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./ClassBreaksRenderer-B2uJHW90.js";import"./symbols-CfvYGR4J.js";import"./TextSymbol-zZq0BA1M.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-BGxkJAW0.js";import"./collectionUtils-Dm1icNvk.js";import"./UniqueValueRenderer-Q9ooDuxf.js";import"./diffUtils--7ofoPN-.js";import"./colorRamps-BBM5Timv.js";import"./SizeVariable-Bq7jlw1r.js";import"./ColorStop-DEfc5Idt.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-CrTsYJ9f.js";import"./Graphic-Bi5hWHps.js";import"./jsonUtils-DtWlwXHP.js";import"./compilerUtils-BA04t1lN.js";import"./lengthUtils-vgIBtB6M.js";import"./jsonUtils-aUmUTP_F.js";import"./layerUtils-BzjQnEdj.js";import"./defaults-CIM29kXM.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-C7rrjuqd.js";import"./jsonUtils-DsFdmTaK.js";import"./LRUCache-ju6LnIBZ.js";import"./MemCache-C6WUx-5V.js";import"./Version-_Vxue7Ui.js";import"./FieldsIndex-DHql50vu.js";import"./UnknownTimeZone-D0GlcniK.js";import"./OverrideHelper-0-cH6aQ2.js";import"./colorUtils-D5nOabzP.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./utils-D8D39sLt.js";import"./quantizationUtils-DFd0XKEL.js";import"./HeatmapColorStop-7F2_sZ2U.js";import"./heatmapUtils-C-uT6ZIV.js";import"./SimpleRenderer-FL1Ywtqd.js";import"./workers-D8NOwm_V.js";import"./Queue-DpHko4Yk.js";import"./projection-tSh-0UvX.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./FeatureStore-GQfqFqRN.js";import"./featureConversionUtils-B-SknPj_.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-BYcuS8_t.js";import"./PooledRBush-CGlhTzFe.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./timeSupport-86-Lo3YD.js";import"./normalizeUtils-CuTX3yb4.js";import"./normalizeUtilsCommon-DNPu20r0.js";import"./utils-Blh5cXWv.js";import"./utils-Bh7lx_TM.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-Buta7wlw.js";import"./centroid-DdLmOD72.js";import"./QueryEngine-BaqPXEl6.js";import"./WhereClause-CO6Fm86l.js";import"./TimeOnly-BtK5SiqG.js";import"./fieldType-CIG5ey7e.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-hH5IaWNz.js";import"./utils-HfpQY-3e.js";import"./Basemap-CKBB4cRW.js";import"./loadAll-z9YY33Kx.js";import"./PortalItem-CaeKabGc.js";import"./writeUtils-BUKZUL8X.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./utils-DUUw13Ab.js";import"./ClassBreaksDefinition-BpZNgsmK.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Scheduler-CDoWuxMK.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./clientSideDefaults-DDr2PCsV.js";import"./Relationship-PsMGgasm.js";import"./Query-BpMwiNVl.js";import"./DataLayerSource-BX7Ap_tY.js";import"./Field-poIiHWUc.js";import"./FullTextSearch-BhJOgh_r.js";import"./fieldProperties-Lf6CXfwL.js";import"./FeatureEffectLayer-DB6VToGX.js";import"./FeatureEffect-By-hP1x9.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./FeatureFilter-DqmBE6ye.js";import"./FeatureReductionLayer-DLpK6ddX.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureReductionSelection-BoaPXZg2.js";import"./featureLayerUtils-t2Um2-kg.js";import"./featureQueryAll-ClGLkoIX.js";import"./AttachmentQuery-Ccywtvr9.js";import"./RelationshipQuery-DuLVs9A4.js";import"./labelingInfo-DAjvnaKu.js";import"./labelUtils-Cczy0uDR.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-DxmkHdYI.js";import"./OrderByInfo-D0jsxwzL.js";import"./TemporalLayer-DwHwsJsP.js";import"./TimeInterval-DtVUy51q.js";import"./TimeInfo-C84oEL3g.js";import"./FeatureSet-4rZsDUx9.js";import"./popupUtils-D3OP9u3f.js";import"./arcgisLayerUrl-ETqee4Bd.js";import"./portalItemUtils-C4O2jNL5.js";import"./ElevationInfo-jptbPjRY.js";import"./unitConversionUtils-BUA_O87q.js";let a=class extends O(F(P($(j(z(_(U(R)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(u.ofType(c)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(u.ofType(c)),this.type="knowledge-graph",this.url=null}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(t){D(t)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache()}async _fetchMetadata(){if(!this.url)throw new M("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await x(this.url);this.knowledgeGraph=e,this._forEachGraphType(t=>{t.name&&this._graphTypeLookup.set(t.name,t)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===f.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new I({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await C(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(t=>{const i=this._graphTypeLookup.get(t.graphTypeName);i&&!e.namedTypeDefinitions.has(i.name)&&e.namedTypeDefinitions.set(i.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,S(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:t}=e;if((t==null?void 0:t.size)>0)t.forEach((i,o)=>{const r=this._graphTypeLookup.get(o);if(!r)return g.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't in the data model and will be removed`),void t.delete(o);r.type!=="relationship"&&r.type!=="entity"&&(g.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't properly modeled and will be removed`),t.delete(o))});else if(!e.generateAllSublayers)throw new M("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var r,n;let e=[],t=[];const{inclusionModeDefinition:i}=this,o=i==null?void 0:i.namedTypeDefinitions;!i||i.generateAllSublayers?(e=((r=this.knowledgeGraph.dataModel)==null?void 0:r.entityTypes)??[],t=((n=this.knowledgeGraph.dataModel)==null?void 0:n.relationshipTypes)??[]):o&&o.size>0&&o.forEach((p,l)=>{const m=this._graphTypeLookup.get(l);switch(m==null?void 0:m.type){case"relationship":t.push(m);break;case"entity":e.push(m)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=t}_forEachGraphType(e){var t,i;[...((t=this.knowledgeGraph.dataModel)==null?void 0:t.entityTypes)??[],...((i=this.knowledgeGraph.dataModel)==null?void 0:i.relationshipTypes)??[]].forEach(o=>{e(o)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const o=this._graphTypeLookup.get(i);o&&(this._addSublayer(o).title=i,o.type==="entity"?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),this.dataManager.sublayerCaches.set(i,new Map))}this._refreshNamedTypes()}_createSublayers(e,t,i){e.forEach(o=>{const r=this._createSublayer(o);i(r)&&t.push(r),this._updateSublayerCaches(o)})}_addSublayer(e){const t=this._createSublayer(e);return t.geometryType?this.layers.push(t):this.tables.push(t),t}_createSublayer(e){return new c({objectType:e,parentCompositeLayer:this,graphType:e.type,title:e.name})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const o=e.find(r=>r.type===i.graphType&&r.name===i.graphTypeName);o&&(i.objectType=o,i.read({title:o.name},{origin:"service"}),this._updateSublayerCaches(o))})}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_saveUrlAsNewResource(e,t,i,o){e[t]="<pending>",i.pendingOperations.push(B(this.inclusionModeDefinition).then(r=>{const n=Y(o);e[t]=n.itemRelativeUrl,i.toAdd.push({resource:n,content:{type:"blob",blob:r},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:t}]of e.namedTypeDefinitions)if(!t)return!1;return!0}readDefinitionSetMap(e,t,i){return V(e,i)}writeDefinitionSetMap(e,t,i,o){const r=o==null?void 0:o.portalItem,n=o==null?void 0:o.resources,p=L(o==null?void 0:o.origin);if(!r||!n||p==null)return void(e&&(t[i]=w(e,o)));const{inclusionModeDefinition:l}=this;if(!l||this._displaysAllRecords(l))return void(this.definitionSetMap=null);const m=this.originIdOf("inclusionModeDefinition");if(m===f.USER||this._namedTypesModified||p<m)this._saveUrlAsNewResource(t,i,n,r);else if(p===m&&e){const y=w(e,o);v(y)?this._saveUrlAsNewResource(t,i,n,r):t[i]=y}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):g.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.originIdOf("layers")===f.DEFAULTS?this._createSublayers(e,this.layers,o=>!!o.geometryType):this._updateSublayers(e,this.layers),this.originIdOf("tables")===f.DEFAULTS?this._createSublayers(e,this.tables,o=>!o.geometryType):this._updateSublayers(e,this.tables),(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((o,r)=>{var p;const n=b(this.sublayerIdsCache,r,()=>new Set);(p=o.members)==null||p.forEach(l=>{n.add(l.id)})})}async addRecords(e){await this._handleNewRecords(e)}async removeRecords(e){var i,o,r,n,p,l,m,y;const t=[];for(const h of e)((r=(o=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null?void 0:o.get(h.typeName))==null?void 0:r.useAllData)===!1&&((m=(l=(p=(n=this.dataManager.inclusionModeDefinition)==null?void 0:n.namedTypeDefinitions)==null?void 0:p.get(h.typeName))==null?void 0:l.members)!=null&&m.has(h.id))&&t.push(h);this.dataManager.removeFromLayer(t);for(const h of t)(y=this.sublayerIdsCache.get(h.typeName))==null||y.delete(h.id);return this._refreshNamedTypes(),t}};s([d()],a.prototype,"dataManager",void 0),s([d({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],a.prototype,"definitionSetMap",void 0),s([N("definitionSetMap")],a.prototype,"readDefinitionSetMap",null),s([k("definitionSetMap")],a.prototype,"writeDefinitionSetMap",null),s([d()],a.prototype,"inclusionModeDefinition",null),s([d()],a.prototype,"knowledgeGraph",void 0),s([d({type:u.ofType(c),json:{write:{ignoreOrigin:!0}}})],a.prototype,"layers",void 0),s([d()],a.prototype,"memberEntityTypes",void 0),s([d()],a.prototype,"memberRelationshipTypes",void 0),s([d({type:["KnowledgeGraphLayer"]})],a.prototype,"operationalLayerType",void 0),s([d()],a.prototype,"sublayerIdsCache",void 0),s([d({type:u.ofType(c),json:{write:{ignoreOrigin:!0}}})],a.prototype,"tables",void 0),s([d({json:{read:!1}})],a.prototype,"type",void 0),s([d(K)],a.prototype,"url",void 0),a=s([T("esri.layers.KnowledgeGraphLayer")],a);const Pi=a;async function B(e){const t=await G(e);return new Blob([t],{type:"application/x-protobuf"})}function Y(e){const t=`definitionSetMap-${E()}.dat`,i=A("knowledgeGraphLayer",t);return e.resourceFromPath(i)}export{Pi as default};
