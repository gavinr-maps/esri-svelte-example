import{e as n}from"./Evented-CXIxDjmW.js";import{n as _,y as w,b as g}from"./subclass-BR3PhgZG.js";import{b as c}from"./Accessor-D6mNnsWy.js";import{G as u}from"./Point-DB4Hp4hH.js";import{r as I,n as f}from"./imageUtils-D3G5_2gZ.js";import{f as S}from"./LayerView2D-BGdjSMVF.js";import{h as T,m as V,r as v}from"./TileStrategy-_ezroEyM.js";import{e as d}from"./TileKey-CIqLSCov.js";import{y as x}from"./LayerView-CbIY_4n2.js";import{i as M}from"./RefreshableLayerView-BClKL0FL.js";import"./jsonMap-DCC6W5ex.js";import"./writer-3zufXUNV.js";import"./assets-C2mb-ea2.js";import"./index-CeCSsEgo.js";import"./Polyline-D97hl-6E.js";import"./Extent-DHjqVB-p.js";import"./mathUtils-ClvKsMak.js";import"./DefaultUI-DVON9ypr.js";import"./reactiveUtils-BFQ0BtrB.js";import"./shared-B3wH2qpO.js";import"./jsxFactory-CbAu6VfF.js";import"./intl-Dpfm8vPB.js";import"./Promise-CZrWwByK.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CMtXpTiG.js";import"./InputManager-C4xu1R9l.js";import"./Queue-DpHko4Yk.js";import"./signal-DzOfzcfh.js";import"./Map-C4JPDBFj.js";import"./Basemap-DhGpUWGY.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-liet8xHC.js";import"./loadAll-DDw-urzS.js";import"./PortalItem-BuTU9OuN.js";import"./persistableUrlUtils-BcifXQ1Z.js";import"./writeUtils-3wz9AuW7.js";import"./layerUtils-erzwAANv.js";import"./Ground-BuxgFYJy.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./compilerUtils-BA04t1lN.js";import"./enumeration--HlxOQ_N.js";import"./opacityUtils-BT7mQkwC.js";import"./CollectionFlattener-CkyePFnC.js";import"./editableLayers-BHlaPs85.js";import"./catalogUtils--o1nDhfl.js";import"./basemapUtils-CkCKogG3.js";import"./utils-D20M4_S8.js";import"./screenUtils-PfxkaaMN.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./TablesMixin-BKe9x_jT.js";import"./Layer-C96_yo4i.js";import"./geometry-DpwwkAX1.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./Identifiable-BLvpQbOc.js";import"./GraphicsCollection-nEq2FD1R.js";import"./Graphic-Dc7F67nR.js";import"./PopupTemplate-ByHks6sq.js";import"./Clonable-cKbRam6-.js";import"./fieldUtils-CNduWQU9.js";import"./ActionToggle-C0Z1k2jc.js";import"./symbols-CsUQ5BxR.js";import"./TextSymbol-gKE-H_J6.js";import"./materialUtils-CQ3JLQ1x.js";import"./aaBoundingBox-rJEWaOSN.js";import"./jsonUtils-Cma_7A64.js";import"./HeightModelInfo-CSXZysDz.js";import"./ReactiveMap-Dl_3-Rm5.js";import"./Query-Cx4awVKu.js";import"./DataLayerSource-6X35yXpo.js";import"./Field-C8SaaeoI.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BNIhEccm.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BGG3AyYa.js";import"./a11yUtils-DwloBVAu.js";import"./heightModelInfoUtils-BSzg1Wnl.js";import"./arcgisLayerUrl-Cgl5IQFD.js";import"./ViewingMode-Dodu7ZZk.js";import"./projection-A9yUaaTs.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-DFh8uIGE.js";import"./Compass-DD0Dkx4v.js";import"./utils-DsJqvptN.js";import"./GoTo-CyjNnle5.js";import"./NavigationToggle-C75z3F4y.js";import"./Zoom-DVO2GqC9.js";import"./Bitmap-BpetaD1v.js";import"./mat3-DRqs2t5W.js";import"./vec2f32-BbH2jxlN.js";import"./DisplayObject-DFOkWAgp.js";import"./enums-BlUEVwJR.js";import"./Texture-BbJIOVx_.js";import"./DefaultVertexAttributeLayouts-BIPVF1RK.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./WGLContainer-CcOWMYe7.js";import"./definitions-ByNBSgP9.js";import"./LabelMetric-Agz2doNK.js";import"./enums-BRXbslMp.js";import"./Program-BE7XUO18.js";import"./BufferObject-CjYoWxgZ.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./BoundingBox-BhuXqU4L.js";import"./VertexArrayObject-Cwnso4un.js";import"./WGLBrushVTLSymbol-DCRjNI7n.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-wM3hmZl7.js";import"./mat2df32-orApM5a3.js";import"./mat2d-DPkeMmgR.js";import"./vec3f32-Cw9Q6TO_.js";import"./Container-DVx3sJUL.js";import"./EffectView-D2q0Wr_W.js";import"./parser-BN6zmHl-.js";import"./highlightReasons-BXkdrXK1.js";import"./HighlightOptions-DpSHmLEJ.js";import"./quickselect-D0_cvEX6.js";import"./earcut-BqgeR2O3.js";import"./vec2-B_ymkwGp.js";import"./vec2f64-Diu2Kaa8.js";import"./featureConversionUtils-DdoZh_25.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./MapView-BnqB8NNa.js";import"./Viewpoint-B260yGoV.js";import"./Cyclical-BY_I03kj.js";import"./workers-8Q6jrI18.js";import"./TileInfo-DkEc90N-.js";import"./TileKey-DZd6gJy7.js";import"./viewpointUtils-BDYPvBda.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-Bi6Jza1f.js";import"./normalizeUtilsCommon-tgSpcwHH.js";import"./utils-D61i9O7E.js";import"./utils-Dx8bgRIB.js";import"./unitBezier-BX6NeAEr.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-CuuDkrHi.js";import"./TileContainer-B3qIHDa9.js";import"./ClipRect-DgcoGaf3.js";import"./layerViewUtils-D2JqIDZ8.js";import"./QueueProcessor-Bu6RBZRX.js";const b=new Set([102113,102100,3857,3785,900913]),q=[0,0];let p=class extends M(I(S(x))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){const t=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return t?(t.id!==this.layer.activeLayer.tileMatrixSetId&&(this.layer.activeLayer.tileMatrixSetId=t.id),t):null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume()}attach(){var i;const t=(i=this.tileMatrixSet)==null?void 0:i.tileInfo;t&&(this._tileInfoView=new T(t),this._fetchQueue=new V({tileInfoView:this._tileInfoView,concurrency:16,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new v({cachePolicy:"keep",resampling:!0,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add(()=>{var e,r;return[(r=(e=this.layer)==null?void 0:e.activeLayer)==null?void 0:r.styleId,this.tileMatrixSet]},()=>this.doRefresh())),super.attach())}detach(){var t,i;super.detach(),(t=this._tileStrategy)==null||t.destroy(),(i=this._fetchQueue)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return((i=this.layer.activeLayer.tileMatrixSets)==null?void 0:i.some(e=>{var r;return u((r=e.tileInfo)==null?void 0:r.spatialReference,t)}))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(q,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:o=0}=i;if(!e)return this._fetchImage(t,r);const m=new d(0,0,0,0);let a;try{await e.fetchAvailabilityUpsample(t.level,t.row,t.col,m,{signal:r}),a=await this._fetchImage(m,r)}catch(s){if(c(s))throw s;if(o<3){const l=this._tileInfoView.getTileParentId(t.id);if(l){const h=new d(l),y=await this.fetchTile(h,{...i,resamplingLevel:o+1});return f(this._tileInfoView,y,h,t)}}throw s}return f(this._tileInfoView,a,m,t)}canResume(){const t=super.canResume();return t&&this.tileMatrixSet!==null}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){c(i)||_.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}_getTileMatrixSetBySpatialReference(t){const i=this.view.spatialReference;if(!t.tileMatrixSets)return null;let e=t.tileMatrixSets.find(r=>{var o;return u((o=r.tileInfo)==null?void 0:o.spatialReference,i)});return!e&&i.isWebMercator&&(e=t.tileMatrixSets.find(r=>{var o;return b.has(((o=r.tileInfo)==null?void 0:o.spatialReference.wkid)??-1)})),e}};n([w({readOnly:!0})],p.prototype,"tileMatrixSet",null),p=n([g("esri.views.2d.layers.WMTSLayerView2D")],p);const Ie=p;export{Ie as default};
