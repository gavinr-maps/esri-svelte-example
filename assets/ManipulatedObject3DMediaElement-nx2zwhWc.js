import{r as i,m as r,a as g,g as v,aA as _,G as f}from"./Accessor-BHnuXKD2.js";import{i as P}from"./Evented-DCWccWGU.js";import{P as E,d as b,C as M,A as $,v as x}from"./reactiveUtils-BR0C1Kq4.js";import{h as O}from"./UpdatingHandles-ptqz1ck8.js";import{j}from"./Point-XGrwlf63.js";import{j as G}from"./Polyline-BmuD2-ZN.js";import{Q as R,O as A,J as V}from"./projection-B2I9Bzj_.js";import{o as S}from"./MediaLayerView3D-DDzYjq6Z.js";import{p as D,E as T}from"./EditGeometryOperations-C5kkQVhH.js";import{p as z}from"./vec32-Dvg_eL9J.js";import{n as N}from"./vec3f64-BLpZdpfb.js";import{c as I}from"./projectPointToVector-BS0u8fq6.js";import{H as L,P as k}from"./VideoElement-DhH2aplP.js";import"./SimpleObservable-7oieNGD8.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./writer-B2bQV2uU.js";import"./Extent-CBBGeHb-.js";import"./mathUtils-DV9iOXpW.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./MediaElementView-CxjW2ccL.js";import"./mat3-CR8GKnhD.js";import"./common-DQOJ18NT.js";import"./mat3f64-BBpwCtoL.js";import"./vec2-maR1OrZI.js";import"./normalizeUtilsSync-D3hTE8bq.js";import"./jsonUtils-Cu7OBRmN.js";import"./normalizeUtilsCommon-D0zPTJCj.js";import"./GridLocalOriginFactory-BvhZ_UoU.js";import"./vec4f64-o2zAXfmz.js";import"./Attribute-B-NAci_J.js";import"./Material-Ba8x5bbY.js";import"./VertexAttribute-Cq4MnHjR.js";import"./boundedPlane-Dyz2ub5d.js";import"./sphere-DQxj5tsv.js";import"./mat4-Fi6iAz29.js";import"./vec42-YcqnINSP.js";import"./plane-4dpuo6-e.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./vec2f64-Dy6m9Nrb.js";import"./mathUtils-B9R7G-2c.js";import"./lineSegment-C-CDF7QX.js";import"./ViewingMode-Dodu7ZZk.js";import"./NoParameters-t-PuNrgq.js";import"./FloatArray-BCfeX8wo.js";import"./BindType-BBwFZqyN.js";import"./Matrix3PassUniform-Bhi2fM3C.js";import"./Texture-D-SqNa4i.js";import"./signal-DSa0yokC.js";import"./enums-D9v74xTE.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./renderState-e7QeQoUO.js";import"./basicInterfaces-CZwQPxTp.js";import"./Indices-Db9lERgy.js";import"./InterleavedLayout-Dvj-Snan.js";import"./BufferView-_QDXRCew.js";import"./types-D0PSWh4d.js";import"./triangle-D_E6eTS3.js";import"./ShaderTechniqueConfiguration-YrUOztAU.js";import"./glsl-BH37Aalp.js";import"./lengthUtils-DjJgJFRg.js";import"./opacityUtils-CSd4XoR2.js";import"./Promise-CmQqe-ke.js";import"./requestImageUtils-Brn0e8z8.js";import"./TextureFormat-1mYWTFa-.js";import"./RibbonLine.glsl-D3IEIaDR.js";import"./sdfPrimitives-B8Jbwvqs.js";import"./doublePrecisionUtils-B0owpBza.js";import"./floatRGBA-CR2j2c7-.js";import"./Octree-B-jwmuW2.js";import"./screenUtils-_ZIvrt5o.js";import"./ShaderBuilder-DV1s2efh.js";import"./RgbaFloatEncoding.glsl-_io2eW3M.js";import"./LayerView3D-dAX18iJt.js";import"./heightModelInfoUtils-CMg1cdju.js";import"./HeightModelInfo-B3GZyQFz.js";import"./mat2d-D9DBP-jx.js";import"./mat2df64-CBKYtunK.js";import"./InputManager-Bs9UE-jw.js";import"./Queue-BOnccek2.js";import"./keybindings-DrKrBFID.js";import"./SnappingManagerPool-DzCRDPdL.js";import"./SnappingManager-CF4NflXd.js";import"./elevationInfoUtils-RSZ4Logn.js";import"./unitConversionUtils-C4AR5obr.js";import"./RightAngleSnappingHint-CCcBBYgG.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./timeUtils-D2X862bk.js";import"./projectVectorToVector-dS8io47t.js";import"./Query-DCBIeen2.js";import"./enumeration-Cr5WIZs4.js";import"./typeUtils-BSg8Y507.js";import"./Field-Cyk7Ur5d.js";import"./fieldType-L-VlbZqy.js";import"./FullTextSearch-BWm_kPUE.js";import"./Clonable-DvJsj5LF.js";import"./TimeExtent-J5qnUFx_.js";import"./utils-D02V2_jH.js";import"./Version-9k2AOv05.js";import"./geodesicUtils-Bh_GX0Qj.js";import"./geometry2dUtils-vtViF5g_.js";import"./viewUtils-Ce2x26K8.js";import"./OverlayCompositing.glsl-BbJKjUZQ.js";import"./SceneLighting-fZH2UQ_L.js";import"./RenderCamera-BovI3JTe.js";import"./axisAngleDegrees-8Sw4vC28.js";import"./quat-4pa1e6ds.js";import"./weather-DtiKeY2t.js";import"./BooleanBindUniform-xvVHJCDz.js";import"./Float4DrawUniform-C_Hqa-pI.js";import"./RenderPlugin-B2sz29jJ.js";import"./HighlightDefaults-ESbuT2uR.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-DcVjXzZo.js";import"./BufferObject-CIl3vJtA.js";import"./memoryEstimations-5gFNwkKK.js";import"./NestedMap-GuqgquCN.js";import"./HUDRenderStyle-BhGvVxgm.js";import"./Scheduler-B_GuBefw.js";import"./debugFlags-ZrDyTcDc.js";import"./ImageMaterial.glsl-DS2HLuOB.js";import"./GLTextureMaterial-BXvkeRxQ.js";import"./DefaultBufferWriter-D4XUxbP-.js";import"./aaBoundingBox-CeBivBRq.js";import"./DefaultLayouts-RacFqL-X.js";import"./TriangleMaterial-t01j2IAH.js";import"./VertexColor.glsl-C67vI27I.js";import"./Matrix3DrawUniform-B_gSHO7v.js";import"./Matrix4PassUniform-LFIUaE9i.js";import"./LayerView-DF8EqCYi.js";import"./Identifiable-BrT7zvUW.js";import"./layerViewUtils-tkZ5z_iY.js";import"./MediaLayerView-BQs74upW.js";import"./imageUtils-brik-GLm.js";import"./uuid-Cl5lrJ4c.js";import"./resourceExtension-DBdDmYtS.js";import"./mediaLayerUtils-BJ-DU5EY.js";import"./Portal-CTRRujjZ.js";import"./MultiOriginJSONSupport-nGLpCFeg.js";let d=class extends v{get operations(){return this._operations}get updating(){return this._updatingHandles.updating}constructor(t){super(t),this._updatingHandles=new O}initialize(){this.addHandles([_(this._updatingHandles),this._updatingHandles.add(()=>{const t=this.element.georeference;return(t==null?void 0:t.type)==="control-points"?t.controlPoints:null},t=>this._elementControlPointsChanged(t),E)])}_elementControlPointsChanged(t){const e=t==null?void 0:t.map(({mapPoint:n})=>n).filter(f),o=this.view.spatialReference;this._updatingHandles.addPromise(this._whenProjected(e,o,n=>{if(!n)return void this._replaceOperations(null);const{_operations:s}=this,p=new G({rings:[n.map(({x:h,y:a})=>[h,a])],spatialReference:o});if(s!=null&&s.trySetGeometry(p))return void this.onModifiedExternally();const u=this.view.state.viewingMode;this._replaceOperations(new S(D.fromGeometry(p,u),u,h=>this._operationsGeometryChanged(h)))}))}_operationsGeometryChanged(t){var h;const{element:{georeference:e},_operations:o}=this;if(!o||!e||e.type!=="control-points"||!e.controlPoints)return;const n=o.data.geometry,s=e.controlPoints.map(({mapPoint:a})=>a).filter(f);if(((h=n.rings[0])==null?void 0:h.length)!==s.length)return;const p=n.rings[0].map(([a,y])=>new j({x:a,y,spatialReference:n.spatialReference})),u=s.map(({spatialReference:a})=>a);this._updatingHandles.addPromise(this._whenProjected(p,u,a=>this._updateElementControlPoints(a,t)))}_updateElementControlPoints(t,e){var s;const{georeference:o}=this.element;if(!o||!t||o.type!=="control-points"||((s=o.controlPoints)==null?void 0:s.length)!==(t==null?void 0:t.length))return;const n=o.controlPoints;if((n==null?void 0:n.length)===t.length)for(let p=0;p<n.length;p++)e&&(n[p].sourcePoint=o.toSource(t[p])),n[p].mapPoint=t[p]}async _whenProjected(t,e,o){if(!t)return void o(t);const{_operations:n,element:{georeference:s}}=this,p=t.map(({spatialReference:a})=>a),u=Array.isArray(e)?e:new Array(p.length).fill(e);await R(Array.from(p).map((a,y)=>({source:a,dest:u[y]})));const h=t.map((a,y)=>A(a,u[y]));n===this._operations&&s===this.element.georeference&&o(h)}_replaceOperations(t){this._operations&&(this.removeHandles(this._operations),this._operations.destroy()),this._operations=t}};i([r({constructOnly:!0})],d.prototype,"view",void 0),i([r({constructOnly:!0})],d.prototype,"layer",void 0),i([r({constructOnly:!0})],d.prototype,"element",void 0),i([r({constructOnly:!0})],d.prototype,"onModifiedExternally",void 0),i([r()],d.prototype,"_operations",void 0),i([r()],d.prototype,"operations",null),i([r()],d.prototype,"updating",null),d=i([g("esri.views.3d.interactive.editingTools.media.MediaElementControllerControlPoints")],d);let c=class extends v{get operations(){return this._operations}get updating(){return this._updatingHandles.updating}constructor(t){super(t),this._updatingHandles=new O}initialize(){this.addHandles([_(this._updatingHandles),this._updatingHandles.add(()=>{var t;return(t=this.element.georeference)==null?void 0:t.coords},t=>this._elementCoordinatesChanged(t),E)])}_elementCoordinatesChanged(t){this._updatedElementCoordinates!==t&&this._updatingHandles.addPromise(this._whenProjected(t,this.view.spatialReference,e=>{if(!e)return void this._replaceOperations(null);const{_operations:o}=this;o!=null&&o.trySetGeometry(e)?this.onModifiedExternally():this._replaceOperations(T.fromGeometry(e,this.view.state.viewingMode))}))}_operationsGeometryChanged(){const{element:{georeference:t},_operations:e}=this;if(!e||!t)return;const o=e.data.geometry;if(!t.coords)return void this._updateElementCoordinates(o);const n=t.coords.spatialReference;this._updatingHandles.addPromise(this._whenProjected(o,n,s=>this._updateElementCoordinates(s)))}_updateElementCoordinates(t){const{georeference:e}=this.element;e&&(e.coords=t,this._updatedElementCoordinates=e.coords)}async _whenProjected(t,e,o){if(!t)return void o(t);const{_operations:n,element:{georeference:s}}=this,p=await V(t,e);n===this._operations&&s===this.element.georeference&&o(p)}_replaceOperations(t){this._operations&&(this.removeHandles(this._operations),this._operations.destroy()),this._operations=t,t&&this.addHandles(t.data.on("change",()=>this._operationsGeometryChanged()),t),this.onModifiedExternally()}};i([r({constructOnly:!0})],c.prototype,"view",void 0),i([r({constructOnly:!0})],c.prototype,"layer",void 0),i([r({constructOnly:!0})],c.prototype,"element",void 0),i([r({constructOnly:!0})],c.prototype,"onModifiedExternally",void 0),i([r()],c.prototype,"_operations",void 0),i([r()],c.prototype,"operations",null),i([r()],c.prototype,"updating",null),c=i([g("esri.views.3d.interactive.editingTools.media.MediaElementControllerShape")],c);function F(t,e,o){return H(t.allLayerViews.find(n=>n.layer===e),o)}function H(t,e){if(!t||t.type!=="media-3d"||t.suspended)return!1;const o=t.layer.source;return!!o&&(o instanceof L||o instanceof k?o===e:"hasElement"in o&&o.hasElement(e))}let l=class extends v{grabbableForEvent(){return!0}constructor(t){super(t),this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.grabbing=!1,this.dragging=!1,this.hovering=!0,this.selected=!1,this.cursor=null,this.consumesClicks=!0,this.events=new P.EventEmitter,this.addHandles(b(()=>this.selected,e=>this.events.emit("select-changed",{action:e?"select":"deselect"}),M))}destroy(){this._set("view",null)}intersectionDistance(t){const{view:e,layer:o,element:n}=this;if(!F(e,o,n))return null;const s=e.toMap(t,{include:{layer:o,element:n}});return s&&I(s,w,e.renderSpatialReference)?z(w,e.state.camera.eye):null}onElevationChange(){}onViewChange(){}};i([r({constructOnly:!0,nonNullable:!0})],l.prototype,"element",void 0),i([r({constructOnly:!0,nonNullable:!0})],l.prototype,"layer",void 0),i([r({constructOnly:!0,nonNullable:!0})],l.prototype,"view",void 0),i([r()],l.prototype,"interactive",void 0),i([r()],l.prototype,"selectable",void 0),i([r()],l.prototype,"grabbable",void 0),i([r()],l.prototype,"grabbing",void 0),i([r()],l.prototype,"dragging",void 0),i([r()],l.prototype,"hovering",void 0),i([r()],l.prototype,"selected",void 0),i([r()],l.prototype,"cursor",void 0),l=i([g("esri.views.3d.interactive.editingTools.media.MediaElementManipulator3D")],l);const w=N(),C=Symbol();let m=class extends P.EventedAccessor{get operations(){var t;return(t=this._controller)==null?void 0:t.operations}get elevationInfo(){return{mode:"on-the-ground",offset:0}}get _layerView(){const t=this.view.allLayerViews.find(e=>e.layer===this.layer);return(t==null?void 0:t.type)==="media-3d"?t:null}get visible(){return H(this._layerView,this.element)}get isDraped(){return!0}get origin(){return null}get updating(){var t;return!!((t=this._controller)!=null&&t.updating)}get _controllerClass(){var t;return this.tool==="transform"||((t=this.element.georeference)==null?void 0:t.type)!=="control-points"?c:d}constructor(t){super(t),this.tool="transform"}initialize(){this.addHandles([b(()=>this._controllerClass,t=>this._updateController(t),$),x(()=>this._layerView,"element-render-changed",({element:t})=>{this.element===t&&this.emit("committed")})])}toMap(t){const{layer:e,element:o}=this;return this.view.toMap(t,{include:{layer:e,element:o}})}createManipulator(t){const{view:e,layer:o,element:n}=this;return new l({view:e,layer:o,element:n,...t})}_updateController(t){if(this._controller&&this._controller instanceof t)return;this.removeHandles(C);const{view:e,layer:o,element:n}=this,s=()=>{this.emit("modified-externally")};this._controller=new t({view:e,layer:o,element:n,onModifiedExternally:s}),s(),this.addHandles(_(this._controller),C)}};i([r({constructOnly:!0})],m.prototype,"view",void 0),i([r({constructOnly:!0})],m.prototype,"layer",void 0),i([r({constructOnly:!0})],m.prototype,"element",void 0),i([r()],m.prototype,"tool",void 0),i([r()],m.prototype,"_controller",void 0),i([r()],m.prototype,"elevationInfo",null),i([r()],m.prototype,"_layerView",null),i([r()],m.prototype,"visible",null),i([r()],m.prototype,"updating",null),i([r()],m.prototype,"_controllerClass",null),m=i([g("esri.views.3d.interactive.editingTools.ManipulatedObject3DMediaElement")],m);export{m as ManipulatedObject3DMediaElement};
