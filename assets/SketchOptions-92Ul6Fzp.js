import{r as e,m as t,a as p,g as r}from"./Accessor-BHnuXKD2.js";import{c as v}from"./SketchLabelOptions-CwtwEofC.js";import{j as h}from"./angularMeasurementUtils-lDJJxFDs.js";let s=class extends r{constructor(l){super(l),this.length=null,this.verticalLength=null,this.area=null}};e([t()],s.prototype,"length",void 0),e([t()],s.prototype,"verticalLength",void 0),e([t()],s.prototype,"area",void 0),s=e([p("esri.views.interactive.sketch.Units")],s);const u=s;let n=class extends r{constructor(d){super(d),this.directionMode="relative",this.relativeDirectionIsBilateral=!1}get effectiveDirectionMode(){switch(this.directionMode){case"relative":return this.relativeDirectionIsBilateral?h.RelativeBilateral:h.Relative;case"absolute":return h.Absolute}}get displayUnits(){return this._get("displayUnits")??new u}set displayUnits(d){this._set("displayUnits",d)}get inputUnits(){return this._get("inputUnits")??new u}set inputUnits(d){this._set("inputUnits",d)}};e([t({type:String,nonNullable:!0})],n.prototype,"directionMode",void 0),e([t({type:Boolean,nonNullable:!0})],n.prototype,"relativeDirectionIsBilateral",void 0),e([t()],n.prototype,"effectiveDirectionMode",null),e([t({type:u,nonNullable:!0})],n.prototype,"displayUnits",null),e([t({type:u,nonNullable:!0})],n.prototype,"inputUnits",null),n=e([p("esri.views.interactive.sketch.SketchValueOptions")],n);const y=n;let c=class extends r{constructor(l){super(l),this.mode="absolute-height"}toJSON(){return{mode:this.mode}}};e([t({type:String,nonNullable:!0})],c.prototype,"mode",void 0),c=e([p("esri.views.interactive.sketch.SketchTooltipElevationOptions")],c);let o=class extends r{constructor(l){super(l),this.area=!0,this.coordinates=!0,this.direction=!0,this.distance=!0,this.elevation=!0,this.header=!0,this.helpMessage=!1,this.orientation=!0,this.radius=!0,this.rotation=!0,this.scale=!0,this.size=!0,this.totalLength=!0}};e([t({type:Boolean,nonNullable:!0})],o.prototype,"area",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"coordinates",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"direction",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"distance",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"elevation",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"header",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"helpMessage",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"orientation",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"radius",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"rotation",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"scale",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"size",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"totalLength",void 0),o=e([p("esri.views.interactive.sketch.SketchTooltipVisibleElements")],o);const b=o;let i=class extends r{constructor(l){super(l),this.enabled=!1,this.forceEnabled=!1,this.helpMessage=null,this.helpMessageIcon=null,this.inputEnabled=!0,this.elevation=new c,this.placement="auto",this.offset=null,this.visibleElements=new b,this.visualVariables=null,this.xyMode="auto"}get effectiveEnabled(){return this.forceEnabled||this.enabled}};e([t({type:Boolean,nonNullable:!0})],i.prototype,"enabled",void 0),e([t()],i.prototype,"forceEnabled",void 0),e([t()],i.prototype,"effectiveEnabled",null),e([t()],i.prototype,"helpMessage",void 0),e([t()],i.prototype,"helpMessageIcon",void 0),e([t({type:Boolean,nonNullable:!0})],i.prototype,"inputEnabled",void 0),e([t({type:c,nonNullable:!0})],i.prototype,"elevation",void 0),e([t()],i.prototype,"placement",void 0),e([t()],i.prototype,"offset",void 0),e([t({type:b,nonNullable:!0})],i.prototype,"visibleElements",void 0),e([t()],i.prototype,"visualVariables",void 0),e([t()],i.prototype,"xyMode",void 0),i=e([p("esri.views.interactive.sketch.SketchTooltipOptions")],i);const N=i;let a=class extends r{constructor(l){super(l),this.labels=new v,this.tooltips=new N,this.values=new y}};e([t({nonNullable:!0,type:v})],a.prototype,"labels",void 0),e([t({nonNullable:!0,type:N})],a.prototype,"tooltips",void 0),e([t({nonNullable:!0,type:y})],a.prototype,"values",void 0),a=e([p("esri.views.interactive.sketch.SketchOptions")],a);const w=a;export{y as a,w as l,N as r};
