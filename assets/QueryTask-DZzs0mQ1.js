import{aW as h,aX as _,aF as T,d as s,y as l,aR as S,f as A,$ as w,bY as N,z as Q,eV as m,_ as n,F as P}from"./index-B1qcMJFy.js";import{u as f,i as y}from"./infoFor3D-DsOdlPuA.js";import{n as j,s as q}from"./executeForIds-CHx9enu6.js";import{x as L}from"./query-B_4vDsHl.js";import{a as z}from"./executeQueryJSON-ClQYIFFr.js";import{n as J}from"./executeQueryPBF-B9QB6nku.js";import{d as $}from"./FeatureSet-B0ca9TdS.js";async function C(e,t,r){const o=h(e),u=await L(o,_.from(t),{...r}),i=u.data.extent;return!i||isNaN(i.xmin)||isNaN(i.ymin)||isNaN(i.xmax)||isNaN(i.ymax)?{count:u.data.count,extent:null}:{count:u.data.count,extent:T.fromJSON(i)}}let a=class extends w{constructor(e){super(e),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.url=null}get parsedUrl(){return N(this.url)}async execute(e,t){const r=await this.executeJSON(e,t);return this.featureSetFromJSON(e,r,t)}async executeJSON(e,t){var c;const r=this._normalizeQuery(e),o=((c=e.outStatistics)==null?void 0:c[0])!=null,u=Q("featurelayer-pbf-statistics"),i=!o||u;let p;if(this.pbfSupported&&i)try{p=await J(this.url,r,t)}catch(d){if(d.name!=="query:parsing-pbf")throw d;this.pbfSupported=!1}return this.pbfSupported&&i||(p=await z(this.url,r,t)),this._normalizeFields(p.fields),p}async featureSetFromJSON(e,t,r){if(!this._queryIs3DObjectFormat(e)||this.infoFor3D==null||!t.features)return $.fromJSON(t);const{meshFeatureSetFromJSON:o}=await m(n(()=>import("./meshFeatureSet-BtXocWrc.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]),import.meta.url),r);return o(e,this.infoFor3D,t)}executeForCount(e,t){return j(this.url,this._normalizeQuery(e),t)}executeForExtent(e,t){return C(this.url,this._normalizeQuery(e),t)}executeForIds(e,t){return q(this.url,this._normalizeQuery(e),t)}async executeRelationshipQuery(e,t){const[{default:r},{executeRelationshipQuery:o}]=await m(Promise.all([n(()=>import("./RelationshipQuery-DLL_bDIJ.js"),__vite__mapDeps([31,1,2]),import.meta.url),n(()=>import("./executeRelationshipQuery-DMx2qhOl.js"),__vite__mapDeps([32,1,2,33,34,35,36,37,38,30,31]),import.meta.url)]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),o(this.url,e,t)}async executeRelationshipQueryForCount(e,t){const[{default:r},{executeRelationshipQueryForCount:o}]=await m(Promise.all([n(()=>import("./RelationshipQuery-DLL_bDIJ.js"),__vite__mapDeps([31,1,2]),import.meta.url),n(()=>import("./executeRelationshipQuery-DMx2qhOl.js"),__vite__mapDeps([32,1,2,33,34,35,36,37,38,30,31]),import.meta.url)]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),o(this.url,e,t)}async executeAttachmentQuery(e,t){const{executeAttachmentQuery:r,fetchAttachments:o,processAttachmentQueryResult:u}=await m(n(()=>import("./queryAttachments-CGxmvXwF.js"),__vite__mapDeps([39,1,2,33,34,35,36,37,38,40]),import.meta.url),t),i=h(this.url);return u(i,await(this.queryAttachmentsSupported?r(i,e,t):o(i,e,t)))}async executeTopFeaturesQuery(e,t){const{executeTopFeaturesQuery:r}=await m(n(()=>import("./executeTopFeaturesQuery-DLwPnDJB.js"),__vite__mapDeps([41,1,2,42,33,34,35,36,37,38,30,43]),import.meta.url),t);return r(this.parsedUrl,e,this.sourceSpatialReference,t)}async executeForTopIds(e,t){const{executeForTopIds:r}=await m(n(()=>import("./executeForTopIds-D-ezkyOz.js"),__vite__mapDeps([44,1,2,42,33,34,35,36,37,38,43]),import.meta.url),t);return r(this.parsedUrl,e,t)}async executeForTopExtents(e,t){const{executeForTopExtents:r}=await m(n(()=>import("./executeForTopExtents-CCz6n0p6.js"),__vite__mapDeps([45,1,2,42,33,34,35,36,37,38,43]),import.meta.url),t);return r(this.parsedUrl,e,t)}async executeForTopCount(e,t){const{executeForTopCount:r}=await m(n(()=>import("./executeForTopCount-pEhjXAjX.js"),__vite__mapDeps([46,1,2,42,33,34,35,36,37,38,43]),import.meta.url),t);return r(this.parsedUrl,e,t)}_normalizeQuery(e){let t=_.from(e);t.sourceSpatialReference=t.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(t=t===e?t.clone():t,t.gdbVersion=e.gdbVersion||this.gdbVersion,t.dynamicDataSource=e.dynamicDataSource?S.from(e.dynamicDataSource):this.dynamicDataSource);const{infoFor3D:r}=this;if(r!=null&&this._queryIs3DObjectFormat(e)){t=t===e?t.clone():t,t.formatOf3DObjects=null;const{supportedFormats:o,queryFormats:u}=r,i=f("model/gltf-binary",o)??y("glb",o),p=f("model/gltf+json",o)??y("gltf",o);for(const c of u){if(c===i){t.formatOf3DObjects=c;break}c!==p||t.formatOf3DObjects||(t.formatOf3DObjects=c)}if(!t.formatOf3DObjects)throw new P("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(t.outFields==null||!t.outFields.includes("*")){t=t===e?t.clone():t,t.outFields==null&&(t.outFields=[]);const{originX:c,originY:d,originZ:D,translationX:x,translationY:F,translationZ:b,scaleX:O,scaleY:g,scaleZ:V,rotationX:E,rotationY:R,rotationZ:I,rotationDeg:v}=r.transformFieldRoles;t.outFields.push(c,d,D,x,F,b,O,g,V,E,R,I,v)}}return t}_normalizeFields(e){if(this.fieldsIndex!=null&&e!=null)for(const t of e){const r=this.fieldsIndex.get(t.name);r&&Object.assign(t,r.toJSON())}}_queryIs3DObjectFormat(e){return this.infoFor3D!=null&&e.returnGeometry===!0&&e.multipatchOption!=="xyFootprint"&&!e.outStatistics}};s([l({type:S})],a.prototype,"dynamicDataSource",void 0),s([l()],a.prototype,"fieldsIndex",void 0),s([l()],a.prototype,"gdbVersion",void 0),s([l()],a.prototype,"infoFor3D",void 0),s([l({readOnly:!0})],a.prototype,"parsedUrl",null),s([l()],a.prototype,"pbfSupported",void 0),s([l()],a.prototype,"queryAttachmentsSupported",void 0),s([l()],a.prototype,"sourceSpatialReference",void 0),s([l({type:String})],a.prototype,"url",void 0),a=s([A("esri.tasks.QueryTask")],a);const M=a;export{M as x};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["./meshFeatureSet-BtXocWrc.js","./index-B1qcMJFy.js","./index-DAhQBRAS.css","./Mesh-aDNBju-U.js","./georeference-DRAcP5YF.js","./mat3f64-q3fE-ZOt.js","./mat4f64-CSKppSlJ.js","./computeTranslationToOriginAndRotation-cKPYaaYJ.js","./DoubleArray-D7gNrzaD.js","./quat-9HFu1srU.js","./quatf64-Bdb9ZJJK.js","./vec42-B-sS29RP.js","./vec4f64-CCf6w8sj.js","./meshVertexSpaceUtils-BNBosy7D.js","./MeshLocalVertexSpace-Bs8ui3ZL.js","./vec3-DSi-VB0T.js","./BufferView-BM2WiAif.js","./imageUtils-oI9wK4--.js","./earcut-CT2IwvBr.js","./Indices-BejeJYXe.js","./deduplicate-CPx9Di_b.js","./plane-CxxdxNVW.js","./triangle-X5s481EW.js","./Util-B3rjJlnv.js","./ObjectStack-aJ7Mjxbo.js","./lineSegment-DVmVTnZ9.js","./basicInterfaces-GbxEOYtk.js","./VertexAttribute-BlT9lbVY.js","./External-K9FIQKmG.js","./infoFor3D-DsOdlPuA.js","./FeatureSet-B0ca9TdS.js","./RelationshipQuery-DLL_bDIJ.js","./executeRelationshipQuery-DMx2qhOl.js","./query-B_4vDsHl.js","./pbfQueryUtils-BIUzzBOM.js","./pbf-DdHtTFeL.js","./OptimizedGeometry-CQuTPb9g.js","./OptimizedFeatureSet-Blu9Ckm7.js","./queryZScale-CxjL_CF1.js","./queryAttachments-CGxmvXwF.js","./AttachmentInfo-B6f2cGC_.js","./executeTopFeaturesQuery-DLwPnDJB.js","./queryTopFeatures-Zh8tzbaW.js","./TopFeaturesQuery-DCHj7H1E.js","./executeForTopIds-D-ezkyOz.js","./executeForTopExtents-CCz6n0p6.js","./executeForTopCount-pEhjXAjX.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
