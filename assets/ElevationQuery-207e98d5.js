import{s as H,az as A,dF as P,C as N,bc as T,ft as J,cj as K,T as d,ax as q,ay as D,e0 as X,a0 as b,et as R,a6 as k,dc as Y,ei as U,ar as ee,aB as E,M as te,fu as L}from"./index-e8c6bcc0.js";const I=H.getLogger("esri.layers.support.ElevationSampler");let W=class{queryElevation(e){return ne(e.clone(),this)}on(){return oe}projectIfRequired(e,t){return Q(e,t)}};class se extends W{get spatialReference(){return this.extent.spatialReference}constructor(e,t,s){super(),this.tile=e,this.noDataValue=s;const n=e.tile.extent;this.extent=P(n,t.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=n;const l=T(t.spatialReference),i=t.lodAt(e.tile.level).resolution*l;this.demResolution={min:i,max:i}}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return t!=null&&this.containsAt(t.x,t.y)}containsAt(e,t){return J(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const s=this.extent,n=`${s.xmin}, ${s.ymin}, ${s.xmax}, ${s.ymax}`;return I.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${n})`),this.noDataValue}return this.tile.sample(e,t)??this.noDataValue}}class O extends W{get spatialReference(){return this.extent.spatialReference}constructor(e,t,s){let n;super(),typeof t=="number"?(this.noDataValue=t,n=null):(n=t,this.noDataValue=s),this.samplers=n?e.map(i=>new se(i,n,this.noDataValue)):e;const l=this.samplers[0];if(l){this.extent=l.extent.clone();const{min:i,max:o}=l.demResolution;this.demResolution={min:i,max:o};for(let a=1;a<this.samplers.length;a++){const r=this.samplers[a];this.extent.union(r.extent),this.demResolution.min=Math.min(this.demResolution.min,r.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,r.demResolution.max)}}else this.extent=P(N(),n.spatialReference),this.demResolution={min:0,max:0}}elevationAt(e,t){for(const s of this.samplers)if(s.containsAt(e,t))return s.elevationAt(e,t);return I.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue}}function ne(c,e){const t=Q(c,e.spatialReference);if(!t)return null;switch(c.type){case"point":ie(c,t,e);break;case"polyline":le(c,t,e);break;case"multipoint":ae(c,t,e)}return c}function Q(c,e){if(c==null)return null;const t=c.spatialReference;if(t.equals(e))return c;const s=K(c,e);return s||I.error(`Cannot project geometry spatial reference (wkid:${t.wkid}) to elevation sampler spatial reference (wkid:${e.wkid})`),s}function ie(c,e,t){c.z=t.elevationAt(e.x,e.y)}function le(c,e,t){y.spatialReference=e.spatialReference;const s=c.hasM&&!c.hasZ;for(let n=0;n<c.paths.length;n++){const l=c.paths[n],i=e.paths[n];for(let o=0;o<l.length;o++){const a=l[o],r=i[o];y.x=r[0],y.y=r[1],s&&(a[3]=a[2]),a[2]=t.elevationAt(y.x,y.y)}}c.hasZ=!0}function ae(c,e,t){y.spatialReference=e.spatialReference;const s=c.hasM&&!c.hasZ;for(let n=0;n<c.points.length;n++){const l=c.points[n],i=e.points[n];y.x=i[0],y.y=i[1],s&&(l[3]=l[2]),l[2]=t.elevationAt(y.x,y.y)}c.hasZ=!0}const y=new A,oe={remove(){}};let re=class{constructor(e,t){this.data=e,this.safeWidth=.99999999*(e.width-1),this.dx=(e.width-1)/(t[2]-t[0]),this.dy=(e.width-1)/(t[3]-t[1]),this.x0=t[0],this.y1=t[3]}};class Z{constructor(e,t=null){if(this.tile=e,t!=null&&e!=null){const s=e.extent;this._samplerData=new re(t,s)}}get zmin(){return this._samplerData!=null?this._samplerData.data.minValue:0}get zmax(){return this._samplerData!=null?this._samplerData.data.maxValue:0}sample(e,t){if(this._samplerData==null)return;const{safeWidth:s,data:n,dx:l,dy:i,y1:o,x0:a}=this._samplerData,{width:r,values:u,noDataValue:m}=n,p=j(i*(o-t),0,s),h=j(l*(e-a),0,s),$=Math.floor(p),F=Math.floor(h),w=$*r+F,M=w+r,g=u[w],_=u[M],C=u[w+1],z=u[M+1];if(g!==m&&_!==m&&C!==m&&z!==m){const S=h-F,V=g+(C-g)*S;return V+(_+(z-_)*S-V)*(p-$)}}}function j(c,e,t){return c<e?e:c>t?t:c}class fe{async queryAll(e,t,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter(r=>r.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=x.fromGeometry(t);let l=!1;s&&s.returnSampleInfo||(l=!0);const i={...v,...s,returnSampleInfo:!0},o=await this.query(e[e.length-1],n,i),a=await this._queryAllContinue(e,o,i);return a.geometry=a.geometry.export(),l&&delete a.sampleInfo,a}async query(e,t,s){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof x)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...v,...s},l=new ce(e,t.spatialReference,n),i=n.signal;return await e.load({signal:i}),await this._createGeometryDescriptor(l,t,i),await this._selectTiles(l,i),await this._populateElevationTiles(l,i),this._sampleGeometryWithElevation(l),this._createQueryResult(l,i)}async createSampler(e,t,s){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...v,...s};return this._createSampler(e,t,n)}async createSamplerAll(e,t,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter(i=>i.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...v,...s,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,l,n)}async _createSampler(e,t,s,n){const l=s.signal;await e.load({signal:l});const i=t.spatialReference,o=e.tileInfo.spatialReference;i.equals(o)||(await q([{source:i,dest:o}],{signal:l}),t=D(t,o));const a=new ue(e,t,s,n);return await this._selectTiles(a,l),await this._populateElevationTiles(a,l),new O(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,s,n){if(e.pop(),!e.length)return s;const l=s.samplers.map(r=>X(r.extent)),i=await this._createSampler(e[e.length-1],t,n,l);if(i.samplers.length===0)return s;const o=s.samplers.concat(i.samplers),a=new O(o,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,s){const n=e.pop(),l=t.geometry.coordinates,i=t.sampleInfo;b(i);const o=[],a=[];for(let p=0;p<l.length;p++){const h=i[p];h.demResolution>=0?h.source||(h.source=n):e.length&&(o.push(l[p]),a.push(p))}if(!e.length||o.length===0)return t;const r=t.geometry.clone(o),u=await this.query(e[e.length-1],r,s),m=u.sampleInfo;if(!m)throw new Error("no sampleInfo");return a.forEach((p,h)=>{l[p].z=u.geometry.coordinates[h].z,i[p].demResolution=m[h].demResolution}),this._queryAllContinue(e,t,s)}async _createQueryResult(e,t){const s=await e.geometry.project(e.outSpatialReference,t);b(s);const n={geometry:s.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(l=>{l.tile=null,l.elevationTile=null}),n}async _createGeometryDescriptor(e,t,s){let n;const l=e.layer.tileInfo.spatialReference;if(t instanceof x?n=await t.project(l,s):(await q([{source:t.spatialReference,dest:l}],{signal:s}),n=D(t,l)),!n)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=x.fromGeometry(n)}async _selectTiles(e,t){e.type==="geometry"&&this._preselectOutsideLayerExtent(e);const s=e.options.demResolution;if(typeof s=="number")this._selectTilesClosestResolution(e,s);else if(s==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(s!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${s}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}_preselectOutsideLayerExtent(e){if(e.layer.fullExtent==null)return;const t=new Z(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const s=e.layer.fullExtent;e.geometry.coordinates.forEach(n=>{const l=n.x,i=n.y;(l<s.xmin||l>s.xmax||i<s.ymin||i>s.ymax)&&(n.elevationTile=t)})}_selectTilesClosestResolution(e,t){const s=e.layer.tileInfo,n=this._findNearestDemResolutionLODIndex(s,t);e.selectTilesAtLOD(n)}_findNearestDemResolutionLODIndex(e,t){const s=t/T(e.spatialReference);let n=e.lods[0],l=0;for(let i=1;i<e.lods.length;i++){const o=e.lods[i];Math.abs(o.resolution-s)<Math.abs(n.resolution-s)&&(n=o,l=i)}return l}async _selectTilesFinestContiguous(e,t){const s=G(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,s,t)}async _selectTilesFinestContiguousAt(e,t,s){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const l=n.tilemapCache,i=e.getTilesToFetch();try{if(l)await R(Promise.all(i.map(o=>l.fetchAvailability(o.level,o.row,o.col,{signal:s}))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles")}catch(o){k(o),await this._selectTilesFinestContiguousAt(e,t-1,s)}}async _populateElevationTiles(e,t){const s=e.getTilesToFetch(),n={},l=e.options.cache,i=e.options.noDataValue,o=s.map(async a=>{if(a.id==null)return;const r=`${e.layer.uid}:${a.id}:${i}`,u=l!=null?l.get(r):null,m=u??await e.layer.fetchTile(a.level,a.row,a.col,{noDataValue:i,signal:t});l!=null&&l.put(r,m),n[a.id]=new Z(a,m)});await R(Y(o),t),e.populateElevationTiles(n)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const s=e.layer.tilemapCache;if(!s)return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),l={},i=n.map(async o=>{const a=new U(null,0,0,0,N()),r=await ee(s.fetchAvailabilityUpsample(o.level,o.row,o.col,a,{signal:t}));r.ok!==!1?o.id!=null&&(l[o.id]=a):k(r.error)});await R(Promise.all(i),t),e.remapTiles(l)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let s=0;const n={},l=a=>{a.id!=null&&(a.id in n?n[a.id]++:(n[a.id]=1,s++))},i=a=>{if(a.id==null)return;const r=n[a.id];r===1?(delete n[a.id],s--):n[a.id]=r-1};e.forEachTileToFetch(l,i);let o=!0;for(;o&&(o=!1,e.forEachTileToFetch(a=>{s<=e.options.maximumAutoTileRequests||(i(a),t.upsampleTile(a)&&(o=!0),l(a))},i),o););}_selectTilesAutoFinest(e){const t=G(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const s=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch((l,i)=>{s.upsampleTile(l)?n=!0:i()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach(t=>{const s=t.elevationTile;let n=e.options.noDataValue;if(s){const l=s.sample(t.x,t.y);l!=null?n=l:t.elevationTile=null}t.z=n})}_extractSampleInfo(e){const t=e.layer.tileInfo,s=T(t.spatialReference);return e.geometry.coordinates.map(n=>{let l=-1;return n.elevationTile&&n.elevationTile!==e.outsideExtentTile&&(l=t.lodAt(n.elevationTile.tile.level).resolution*s),{demResolution:l}})}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(s=>s.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await q([{source:this.spatialReference,dest:e}],{signal:t});const s=new E({spatialReference:this.spatialReference,points:this.coordinates.map(o=>[o.x,o.y])}),n=D(s,e);if(!n)return null;const l=this.coordinates.map((o,a)=>{const r=o.clone(),u=n.points[a];return r.x=u[0],r.y=u[1],r}),i=this.clone(l);return i.spatialReference=e,i}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map(s=>s.clone()),t._exporter=(s,n)=>{const l=e.clone(s);return l.spatialReference=n,l};else switch(e.type){case"point":{const s=e,{hasZ:n,hasM:l}=s;t.coordinates=n&&l?[new f(s.x,s.y,s.z,s.m)]:n?[new f(s.x,s.y,s.z)]:l?[new f(s.x,s.y,null,s.m)]:[new f(s.x,s.y)],t._exporter=(i,o)=>e.hasM?new A(i[0].x,i[0].y,i[0].z,i[0].m,o):new A(i[0].x,i[0].y,i[0].z,o);break}case"multipoint":{const s=e,{hasZ:n,hasM:l}=s;t.coordinates=n&&l?s.points.map(i=>new f(i[0],i[1],i[2],i[3])):n?s.points.map(i=>new f(i[0],i[1],i[2])):l?s.points.map(i=>new f(i[0],i[1],null,i[2])):s.points.map(i=>new f(i[0],i[1])),t._exporter=(i,o)=>e.hasM?new E({points:i.map(a=>[a.x,a.y,a.z,a.m]),hasZ:!0,hasM:!0,spatiaReference:o}):new E(i.map(a=>[a.x,a.y,a.z]),o);break}case"polyline":{const s=e,n=[],l=[],{hasZ:i,hasM:o}=e;let a=0;for(const r of s.paths)if(l.push([a,a+r.length]),a+=r.length,i&&o)for(const u of r)n.push(new f(u[0],u[1],u[2],u[3]));else if(i)for(const u of r)n.push(new f(u[0],u[1],u[2]));else if(o)for(const u of r)n.push(new f(u[0],u[1],null,u[2]));else for(const u of r)n.push(new f(u[0],u[1]));t.coordinates=n,t._exporter=(r,u)=>{const m=e.hasM?r.map(h=>[h.x,h.y,h.z,h.m]):r.map(h=>[h.x,h.y,h.z]),p=l.map(h=>m.slice(h[0],h[1]));return new te({paths:p,hasM:e.hasM,hasZ:!0,spatialReference:u})};break}}return t}}class f{constructor(e,t,s=null,n=null,l=null,i=null){this.x=e,this.y=t,this.z=s,this.m=n,this.tile=l,this.elevationTile=i}clone(){return new f(this.x,this.y,this.z,this.m)}}class B{constructor(e,t){this.layer=e,this.options=t}}class ce extends B{constructor(e,t,s){super(e,s),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>t.tile=null);else{const t=this.layer.tileInfo,s=t.lods[e].level;this.geometry.coordinates.forEach(n=>n.tile=t.tileAt(s,n.x,n.y))}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){var t;for(const s of this.geometry.coordinates)!s.elevationTile&&((t=s.tile)!=null&&t.id)&&(s.elevationTile=e[s.tile.id])}remapTiles(e){var t;for(const s of this.geometry.coordinates){const n=(t=s.tile)==null?void 0:t.id;s.tile=n?e[n]:null}}getTilesToFetch(){var s;const e={},t=[];for(const n of this.geometry.coordinates){const l=n.tile;if(!l)continue;const i=(s=n.tile)==null?void 0:s.id;n.elevationTile||!i||e[i]||(e[i]=l,t.push(l))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class ue extends B{constructor(e,t,s,n){super(e,s),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const s=this._maximumLodForRequests(t),n=Math.min(s,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const s=this.extent;if(s==null)return-1;for(let n=t.lods.length-1;n>=0;n--){const l=t.lods[n],i=l.resolution*t.size[0],o=l.resolution*t.size[1];if(Math.ceil(s.width/i)*Math.ceil(s.height/o)<=e)return n}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const s=t.id&&e[t.id];s&&(this._fetchedCandidates.add(t),this.elevationTiles.push(s))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const s=this._candidateTiles;this._candidateTiles=[],s.forEach(n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let l=!1;e(n,()=>l=!0),l?t&&t(n):this._candidateTiles.push(n)}),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const s={},n=[];for(const i of e){const o=i.id;o&&!s[o]?(s[o]=i,n.push(i)):t&&t(i)}const l=n.sort((i,o)=>i.level-o.level);return l.filter((i,o)=>{for(let a=0;a<o;a++){const r=l[a].extent;if(r&&i.extent&&L(r,i.extent))return t&&t(i),!1}return!0})}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t==null)return;const s=this.layer.tileInfo,n=s.lods[e],l=s.tileAt(n.level,t.xmin,t.ymin),i=l.extent;if(i==null)return;const o=n.resolution*s.size[0],a=n.resolution*s.size[1],r=Math.ceil((t.xmax-i[0])/o),u=Math.ceil((t.ymax-i[1])/a);for(let m=0;m<u;m++)for(let p=0;p<r;p++){const h=new U(null,l.level,l.row-m,l.col+p);s.updateTileInfo(h),this._tileIsMasked(h)||this._candidateTiles.push(h)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&L(t,e.extent))}}function G(c,e=0){let t=c.lods.length-1;if(e>0){const s=e/T(c.spatialReference),n=c.lods.findIndex(l=>l.resolution<s);n===0?t=0:n>0&&(t=n-1)}return t}const v={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};export{fe as ElevationQuery,x as GeometryDescriptor,G as getFinestLodIndex};
