import{c as I}from"./subclass-BR3PhgZG.js";import{p as F,u as S}from"./jsonUtils-Cma_7A64.js";import{a5 as v}from"./Point-DB4Hp4hH.js";import{e as O,n as Q,t as Z}from"./featureConversionUtils-DdoZh_25.js";import{t as A,n as k}from"./objectIdUtils-4dd1rf9p.js";import{m as C}from"./FeatureStore-BudYmSEo.js";import{x as E,j as _}from"./timeSupport-BvrtlmuZ.js";import{$ as P}from"./QueryEngine-CDSTFuau.js";import{i as $,o as G,c as L}from"./clientSideDefaults-DDr2PCsV.js";import{j as z,f as g,p as T,d as j,y as w}from"./sourceUtils-De8rN0ok.js";import{Z as D}from"./FieldsIndex-IOXc-mnc.js";import{i as W}from"./fieldType-CIG5ey7e.js";import{K as B,H}from"./fieldUtils-CNduWQU9.js";import{i as N}from"./Promise-CZrWwByK.js";import"./Extent-DHjqVB-p.js";import"./Evented-CXIxDjmW.js";import"./Accessor-D6mNnsWy.js";import"./Polyline-D97hl-6E.js";import"./writer-3zufXUNV.js";import"./mathUtils-ClvKsMak.js";import"./jsonMap-DCC6W5ex.js";import"./assets-C2mb-ea2.js";import"./index-CeCSsEgo.js";import"./aaBoundingBox-rJEWaOSN.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-DmV4yive.js";import"./PooledRBush-CGlhTzFe.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./optimizedFeatureQueryEngineAdapter-Buta7wlw.js";import"./centroid-DdLmOD72.js";import"./projection-A9yUaaTs.js";import"./reactiveUtils-BFQ0BtrB.js";import"./shared-B3wH2qpO.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./normalizeUtils-Bi6Jza1f.js";import"./normalizeUtilsCommon-tgSpcwHH.js";import"./geometry-DpwwkAX1.js";import"./utils-D61i9O7E.js";import"./utils-Dx8bgRIB.js";import"./json-Wa8cmqdu.js";import"./MemCache-C6WUx-5V.js";import"./LRUCache-ju6LnIBZ.js";import"./WhereClause-B8B42Be_.js";import"./TimeOnly-cvONhzoK.js";import"./UnknownTimeZone-D0GlcniK.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./quantizationUtils-CIQDbQFJ.js";import"./utils-aRVn40Z7.js";import"./screenUtils-PfxkaaMN.js";import"./timeUtils-DQR2jUPL.js";import"./heatmapUtils-C-uT6ZIV.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./utils-BaQRRNPl.js";import"./Basemap-DhGpUWGY.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-liet8xHC.js";import"./loadAll-DDw-urzS.js";import"./PortalItem-BuTU9OuN.js";import"./persistableUrlUtils-BcifXQ1Z.js";import"./writeUtils-3wz9AuW7.js";import"./layerUtils-erzwAANv.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./utils-BTpbFBnk.js";import"./ClassBreaksDefinition-BbGMTL53.js";import"./enumeration--HlxOQ_N.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Scheduler-CDoWuxMK.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./defaultsJSON-GKolV7NZ.js";import"./date-M6n_RqpC.js";import"./intl-Dpfm8vPB.js";const U=v,J={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:v},K={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function V(h){return S(h)?h.z!=null:!!h.hasZ}function X(h){return S(h)?h.m!=null:!!h.hasM}class Tt{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){var e;(e=this._queryEngine)==null||e.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const i=[],{features:o}=e,s=this._inferLayerProperties(o,e.fields),l=e.fields||[],d=e.hasM!=null?e.hasM:!!s.hasM,c=e.hasZ!=null?e.hasZ:!!s.hasZ,u=!e.spatialReference&&!s.spatialReference,p=u?U:e.spatialReference||s.spatialReference,y=u?J:null,m=e.geometryType||s.geometryType,a=!m;let t=e.objectIdField||s.objectIdField,n=e.timeInfo;const f=new D(l);if(!a&&(u&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!m))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!t)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(s.objectIdField&&t!==s.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${t}" doesn't match the field name "${s.objectIdField}", found in the provided fields`}),t=s.objectIdField),t&&!s.objectIdField){const r=f.get(t);r?(t=r.name,r.type="esriFieldTypeOID",r.editable=!1,r.nullable=!1):l.unshift({alias:t,name:t,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const r of l){if(r.name==null&&(r.name=r.alias),r.alias==null&&(r.alias=r.name),!r.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:r});if(r.name===t&&(r.type="esriFieldTypeOID"),!W.jsonValues.includes(r.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${r.name}"`,{field:r});r.length==null&&(r.length=B(r))}const b={};for(const r of l)if(r.type!=="esriFieldTypeOID"&&r.type!=="esriFieldTypeGlobalID"){const q=H(r);q!==void 0&&(b[r.name]=q)}if(n){if(n.startTimeField){const r=f.get(n.startTimeField);r?(n.startTimeField=r.name,r.type="esriFieldTypeDate"):n.startTimeField=null}if(n.endTimeField){const r=f.get(n.endTimeField);r?(n.endTimeField=r.name,r.type="esriFieldTypeDate"):n.endTimeField=null}if(n.trackIdField){const r=f.get(n.trackIdField);r?n.trackIdField=r.name:(n.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:n}}))}n.startTimeField||n.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:n}}),n=null)}const x=f.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??N}:null;this._createDefaultAttributes=$(b,t);const R={warnings:i,featureErrors:[],layerDefinition:{...K,drawingInfo:G(m),templates:L(b),extent:y,geometryType:m,objectIdField:t,fields:l,hasZ:c,hasM:d,timeInfo:n,dateFieldsTimeReference:x},assignedObjectIds:{}};if(this._queryEngine=new P({fieldsIndex:D.fromLayerJSON({fields:l,timeInfo:n,dateFieldsTimeReference:x}),geometryType:m,hasM:d,hasZ:c,objectIdField:t,spatialReference:p,featureStore:new C({geometryType:m,hasM:d,hasZ:c}),timeInfo:n,cacheSpatialQueries:!0}),!(o!=null&&o.length))return this._nextObjectId=A,R;const M=k(t,o);return this._nextObjectId=M+1,await E(o,p),this._loadInitialFeatures(R,o)}async applyEdits(e){const{spatialReference:i,geometryType:o}=this._queryEngine;return await Promise.all([z(i,o),E(e.adds,i),E(e.updates,i)]),this._applyEdits(e)}queryFeatures(e,i={}){return this._queryEngine.executeQuery(e,i.signal)}queryFeatureCount(e,i={}){return this._queryEngine.executeQueryForCount(e,i.signal)}queryObjectIds(e,i={}){return this._queryEngine.executeQueryForIds(e,i.signal)}queryExtent(e,i={}){return this._queryEngine.executeQueryForExtent(e,i.signal)}querySnapping(e,i={}){return this._queryEngine.executeQueryForSnapping(e,i.signal)}_inferLayerProperties(e,i){let o,s,l=null,d=null,c=null;for(const u of e){const p=u.geometry;if(p!=null&&(l||(l=F(p)),d||(d=p.spatialReference),o==null&&(o=V(p)),s==null&&(s=X(p)),l&&d&&o!=null&&s!=null))break}if(i&&i.length){let u=null;i.some(p=>{const y=p.type==="esriFieldTypeOID",m=!p.type&&p.name&&p.name.toLowerCase()==="objectid";return u=p,y||m})&&(c=u.name)}return{geometryType:l,spatialReference:d,objectIdField:c,hasM:s,hasZ:o}}async _loadInitialFeatures(e,i){const{geometryType:o,hasM:s,hasZ:l,objectIdField:d,spatialReference:c,featureStore:u,fieldsIndex:p}=this._queryEngine,y=[];for(const t of i){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&o!==F(t.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const n=this._createDefaultAttributes(),f=T(p,n,t.attributes,!0);f?e.featureErrors.push(f):(this._assignObjectId(n,t.attributes,!0),t.attributes=n,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[d]),t.geometry!=null&&(t.geometry=_(t.geometry,t.geometry.spatialReference,c)),y.push(t))}u.addMany(O([],y,o,l,s,d));const{fullExtent:m,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=m,a){const{start:t,end:n}=a;e.layerDefinition.timeInfo.timeExtent=[t,n]}return e}async _applyEdits(e){const{adds:i,updates:o,deletes:s}=e,l={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(i!=null&&i.length&&this._applyAddEdits(l,i),o!=null&&o.length&&this._applyUpdateEdits(l,o),s==null?void 0:s.length){for(const u of s)l.deleteResults.push(j(u));this._queryEngine.featureStore.removeManyById(s)}const{fullExtent:d,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:d,timeExtent:c,featureEditResults:l}}_applyAddEdits(e,i){const{addResults:o}=e,{geometryType:s,hasM:l,hasZ:d,objectIdField:c,spatialReference:u,featureStore:p,fieldsIndex:y}=this._queryEngine,m=[];for(const a of i){if(a.geometry&&s!==F(a.geometry)){o.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=T(y,t,a.attributes);if(n)o.push(n);else{if(this._assignObjectId(t,a.attributes),a.attributes=t,a.uid!=null){const f=a.attributes[c];e.uidToObjectId[a.uid]=f}if(a.geometry!=null){const f=a.geometry.spatialReference??u;a.geometry=_(w(a.geometry,f),f,u)}m.push(a),o.push(j(a.attributes[c]))}}p.addMany(O([],m,s,d,l,c))}_applyUpdateEdits({updateResults:e},i){const{geometryType:o,hasM:s,hasZ:l,objectIdField:d,spatialReference:c,featureStore:u,fieldsIndex:p}=this._queryEngine;for(const y of i){const{attributes:m,geometry:a}=y,t=m==null?void 0:m[d];if(t==null){e.push(g(`Identifier field ${d} missing`));continue}if(!u.has(t)){e.push(g(`Feature with object id ${t} missing`));continue}const n=Q(u.getFeature(t),o,l,s);if(a!=null){if(o!==F(a)){e.push(g("Incorrect geometry type."));continue}const f=a.spatialReference??c;n.geometry=_(w(a,f),f,c)}if(m){const f=T(p,n.attributes,m);if(f){e.push(f);continue}}u.add(Z(n,o,l,s,d)),e.push(j(t))}}_assignObjectId(e,i,o=!1){const s=this._queryEngine.objectIdField;o&&i&&isFinite(i[s])?e[s]=i[s]:e[s]=this._nextObjectId++}}export{Tt as default};
