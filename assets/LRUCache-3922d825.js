import{bF as m}from"./index-e8c6bcc0.js";const c=-3;var _;(function(n){n[n.ALL=0]="ALL",n[n.SOME=1]="SOME"})(_||(_={}));class S{constructor(i,t,e){this.name=i,this._storage=t,this.id=f+++":",this.size=0,this.maxSize=0,this._removeFunc=!1,this._hit=0,this._miss=0,this._storage.register(this),e&&(this._storage.registerRemoveFunc(this.id,e),this._removeFunc=!0)}destroy(){this._storage.clear(this),this._removeFunc&&this._storage.deregisterRemoveFunc(this.id),this._storage.deregister(this),this._storage=null}get hitRate(){return this._hit/(this._hit+this._miss)}get sizeAll(){return this._storage.size}resetHitRate(){this._hit=this._miss=0}put(i,t,e,s=0){this._storage.put(this,i,t,e,s)}get(i){const t=this._storage.get(this,i);return t===void 0?++this._miss:++this._hit,t}pop(i){const t=this._storage.pop(this,i);return t===void 0?++this._miss:++this._hit,t}updateSize(i,t,e){this._storage.updateSize(this,i,t,e)}clear(){this._storage.clear(this)}clearAll(){this._storage.clearAll()}get performanceInfo(){return this._storage.performanceInfo}resetStats(){this._storage.resetStats()}}class g{get size(){return this._size}constructor(i=10485760){this._maxSize=i,this._db=new Map,this._size=0,this._hit=0,this._miss=0,this._removeFuncs=new m,this._users=new m}destroy(){this.clearAll(),this._removeFuncs.clear(),this._users.clear(),this._db=null}register(i){this._users.push(i)}deregister(i){this._users.removeUnordered(i)}registerRemoveFunc(i,t){this._removeFuncs.push([i,t])}deregisterRemoveFunc(i){this._removeFuncs.filterInPlace(t=>t[0]!==i)}get maxSize(){return this._maxSize}set maxSize(i){this._maxSize=Math.max(i,0),this._checkSizeLimits()}put(i,t,e,s,o){t=i.id+t;const r=this._db.get(t);if(r&&(this._size-=r.size,i.size-=r.size,this._db.delete(t),r.entry!==e&&this._notifyRemove(t,r.entry,_.ALL)),s>this._maxSize)return void this._notifyRemove(t,e,_.ALL);if(e===void 0)return void console.warn("Refusing to cache undefined entry ");if(!s||s<0)return void console.warn("Refusing to cache entry with invalid size "+s);const h=1+Math.max(o,c)-c;this._db.set(t,{entry:e,size:s,lifetime:h,lives:h}),this._size+=s,i.size+=s,this._checkSizeLimits()}updateSize(i,t,e,s){t=i.id+t;const o=this._db.get(t);if(o&&o.entry===e){for(this._size-=o.size,i.size-=o.size;s>this._maxSize;){const r=this._notifyRemove(t,e,_.SOME);if(!(r!=null&&r>0))return void this._db.delete(t);s=r}o.size=s,this._size+=s,i.size+=s,this._checkSizeLimits()}}pop(i,t){t=i.id+t;const e=this._db.get(t);if(e)return this._size-=e.size,i.size-=e.size,this._db.delete(t),++this._hit,e.entry;++this._miss}get(i,t){t=i.id+t;const e=this._db.get(t);if(e!==void 0)return this._db.delete(t),e.lives=e.lifetime,this._db.set(t,e),++this._hit,e.entry;++this._miss}get performanceInfo(){const i={Size:Math.round(this._size/1048576)+"/"+Math.round(this._maxSize/1048576)+"MB","Hit rate":Math.round(100*this._getHitRate())+"%",Entries:this._db.size.toString()},t={},e=new Array;this._db.forEach((r,h)=>{const a=r.lifetime;e[a]=(e[a]||0)+r.size,this._users.forAll(z=>{const{id:d,name:u}=z;if(h.startsWith(d)){const l=t[u]||0;t[u]=l+r.size}})});const s={};this._users.forAll(r=>{const h=r.name;if("hitRate"in r&&typeof r.hitRate=="number"&&!isNaN(r.hitRate)&&r.hitRate>0){const a=t[h]||0;t[h]=a,s[h]=Math.round(100*r.hitRate)+"%"}else s[h]="0%"});const o=Object.keys(t);o.sort((r,h)=>t[h]-t[r]),o.forEach(r=>i[r]=Math.round(t[r]/2**20)+"MB / "+s[r]);for(let r=e.length-1;r>=0;--r){const h=e[r];h&&(i["Priority "+(r+c-1)]=Math.round(h/this._size*100)+"%")}return i}resetStats(){this._hit=this._miss=0,this._users.forAll(i=>i.resetHitRate())}clear(i){const t=i.id;this._db.forEach((e,s)=>{s.startsWith(t)&&(this._size-=e.size,this._db.delete(s),this._notifyRemove(s,e.entry,_.ALL))}),i.size=0}clearAll(){this._db.forEach((i,t)=>this._notifyRemove(t,i.entry,_.ALL)),this._users.forEach(i=>i.size=0),this._size=0,this._db.clear()}_getHitRate(){return this._hit/(this._hit+this._miss)}_notifyRemove(i,t,e){let s;return this._removeFuncs.some(o=>{if(i.startsWith(o[0])){const r=o[1](t,e);return typeof r=="number"&&(s=r),!0}return!1}),s}_checkSizeLimits(){if(this._size>this._maxSize){for(const[i,t]of this._db)if(this._purgeItem(i,t),this._size<=.9*this.maxSize)return}this._users.forEach(i=>{if(i.maxSize>0&&i.size>i.maxSize){for(const[t,e]of this._db)if(t.startsWith(i.id)&&(this._purgeItem(t,e,i),i.size<=.9*i.maxSize))return}})}_purgeItem(i,t,e=this._users.find(s=>i.startsWith(s.id))){if(this._db.delete(i),t.lives<=1){this._size-=t.size,e&&(e.size-=t.size);const s=this._notifyRemove(i,t.entry,_.SOME);s!=null&&s>0&&(this._size+=s,e&&(e.size+=s),t.lives=t.lifetime,t.size=s,this._db.set(i,t))}else--t.lives,this._db.set(i,t)}}let f=0;class p{constructor(i,t){this._storage=new g,this.id="",this.name="",this.size=0,this._storage.maxSize=i,this._storage.register(this),t&&this._storage.registerRemoveFunc("",t)}destroy(){this._storage.deregister(this),this._storage.destroy()}put(i,t,e=1){this._storage.put(this,i,t,e,1)}pop(i){return this._storage.pop(this,i)}get(i){return this._storage.get(this,i)}clear(){this._storage.clearAll()}get maxSize(){return this._storage.maxSize}set maxSize(i){this._storage.maxSize=i}resetHitRate(){}}export{p as e,g as r,S as s};
