import{h as m}from"./Accessor-BHnuXKD2.js";import{e as n,g as p}from"./Point-XGrwlf63.js";import{G as t}from"./geometryEngineBase-yFIvKOkM.js";import{hydratedAdapter as i}from"./hydrated-Dw-Mfo_Y.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./writer-B2bQV2uU.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./Extent-CBBGeHb-.js";import"./Polyline-BmuD2-ZN.js";import"./mathUtils-DV9iOXpW.js";function o(e){const r=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return r?m(p,r):p.WGS84}function V(e){return t.extendedSpatialReferenceInfo(e)}function v(e,r){return n(e),t.clip(i,o(e),e,r)}function z(e,r){return n(e),t.cut(i,o(e),e,r)}function H(e,r){return n(e),n(r),t.contains(i,o(e),e,r)}function I(e,r){return n(e),n(r),t.crosses(i,o(e),e,r)}function J(e,r,a){return n(e),n(r),t.distance(i,o(e),e,r,a)}function N(e,r){return n(e),n(r),t.equals(i,o(e),e,r)}function O(e,r){return n(e),n(r),t.intersects(i,o(e),e,r)}function b(e,r){return n(e),n(r),t.touches(i,o(e),e,r)}function j(e,r){return n(e),n(r),t.within(i,o(e),e,r)}function q(e,r){return n(e),n(r),t.disjoint(i,o(e),e,r)}function B(e,r){return n(e),n(r),t.overlaps(i,o(e),e,r)}function C(e,r,a){return n(e),n(r),t.relate(i,o(e),e,r,a)}function E(e){return n(e),t.isSimple(i,o(e),e)}function G(e){return n(e),t.simplify(i,o(e),e)}function P(e,r=!1){return t.convexHull(i,o(e),e,r)}function $(e,r){return n(r),t.difference(i,o(e),e,r)}function W(e,r){return n(r),t.symmetricDifference(i,o(e),e,r)}function k(e,r){return n(r),t.intersect(i,o(e),e,r)}function F(e){return t.union(i,o(e),e)}function K(e,r,a,s,c,f){return t.offset(i,o(e),e,r,a,s,c,f)}function M(e,r,a,s=!1){return t.buffer(i,o(e),e,r,a,s)}function Q(e,r,a,s,c,f){return t.geodesicBuffer(i,o(e),e,r,a,s,c,f)}function U(e,r,a=!0){return n(e),t.nearestCoordinate(i,o(e),e,r,a)}function X(e,r){return n(e),t.nearestVertex(i,o(e),e,r)}function Y(e,r,a,s){return n(e),t.nearestVertices(i,o(e),e,r,a,s)}function l(e){var r;return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?((r=e.extent)==null?void 0:r.center)??null:null}function Z(e,r,a){if(e==null)throw new u;const s=e.spatialReference;if((a=a??l(e))==null)throw new u;const c=e.constructor.fromJSON(t.rotate(e,r,a));return c.spatialReference=s,c}function _(e,r){if(e==null)throw new u;const a=e.spatialReference;if((r=r??l(e))==null)throw new u;const s=e.constructor.fromJSON(t.flipHorizontal(e,r));return s.spatialReference=a,s}function ee(e,r){if(e==null)throw new u;const a=e.spatialReference;if((r=r??l(e))==null)throw new u;const s=e.constructor.fromJSON(t.flipVertical(e,r));return s.spatialReference=a,s}function re(e,r,a,s){return n(e),t.generalize(i,o(e),e,r,a,s)}function te(e,r,a){return n(e),t.densify(i,o(e),e,r,a)}function ne(e,r,a,s=0){return n(e),t.geodesicDensify(i,o(e),e,r,a,s)}function ie(e,r){return n(e),t.planarArea(i,o(e),e,r)}function oe(e,r){return n(e),t.planarLength(i,o(e),e,r)}function ae(e,r,a){return n(e),t.geodesicArea(i,o(e),e,r,a)}function se(e,r,a){return n(e),t.geodesicLength(i,o(e),e,r,a)}function ce(e,r){return t.intersectLinesToPoints(i,o(e),e,r)}function ue(e,r){t.changeDefaultSpatialReferenceTolerance(e,r)}function fe(e){t.clearDefaultSpatialReferenceTolerance(e)}class u extends Error{constructor(){super("Illegal Argument Exception")}}export{M as buffer,ue as changeDefaultSpatialReferenceTolerance,fe as clearDefaultSpatialReferenceTolerance,v as clip,H as contains,P as convexHull,I as crosses,z as cut,te as densify,$ as difference,q as disjoint,J as distance,N as equals,V as extendedSpatialReferenceInfo,_ as flipHorizontal,ee as flipVertical,re as generalize,ae as geodesicArea,Q as geodesicBuffer,ne as geodesicDensify,se as geodesicLength,k as intersect,ce as intersectLinesToPoints,O as intersects,E as isSimple,U as nearestCoordinate,X as nearestVertex,Y as nearestVertices,K as offset,B as overlaps,ie as planarArea,oe as planarLength,C as relate,Z as rotate,G as simplify,W as symmetricDifference,b as touches,F as union,j as within};
