import{a as c,b as l,c as S,ao as d,cc as m,aG as h,a1 as w,aO as u,T as f,a7 as v}from"./index-e8c6bcc0.js";import{f as R,i as O,o as $}from"./utils-c9a76eea.js";let n=class extends d{constructor(t){super(t),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const t=this.geometries.map(a=>a.toJSON()),r=this.geometries[0],e={};return e.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),e.inSR=r.spatialReference.wkid||JSON.stringify(r.spatialReference.toJSON()),e.geometries=JSON.stringify({geometryType:m(r),geometries:t}),this.transformation&&(e.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(e.transformForward=this.transformForward),e}};c([l()],n.prototype,"geometries",void 0),c([l({json:{read:{source:"outSR"}}})],n.prototype,"outSpatialReference",void 0),c([l()],n.prototype,"transformation",void 0),c([l()],n.prototype,"transformForward",void 0),n=c([S("esri.rest.support.ProjectParameters")],n);const p=n,j=h(p);async function J(o,t,r){t=j(t);const e=R(o),a={...e.query,f:"json",...t.toJSON()},i=t.outSpatialReference,s=m(t.geometries[0]),g=O(a,r);return w(e.path+"/project",g).then(({data:{geometries:y}})=>$(y,s,i))}async function N(o=null,t){var a,i;if(u.geometryServiceUrl)return u.geometryServiceUrl;if(!o)throw new f("internal:geometry-service-url-not-configured");let r;r="portal"in o?o.portal||v.getDefault():o,await r.load({signal:t});const e=(i=(a=r.helperServices)==null?void 0:a.geometry)==null?void 0:i.url;if(!e)throw new f("internal:geometry-service-url-not-configured");return e}async function U(o,t,r=null,e){const a=await N(r,e),i=new p;i.geometries=[o],i.outSpatialReference=t;const s=await J(a,i,{signal:e});if(s&&Array.isArray(s)&&s.length===1)return s[0];throw new f("internal:geometry-service-projection-failed")}export{N as getGeometryServiceURL,U as projectGeometry};
