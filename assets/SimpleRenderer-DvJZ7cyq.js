import{e as i}from"./Evented-CXIxDjmW.js";import{a as r,y as l,b as n}from"./subclass-BR3PhgZG.js";import{o as m}from"./enumeration--HlxOQ_N.js";import{v as p,n as y,p as c}from"./UniqueValueRenderer-dci9bLM8.js";var o;let s=o=class extends p(c){constructor(e){super(e),this.description=null,this.label=null,this.symbol=null,this.type="simple"}async collectRequiredFields(e,t){await Promise.all([this.collectSymbolFields(e,t),this.collectVVRequiredFields(e,t)])}async collectSymbolFields(e,t){await Promise.all(this.getSymbols().map(a=>a.collectRequiredFields(e,t)))}getSymbol(e,t){return this.symbol}async getSymbolAsync(e,t){return this.symbol}getSymbols(){return this.symbol?[this.symbol]:[]}getAttributeHash(){return this.visualVariables&&this.visualVariables.reduce((e,t)=>e+t.getAttributeHash(),"")}getMeshHash(){return this.getSymbols().reduce((e,t)=>e+JSON.stringify(t),"")}get arcadeRequired(){return this.arcadeRequiredForVisualVariables}clone(){return new o({description:this.description,label:this.label,symbol:r(this.symbol),visualVariables:r(this.visualVariables),authoringInfo:r(this.authoringInfo)})}};i([l({type:String,json:{write:!0}})],s.prototype,"description",void 0),i([l({type:String,json:{write:!0}})],s.prototype,"label",void 0),i([l(y)],s.prototype,"symbol",void 0),i([m({simple:"simple"})],s.prototype,"type",void 0),s=o=i([n("esri.renderers.SimpleRenderer")],s);const g=s;export{g as p};
