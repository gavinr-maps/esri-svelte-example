const f=[["binary","application/octet-stream","bin",""]];function F(t,r){return i(r.name,(t==null?void 0:t.supportedFormats)??[])!=null}function C(t,r){if(!t)return!1;const n=l(r,t.supportedFormats??[]);return n!=null&&t.editFormats.includes(n)}function L(t){return e((t==null?void 0:t.supportedFormats)??[]).flatMap(c).map(r=>`.${r}`)}function p(t,r){return u(w(t,r))}function d(t,r){return u(i(t,r))}function b(t,r){return s(m(t,r))}function l(t,r){return d(t.name,r)??p(t.type,r)}function e(t){return[...f,...t]}function m(t,r){return e(r).find(n=>u(n)===t)}function w(t,r){const n=t.toLowerCase();return e(r).find(o=>s(o)===n)}function i(t,r){const n=t.toLowerCase();return e(r).find(o=>c(o).some(a=>n.endsWith(a)))}function u(t){return t==null?void 0:t[0]}function s(t){return t==null?void 0:t[1].toLowerCase()}function c(t){return(t==null?void 0:t[2].split(",").map(r=>r.toLowerCase()))??[]}function y(t){var r;return(r=t.tables)==null?void 0:r.find(n=>n.role==="assetMaps")}export{y as F,l as c,d as i,L as o,C as r,b as s,F as t,p as u};
