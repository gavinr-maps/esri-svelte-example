import{e as i}from"./Evented-CXIxDjmW.js";import{S as u,f as v,q as b,y as k,s as C}from"./Accessor-D6mNnsWy.js";import{y as n,b as y,$ as g,O as H}from"./subclass-BR3PhgZG.js";import{h as L}from"./UpdatingHandles-CMtXpTiG.js";import{a as $}from"./EdgeWorkerHandle-B9eItup_.js";import{n as S}from"./mathUtils-ClvKsMak.js";import{h as E}from"./WorkerHandle-B37YGie-.js";import{Z as O}from"./sphere-7666U3LO.js";import{c as _,e as I,u as V}from"./SnappingManager-GEHlVC1V.js";import{r as R}from"./VertexSnappingCandidate-B0YOrUrc.js";import"./reactiveUtils-BFQ0BtrB.js";import"./shared-B3wH2qpO.js";import"./workerHelper-DszV5Eae.js";import"./InterleavedLayout-UIhsB8jd.js";import"./BufferView-B7Z-dzh4.js";import"./vec2-B_ymkwGp.js";import"./vec42-B1mBkh1w.js";import"./Util-BMqL_pkg.js";import"./vec2f64-Diu2Kaa8.js";import"./vec4f64-CBQL1T0x.js";import"./edgeProcessing-kh6EVSro.js";import"./deduplicate-DxTSMkFY.js";import"./Indices-B6BGScAS.js";import"./VertexAttribute-BnAa5VW0.js";import"./glUtil-C6KhMg1m.js";import"./enums-BlUEVwJR.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Normals-D1LdtP06.js";import"./workers-8Q6jrI18.js";import"./Queue-DpHko4Yk.js";import"./assets-C2mb-ea2.js";import"./index-CeCSsEgo.js";import"./intl-Dpfm8vPB.js";import"./Promise-CZrWwByK.js";import"./jsonMap-DCC6W5ex.js";import"./mat4-ybYUU6jq.js";import"./Polyline-D97hl-6E.js";import"./writer-3zufXUNV.js";import"./Extent-DHjqVB-p.js";import"./Point-DB4Hp4hH.js";import"./plane-Bz78OrLf.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./mathUtils-kvswLROa.js";import"./projection-A9yUaaTs.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./elevationInfoUtils-Bl7QRRwv.js";import"./unitConversionUtils-Dl04YuQU.js";import"./lengthUtils-D7_DvYH0.js";import"./projectVectorToVector-Chzd0Pq0.js";import"./projectPointToVector-D3506wm2.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./geodesicUtils-iciHABcX.js";import"./geometry-DpwwkAX1.js";import"./geometry2dUtils-BraNT6Fs.js";import"./fieldUtils-CNduWQU9.js";import"./FeatureFilter-BzdN7b7E.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./Query-Cx4awVKu.js";import"./enumeration--HlxOQ_N.js";import"./jsonUtils-Cma_7A64.js";import"./DataLayerSource-6X35yXpo.js";import"./Field-C8SaaeoI.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BNIhEccm.js";import"./Clonable-cKbRam6-.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./layerUtils-erzwAANv.js";import"./InputManager-C4xu1R9l.js";import"./signal-DzOfzcfh.js";import"./keybindings-DYR2fa8r.js";import"./utils-CXgSw6Sd.js";import"./layerViewUtils-D2JqIDZ8.js";import"./geodesicLengthMeasurementUtils-B9-VlVgL.js";import"./screenUtils-PfxkaaMN.js";import"./quantityUtils-d_-fFwhF.js";import"./geometryEngine-BT1Ysmbs.js";import"./geometryEngineBase-RmbNeFm7.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-DO_xxk1P.js";import"./Cyclical-BY_I03kj.js";import"./PointSnappingHint-DzxtkBUe.js";let d=class extends u{constructor(e){super(e),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new x(this.schedule,{fetchAllEdgeLocations:(e,t)=>this._fetchAllEdgeLocations(e,t)})}async fetchCandidates(e,t){const r=e.coordinateHelper,{point:o}=e,s=P;this.renderCoordsHelper.toRenderCoords(o,r.spatialReference,s);const l=e.distance,p=typeof l=="number"?l:l.distance,m=await this._workerHandle.invoke({bounds:O(s[0],s[1],s[2],p),returnEdge:e.returnEdge,returnVertex:e.vertexMode!=="none"},t);return m.candidates.sort((h,f)=>h.distance-f.distance),m.candidates.map(h=>this._convertCandidate(r,h))}async add(e,t){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,t)}async remove(e,t){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,t)}_convertCandidate(e,t){switch(t.type){case"edge":return new I({objectId:t.objectId,targetPoint:_(this._convertRenderCoordinate(e,t.target)),edgeStart:this._convertRenderCoordinate(e,t.start),edgeEnd:this._convertRenderCoordinate(e,t.end),isDraped:!1});case"vertex":return new R({objectId:t.objectId,targetPoint:_(this._convertRenderCoordinate(e,t.target)),isDraped:!1})}}_convertRenderCoordinate({spatialReference:e},t){const r=S();return this.renderCoordsHelper.fromRenderCoords(t,r,e),V(r)}async _fetchAllEdgeLocations(e,t){const r=[],o=[];for(const{id:s,uid:l}of e.components)this._ids.has(s)&&r.push((async()=>{const p=await this.fetchEdgeLocations(s,t.signal),m=p.locations.buffer;return o.push(m),{id:s,uid:l,objectIds:p.objectIds,locations:m,origin:p.origin,type:p.type}})());return{result:{components:(await Promise.all(r)).filter(({id:s})=>this._ids.has(s))},transferList:o}}};i([n({constructOnly:!0})],d.prototype,"renderCoordsHelper",void 0),i([n({constructOnly:!0})],d.prototype,"fetchEdgeLocations",void 0),i([n({constructOnly:!0})],d.prototype,"schedule",void 0),i([n({readOnly:!0})],d.prototype,"availability",void 0),d=i([y("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorkerHandle")],d);let x=class extends E{constructor(t,r){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:r})}};const P=S();let a=class extends u{get updating(){return this._updatingHandles.updating}constructor(e){super(e),this.availability=1,this._updatingHandles=new L,this._abortController=new AbortController}destroy(){this._tracker=v(this._tracker),this._abortController=b(this._abortController),this._updatingHandles.destroy()}initialize(){const{view:e}=this,t=e.resourceController;this._edgeWorker=new $(w(t)),this._workerHandle=new d({renderCoordsHelper:this.view.renderCoordsHelper,schedule:w(t),fetchEdgeLocations:async(r,o)=>{if(this._tracker==null)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(r,this._edgeWorker,o)}}),this._updatingHandles.addPromise(this._setupLayerView()),this.addHandles([g(this._workerHandle),g(this._edgeWorker)])}async fetchCandidates(e,t){return this._workerHandle.fetchCandidates(e,t)}refresh(){}async _setupLayerView(){var r;if(this.destroyed)return;const e=(r=this._abortController)==null?void 0:r.signal,t=await this.getLayerView();t==null||k(e)||(this._tracker=t.trackSnappingSources({add:(o,s)=>{this._updatingHandles.addPromise(this._workerHandle.add({id:o,bounds:s},e))},remove:o=>{this._updatingHandles.addPromise(this._workerHandle.remove({id:o},e))}}))}};function w(e){return t=>e.immediate.schedule(t)}i([n({constructOnly:!0})],a.prototype,"getLayerView",void 0),i([n({constructOnly:!0})],a.prototype,"view",void 0),i([n({readOnly:!0})],a.prototype,"updating",null),i([n({readOnly:!0})],a.prototype,"availability",void 0),a=i([y("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],a);let c=class extends u{get updating(){return this._i3sSources.some(e=>e.updating)}constructor(e){super(e),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(e=>e.destroy()),this._i3sSources.length=0}initialize(){const{view:e}=this,t=this.layerSource.layer;this._i3sSources=t.type==="building-scene"?this._getBuildingSceneI3SSources(e,t):[this._getSceneLayerI3SSource(e,t)]}async fetchCandidates(e,t){const r=await Promise.all(this._i3sSources.map(o=>o.fetchCandidates(e,t)));return C(t),r.flat()}refresh(){this._i3sSources.forEach(e=>e.refresh())}_getBuildingSceneI3SSources(e,t){return t.allSublayers.toArray().map(r=>r.type==="building-component"?new a({getLayerView:async()=>(await e.whenLayerView(t)).whenSublayerView(r),view:e}):null).filter(H)}_getSceneLayerI3SSource(e,t){return new a({getLayerView:async()=>{const r=await e.whenLayerView(t);return r.type==="scene-layer-graphics-3d"?void 0:r},view:e})}};i([n({constructOnly:!0})],c.prototype,"layerSource",void 0),i([n({constructOnly:!0})],c.prototype,"view",void 0),i([n({readOnly:!0})],c.prototype,"updating",null),i([n({readOnly:!0})],c.prototype,"availability",void 0),c=i([y("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],c);export{c as SceneLayerSnappingSource};
