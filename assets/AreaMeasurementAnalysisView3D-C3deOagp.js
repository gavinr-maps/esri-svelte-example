import{r as l}from"./tslib.es6-B3Jf3DVX.js";import{b as ie,q as P}from"./Accessor-BLX9ikPh.js";import{m as d,a as B,n as Te}from"./subclass-BZA_h8Db.js";import{e as Oe}from"./defaultUnit-_T4IY-sW.js";import{s as ze}from"./AnalysisView3D-BBHxe6zf.js";import{e as X}from"./interfaces-js1RL7O8.js";import{watch as R,sync as se,syncAndInitial as Z,initial as Ee}from"./reactiveUtils-C5zUhJQJ.js";import{s as Fe,a as Ue}from"./mathUtils-C4_ghTv4.js";import{a as N,s as Y,l as re}from"./quantityUtils-D0GB2dMc.js";import{aj as Ae,a3 as We,i as qe,j as ke,I as ne,H as je,A as He,m as Be,l as Ne}from"./Point-Cg0-ChZE.js";import{o as oe,m as Je,r as Ke}from"./vec2-maR1OrZI.js";import{n as ae,r as be}from"./vec2f64-miziP1SN.js";import{s as De,u as ee,c as O,A as xe,p as Qe,_ as Xe,y as Ze,P as D,g as J}from"./vec32-Dvg_eL9J.js";import{n as m}from"./vec3f64-BLpZdpfb.js";import{n as Ye,r as q}from"./vec4f64-o2zAXfmz.js";import{J as et,H as tt}from"./projection-B971H0Re.js";import{a as le}from"./spatialReferenceEllipsoidUtils-DBE_OFra.js";import{n as k}from"./projectVectorToVector-G2uWGoIb.js";import{c as F}from"./projectPointToVector-GINIbYMz.js";import{n as it,D as he,k as st}from"./Polyline-D9YkgmM_.js";import{t as de}from"./Indices-DflDlU4Z.js";import{G as pe}from"./Extent-Bf3YTe7m.js";import{E as rt}from"./sphere-C77djCO6.js";import{v as nt}from"./triangle-PTGDC_xJ.js";import{g as ot,j as at,m as lt,p as ht,h as dt}from"./measurementUtils-r7d11TSK.js";import{a as pt}from"./ElevationProvider-C95wyCKc.js";import{U as te,p as ce,q as ct}from"./mathUtils-BG-eq9fO.js";import{U as me}from"./euclideanAreaMeasurementUtils-CfO9bFtV.js";import{l as mt,h as ut,g as Ge}from"./quantityFormatUtils-CX8UdSzC.js";import{u as gt,f as _t}from"./geodesicLengthMeasurementUtils-he3vjGJN.js";import{e as ft}from"./geodesicMeasurementUtils-Bt9h4589.js";import{o as yt}from"./Evented-BHRw9x22.js";import{t as vt,d as I}from"./LineVisualElement-mUtX7dGi.js";import{E as ue,p as wt,P as Lt,a as St}from"./EditGeometryOperations-Cl8Sbfxr.js";import"./intl-CChhNOV8.js";import{D as $t,N as ge,R as _e,L as Mt,I as fe}from"./colorUtils-aL8wj-8G.js";import{I as Pt,q as Ct}from"./mat4-GpOFENPA.js";import{e as Vt}from"./mat4f64-Dk4dwAN8.js";import{a as ye,_ as At,f as bt}from"./Segment-DZGyf3mS.js";import{E as ve,a as we}from"./vec42-YcqnINSP.js";import{a as Dt}from"./Object3DVisualElement-BVfa8i_P.js";import{t as Le}from"./orientedBoundingBox-DOAJUK5g.js";import{o as xt,P as Gt,u as Rt,q as It,d as Tt,c as Ot,e as Se,r as zt,h as Et,j as Ft,x as $e,y as Ut,a9 as Wt,z as qt,B as kt,E as jt,k as Ht,F as Bt,A as K,m as Nt,p as Jt}from"./Texture-Fac_8AOC.js";import{d as Kt,p as A}from"./Material-_xx7OZxD.js";import{e as j}from"./VertexAttribute-Cq4MnHjR.js";import{n as Qt,q as Q}from"./Matrix3DrawUniform-CiBFaSz6.js";import{o as Me}from"./AlphaCutoff-UcccL64p.js";import{r as Xt}from"./VertexColor.glsl-_ARMpsAT.js";import{f as Zt}from"./DefaultLayouts-BuE1efcQ.js";import{e as Yt}from"./TriangleMaterial-BiHR3MKx.js";import{_ as ei}from"./index-Bh2oEzTI.js";import{B as ti,g as ii}from"./renderState-DQLu6AJX.js";import{i as T}from"./ShaderTechniqueConfiguration-CBbn2DCi.js";import{h as si}from"./lineStippleUtils-C89mzWlO.js";import{g as ri}from"./locale-C9TlLpzi.js";import{h as ni}from"./messages-OmQvZhAg.js";import"./BindType-BmZEZMMh.js";import{o as Pe}from"./interfaces-DDtDqZYj.js";import"./getDefaultUnitForView-Ce2vZZap.js";import"./Portal-C10FKnaA.js";import"./assets-C43MgM-v.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./writer-DNAwXnhG.js";import"./jsonMap-0cxwUWs2.js";import"./asyncUtils-CWX51uTe.js";import"./Collection-CEdjem1-.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./cast-Bjksrh93.js";import"./common-DQOJ18NT.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./mat3-BRl2i9Bz.js";import"./mat3f64-BBpwCtoL.js";import"./plane-IENfwZlB.js";import"./quatf64-CCm9z-pX.js";import"./lineSegment-D7sKPPYf.js";import"./geodesicAreaMeasurementUtils-BILXFcc4.js";import"./geometryEngine-DGiYLHJy.js";import"./geometry-D964gYQX.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-C9rxSL4a.js";import"./geodesicUtils-FCYOaNwu.js";import"./dehydratedFeatureUtils-B--Sgpdi.js";import"./ViewingMode-Dodu7ZZk.js";import"./intersectorUtils-BK9EUwUf.js";import"./boundedPlane-EV1sS2Ke.js";import"./verticalOffsetUtils-BDQLpfho.js";import"./earcut-Lltz9D9k.js";import"./Cyclical-oTUX3aX7.js";import"./unitFormatUtils-CZ2bRlFg.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./line-CML3g7Ng.js";import"./aaBoundingBox-BE7cC1jD.js";import"./RibbonLine.glsl-BZu1FDpE.js";import"./computeTranslationToOriginAndRotation-Q27G6TBL.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";import"./hydratedFeatures-DBKLr8hT.js";import"./Graphic-DsxsIjhH.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./fieldUtils-tmQlKvWo.js";import"./date-DlqISzcw.js";import"./enumeration-Ba5njXdz.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./screenUtils-_ZIvrt5o.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./jsonUtils-CEfjT-BK.js";import"./Util-BIfApRF5.js";import"./sdfPrimitives-CUWZbMRe.js";import"./vec3f32-nZdmKIgz.js";import"./doublePrecisionUtils-B0owpBza.js";import"./floatRGBA-CfH_2xsy.js";import"./enums-D9v74xTE.js";import"./Octree-C8d4sqjv.js";import"./frustum-CQrOepbv.js";import"./InterleavedLayout-e-di2fxs.js";import"./BufferView-_QDXRCew.js";import"./Float4DrawUniform-N58YDhuZ.js";import"./Texture-Begq2x5n.js";import"./compilerUtils-Dw3R0f-Z.js";import"./geometry2dUtils-DdyQE7AQ.js";import"./viewUtils-DrPohWV3.js";import"./elevationInfoUtils-BC_66_Fg.js";import"./VisualElement-Bz1W-x8t.js";import"./jsxFactory-CJa39Fro.js";import"./uuid-fwrPAdZb.js";import"./TextOverlayItem-zxgmE06K.js";import"./quat-4pa1e6ds.js";import"./requestImageUtils-DgMiQwsm.js";function Ce(t,e,i,s,r){De(U,t),ee(W,t,e),k(U,i,U,r),k(W,i,W,r),O(s,W,U),xe(s,s)}const U=m(),W=m();class oi{get numVertices(){return this._length}get hasStagedVertex(){return this._hasCursorPoint}constructor(e){this.validMeasurement=!1,this.positionsWorld=[],this.positionsRender=[],this.positionsFittedWorld=[],this.positionsFittedRender=[],this.positionsGeodesic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=m(),this.areaCentroidRenderCoords=m(),this.geodesicAreaCentroidRenderCoords=m(),this.fittingMode=null,this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=m(),this._planeWorldCoords=Ye(),this._worldUp=m(),this._worldTangent=m(),this._frame=[m(),m(),m()],this._pathVersion=-1,this._hasCursorPoint=!1,this._mode=null,this._tempU=m(),this._tempV=m(),this._tempVec3=m(),this._tempSphere=rt(),this._sceneView=e;const i=mt(e.spatialReference);this._measurementSR=i,this._lengthMeasurementUnit=Ae(i)??"meters",this._areaMeasurementUnit=We(i)??"square-meters"}update(e,i,s,r,n,a){const o=i!=null,h=this._pathVersion===e.version,p=this._hasCursorPoint===o,c=this._mode===n;return!(h&&!a&&p&&c&&e.isValidPolygon)&&(this._pathVersion=e.version,this._hasCursorPoint=o,this._updateCursorSegmentLength(e,i),this._update(e,i,s,r,n),!0)}_update(e,i,s,r,n){const a=this._sceneView.renderSpatialReference,o=this._measurementSR,h=s.spatialReference;let p=e.numVertices;const c=!(i==null||i.equals(e.lastPoint)||p>2&&i.equals(e.firstPoint));c&&(p+=1);const u=!e.polygonIsClosed&&p>2,v=e.polygonIsClosed||u;this._resize(p);const f=le(h),_=h!=null&&ft(h)?h:null,M=_!=null&&et(h,f),{positionsGeodesic:w,positionsWorld:z,positionsRender:E,positionsSpherical:S}=this,V=(L,C)=>{ai(s.elevationProvider,L),F(L,z[C],o),F(L,E[C],a),M&&(F(L,w[C],_),F(L,S[C],f),xe(S[C],S[C]))};e.forEachVertexPosition((L,C)=>V(L,C)),c&&V(i,p-1);const b=this._updatePathLengths(v);if(this.pathLength=this._length>1?N(b,this._lengthMeasurementUnit):null,M){const L=this._updateGeodesicPathLengths(v,_);this.geodesicPathLength=L!=null&&this._length>1?L:null}else this.geodesicPathLength=null;if(this._updateMode(n),!v)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(s,a,o,r),M&&this._updateGeodesicArea(s,_),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsRender:this.positionsRender,positionsFittedWorld:this.positionsFittedWorld,positionsFittedRender:this.positionsFittedRender,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorld.length=e,this.positionsRender.length=e,this.positionsFittedWorld.length=e,this.positionsFittedRender.length=e,this.positionsGeodesic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorld.push(m()),this.positionsRender.push(m()),this.positionsFittedWorld.push(ae()),this.positionsFittedRender.push(m()),this.positionsGeodesic.push(m()),this.positionsSpherical.push(m()),this.positionsStereographic.push(ae()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const i=this.positionsWorld,s=this.pathSegmentLengths;let r=0;const n=this._length;for(let a=0;a<n;++a){const o=s[a]=Qe(i[a],i[(a+1)%n]);(a<n-1||e)&&(r+=o)}return r}_updateGeodesicPathLengths(e,i){const s=this.positionsGeodesic,r=this.geodesicPathSegmentLengths;let n=0;const a=this._length;for(let o=0;o<a;++o){const h=gt(s[o],s[(o+1)%a],i);if(h==null)return null;const p=Y(h,"meters").value,c=r[o]=p;(o<a-1||e)&&(n+=c)}return N(n,"meters")}_updateAreaAndPerimeterLength(e,i,s,r){const n=e.renderCoordsHelper,a=this.positionsWorld,o=this.positionsRender,h=this.positionsFittedWorld,p=this.positionsFittedRender,c=this._planeWorldCoords,u=this._centroidRenderCoords;te(o,u),n.worldUpAtPosition(u,this._worldUp),n.worldBasisAtPosition(u,it.X,this._worldTangent),Ce(u,this._worldUp,i,this._worldUp,s),Ce(u,this._worldTangent,i,this._worldTangent,s),a.length>2&&ot(a,c),this.fittingMode=this._selectFittingMode(c,a,this._worldUp,r);let v=0;if(this.fittingMode==="horizontal"){let S=-1/0;o.forEach((V,b)=>{const L=n.getAltitude(o[b]);L>S&&(S=L,v=b)})}const f=a[v];let _=c,M=this._worldTangent;this.fittingMode==="horizontal"?_=this._worldUp:this.fittingMode==="vertical"&&(_=this._tempVec3,M=this._worldUp,ce(c,this._worldUp,_)),De(this._frame[2],_),ce(M,_,this._frame[0]),Xe(this._frame[1],this._frame[0],this._frame[2]),Ze(this._frame[1],this._frame[1]);const w=this._tempVec3,z=this._tempU,E=this._tempV;for(let S=0;S<this._length;++S){const V=h[S],b=p[S];O(w,a[S],f),oe(V,D(this._frame[0],w),D(this._frame[1],w)),J(z,this._frame[0],V[0]),J(E,this._frame[1],V[1]),ee(w,z,E),ee(w,w,f),k(w,s,b,i)}this.perimeterLength=this._length>0?this._updatePerimeterLengths():null,te(p,this.areaCentroidRenderCoords),k(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,s),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?this._computeArea():null}_updateGeodesicArea(e,i){const{renderCoordsHelper:s,spatialReference:r}=e,{positionsSpherical:n,positionsStereographic:a}=this,o=this._tempVec3,h=at(n,o);if(!h)return void(this.geodesicArea=null);const p=this._tempU,c=this._tempV;ct(o,p,c);for(let u=0;u<this._length;++u){const v=D(n[u],p),f=D(n[u],c),_=D(n[u],o);oe(a[u],v/_,f/_)}J(o,o,qe(r).radius),s.toRenderCoords(o,le(r),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?this._computeGeodesicArea(i):null}_updatePerimeterLengths(){const e=this.positionsFittedWorld,i=this.perimeterSegmentLengths;let s=0;for(let r=0;r<this._length;++r)s+=i[r]=Je(e[r],e[(r+1)%this._length]);return N(s,this._lengthMeasurementUnit)}_updateIntersectingSegments(){const e=this.positionsFittedWorld,i=this.intersectingSegments;i.clear();for(let s=0;s<this._length;++s)for(let r=s+2;r<this._length;++r){if((r+1)%this._length===s)continue;const n=e[s],a=e[(s+1)%this._length],o=e[r],h=e[(r+1)%this._length];pe(n,a,o,h)&&(i.add(s),i.add(r))}}_computeArea(){const e=this.positionsFittedWorld,i=this.triangleIndices=de(me(e));let s=0;for(let r=0;r<i.length;r+=3)s+=nt(e[i[r]],e[i[r+1]],e[i[r+2]]);return re(s,this._areaMeasurementUnit)}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,i=this.geodesicIntersectingSegments;i.clear();for(let s=0;s<this._length;++s)for(let r=s+2;r<this._length;++r){if((r+1)%this._length===s)continue;const n=e[s],a=e[(s+1)%this._length],o=e[r],h=e[(r+1)%this._length];pe(n,a,o,h)&&(i.add(s),i.add(r))}}_computeGeodesicArea(e){const i=this.positionsGeodesic,s=this.positionsStereographic,r=this.geodesicTriangleIndices=de(me(s));let n=0;for(let a=0;a<r.length;a+=3){const o=lt(i[r[a]],i[r[a+1]],i[r[a+2]],e);if(o==null)return null;n+=Y(o,"square-meters").value}return re(n,"square-meters")}_selectFittingMode(e,i,s,r){const n=i.map(c=>Math.abs(ht(e,c))).reduce((c,u)=>Math.max(c,u),0);dt(i,this._tempSphere);const a=n/(2*this._tempSphere[3]),o=a<r.maxRelativeErrorCoplanar,h=a<r.maxRelativeErrorAlmostCoplanar;let p="horizontal";return o?p="oblique":h&&(p=Math.abs(D(s,e))>Math.cos(Fe(r.verticalAngleThreshold))?"horizontal":"vertical"),p}_updateCursorSegmentLength(e,i){var r;const s=e.lastPoint;e.isValidPolygon||s==null||i==null?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=_t(s,i),this.stagedSegmentLength=(r=ut(s,i))==null?void 0:r.direct)}_updateMode(e){if(e===X.Auto){this.actualMeasurementMode="euclidean";let i=0;this.geodesicPathLength!=null&&(i+=this.geodesicPathLength.value),i>li&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===X.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=e}}function ai(t,e){e.hasZ||(e.z=pt(t,e,"ground")??0)}const li=1e5;let x=class extends ie{constructor(t){super(t)}initialize(){this._measurementDataManager=new oi(this.view),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),R(()=>this.analysisViewData.stagedPoint,()=>this._update(),se),R(()=>this.analysisViewData.mode,()=>this._update(),se)]),this._update()}_update(t=!1){const{analysisViewData:e,view:i}=this,s={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(e.path,e.stagedPoint,i,s,e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};l([d({constructOnly:!0})],x.prototype,"view",void 0),l([d({constructOnly:!0})],x.prototype,"analysis",void 0),l([d({constructOnly:!0})],x.prototype,"analysisViewData",void 0),x=l([B("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],x);let $=class extends yt.EventedAccessor{constructor(e={}){super(e),this._version=0,this._internalGeometryChange=!1,this._extent=he()}set areaMeasurement(e){this._set("areaMeasurement",e),e!=null&&this.view!=null&&this._initialize(e,this.view)}set view(e){this._set("view",e),e!=null&&this.areaMeasurement!=null&&this._initialize(this.areaMeasurement,e)}get constructed(){return this.areaMeasurement!=null&&this.view!=null}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||this._editGeometry.components.length===0}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const e=he(this._extent);return this.forEachVertex(i=>{st(e,i.pos)}),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,i){this.removeAllHandles(),this.addHandles(R(()=>e.geometry,()=>{this._updateEditGeometryFromModelGeometry(e,i)},Z)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,i){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let s=e.geometry;if(s!=null){const r=tt(s,i.spatialReference);r==null&&vt(e,s.spatialReference,Te.getLogger(this)),s=r}this._editGeometryOperations=s!=null?ue.fromGeometry(s,i.state.viewingMode):new ue(new wt("polygon",Lt(!0,!1,i.spatialReference)),i.state.viewingMode),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",r=>{this._makeDirty(r.addedVertices!=null||r.removedVertices!=null),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex(i=>{e.push(i)}),e}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getFirstVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const i=this._editGeometry.components[0].vertices[0];let s=i;do{if(s.index===e)return s;s=s.rightEdge.rightVertex}while(s!==i&&s!=null);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const i=this._editGeometry.coordinateHelper;this.forEachVertex((s,r)=>{i.vectorToPoint(s.pos,Ve),e(Ve,r)})}clear(){this.areaMeasurement!=null&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=this.view;this._editGeometry.components.push(new St(s.spatialReference,s.state.viewingMode))}const i=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),i}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const e=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,i=""){let s=!1;if(this._editGeometry.components.forEach(r=>{r.iterateVertices(n=>{n===e&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${i}`);return s}setVertexPosition(e,i){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(i));return this.emit("change"),s}equals(e){if(this.numVertices!==e.numVertices)return!1;let i=!0;return this.forEachVertexPosition((s,r)=>{const n=e.getVertexPositionAsPointFromIndex(r);s.equals(n)||(i=!1)}),!!i}};l([d({value:null})],$.prototype,"areaMeasurement",null),l([d({value:null})],$.prototype,"view",null),l([d()],$.prototype,"isEmptyPolygon",null),l([d()],$.prototype,"isValidPolygon",null),l([d()],$.prototype,"extent",null),l([d()],$.prototype,"spatialReference",null),l([d()],$.prototype,"numVertices",null),l([d()],$.prototype,"polygonIsClosed",null),$=l([B("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementPathHelper")],$);const Ve=new ke;function Re(t){const e=new xt,{vertex:i,fragment:s,varyings:r}=e;return e.include(Gt,t),e.include(Rt,t),e.include(It,t),Tt(i,t),e.attributes.add(j.POSITION,"vec3"),e.attributes.add(j.UV0,"vec2"),r.add("vUV","vec2"),r.add("vpos","vec3"),t.terrainDepthTest&&e.varyings.add("depth","float"),i.main.add(Pe`
      vUV = uv0;
      vpos = position;
      ${t.terrainDepthTest?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);`),s.uniforms.add(new Ot("size",n=>n.size)),s.uniforms.add(new Se("color1",n=>n.color1)),s.uniforms.add(new Se("color2",n=>n.color2)),s.include(zt),s.main.add(Pe`
      ${t.terrainDepthTest?"terrainDepthTest(depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      outputColorHighlightOID(fragColor, vpos);`),e}const hi=Object.freeze(Object.defineProperty({__proto__:null,build:Re},Symbol.toStringTag,{value:"Module"}));class di extends Et{constructor(e,i,s){super(e,i,new Ft(hi,()=>ei(()=>Promise.resolve().then(()=>$i),void 0,import.meta.url)),s)}initializePipeline(e){const{oitPass:i,transparent:s,polygonOffset:r,output:n}=e,a=i===$e.NONE,o=i===$e.FrontFace;return ti({blending:s?Ut(i):null,depthTest:{func:Wt(i)},depthWrite:qt(e),drawBuffers:kt(i,n),colorWrite:ii,polygonOffset:a||o?r?pi:null:{factor:-1,units:-25}})}}const pi={factor:0,units:-25};class G extends jt{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.textureCoordinateType=Ht.None,this.emissionSource=Bt.None,this.output=Qt.Color,this.hasSlicePlane=!1,this.occlusionPass=!1,this.objectAndLayerIdColorInstanced=!1}get discardInvisibleFragments(){return this.transparent&&this.writeDepth}}l([T()],G.prototype,"transparent",void 0),l([T()],G.prototype,"writeDepth",void 0),l([T()],G.prototype,"polygonOffset",void 0),l([T()],G.prototype,"terrainDepthTest",void 0),l([T()],G.prototype,"cullAboveTerrain",void 0);class ci extends Yt{constructor(e){super(e,ui),this._configuration=new G,this.produces=new Map([[K.OPAQUE_MATERIAL,i=>Q(i)&&!this.transparent],[K.TRANSPARENT_MATERIAL,i=>Q(i)&&this.transparent&&this.parameters.writeDepth],[K.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,i=>Q(i)&&this.transparent&&!this.parameters.writeDepth]])}getConfiguration(e,i){return this._configuration.transparent=this.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.oitPass=i.oitPass,this._configuration.terrainDepthTest=i.terrainDepthTest,this._configuration.cullAboveTerrain=i.cullAboveTerrain,this._configuration}get visible(){return this.parameters.color1[3]>=Me||this.parameters.color2[3]>=Me}get transparent(){return this.parameters.color1[3]<1||this.parameters.color2[3]<1}createGLMaterial(e){return new mi(e)}createBufferWriter(){return new Xt(Zt)}}class mi extends Nt{beginSlot(e){return this.acquireTechnique(di,e)}}let ui=class extends Kt{constructor(){super(...arguments),this.size=be(1,1),this.color1=q(.75,.75,.75,1),this.color2=q(.5,.5,.5,1),this.writeDepth=!0,this.polygonOffset=!1}};class gi extends Dt{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=A.OccludeAndTransparent,this._geometry=null,this._size=be(1,1),this._color1=q(1,.5,0,.5),this._color2=q(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){Ke(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){ve(e,this._color1)||(we(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){ve(e,this._color2)||(we(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial!=null&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new ci({size:this._size,color1:this._color1,color2:this._color2,writeDepth:!1,polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){this._checkerBoardMaterial!=null&&e(this._checkerBoardMaterial)}createGeometries(e){if(this._geometry==null||this._checkerBoardMaterial==null)return;const i=_i;Pt(i,this.transform);const s=this._geometry,r=[],n=m();s.position.forEach(h=>{O(n,h,i),r.push(n[0],n[1],n[2])});const a=[];s.uv.forEach(h=>{a.push(h[0],h[1])});const o=new Jt(this._checkerBoardMaterial,[[j.POSITION,new Le(r,s.triangleIndices,3,!0)],[j.UV0,new Le(a,s.triangleIndices,2,!0)]]);e.addGeometry(o)}}const _i=m();let y=class extends ie{get _parameters(){const{accentColor:t,textColor:e}=this.view.effectiveTheme,i=$t(t),s=ge(t,.5),r=ge(_e(t),.5),n=_e(e,Mt.Low);return{accentColor:i,transparentAccentColor:s,transparentContrastColor:r,intersectingLineColor:[1,.2,0,1],textColor:e,textBackgroundColor:fe(n,.6),textCalloutColor:fe(n,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get _renderUnits(){const t=this.view.renderCoordsHelper.spatialReference;return Ae(t)??"meters"}get testData(){}constructor(t){super(t),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=m(),this._originTransform=Vt(),this.messages=null,this.viewData=Si,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_parameters:e,view:i}=this;this._path=new I({view:i,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new I({view:i,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new I({view:i,attached:!0,width:e.perimeterLineWidth,polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new I({view:i,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new I({view:i,attached:!0,width:e.projectionLineWidth,stipplePattern:si(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:A.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new gi({view:i,attached:!0,isDecoration:!0});const s={attached:!0,view:i,isDecoration:!0};this._areaLabel=new ye({...s,fontSize:H.Large}),this._perimeterLengthLabel=new ye({...s,fontSize:H.Small}),this.addHandles([R(()=>[t.mode,this.visible,t.unit,t.measurementData,t.stagedPoint],()=>this._update(),Z),R(()=>{var r;return(r=i.state)==null?void 0:r.camera},()=>this._updateLabels(),Z),ri(()=>this._updateMessageBundle()),R(()=>this._parameters,({accentColor:r,transparentAccentColor:n,transparentContrastColor:a,textColor:o,textBackgroundColor:h,textCalloutColor:p})=>{const{_path:c,_intersectedPath:u,_perimeter:v,_projectionLines:f,_measurementArea:_,_areaLabel:M,_perimeterLengthLabel:w}=this;c.color=r,u.color=r,v.color=r,f.color=r,_.color1=n,_.color2=a,M.textColor=o,M.backgroundColor=h,M.calloutColor=p,w.textColor=o,w.backgroundColor=h,w.calloutColor=p},Ee)]),this._updateMessageBundle()}destroy(){this._measurementArea=P(this._measurementArea),this._path=P(this._path),this._intersectedPath=P(this._intersectedPath),this._perimeter=P(this._perimeter),this._intersectedPerimeter=P(this._intersectedPerimeter),this._areaLabel=P(this._areaLabel),this._perimeterLengthLabel=P(this._perimeterLengthLabel),this._projectionLines=P(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;t!=null&&(this._updateViewData(t,e.path),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e){const i=t.validMeasurement,s=t.actualMeasurementMode==="geodesic",r=s?t.geodesicArea:t.area;let n=1;if(r){const o=yi(r,this.analysisViewData.unit);n=Ue(Math.sqrt(o.value)/Math.sqrt(300)),n*=Math.sqrt(ne(1,o.unit,"square-meters")),n=ne(n,"meters",this._renderUnits)}const a={validMeasurement:i,numVertices:t.numVertices,hasStagedVertex:t.hasStagedVertex,path:e,mode:t.actualMeasurementMode,positionsRender:t.positionsRender,positionsFittedWorld:t.positionsFittedWorld,positionsFittedRender:t.positionsFittedRender,intersectingSegments:s?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:s?t.geodesicTriangleIndices:t.triangleIndices,areaCentroid:s?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,perimeterLengthLabelSegmentIndex:0,area:s?t.geodesicArea:t.area,pathLength:s?t.geodesicPathLength:t.pathLength,perimeterLength:t.perimeterLength,checkerSize:n};this._set("viewData",a)}_updateOrigin(){const t=this.viewData;te(t.positionsRender,this._origin),Ct(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,i=this.view.renderCoordsHelper.spatialReference,s=e.mode,r=[],n=[],a=[],o=e.numVertices,h=e.validMeasurement?o:o-1;for(let c=0;c<h;++c){const u=e[t][c],v=e[t][(c+1)%o];let f=null;switch(s){case"euclidean":f=new bt(u,v);break;case"geodesic":f=new At(u,v,i)}e.intersectingSegments.has(c)?a.push(f):n.push(f),r.push(f)}let p=null;return e.validMeasurement&&e.hasStagedVertex&&h>=2?p=r[r.length-2]:e.hasStagedVertex&&h>=1&&(p=r[r.length-1]),{all:r,nonIntersecting:n,intersecting:a,stagedSegment:p}}_updatePathSegments(){const{visible:t}=this,e=this._createSegments("positionsRender");this._path.setGeometryFromSegments(e.nonIntersecting,this._origin),this._path.visible=t,this._intersectedPath.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPath.visible=t,this._pathSegments=e.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRender");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsFittedWorld,position:t.positionsFittedRender,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,i=t.mode,s=t.numVertices;if(s>0&&t.validMeasurement&&i==="euclidean"){const r=[];for(let n=0;n<s;++n){const a=m();O(a,t.positionsRender[n],this._origin);const o=m();O(o,t.positionsFittedRender[n],this._origin),r.push([a,o])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{area:e,path:i}=t;if(!i)return;const s=this.visible,r=fi(this.messages,e,this.analysisViewData.unit);if(r!=null?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=r,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&s):this._areaLabel.visible=!1,this._set("areaLabel",r),t.validMeasurement&&t.intersectingSegments.size===0){const n=t.mode==="geodesic"||!t.validMeasurement,a=n?t.pathLength:t.perimeterLength,o=vi(this.messages,a,this.analysisViewData.unit);this._set("perimeterLengthLabel",o),this._perimeterLengthLabel.distance=this._parameters.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=o,this._perimeterLengthLabel.visible=!0;let h=!0;for(let p=0;p<t.numVertices;++p){const c=(t.perimeterLengthLabelSegmentIndex+p)%t.numVertices,u=n?this._pathSegments[c]:this._perimeterSegments[c];if(h=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:u,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;h=!1}this._perimeterLengthLabel.visible=h&&s}else this._perimeterLengthLabel.visible=!1}_updateMessageBundle(){this.loadingMessages=!0,ni("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};function fi(t,e,i){return t&&e&&Ge(t,e,Ie(e,i))}function yi(t,e){return Y(t,Ie(t,e))}function Ie(t,e){switch(e){case"metric":return He(t.value,t.unit);case"imperial":return je(t.value,t.unit);default:return e}}function vi(t,e,i){return t&&e&&Ge(t,e,wi(e,i))}function wi(t,e){const i=Li(e);switch(i){case"metric":return Ne(t.value,t.unit);case"imperial":return Be(t.value,t.unit);default:return i}}function Li(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}var H;l([d()],y.prototype,"_parameters",null),l([d()],y.prototype,"view",void 0),l([d()],y.prototype,"messages",void 0),l([d()],y.prototype,"analysis",void 0),l([d()],y.prototype,"viewData",void 0),l([d()],y.prototype,"analysisViewData",void 0),l([d({readOnly:!0})],y.prototype,"areaLabel",void 0),l([d({readOnly:!0})],y.prototype,"perimeterLengthLabel",void 0),l([d()],y.prototype,"loadingMessages",void 0),l([d()],y.prototype,"visible",null),l([d()],y.prototype,"_renderUnits",null),y=l([B("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],y),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(H||(H={}));const Si={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,mode:null,positionsRender:null,positionsFittedWorld:null,positionsFittedRender:null,intersectingSegments:null,triangleIndices:null,areaCentroid:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null,area:null,pathLength:null,perimeterLength:null};let g=class extends ze(ie){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=X.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new $({view:e,areaMeasurement:t}),this.analysisVisualization=new y({view:e,analysis:t,analysisViewData:this}),this.analysisController=new x({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=P(this.analysisController),this.analysisVisualization=P(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return t==null?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){}};l([d({readOnly:!0})],g.prototype,"type",void 0),l([d({constructOnly:!0,nonNullable:!0})],g.prototype,"analysis",void 0),l([d()],g.prototype,"updating",null),l([d()],g.prototype,"analysisVisualization",void 0),l([d()],g.prototype,"analysisController",void 0),l([d()],g.prototype,"result",null),l([d()],g.prototype,"measurementData",void 0),l([d()],g.prototype,"viewData",null),l([d()],g.prototype,"validMeasurement",null),l([d()],g.prototype,"path",void 0),l([d()],g.prototype,"lastDraggedVertex",void 0),l([d()],g.prototype,"stagedPoint",void 0),l([d()],g.prototype,"mode",void 0),l([d()],g.prototype,"unit",null),l([d(Oe)],g.prototype,"_defaultUnit",void 0),g=l([B("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],g);const on=g,$i=Object.freeze(Object.defineProperty({__proto__:null,build:Re},Symbol.toStringTag,{value:"Module"}));export{on as default};
