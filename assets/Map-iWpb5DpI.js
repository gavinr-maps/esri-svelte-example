import{r as a}from"./tslib.es6-B3Jf3DVX.js";import{F as m}from"./Basemap-DVYOaWHz.js";import{b as i}from"./Ground-CAIVlzbd.js";import{b as u,q as n}from"./Accessor-BLX9ikPh.js";import{n as d}from"./CollectionFlattener-CQN6i8ZK.js";import{o as c}from"./Evented-BHRw9x22.js";import{n as h,w as b,m as s,a as f}from"./subclass-BZA_h8Db.js";import{s as p}from"./cast-Bjksrh93.js";import{e as g}from"./editableLayers-Cn9dHzhB.js";import{y as v,m as L,b as T}from"./basemapUtils-B9TjOm47.js";import{n as w,l as $,t as C}from"./TablesMixin-5umgS75f.js";const y={"world-elevation":{id:"worldElevation",url:"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer",layerType:"ArcGISTiledElevationServiceLayer"},"world-topobathymetry":{id:"worldTopoBathymetry",url:"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer",layerType:"ArcGISTiledElevationServiceLayer"}};function I(e){let r=null;if(typeof e=="string")if(e in y){const o=y[e];r=new i({resourceInfo:{data:{layers:[o]}}})}else h.getLogger("esri.support.groundUtils").warn(`Unable to find ground definition for: ${e}. Try "world-elevation"`);else r=b(i,e);return r}let t=class extends w($(c.EventedMixin(u))){constructor(e){super(e),this.allLayers=new d({getCollections:()=>{var r,o,l;return[(r=this.basemap)==null?void 0:r.baseLayers,(o=this.ground)==null?void 0:o.layers,this.layers,(l=this.basemap)==null?void 0:l.referenceLayers]},getChildrenFunction:r=>"layers"in r?r.layers:null}),this.allTables=C(this),this.basemap=null,this.editableLayers=new d({getCollections:()=>[this.allLayers],itemFilterFunction:g}),this.ground=new i,this._basemapCache=v()}destroy(){L(this._basemapCache),this._basemapCache=null,this.allLayers.destroy(),this.allTables.destroy(),this.editableLayers.destroy(),this.basemap=n(this.basemap),n(this.ground),this._set("ground",null)}castBasemap(e){return T(e,this._basemapCache)}castGround(e){return I(e)??this._get("ground")}findLayerById(e){return this.allLayers.find(r=>r.id===e)}findTableById(e){return this.allTables.find(r=>r.id===e)}};a([s({readOnly:!0,dependsOn:[]})],t.prototype,"allLayers",void 0),a([s({readOnly:!0})],t.prototype,"allTables",void 0),a([s({type:m,json:{read:{source:"baseMap"},write:{target:"baseMap"}}})],t.prototype,"basemap",void 0),a([p("basemap")],t.prototype,"castBasemap",null),a([s({readOnly:!0})],t.prototype,"editableLayers",void 0),a([s({type:i,nonNullable:!0})],t.prototype,"ground",void 0),a([p("ground")],t.prototype,"castGround",null),a([s()],t.prototype,"undoRedo",void 0),t=a([f("esri.Map")],t);const A=t;export{A as L};
