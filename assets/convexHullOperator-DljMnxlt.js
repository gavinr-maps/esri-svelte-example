import{M as a,v as n,_ as s}from"./operatorConvexHull-re_W8ZkO.js";import{fromGeometry as f,toGeometry as r,fromGeometries as c,fromGeometryToGXGeometry as u}from"./jsonConverter-CHvsvxL-.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Transformation2D-CV3xaSnP.js";import"./ProjectionTransformation-BlFTV7sx.js";import"./Accessor-BmwT4B0c.js";import"./Point-Cz2JYYmX.js";import"./cast-CsZslgGN.js";import"./index-4eY77cms.js";import"./JSONSupport-DcrLLGjL.js";import"./writer-DKgfqj4X.js";function S(e){const o=f(e);return r(a(o.getGeometry()),o.getSpatialReference())}function T(e,o={}){const{merge:t=!1}=o,[m,i]=c(e);return n(m,t).map(p=>r(p,i))}function V(e){return s(u(e))}export{S as execute,T as executeMany,V as isConvex};
