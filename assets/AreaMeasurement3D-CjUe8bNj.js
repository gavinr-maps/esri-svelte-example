import{B as J,ad as Q,r as a,m as r,a as M,N as w,aV as X,j as P}from"./Accessor-BmwT4B0c.js";import{O as Y,n as O,e as b}from"./jsxFactory-Cnml7uXM.js";import{c as Z}from"./Analysis-DG4TFZ53.js";import{an as f,j as D}from"./Point-Cz2JYYmX.js";import{j as tt}from"./Polyline-s-JzsQqo.js";import{d as _,C as it,A as S}from"./reactiveUtils-XM7cS2OP.js";import{e as et}from"./defaultUnit-CHqZKPQE.js";import{t as st}from"./memoize-DmxaQ-k8.js";import{h as at}from"./UpdatingHandles-CzJ4c3KT.js";import{x as v}from"./hydratedFeatures-CNHxsqRS.js";import{M as $}from"./measurementUtils-CZMdV_le.js";import{R as nt}from"./SnappingVisualizer3D-CNnXtbrW.js";import{z as rt,B as ot}from"./dragEventPipeline3D-BPjuyc9D.js";import{h as A}from"./Color-VJEMvW-n.js";import{S as C,E as lt,J as pt}from"./colorUtils-DaPfwnk3.js";import{g as mt}from"./screenUtils-_ZIvrt5o.js";import{n as H}from"./vec3f64-BLpZdpfb.js";import{f as U,a as L,e as k}from"./RenderObject-DqJETQox.js";import{c as ut}from"./LaserlineVisualElement-C8OQFtp1.js";import{o as E}from"./GeometryUtil-D-PMXorz.js";import{i as F}from"./InteractiveToolBase-rZBtMOMv.js";import{t as ht}from"./ToolIntersector-Ce8oIgvQ.js";import{o as dt}from"./ShadedColorMaterial.glsl-BFmY_SxS.js";import{E as gt,p as ct,P as _t}from"./EditGeometryOperations-CAMJU2Wn.js";import{p as yt}from"./dragEventPipeline-Dj33NxJd.js";import{e as wt}from"./SnappingContext-lR2hMWGP.js";import{f as vt}from"./SnappingDragPipelineStep-dx2sltqU.js";import{a as ft}from"./SnappingManagerPool-C7HBJ4KI.js";import{p as Mt}from"./SnappingOperation-D1hMlFdT.js";import{u as Vt}from"./RightAngleSnappingHint-BepRvd6S.js";import{n as T}from"./screenUtils-BWEEmpSb.js";import{u as bt}from"./InteractiveAnalysisViewModel-xgYySf2b.js";import{e as I}from"./globalCss-vQlnDsEX.js";import{u as Pt}from"./MeasurementWidgetContent-Be6iRbDh.js";import"./intl-Duiy0OzY.js";import"./Promise-DfET-uns.js";import"./cast-CsZslgGN.js";import"./index-4eY77cms.js";import"./JSONSupport-DcrLLGjL.js";import"./Evented-Dw4_VOGn.js";import"./uuid-Cl5lrJ4c.js";import"./Clonable-Z-AWS-16.js";import"./Identifiable-BHVfzH03.js";import"./writer-DKgfqj4X.js";import"./Extent-g5W9hy0j.js";import"./mathUtils-Cfq9PL9W.js";import"./SimpleObservable-CvOkykwM.js";import"./getDefaultUnitForView-BBSnYQvp.js";import"./Portal-CmmHxpLg.js";import"./Graphic-Dt0LgVGU.js";import"./opacityUtils-Dim20wpZ.js";import"./enumeration-DpvDkLNI.js";import"./ActionToggle-D7439N1A.js";import"./jsonUtils-CwFG8yN4.js";import"./typeUtils-B6WBEKDM.js";import"./TextSymbol-BLIQ6RKX.js";import"./collectionUtils-CTT-51g7.js";import"./aaBoundingBox-Dw3yBk2f.js";import"./projectVectorToVector-CCOy_B5J.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import"./projectPointToVector-BoxjK-qy.js";import"./projection-CyCZAIaD.js";import"./vec32-Dvg_eL9J.js";import"./common-DQOJ18NT.js";import"./sphere-Cin5efBj.js";import"./mat4-Fi6iAz29.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./mat3-CR8GKnhD.js";import"./mat3f64-BBpwCtoL.js";import"./plane-CpXmOyqq.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./vec2f64-Dy6m9Nrb.js";import"./mathUtils-BgCEaV43.js";import"./geodesicAreaMeasurementUtils-CfJYiWyy.js";import"./quantityUtils-BsDK158M.js";import"./geometryEngine-CLtm9OQA.js";import"./geometryEngineBase-B0ZyeKAX.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-DcIAHEVL.js";import"./geodesicUtils-Cvz9v8ds.js";import"./geodesicMeasurementUtils-B-7dBAnY.js";import"./elevationInfoUtils-D26wVF2d.js";import"./unitConversionUtils-rg07EgOm.js";import"./lengthUtils-_77UiyVF.js";import"./viewUtils-CV6QVz7y.js";import"./vec2-ChnYg_BJ.js";import"./ExtendedLineVisualElement-D_FcbyIy.js";import"./Octree-CmoRJhci.js";import"./InterleavedLayout-_dYEAUNK.js";import"./BufferView-0osDbyWD.js";import"./types-D0PSWh4d.js";import"./lineSegment-v806maA5.js";import"./EngineVisualElement-BU-x7ubB.js";import"./GridLocalOriginFactory-CngFIYNp.js";import"./Attribute-DGhdp5lO.js";import"./Material-C_-mgXN8.js";import"./VertexAttribute-Cq4MnHjR.js";import"./boundedPlane-DuGhiiFM.js";import"./ViewingMode-Dodu7ZZk.js";import"./NoParameters-t-PuNrgq.js";import"./FloatArray-BQXWSSJh.js";import"./BindType-BBwFZqyN.js";import"./Matrix3PassUniform-uCCQMnlP.js";import"./Texture-BVJ22uHh.js";import"./signal-CySMLEX9.js";import"./enums-D9v74xTE.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./renderState-Ci93M1-P.js";import"./basicInterfaces-CZwQPxTp.js";import"./Indices-D8XWalpO.js";import"./triangle-B1tKFm7z.js";import"./ShaderTechniqueConfiguration-D4dZMCXS.js";import"./glsl-BH37Aalp.js";import"./requestImageUtils-DWgRKL5q.js";import"./TextureFormat-1mYWTFa-.js";import"./RibbonLine.glsl-DwJpAQ1c.js";import"./sdfPrimitives-DBgFWIDT.js";import"./doublePrecisionUtils-B0owpBza.js";import"./floatRGBA-Cb__GiDF.js";import"./ShaderBuilder-BKul5qh8.js";import"./RgbaFloatEncoding.glsl-_io2eW3M.js";import"./OverlayCompositing.glsl-CUa8aMAb.js";import"./SceneLighting-BuSMIzqo.js";import"./RenderCamera-CDB-KFBK.js";import"./colorUtils-Rxh2V3ai.js";import"./axisAngleDegrees-DdLZENJj.js";import"./quat-CP7JhygC.js";import"./weather-zOic7P_q.js";import"./BooleanBindUniform-BgD_OP8i.js";import"./Float4DrawUniform-Db0CLl_z.js";import"./RenderPlugin-CTXypYLE.js";import"./HighlightDefaults-CumzVg9-.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./VertexArrayObject-vYejmVPr.js";import"./BufferObject-BJilD_hc.js";import"./memoryEstimations-Bcyf-mHz.js";import"./NestedMap-GuqgquCN.js";import"./HUDRenderStyle-BhGvVxgm.js";import"./Scheduler-i_u8qdlN.js";import"./debugFlags-B1LM_Apo.js";import"./VisualElement-CaupdJPJ.js";import"./LaserlinePath.glsl-DNndnwiF.js";import"./Object3DVisualElement-D0-_EXFp.js";import"./ElevationContext-BJejROd5.js";import"./computeTranslationToOriginAndRotation-DYUrDrjE.js";import"./dehydratedFeatureUtils-1rrRm6hF.js";import"./ElevationProvider-aS5xrHHy.js";import"./HUDMaterial-DDt4C7E7.js";import"./HUDVisibility.glsl-DuFScu5i.js";import"./VerticalOffset.glsl-CsMbbWIx.js";import"./GLTextureMaterial-96UpbkjC.js";import"./DefaultBufferWriter-CqCDaNCZ.js";import"./Float2PassUniform-x4sHx2JD.js";import"./RightAngleQuadVisualElement-IhLHtjxy.js";import"./ColorMaterial.glsl-B6FVFiO0.js";import"./TriangleMaterial-D-IjcYAX.js";import"./VertexColor.glsl-D3WyDYIi.js";import"./Matrix3DrawUniform-DD7AqlIc.js";import"./Matrix4PassUniform-COGIPIq4.js";import"./SnappingVisualizer-bfo0JaXd.js";import"./PointSnappingHint-DWAfJfrj.js";import"./ray-C_tSu6xd.js";import"./Intersector-tBiZcjSu.js";import"./intersectorUtils-BNnvTT1E.js";import"./verticalOffsetUtils-BFnFdbst.js";import"./orientedBoundingBox-B17G_yFO.js";import"./spatialReferenceEllipsoidUtils-DBqQpPRa.js";import"./interfaces-D6pIddIh.js";import"./graphicUtils-BFGMMQ1R.js";import"./meshVertexSpaceUtils-AgAbm20L.js";import"./MeshLocalVertexSpace-CnHk-qPr.js";import"./Blit-_zFq7-RL.js";import"./glUtil-CAJRmga-.js";import"./CameraSpace.glsl-g9iLbhnR.js";import"./vec3f32-nZdmKIgz.js";import"./geometry2dUtils-D9Oax6Qb.js";import"./dehydratedFeatureComparison-j4L0peJx.js";import"./SnappingManager-DoaI-UDx.js";import"./timeUtils-C1c_L2Fd.js";import"./Query-B_2mhyL4.js";import"./Field-BDG0QV_T.js";import"./fieldType-CBeoJWlv.js";import"./FullTextSearch-CBnxSwz4.js";import"./TimeExtent-BO6BsF_x.js";import"./InputManager-DZ3jJnlx.js";import"./Queue-BQesTh_6.js";import"./keybindings-CTmT1RTo.js";import"./utils-BjSXFjBJ.js";import"./Version-Cd3TlGH0.js";import"./UnitSelect-63i0421p.js";let c=class extends Z{constructor(i){super(i),this.type="area-measurement",this.unit=null}set geometry(i){i!=null?(i.rings.length>1&&J.getLogger(this).warn("Measuring polygons with multiple rings is not supported."),this._set("geometry",i.clone())):this._set("geometry",null)}get requiredPropertiesForEditing(){if(this.geometry!=null&&this.geometry.rings.length===1){const i=this.geometry.rings[0];if(i.length<=2||!Q(i[0],i[i.length-1]))return[null]}return[this.geometry]}clear(){this.geometry=null}};a([r({type:["area-measurement"]})],c.prototype,"type",void 0),a([r({value:null,type:tt})],c.prototype,"geometry",null),a([r({type:f,value:null})],c.prototype,"unit",void 0),a([r({readOnly:!0})],c.prototype,"requiredPropertiesForEditing",null),c=a([M("esri.analysis.AreaMeasurementAnalysis")],c);const N=c;class Dt{constructor(i,e=null){this.screenPoint=i,this.result=e}}class St{constructor(i,e){this.scenePoint=i,this.mapPoint=e}}class xt{constructor(i){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._listenerHandles=null,this._tempHandlePosition=H();const{analysisViewData:e,manipulators:s,toolState:o,view:n,visible:l}=i;this._analysisViewData=e,this._toolState=o,s!=null?(this._manipulators=s,this._isManipulatorsOwner=!1):this._manipulators=new F,this._view=n,this._intersector=ht(n.state.viewingMode);const m=U(this._handleColor),h=[new L(E(m,1,32,32))],g=new k({view:n,renderObjects:h});g.available=!1,g.radius=R,g.interactive=!1,this._manipulators.add(g),this._cursorManipulator=g,this._cursorManipulatorMaterial=m,this._laserLine=new ut({view:n,attached:!0,style:{glowWidth:$t,glowFalloff:At,innerWidth:Ct},isDecoration:!0}),this._updateVisibility(l??!0)}destroy(){this._listenerHandles=w(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=w(this._manipulators):this._manipulators=null,this._laserLine=w(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(i){i?this.show():this.hide()}get testData(){}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(i){this._destroyed||this._visible===i||this._updateVisibility(i)}_updateVisibility(i){this._visible=i,this._laserLine.visible=i,i?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach(({manipulator:e})=>this._removeVertexManipulator(e)),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(i,e){const s=this._manipulators.intersect(i,e);return s==null?void 0:s.metadata}pick(i){const e=this._view.spatialReference,s=mt(i.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const o=this._intersector.results.min,n=H();if(!o.getIntersectionPoint(n))return null;const l=this._view.renderCoordsHelper.fromRenderCoords(n,new D({spatialReference:e}));return l==null?null:new St(n,l)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const i=U(this._handleColor),e=[new L(E(i,1,32,32))],s=new k({view:this._view,renderObjects:e});return s.radius=R,this._manipulators.add(s),{manipulator:s,material:i}}_removeVertexManipulator(i){this._manipulators.remove(i)}_updateVertexManipulators(){const{viewData:i}=this._analysisViewData,e=this._analysisViewData.path?this._analysisViewData.path.vertices:[],s=this.vertexManipulators;Ot(s,e.length,()=>this._createVertexManipulator(),({manipulator:o})=>this._removeVertexManipulator(o)),s.forEach(({manipulator:o},n)=>{o.metadata=e[n],o.renderLocation=i.positionsRender[n],o.cursor=n===0&&this._toolState.polygonState==="drawing"?"crosshair":null}),this._toolState.polygonState==="drawing"&&this._analysisViewData.stagedPoint!=null?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.stagedPoint):this._cursorManipulator.available=!1}get _handleColor(){return C(this._view.effectiveTheme.accentColor,.5)}_getFocusPoint(){const{lastDraggedVertex:i}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return this._analysisViewData.stagedPoint!=null?this._analysisViewData.stagedPoint:i!=null?this._analysisViewData.path.getVertexPositionAsPoint(i):this._analysisViewData.path.lastPoint;case"editing":return i!=null?this._analysisViewData.path.getVertexPositionAsPoint(i):null;default:return this._analysisViewData.stagedPoint}}_updateLaserLine(){const i=this._toolState.polygonState!=="measured"&&this._toolState.active,e=this._getFocusPoint();if(i&&e!=null){const s=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(e,s),this._laserLine.heightManifoldTarget=s}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new X,this._listenerHandles.add([_(()=>this._toolState.polygonState,()=>this._updateLaserLine()),_(()=>this._analysisViewData.viewData,()=>this._updateAll(),it),_(()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.stagedPoint}),()=>this._updateLaserLine()),_(()=>this._toolState.active,()=>this._updateAll()),_(()=>this._view.effectiveTheme.accentColor,i=>{const e=C(i,.5);for(const{material:h}of this.vertexManipulators)h.setParameters({color:e});this._cursorManipulatorMaterial.setParameters({color:e});const s=A.toUnitRGB(i),o=A.toUnitRGB(lt(i)),n=.75*i.a,l=this._laserLine,m=l.style;l.style={...m,glowColor:s,innerColor:o,globalAlpha:n}},{initial:!0,equals:pt})])}_destroyListeners(){this._listenerHandles=w(this._listenerHandles)}}function Ot(t,i,e,s){for(;t.length<i;)t.push(e());for(;t.length>i;)s(t.pop())}const $t=8,At=8,Ct=1,R=5;let u=class extends dt{constructor(t){super(t),this._updatingHandles=new at,this.polygonState="initial",this.manipulators=new F,this._getSnappingContext=st(i=>new wt({elevationInfo:{mode:"absolute-height",offset:0},pointer:i,editGeometryOperations:new gt(new ct("point",_t(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new nt}))}initialize(){const{view:t,analysisViewData:i,manipulators:e,visible:s}=this;this.measurementView=new xt({view:t,analysisViewData:i,toolState:this,manipulators:e,visible:s});const o=ft(t);this._snappingManagerResult=o,this.addHandles(o),this._snappingOperation=new Mt({view:t}),this._updatingHandles.add(()=>this.stagedPoint,n=>{this.analysisViewData.stagedPoint=n!=null?v(n,new D):null},S),Vt(this,()=>{const n=this.view.inputManager.latestPointerType??"mouse",l=this._getSnappingContext(n);this._updatingHandles.addPromise(P(this._snappingOperation.snapAgainNearPreviousMapPoint(this._snappingManager,l)))}),this._setupManipulators(),this.addHandles([_(()=>this.state,n=>{n==="measured"&&this.finishToolCreation()},S),this.analysisViewData.path.on("change",()=>{const n=this.analysisViewData.path;this.polygonState!=="initial"||n.isEmptyPolygon||(n.isValidPolygon?this.polygonState="measured":this.polygonState="drawing")})])}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._updatingHandles=w(this._updatingHandles)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){return this.analysisViewData.path.numVertices===0?"ready":this.analysisViewData.path.isValidPolygon&&this.polygonState!=="editing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.polygonState==="drawing"?"crosshair":null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get stagedPoint(){return this._snappingOperation.stagedPoint}set stagedPoint(t){this._snappingOperation.stagedPoint=t}get snappingOptions(){return this._snappingManager.options}finishMeasurement(){const{path:t}=this.analysisViewData;t.numVertices<3?(t.clear(),this.polygonState="initial"):(t.close(),this.polygonState="measured"),this._resetSnappingState()}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._resetSnappingState()}onInputEvent(t){switch(t.type){case"immediate-double-click":this._handleImmediateDoubleClick(t);break;case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"drag":this._handleDrag(t);break;case"key-down":this._handleKeyDown(t)}}_setupManipulators(){const t=e=>e.events.on("grab-changed",()=>{if(this.analysisViewData.path.isValidPolygon){const s=this.manipulators.some(o=>o.manipulator.grabbing);this.polygonState=s?"editing":"measured"}}),i=e=>{this.addHandles([yt(e,(s,o,n,l)=>{const m=rt(s),h=s.metadata,g=this._snappingManager,V=this._getSnappingContext(l),G=this._updatingHandles,{snappingStep:K,cancelSnapping:W}=vt({snappingManager:g,snappingContext:V,updatingHandles:G});n=n.next(m).next(y=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(h,x),s.location=x,y)).next(W),o.next(m).next(ot(this.view)).next(...K).next(y=>{s.location=y.mapEnd,this.analysisViewData.lastDraggedVertex=y.action==="end"?null:h,this.analysisViewData.path.setVertexPosition(h,v(y.mapEnd))});const x=v(this.analysisViewData.path.getVertexPositionAsPoint(h))}),t(e)],e)};this.manipulators.forEach(({manipulator:e})=>{i(e)}),this.addHandles([this.manipulators.on("after-add",({item:{manipulator:e}})=>{i(e)}),this.manipulators.on("after-remove",({item:{manipulator:e}})=>this.removeHandles(e))])}_handleImmediateDoubleClick(t){$(t)&&(this.polygonState==="drawing"&&this.finishMeasurement(),t.stopPropagation())}_handleDrag(t){this.polygonState==="editing"&&t.stopPropagation()}_handleImmediateClick(t){if(!$(t))return;const i=T(t),{pointerType:e}=t;if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(i,e))return this.stagedPoint=null,this.polygonState="drawing",void t.stopPropagation();break;case"drawing":{const s=this.measurementView.vertexHandleAt(i,e);if(s==null){if(this._addVertexAt(i,e))return this.stagedPoint=null,void t.stopPropagation()}else s.index===0&&(this.finishMeasurement(),t.stopPropagation());break}}t.pointerType==="mouse"&&this._hoverAt(i)}_handlePointerMove(t){if(t.pointerType==="mouse"){const i=T(t);this._hoverAt(i)}}_handleKeyDown(t){const{path:i}=this.analysisViewData;t.key==="Enter"&&this.polygonState==="drawing"&&i.numVertices>=3&&(this.stagedPoint=null,this.finishMeasurement(),t.stopPropagation())}_hoverAt(t){const{polygonState:i}=this;if(this.active&&(i==="initial"||i==="drawing")){const e=this._pick(t);if((e==null?void 0:e.mapPoint)!=null){const s=this._getSnappingContext("mouse");this._updatingHandles.addPromise(P(this._snappingOperation.snap({point:e.mapPoint},this._snappingManager,s)))}}else this.stagedPoint=null}_addVertexAt(t,i){const e=this._pick(t);if((e==null?void 0:e.mapPoint)!=null){const{mapPoint:s}=e,o=this._getSnappingContext(i),n=this._snappingOperation.update({point:s},this._snappingManager,o),l=v(n,new D);return this.analysisViewData.path.add(l),!0}return!1}_pick(t){const i=new Dt(t);return this.measurementView.pick(i)}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}get test(){}};a([r({readOnly:!0})],u.prototype,"state",null),a([r()],u.prototype,"polygonState",void 0),a([r({readOnly:!0})],u.prototype,"cursor",null),a([r()],u.prototype,"measurementView",void 0),a([r({constructOnly:!0})],u.prototype,"view",void 0),a([r({constructOnly:!0})],u.prototype,"analysis",void 0),a([r({constructOnly:!0})],u.prototype,"analysisViewData",void 0),a([r({readOnly:!0})],u.prototype,"manipulators",void 0),a([r()],u.prototype,"updating",null),a([r()],u.prototype,"stagedPoint",null),a([r()],u.prototype,"snappingOptions",null),u=a([M("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],u);const Ht=u;let d=class extends bt{constructor(t){super(t),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="AreaMeasurement3DViewModel is only supported in 3D views.",this._userUnitOptions=null,this._userUnit=null}initialize(){this.addHandles(_(()=>({analysis:this.analysis,unit:this.unit}),({analysis:t,unit:i})=>{t!=null&&(t.unit=i)},S))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){if(this.tool==null||this.disabled||this.tool.destroyed)return null;const{analysisView:t}=this;if(t==null)return null;const i=t.analysisVisualization,e=i.viewData,s=e.validMeasurement,o=e.mode==="euclidean",n=e.intersectingSegments.size===0,l=n?s?"available":"unavailable":"invalid";return{mode:o?"euclidean":"geodesic",area:{text:n&&s?i.areaLabel:null,state:l},perimeterLength:{text:n&&s?i.perimeterLengthLabel:null,state:l}}}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null}get unit(){return this._userUnit!=null?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new N}constructTool(){return new Ht({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(t,i){const{unitOptions:e}=this;return e.includes(t)?t:i!=null?this._findSelectableUnit(i):e[0]}_filteredOrAllUnits(t){if(t==null)return f.slice();const i=t.filter(e=>f.includes(e));return i.length===0?f.slice():i}};a([r({type:N})],d.prototype,"analysis",void 0),a([r({readOnly:!0})],d.prototype,"state",null),a([r({readOnly:!0})],d.prototype,"measurement",null),a([r()],d.prototype,"unitOptions",null),a([r()],d.prototype,"unit",null),a([r(et)],d.prototype,"defaultUnit",void 0),a([r()],d.prototype,"_userUnit",void 0),d=a([M("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],d);const q=d,z="esri-area-measurement-3d",B={base:z,newMeasurementButton:`${z}__clear-button`};let p=class extends Y{constructor(t,i){super(t,i),this.messages=null,this.messagesCommon=null,this.messagesUnits=null,this.viewModel=new q}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get icon(){return"measure-area"}set icon(t){this._overrideIfSome("icon",t)}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesCommon:i,messagesUnits:e,unit:s,unitOptions:o,viewModel:n}=this,{active:l,measurement:m,state:h,supported:g}=n;return O("div",{"aria-label":this.messages.widgetLabel,class:this.classes(B.base,I.widget,I.panel),key:this,role:"presentation"},this.visible?O(Pt,{active:l,measurementItems:[{key:"direct",title:e.measures.area,value:j(m==null?void 0:m.area)},{key:"perimeter",title:t.perimeterLength,value:j(m==null?void 0:m.perimeterLength)}],messages:{...t,notApplicable:i.notApplicable},newMeasurementButtonClass:B.newMeasurementButton,state:h,supported:g,unit:s,unitOptions:o,onNewMeasurementClick:()=>{P(this.viewModel.start())},onUnitChange:V=>{this.unit=V}}):null)}};function j(t){return(t==null?void 0:t.state)==="available"?t.text:null}a([r()],p.prototype,"view",null),a([r()],p.prototype,"visible",null),a([r()],p.prototype,"active",null),a([r({constructOnly:!0,nonNullable:!0})],p.prototype,"analysis",null),a([r()],p.prototype,"icon",null),a([r()],p.prototype,"label",null),a([r(),b("esri/widgets/AreaMeasurement3D/t9n/AreaMeasurement3D")],p.prototype,"messages",void 0),a([r(),b("esri/t9n/common")],p.prototype,"messagesCommon",void 0),a([r(),b("esri/core/t9n/Units")],p.prototype,"messagesUnits",void 0),a([r()],p.prototype,"uiStrings",void 0),a([r({type:q})],p.prototype,"viewModel",void 0),a([r()],p.prototype,"unitOptions",null),a([r()],p.prototype,"unit",null),p=a([M("esri.widgets.AreaMeasurement3D")],p);const ua=p;export{ua as default};
