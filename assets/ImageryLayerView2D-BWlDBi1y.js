import{e as o}from"./Evented-CXIxDjmW.js";import{d as x}from"./Graphic-Bi5hWHps.js";import{d as g,A as k,C as $,V as S}from"./reactiveUtils-BFQ0BtrB.js";import{y as s,b as f,n as w,k as R,h as q}from"./subclass-BR3PhgZG.js";import{c as D}from"./GraphicsCollection-B0IuEpT5.js";import{d as A,f as I,a as U}from"./RasterVFDisplayObject-Bqt-bdVC.js";import{f as z}from"./LayerView2D-Dn0gqiP2.js";import{V as C}from"./GraphicsView2D-u2hXgWGU.js";import{h as T}from"./HighlightGraphicContainer-DicKqNIZ.js";import{S as V,b as v,x as F}from"./Accessor-D6mNnsWy.js";import{M,m as H,f as L}from"./dataUtils-BTw6iaAi.js";import{a as O}from"./BitmapContainer-BbCPQbvy.js";import{h as j,E}from"./Container-BQo1Tfto.js";import{l as G}from"./Bitmap-UVG-lDis.js";import{_ as J}from"./ExportStrategy-bzMx2TwC.js";import{U as N}from"./assets-BNizZMOZ.js";import{w as B}from"./Extent-B4rrMrqp.js";import{a8 as W}from"./Point-TlcsOcXV.js";import{J as K}from"./rasterProjectionHelper-CuUa3waC.js";import{a as Q}from"./WGLContainer-BPPb4wqa.js";import{m as X}from"./ImageryLayerView-DXyhkgR6.js";import{y as Y}from"./LayerView-CbIY_4n2.js";import{i as Z}from"./RefreshableLayerView-BClKL0FL.js";import"./geometry-CnaxvJsv.js";import"./Polyline-BQFeqYXi.js";import"./writer-3zufXUNV.js";import"./mathUtils-ClvKsMak.js";import"./jsonMap-DCC6W5ex.js";import"./PopupTemplate-D8mXPxzU.js";import"./Clonable-cKbRam6-.js";import"./fieldUtils-C5R42-PY.js";import"./index-BVncS3aY.js";import"./intl-CArXn1et.js";import"./Promise-CZrWwByK.js";import"./enumeration--HlxOQ_N.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./symbols-CfvYGR4J.js";import"./TextSymbol-zZq0BA1M.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-BGxkJAW0.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-DCqdz-K4.js";import"./jsonUtils-DtWlwXHP.js";import"./shared-B3wH2qpO.js";import"./BufferObject-CjYoWxgZ.js";import"./Texture-BbJIOVx_.js";import"./enums-BlUEVwJR.js";import"./VertexArrayObject-Cwnso4un.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./DefaultUI-Cy6B6U3V.js";import"./jsxFactory-Be5PKa9i.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CMtXpTiG.js";import"./InputManager-C4xu1R9l.js";import"./Queue-DpHko4Yk.js";import"./signal-DzOfzcfh.js";import"./Map-D9sO0Jqv.js";import"./Basemap-CKBB4cRW.js";import"./loadAll-z9YY33Kx.js";import"./PortalItem-CaeKabGc.js";import"./writeUtils-BUKZUL8X.js";import"./layerUtils-BzjQnEdj.js";import"./Ground-CSI-YC3C.js";import"./compilerUtils-BA04t1lN.js";import"./CollectionFlattener-CkyePFnC.js";import"./editableLayers-BdCikvlg.js";import"./catalogUtils--o1nDhfl.js";import"./basemapUtils-fcYt_ePc.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./TablesMixin-BWPSKW45.js";import"./Layer-CfUiPX3n.js";import"./TimeExtent-Dl-qaORu.js";import"./timeUtils-DQR2jUPL.js";import"./HeightModelInfo-CzO-kRMK.js";import"./ReactiveMap-Dl_3-Rm5.js";import"./Query-BpMwiNVl.js";import"./DataLayerSource-BX7Ap_tY.js";import"./Field-poIiHWUc.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BhJOgh_r.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BGG3AyYa.js";import"./a11yUtils-DwloBVAu.js";import"./heightModelInfoUtils-C5nNknML.js";import"./arcgisLayerUrl-ETqee4Bd.js";import"./ViewingMode-Dodu7ZZk.js";import"./projection-tSh-0UvX.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-COYT31Am.js";import"./Compass-eoZ7sbNQ.js";import"./utils-DsJqvptN.js";import"./GoTo-CyjNnle5.js";import"./NavigationToggle-Dune4J79.js";import"./Zoom-BgowPovH.js";import"./WGLBrushVTLSymbol-BVZwlPlb.js";import"./vec4f32-CjrfB-0a.js";import"./definitions-ByNBSgP9.js";import"./StyleDefinition-BK3ROBTO.js";import"./enums-BRXbslMp.js";import"./vec2f32-BbH2jxlN.js";import"./config-MDUrh2eL.js";import"./mat3-DRqs2t5W.js";import"./DisplayObject-DFOkWAgp.js";import"./LabelMetric-Agz2doNK.js";import"./Program-BE7XUO18.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./BoundingBox-BhuXqU4L.js";import"./HighlightOptions-BG8_qaKQ.js";import"./quickselect-D0_cvEX6.js";import"./TileKey-CIqLSCov.js";import"./ClipRect-CkQqwQzT.js";import"./layerViewUtils-D2JqIDZ8.js";import"./FieldsIndex-DHql50vu.js";import"./UnknownTimeZone-D0GlcniK.js";import"./CIMSymbolHelper-Ei9DhmLE.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CILP_6vp.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-CXWuBstD.js";import"./utils-D8D39sLt.js";import"./mat2d-DPkeMmgR.js";import"./mat2df32-orApM5a3.js";import"./vec2-B_ymkwGp.js";import"./Rect-CUzevAry.js";import"./defaults-CIM29kXM.js";import"./defaultsJSON-GKolV7NZ.js";import"./OverrideHelper-0-cH6aQ2.js";import"./colorUtils-D5nOabzP.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./quantizationUtils-DFd0XKEL.js";import"./AttributeStore-BezdLLOX.js";import"./UpdateTracking2D-CBckaO4D.js";import"./BindType-BmZEZMMh.js";import"./Util-BMqL_pkg.js";import"./vec2f64-Diu2Kaa8.js";import"./highlightReasons-CQmHiFo_.js";import"./labelFormatUtils-CJcADR3o.js";import"./labelUtils-Cczy0uDR.js";import"./TimeOnly-BtK5SiqG.js";import"./centroid-DdLmOD72.js";import"./featureConversionUtils-B-SknPj_.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./diffUtils--7ofoPN-.js";import"./timeSupport-86-Lo3YD.js";import"./normalizeUtils-CuTX3yb4.js";import"./normalizeUtilsCommon-DNPu20r0.js";import"./utils-Blh5cXWv.js";import"./utils-Bh7lx_TM.js";import"./json-Wa8cmqdu.js";import"./FeatureCommandQueue-CXv6tVJy.js";import"./heatmapTextureUtils-DhR7tWLr.js";import"./constants-D5zmR9t2.js";import"./lengthUtils-vgIBtB6M.js";import"./QueueProcessor-Bu6RBZRX.js";import"./normalizeUtilsSync-DD8htqGn.js";import"./AGraphicContainer-DV1awRM6.js";import"./TechniqueInstance-CdE5J-S7.js";import"./TileContainer-nXcbD7rd.js";import"./vec3f32-Cw9Q6TO_.js";import"./pixelRangeUtils-DR2RxTkt.js";import"./EffectView-D2q0Wr_W.js";import"./parser-BN6zmHl-.js";import"./TileInfo-Dm24FfTU.js";import"./TileKey-DZd6gJy7.js";import"./TileStrategy-Dx1mrlzq.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-wM3hmZl7.js";import"./DefaultVertexAttributeLayouts-BIPVF1RK.js";import"./earcut-BqgeR2O3.js";import"./MapView-qZukyD5W.js";import"./Viewpoint-7_owAOZm.js";import"./Cyclical-BY_I03kj.js";import"./workers-D8NOwm_V.js";import"./viewpointUtils-m5ps6MiV.js";import"./mat2df64-CBKYtunK.js";import"./unitBezier-BX6NeAEr.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-Ds8mXmIZ.js";import"./timeSupport-DeLDxidC.js";import"./timeUtils-FF8YLCMd.js";import"./tagSymbols-BPcGfZon.js";import"./popupUtils-BA90ku9o.js";let m=class extends V{constructor(){super(...arguments),this.attached=!1,this.container=new j,this.updateRequested=!1,this.type="imagery",this._bitmapView=new O}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{v(e)||w.getLogger(this).error(e)})}hitTest(t){return new x({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new J({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{const{source:e}=t;if(!e||e instanceof ImageBitmap)return;const i=await this.layer.applyRenderer({extent:e.extent,pixelBlock:e.originalPixelBlock??e.pixelBlock});e.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...i,extent:e.extent}}).catch(t=>{v(t)||w.getLogger(this).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(a=>a.source).filter(a=>a.extent&&a.extent.intersects(e)).map(a=>({extent:a.extent,pixelBlock:a.originalPixelBlock})),r=M(i,e);return r!=null?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}async _fetchImage(t,e,i,r){var d;(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,r.returnImageBitmap=!0;const a=await this.layer.fetchImage(t,e,i,r);if(a.imageBitmap)return a.imageBitmap;const p=await this.layer.applyRenderer(a.pixelData,{signal:r.signal}),n=new G(p.pixelBlock,(d=p.extent)==null?void 0:d.clone(),a.pixelData.pixelBlock);return n.filter=u=>this.layer.applyFilter(u),n}};o([s()],m.prototype,"attached",void 0),o([s()],m.prototype,"container",void 0),o([s()],m.prototype,"layer",void 0),o([s()],m.prototype,"strategy",void 0),o([s()],m.prototype,"timeExtent",void 0),o([s()],m.prototype,"view",void 0),o([s()],m.prototype,"updateRequested",void 0),o([s()],m.prototype,"updating",null),o([s()],m.prototype,"type",void 0),m=o([f("esri.views.2d.layers.imagery.ImageryView2D")],m);const tt=m;class et extends Q{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[A],target:()=>this.children,drawPhase:E.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===E.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let h=class extends V{constructor(t){super(t),this._loading=null,this.update=F((e,i)=>this._update(e,i).catch(r=>{v(r)||w.getLogger(this).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:a}=t.state,p=new B({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:a}),[n,d]=t.state.size;this._loading=this.fetchPixels(p,n,d,i);const u=await this._loading;this._addToDisplay(u,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(t.pixelBlock==null)return this.container.children.forEach(n=>n.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:a}=t,p=new I(a);p.offset=[0,0],p.symbolizerParameters=e,p.rawPixelData=t,p.invalidateVAO(),p.x=r.xmin,p.y=r.ymax,p.pixelRatio=i.pixelRatio,p.rotation=i.rotation,p.resolution=i.resolution,p.width=a.width*e.symbolTileSize,p.height=a.height*e.symbolTileSize,this.container.children.forEach(n=>n.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(p)}};o([s()],h.prototype,"fetchPixels",void 0),o([s()],h.prototype,"container",void 0),o([s()],h.prototype,"_loading",void 0),o([s()],h.prototype,"updating",null),h=o([f("esri.views.2d.layers.imagery.ImageryVFStrategy")],h);const it=h;let l=class extends V{constructor(){super(...arguments),this.attached=!1,this.container=new et,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const a=await this._projectFullExtentPromise,{symbolTileSize:p}=this.layer.renderer,{extent:n,width:d,height:u}=H(t,e,i,p,a);if(a!=null&&!a.intersects(t))return{extent:n,pixelBlock:null};const b={bbox:`${n.xmin}, ${n.ymin}, ${n.xmax}, ${n.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:p,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(b)){const c=this.getPixelData();if(c!=null&&`${c.extent.xmin}, ${c.extent.ymin}, ${c.extent.xmax}, ${c.extent.ymax}`===b.bbox)return c}const{pixelData:_}=await this.layer.fetchImage(n,d,u,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});this._dataParameters=b;const P=_==null?void 0:_.pixelBlock;return P==null?{extent:n,pixelBlock:null}:{extent:n,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?L(P,"vector-uv"):P}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new it({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(g(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),k),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){var r;const t=(r=this.container.children[0])==null?void 0:r.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new x({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams).catch(e=>{v(e)||w.getLogger(this).error(e)})}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,a=this._dataParameters.bbox===t.bbox;return e&&i&&r&&a}async _getProjectedFullExtent(t){try{return K(this.layer.fullExtent,t)}catch{try{const i=(await N(this.layer.url,{query:{option:"footprints",outSR:W(t),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?B.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){t.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};o([s()],l.prototype,"attached",void 0),o([s()],l.prototype,"container",void 0),o([s()],l.prototype,"layer",void 0),o([s()],l.prototype,"timeExtent",void 0),o([s()],l.prototype,"type",void 0),o([s()],l.prototype,"view",void 0),o([s()],l.prototype,"updating",null),l=o([f("esri.views.2d.layers.imagery.VectorFieldView2D")],l);const rt=l;let y=class extends X(Z(z(Y))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new D,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}update(t){var e;(e=this.subview)==null||e.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new C({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([g(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},$),g(()=>this.timeExtent,t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())},$),this.layer.on("redraw",()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())}),g(()=>this.layer.renderer,()=>this._setSubView())])}detach(){var t,e;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.subview=null,(e=this._highlightView)==null||e.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:S.isCollection(t)?t.at(0):t)instanceof x))return R();let i=[];return Array.isArray(t)||S.isCollection(t)?i=t.map(r=>r.clone()):t instanceof x&&(i=[t.clone()]),this._highlightGraphics.addMany(i),R(()=>this._highlightGraphics.removeMany(i))}async doRefresh(){this.requestUpdate()}isUpdating(){var e,i;const t=!this.subview||this.subview.updating||!!((e=this._highlightView)!=null&&e.updating);return q("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${t}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${(i=this._highlightView)==null?void 0:i.updating}
`),t}_setSubView(){var i,r;if(!this.view)return;const t=(i=this.layer.renderer)==null?void 0:i.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:a}=this.subview;if(a===e)return this._attachSubview(this.subview),void(a==="flow"?this.subview.redrawOrRefetch():a==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=e==="imagery"?new tt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new rt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new U({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t!=null&&t.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};o([s()],y.prototype,"pixelData",null),o([s()],y.prototype,"subview",void 0),y=o([f("esri.views.2d.layers.ImageryLayerView2D")],y);const Mr=y;export{Mr as default};
