import{r,m as o,a as P}from"./Accessor-BHnuXKD2.js";import{d as F}from"./Viewshed-CDdJH3np.js";import{c as C}from"./Analysis-BnA3eZRj.js";import{V as N,d as S,A as T}from"./reactiveUtils-BR0C1Kq4.js";import{t as H,n as J}from"./collectionUtils-CbaToa73.js";import{a as $}from"./Cyclical-CPiNl4ru.js";import{s as R,r as A}from"./mathUtils-DV9iOXpW.js";import{w as D}from"./Extent-CBBGeHb-.js";import{Y as G}from"./projection-B2I9Bzj_.js";import{S as U}from"./MultiOriginJSONSupport-nGLpCFeg.js";import{r as Y}from"./writer-B2bQV2uU.js";import{f as k}from"./Layer-C9uQlTBT.js";import{b as B}from"./OperationalLayer-Bts9W3HA.js";import"./featureReferenceUtils-B05j576q.js";import"./vec32-Dvg_eL9J.js";import"./vec3f64-BLpZdpfb.js";import"./common-DQOJ18NT.js";import"./sphere-DQxj5tsv.js";import"./mat4-Fi6iAz29.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./Polyline-BmuD2-ZN.js";import"./Point-XGrwlf63.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./mat3-CR8GKnhD.js";import"./mat3f64-BBpwCtoL.js";import"./plane-4dpuo6-e.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./vec2f64-Dy6m9Nrb.js";import"./mathUtils-B9R7G-2c.js";import"./intersectorUtils-l6zkk4nF.js";import"./boundedPlane-Dyz2ub5d.js";import"./lineSegment-C-CDF7QX.js";import"./intersectorUtilsConversions-CZnn6t-z.js";import"./aaBoundingBox-CeBivBRq.js";import"./Intersector-DPK4WnQE.js";import"./Clonable-DvJsj5LF.js";import"./Identifiable-BrT7zvUW.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./Portal-CTRRujjZ.js";import"./Promise-CmQqe-ke.js";import"./TimeExtent-J5qnUFx_.js";import"./timeUtils-D2X862bk.js";import"./layerContainerType-C5CzMsLd.js";import"./commonProperties-C0eC30J9.js";import"./ElevationInfo-Di4W6v5U.js";import"./opacityUtils-CSd4XoR2.js";import"./unitConversionUtils-C4AR5obr.js";import"./lengthUtils-DjJgJFRg.js";import"./AttributeTableTemplate-B7rH2qLr.js";const _=N.ofType(F);let l=class extends C{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(S(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},T))}get viewsheds(){return this._get("viewsheds")||new _}set viewsheds(e){this._set("viewsheds",J(e,this.viewsheds,_))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const i=this.viewsheds.filter(t=>t.observer!=null),h=i.map(t=>t.observer).toArray(),p=G(h,e);return p.pending!=null?{pending:p.pending,extent:null}:{pending:null,extent:p.geometries.map((t,a)=>{const x=i.at(a);return t!=null&&x!=null?this._computeViewshedExtent(this.viewsheds.at(a),t):null}).filter(t=>t!=null).reduce((t,a)=>I(t,a),null)}}_computeViewshedExtent(e,i){const{farDistance:h,heading:p,tilt:t,horizontalFieldOfView:a,verticalFieldOfView:x}=e,{spatialReference:w}=i,g=a/2,b=x/2,O=h/w.metersPerUnit,j=[$.normalize(p-g),p,$.normalize(p+g)],m=D.fromPoint(i),f=y=>{const u=j.map(n=>$.normalize(n-y));if(u[0]>u[2]||a===360)return O;const d=u.map(n=>Math.abs(n>180?360-n:n)).reduce((n,v)=>n>v?v:n);return d>90?0:O*Math.cos(R(d))};m.xmax+=f(90),m.xmin-=f(-90),m.ymax+=f(0),m.ymin-=f(180);const c=i.z;if(c!=null){let y=c,u=c;const d=t-90,n=A(d+b,-90,90),v=A(d-b,-90,90),V=w!=null&&w.isGeographic?h:O;y+=V*E(n),u+=V*E(v);const q=L(b)*V,M=E(d)*q*(1-L(g));t<90&&(y-=M),t>90&&(u-=M),m.zmax=Math.max(y,c),m.zmin=Math.min(u,c)}return m}clear(){this.viewsheds.removeAll()}};function I(e,i){return e==null?i:i==null?e:e.union(i)}function L(e){return Math.cos(R(e))}function E(e){return Math.sin(R(e))}r([o({type:["viewshed"]})],l.prototype,"type",void 0),r([o({cast:H,type:_,nonNullable:!0})],l.prototype,"viewsheds",null),r([o({readOnly:!0})],l.prototype,"spatialReference",null),r([o()],l.prototype,"_extent",void 0),r([o({readOnly:!0})],l.prototype,"extent",null),r([o({readOnly:!0})],l.prototype,"requiredPropertiesForEditing",null),l=r([P("esri.analysis.ViewshedAnalysis")],l);const z=l;let s=class extends B(U(k)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new z,this.opacity=1}initialize(){this.addHandles(S(()=>this.source,(e,i)=>{i!=null&&i.parent===this&&(i.parent=null),e!=null&&(e.parent=this)},T))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new z)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,i,h,p){i.viewsheds=e.filter(t=>t.isValid()).map(t=>t.toJSON(p)).toJSON()}};r([o({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),r([o({type:["ViewshedLayer"]})],s.prototype,"operationalLayerType",void 0),r([o({type:z,nonNullable:!0})],s.prototype,"source",void 0),r([o({readOnly:!0})],s.prototype,"spatialReference",null),r([o({readOnly:!0})],s.prototype,"fullExtent",null),r([o({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],s.prototype,"opacity",void 0),r([o({type:["show","hide"]})],s.prototype,"listMode",void 0),r([o({type:N.ofType(F),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],s.prototype,"viewsheds",null),r([Y("web-scene","viewsheds")],s.prototype,"writeViewsheds",null),s=r([P("esri.layers.ViewshedLayer")],s);const We=s;export{We as default};
