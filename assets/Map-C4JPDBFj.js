import{o as m,e as t}from"./Evented-CXIxDjmW.js";import{F as u}from"./Basemap-DhGpUWGY.js";import{b as i}from"./Ground-BuxgFYJy.js";import{S as c,u as n}from"./Accessor-D6mNnsWy.js";import{l as d}from"./CollectionFlattener-CkyePFnC.js";import{n as h,g as b,y as s,b as g}from"./subclass-BR3PhgZG.js";import{s as p}from"./jsonMap-DCC6W5ex.js";import{e as f}from"./editableLayers-BHlaPs85.js";import{y as v,m as L,b as T}from"./basemapUtils-CkCKogG3.js";import{n as w,l as $,t as S}from"./TablesMixin-BKe9x_jT.js";const y={"world-elevation":{id:"worldElevation",url:"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer",layerType:"ArcGISTiledElevationServiceLayer"},"world-topobathymetry":{id:"worldTopoBathymetry",url:"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer",layerType:"ArcGISTiledElevationServiceLayer"}};function C(e){let r=null;if(typeof e=="string")if(e in y){const o=y[e];r=new i({resourceInfo:{data:{layers:[o]}}})}else h.getLogger("esri.support.groundUtils").warn(`Unable to find ground definition for: ${e}. Try "world-elevation"`);else r=b(i,e);return r}let a=class extends w($(m.EventedMixin(c))){constructor(e){super(e),this.allLayers=new d({getCollections:()=>{var r,o,l;return[(r=this.basemap)==null?void 0:r.baseLayers,(o=this.ground)==null?void 0:o.layers,this.layers,(l=this.basemap)==null?void 0:l.referenceLayers]},getChildrenFunction:r=>"layers"in r?r.layers:null}),this.allTables=S(this),this.basemap=null,this.editableLayers=new d({getCollections:()=>[this.allLayers],itemFilterFunction:f}),this.ground=new i,this._basemapCache=v()}destroy(){L(this._basemapCache),this._basemapCache=null,this.allLayers.destroy(),this.allTables.destroy(),this.editableLayers.destroy(),this.basemap=n(this.basemap),n(this.ground),this._set("ground",null)}castBasemap(e){return T(e,this._basemapCache)}castGround(e){return C(e)??this._get("ground")}findLayerById(e){return this.allLayers.find(r=>r.id===e)}findTableById(e){return this.allTables.find(r=>r.id===e)}};t([s({readOnly:!0,dependsOn:[]})],a.prototype,"allLayers",void 0),t([s({readOnly:!0})],a.prototype,"allTables",void 0),t([s({type:u,json:{read:{source:"baseMap"},write:{target:"baseMap"}}})],a.prototype,"basemap",void 0),t([p("basemap")],a.prototype,"castBasemap",null),t([s({readOnly:!0})],a.prototype,"editableLayers",void 0),t([s({type:i,nonNullable:!0})],a.prototype,"ground",void 0),t([p("ground")],a.prototype,"castGround",null),t([s()],a.prototype,"undoRedo",void 0),a=t([g("esri.Map")],a);const j=a;export{j as L};
