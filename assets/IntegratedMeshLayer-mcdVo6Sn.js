import{r as i,m as s,a as u,V as w,s as m,B as h}from"./Accessor-BHnuXKD2.js";import{S as T}from"./MultiOriginJSONSupport-nGLpCFeg.js";import{V as _,v as O,C as $}from"./reactiveUtils-BR0C1Kq4.js";import{o as I}from"./writer-B2bQV2uU.js";import{v as x}from"./persistable-t26j-4kt.js";import{f as L}from"./Layer-C9uQlTBT.js";import{i as M}from"./APIKeyMixin-Btq102Nx.js";import{l as N}from"./ArcGISService-BHkTabnw.js";import{e as V}from"./CustomParametersMixin-uo3x70vd.js";import{b}from"./OperationalLayer-Bts9W3HA.js";import{j as A}from"./PortalLayer-jhi5QQgB.js";import{t as P}from"./ScaleRangeLayer-C59zG_yk.js";import{R as J,V as c}from"./SceneService-BGGirg43.js";import{c as j}from"./commonProperties-C0eC30J9.js";import{p as D,a as E,y as K,m as U}from"./I3SLayerDefinitions-qdtC2E3S.js";import{I as R,P as C,p as z}from"./cast-BA_-jlhc.js";import{S as B}from"./JSONSupport-CGdeqxpk.js";import{y as l}from"./SceneModification-CbklxkJ9.js";import{$ as f,Z as F,w as H}from"./elevationInfoUtils-RSZ4Logn.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./uuid-Cl5lrJ4c.js";import"./resourceExtension-DBdDmYtS.js";import"./index-tefRSezt.js";import"./Identifiable-BrT7zvUW.js";import"./Portal-CTRRujjZ.js";import"./Promise-CmQqe-ke.js";import"./Extent-CBBGeHb-.js";import"./Point-XGrwlf63.js";import"./TimeExtent-J5qnUFx_.js";import"./timeUtils-D2X862bk.js";import"./layerContainerType-C5CzMsLd.js";import"./layerUtils-dJgsXxkC.js";import"./PortalItem-CXk7DqVv.js";import"./portalItemUtils-rm7sAgcm.js";import"./projection-B2I9Bzj_.js";import"./vec3f64-BLpZdpfb.js";import"./Polyline-BmuD2-ZN.js";import"./mathUtils-DV9iOXpW.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./jsonUtils-TjZmCq6l.js";import"./colorUtils-Rxh2V3ai.js";import"./utils-DYurMneM.js";import"./screenUtils-_ZIvrt5o.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./common-DQOJ18NT.js";import"./originUtils-D69mHv66.js";import"./HeightModelInfo-B3GZyQFz.js";import"./I3SIndexInfo-DP6w_-xh.js";import"./jsonContext-CdRtpU_S.js";import"./resourceUtils-sguC8912.js";import"./resourceUtils-t6ydfQSV.js";import"./saveUtils-DLMLWtvP.js";import"./ElevationInfo-Di4W6v5U.js";import"./opacityUtils-CSd4XoR2.js";import"./unitConversionUtils-C4AR5obr.js";import"./lengthUtils-DjJgJFRg.js";import"./AttributeTableTemplate-B7rH2qLr.js";import"./enumeration-Cr5WIZs4.js";var a;let n=a=class extends B.JSONSupportMixin(_.ofType(l)){constructor(t){super(t),this.url=null}clone(){return new a({url:this.url,items:this.items.map(t=>t.clone())})}toJSON(t){return this.toArray().map(e=>e.toJSON(t)).filter(e=>!!e.geometry)}static fromJSON(t,e){const r=new a;for(const p of t)r.add(l.fromJSON(p,e));return r}static async fromUrl(t,e,r){const p={url:R(t),origin:"service"},g=await C(t,{responseType:"json",signal:r==null?void 0:r.signal}),S=e.toJSON(),d=[];for(const y of g.data)d.push(l.fromJSON({...y,geometry:{...y.geometry,spatialReference:S}},p));return new a({url:t,items:d})}};i([s({type:String})],n.prototype,"url",void 0),n=a=i([u("esri.layers.support.SceneModifications")],n);const v=n;let o=class extends J(N(b(A(P(T(V(M(L)))))))){constructor(...t){super(...t),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(O(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,$))}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}readModifications(t,e,r){this._modificationsSource={url:z(t,r),context:r}}set elevationInfo(t){t!=null&&t.mode!=="absolute-height"||this._set("elevationInfo",t),this._validateElevationInfo(t)}async load(t){return this.addResolvingPromise(this._doLoad(t)),this}async _doLoad(t){const e=t==null?void 0:t.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},t)}catch(r){w(r)}if(await this._fetchService(e),this._modificationsSource!=null){const r=await v.fromUrl(this._modificationsSource.url,this.spatialReference,t);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,e)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(t,e){return this._debouncedSaveOperations(c.SAVE_AS,{...e,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},t)}async save(){const t={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(c.SAVE,t)}validateLayer(t){if(t.layerType&&t.layerType!=="IntegratedMesh")throw new m("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:t.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new m("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new m("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(t){const e="Integrated mesh layers";f(h.getLogger(this),F(e,"absolute-height",t)),f(h.getLogger(this),H(e,t))}};i([s({type:String,readOnly:!0})],o.prototype,"geometryType",void 0),i([s({type:["show","hide"]})],o.prototype,"listMode",void 0),i([s({type:["IntegratedMeshLayer"]})],o.prototype,"operationalLayerType",void 0),i([s({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),i([s({type:D,readOnly:!0})],o.prototype,"nodePages",void 0),i([s({type:[E],readOnly:!0})],o.prototype,"materialDefinitions",void 0),i([s({type:[K],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),i([s({type:[U],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),i([s({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),i([s({type:v}),x({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],o.prototype,"modifications",void 0),i([I(["web-scene","portal-item"],"modifications")],o.prototype,"readModifications",null),i([s(j)],o.prototype,"elevationInfo",null),i([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),o=i([u("esri.layers.IntegratedMeshLayer")],o);const ee=o;export{ee as default};
