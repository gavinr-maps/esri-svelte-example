import{G,cs as k,ah as V,eQ as H,eR as C,eS as X,s as $,F as A,j as Y,b0 as z,aY as Q,d as _,y as T,f as W,eT as Z,k as B,z as j,U as m,q as M,aw as K,aF as ee,b9 as te,be as ae,bU as L,_ as se,eU as re,b2 as ie,av as ne,d2 as oe,ay as ue,aX as le}from"./index-B1qcMJFy.js";import{g as de,a as ce}from"./meshVertexSpaceUtils-BNBosy7D.js";import{v as pe}from"./External-K9FIQKmG.js";import{isFeatureIdentifierArrayWithGlobalId as he,isFeatureIdentifierArrayWithObjectId as ye}from"./editingSupport-aW3a__SR.js";import{o as me}from"./clientSideDefaults-DGdAzQWt.js";import{x as fe}from"./QueryTask-DZzs0mQ1.js";import{Q as x}from"./featureLayerUtils-CSLwh38G.js";import{F as ge}from"./infoFor3D-DsOdlPuA.js";import{s as we}from"./executeQueryJSON-ClQYIFFr.js";import{i as be}from"./editsZScale-Dr1yqipn.js";import{i as Re,c as qe,a as Se,t as Ie}from"./EditBusLayer-BstQh227.js";import"./MeshLocalVertexSpace-Bs8ui3ZL.js";import"./vec3-DSi-VB0T.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./defaultsJSON-CHAaurhX.js";import"./executeForIds-CHx9enu6.js";import"./query-B_4vDsHl.js";import"./pbfQueryUtils-BIUzzBOM.js";import"./pbf-DdHtTFeL.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-CxjL_CF1.js";import"./executeQueryPBF-B9QB6nku.js";import"./featureConversionUtils-D_5zMG16.js";import"./FeatureSet-B0ca9TdS.js";import"./jsonUtils-T1v-OExy.js";import"./UniqueValueRenderer-0DBTeu6a.js";import"./ColorStop-CWeLc-IV.js";import"./diffUtils-ArzxlFJn.js";import"./colorRamps-DdzVD7Op.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-BGai42lJ.js";import"./lengthUtils-DbqEO4K7.js";import"./jsonUtils-D4lwJas0.js";import"./styleUtils-CCLgKLZt.js";import"./LRUCache-BtWa1HuP.js";import"./Version-D0C4RPiX.js";import"./FieldsIndex-DA0UbGLz.js";import"./UnknownTimeZone-B5Qf1DoL.js";import"./OverrideHelper-DlLhMkRM.js";import"./colorUtils-46-ov8wK.js";import"./vec42-B-sS29RP.js";import"./vec4f64-CCf6w8sj.js";import"./utils-y0bK7WMB.js";import"./quantizationUtils-D0A0ACzz.js";import"./heatmapUtils-BYQ7d-zD.js";import"./AttachmentQuery-B2yhFws1.js";import"./RelationshipQuery-DLL_bDIJ.js";async function P(t,e,a){const{geometry:s}=e,r={...e.attributes};if(a!=null&&(s==null?void 0:s.type)==="mesh"){const{transformFieldRoles:i}=a,{origin:o,spatialReference:n,transform:u,vertexSpace:l}=s,c=l.type==="local",p=t.spatialReference,f=p.isGeographic,S=G(p,n),b=S||k(p)&&(k(n)||V(n));if(!(c&&f&&b||!c&&!f&&S))return null;const d=H(o,n,p);if(d==null)return null;if(r[i.originX]=d.x,r[i.originY]=d.y,r[i.originZ]=d.z??0,u!=null){const{translation:I,scale:h,rotation:y}=u,R=c?1:C(n)/C(p);r[i.translationX]=I[0]*R,r[i.translationY]=I[2]*R,r[i.translationZ]=-I[1]*R,r[i.scaleX]=h[0],r[i.scaleY]=h[2],r[i.scaleZ]=h[1],r[i.rotationX]=y[0],r[i.rotationY]=y[2],r[i.rotationZ]=-y[1],r[i.rotationDeg]=y[3]}return{attributes:r}}return s==null?{attributes:r}:s.type==="mesh"||s.type==="extent"?null:{geometry:s.toJSON(),attributes:r}}async function Fe(t,e){const a=await Promise.all((e.addAttachments??[]).map(i=>D(t,i))),s=await Promise.all((e.updateAttachments??[]).map(i=>D(t,i))),r=e.deleteAttachments??[];return a.length||s.length||r.length?{adds:a,updates:s,deletes:[...r]}:null}async function D(t,e){var c;const{feature:a,attachment:s}=e,{globalId:r,name:i,contentType:o,data:n,uploadId:u}=s,l={globalId:r};if(a&&("attributes"in a?l.parentGlobalId=(c=a.attributes)==null?void 0:c[t.globalIdField]:a.globalId&&(l.parentGlobalId=a.globalId)),u)l.uploadId=u;else if(n){const p=await X(n);p&&(l.contentType=p.mediaType,l.data=p.data),n instanceof File&&(l.name=n.name)}return i&&(l.name=i),o&&(l.contentType=o),l}function Ae(t,e,a){if(!e||e.length===0)return[];if(a&&he(e))return e.map(r=>r.globalId);if(ye(e))return e.map(r=>r.objectId);const s=a?t.globalIdField:t.objectIdField;return s?e.map(r=>r.getAttribute(s)):[]}function Oe(t){var r,i,o;const e=t==null?void 0:t.assetMaps;if(e){for(const n of e.addResults)n.success||$.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${n.globalId}.`);for(const n of e.updateResults)n.success||$.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${n.globalId}.`)}const a=t==null?void 0:t.attachments,s={addFeatureResults:((r=t==null?void 0:t.addResults)==null?void 0:r.map(q))??[],updateFeatureResults:((i=t==null?void 0:t.updateResults)==null?void 0:i.map(q))??[],deleteFeatureResults:((o=t==null?void 0:t.deleteResults)==null?void 0:o.map(q))??[],addAttachmentResults:a!=null&&a.addResults?a.addResults.map(q):[],updateAttachmentResults:a!=null&&a.updateResults?a.updateResults.map(q):[],deleteAttachmentResults:a!=null&&a.deleteResults?a.deleteResults.map(q):[]};return t!=null&&t.editMoment&&(s.editMoment=t.editMoment),s}function q(t){const e=t.success===!0?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new A("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}function v(t,e){return new Y({attributes:t.attributes,geometry:z({...t.geometry,spatialReference:e})})}function Ee(t,e){var a,s,r;return{adds:((a=t==null?void 0:t.adds)==null?void 0:a.map(i=>v(i,e)))||[],updates:((s=t==null?void 0:t.updates)==null?void 0:s.map(i=>({original:v(i[0],e),current:v(i[1],e)})))||[],deletes:((r=t==null?void 0:t.deletes)==null?void 0:r.map(i=>v(i,e)))||[],spatialReference:e}}function _e(t){const e=t.details.raw,a=+e.code,s=+e.extendedCode;return a===500&&(s===-2147217144||s===-2147467261)}const xe=new Q({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),ve=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),$e=new Q({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let O=class extends Z{constructor(){super(...arguments),this.type="feature-layer",this.refresh=B(async()=>{var a,s;await this.load();const t=(a=this.sourceJSON.editingInfo)==null?void 0:a.lastEditDate;if(t==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const e=t!==((s=this.sourceJSON.editingInfo)==null?void 0:s.lastEditDate);return{dataChanged:e,updates:e?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(t){const e=this.layer.sourceJSON,a=this._fetchService(e,{...t}).then(()=>this.layer.setUserPrivileges(this.sourceJSON.serviceItemId,t)).then(()=>this._ensureLatestMetadata(t));return this.addResolvingPromise(a),Promise.resolve(this)}get queryTask(){var l;const{capabilities:t,parsedUrl:e,dynamicDataSource:a,infoFor3D:s,gdbVersion:r,spatialReference:i,fieldsIndex:o}=this.layer,n=j("featurelayer-pbf")&&(t==null?void 0:t.query.supportsFormatPBF)&&s==null,u=((l=t==null?void 0:t.operations)==null?void 0:l.supportsQueryAttachments)??!1;return new fe({url:e.path,pbfSupported:n,fieldsIndex:o,infoFor3D:s,dynamicDataSource:a,gdbVersion:r,sourceSpatialReference:i,queryAttachmentsSupported:u})}async addAttachment(t,e){await this.load();const{layer:a}=this;await x(a,"editing");const s=t.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/addAttachment",i=this._getLayerRequestOptions(),o=this._getFormDataForAttachment(e,i.query);try{const n=await m(r,{body:o});return q(n.data.addAttachmentResult)}catch(n){throw this._createAttachmentErrorResult(s,n)}}async updateAttachment(t,e,a){await this.load();const{layer:s}=this;await x(s,"editing");const r=t.attributes[s.objectIdField],i=s.parsedUrl.path+"/"+r+"/updateAttachment",o=this._getLayerRequestOptions({query:{attachmentId:e}}),n=this._getFormDataForAttachment(a,o.query);try{const u=await m(i,{body:n});return q(u.data.updateAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(r,u)}}async applyEdits(t,e){var g,F,E,N,J,U;await this.load();const{layer:a}=this;await x(a,"editing");const s=a.infoFor3D,r=s!=null,i=r||((e==null?void 0:e.globalIdUsed)??!1),o=r?await this._uploadMeshesAndGetAssetMapEditsJSON(t):null,n=((g=t.addFeatures)==null?void 0:g.map(w=>P(this.layer,w,s)))??[],u=(await Promise.all(n)).filter(M),l=((F=t.updateFeatures)==null?void 0:F.map(w=>P(this.layer,w,s)))??[],c=(await Promise.all(l)).filter(M),p=Ae(this.layer,t.deleteFeatures,i);be(u,c,a.spatialReference);const f=await Fe(this.layer,t),S=a.capabilities.editing.supportsAsyncApplyEdits&&r,b=(e==null?void 0:e.gdbVersion)||a.gdbVersion,d={gdbVersion:b,rollbackOnFailure:e==null?void 0:e.rollbackOnFailureEnabled,useGlobalIds:i,returnEditMoment:e==null?void 0:e.returnEditMoment,usePreviousEditMoment:e==null?void 0:e.usePreviousEditMoment,async:S};await Re(this.layer.url,b,!0);const I=qe(this.layer.url,b||null);if(await Se(a.url,b,a.historicMoment))throw new A("feature-layer-source:historic-version","Editing a historic version is not allowed");e!=null&&e.returnServiceEditsOption?(d.edits=JSON.stringify([{id:a.layerId,adds:u,updates:c,deletes:p,attachments:f,assetMaps:o}]),d.returnServiceEditsOption=xe.toJSON(e==null?void 0:e.returnServiceEditsOption),d.returnServiceEditsInSourceSR=e==null?void 0:e.returnServiceEditsInSourceSR):(d.adds=u.length?JSON.stringify(u):null,d.updates=c.length?JSON.stringify(c):null,d.deletes=p.length?i?JSON.stringify(p):p.join(","):null,d.attachments=f&&JSON.stringify(f),d.assetMaps=o!=null?JSON.stringify(o):void 0);const h=this._getLayerRequestOptions({method:"post",query:d});I&&(h.authMode="immediate",h.query.returnEditMoment=!0,h.query.sessionId=Ie);const y=e!=null&&e.returnServiceEditsOption?a.url:a.parsedUrl.path;let R;try{R=S?await this._asyncApplyEdits(y+"/applyEdits",h):await m(y+"/applyEdits",h)}catch(w){if(!_e(w))throw w;h.authMode="immediate",R=S?await this._asyncApplyEdits(y+"/applyEdits",h):await m(y+"/applyEdits",h)}if(!((E=a.capabilities.operations)!=null&&E.supportsEditing)&&((J=(N=a.effectiveCapabilities)==null?void 0:N.operations)!=null&&J.supportsEditing)){const w=(U=K)==null?void 0:U.findCredential(a.url);await(w==null?void 0:w.refreshToken())}return this._createEditsResult(R)}async deleteAttachments(t,e){await this.load();const{layer:a}=this;await x(a,"editing");const s=t.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await m(r,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(q)}catch(i){throw this._createAttachmentErrorResult(s,i)}}fetchRecomputedExtents(t={}){const e=t.signal;return this.load({signal:e}).then(async()=>{const a=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:s,url:r}=this.layer,{data:i}=await m(`${r}/${s}`,a),{id:o,extent:n,fullExtent:u,timeExtent:l}=i,c=n||u;return{id:o,fullExtent:c&&ee.fromJSON(c),timeExtent:l&&te.fromJSON({start:l[0],end:l[1]})}})}async queryAttachments(t,e={}){await this.load();const a=this._getLayerRequestOptions(e);return this.queryTask.executeAttachmentQuery(t,a)}async queryFeatures(t,e){var s;await this.load();const a=await this.queryTask.execute(t,{...e,query:this._createRequestQueryOptions(e)});return(s=t.outStatistics)!=null&&s.length&&a.features.length&&a.features.forEach(r=>{var o;const i=r.attributes;(o=t.outStatistics)==null||o.forEach(({outStatisticFieldName:n})=>{if(n){const u=n.toLowerCase();u&&u in i&&n!==u&&(i[n]=i[u],delete i[u])}})}),a}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:this._createRequestQueryOptions(e)})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopFeatures(t,e){return await this.load(),this.queryTask.executeTopFeaturesQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopObjectIds(t,e){return await this.load(),this.queryTask.executeForTopIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopExtents(t,e){return await this.load(),this.queryTask.executeForTopExtents(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopCount(t,e){return await this.load(),this.queryTask.executeForTopCount(t,{...e,query:this._createRequestQueryOptions(e)})}async fetchPublishingStatus(){if(!ae(this.layer.url))return"unavailable";const t=L(this.layer.url,"status"),e=await m(t,{query:{f:"json"}});return $e.fromJSON(e.data.status)}async uploadAssets(t,e){const{uploadAssets:a}=await se(()=>import("./uploadAssets-DAF-QXNX.js"),__vite__mapDeps([0,1,2,3,4,5]),import.meta.url);return a(t,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},e)}async _asyncApplyEdits(t,e){const a=(await m(t,e)).data.statusUrl;for(;;){const s=(await m(a,{query:{f:"json"},responseType:"json"})).data;switch(s.status){case"Completed":return m(s.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new A("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new A("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await re(Te)}}_createRequestQueryOptions(t){const e={...this.layer.customParameters,token:this.layer.apiKey,...t==null?void 0:t.query};return this.layer.datesInUnknownTimezone&&(e.timeReferenceUnknownClient=!0),e}async _fetchService(t,e){if(!t){const s={};j("featurelayer-advanced-symbols")&&(s.returnAdvancedSymbols=!0),e!=null&&e.cacheBust&&(s._ts=Date.now());const{data:r}=await m(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:s,signal:e==null?void 0:e.signal}));t=r}this.sourceJSON=await this._patchServiceJSON(t,e==null?void 0:e.signal);const a=t.type;if(!ve.has(a))throw new A("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}async _patchServiceJSON(t,e){var a;if(t.type!=="Table"&&t.geometryType&&!((a=t==null?void 0:t.drawingInfo)!=null&&a.renderer)&&!t.defaultSymbol){const s=me(t.geometryType).renderer;ie("drawingInfo.renderer",s,t)}if(t.geometryType==="esriGeometryMultiPatch"&&t.infoFor3D&&(t.geometryType="mesh"),t.extent==null)try{const{data:s}=await m(this.layer.url,this._getLayerRequestOptions({signal:e}));s.spatialReference&&(t.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:s.spatialReference})}catch(s){ne(s)}return t}async _ensureLatestMetadata(t){if(this.layer.userHasUpdateItemPrivileges&&this.sourceJSON.cacheMaxAge>0)return this._fetchService(null,{...t,cacheBust:!0})}async _uploadMeshesAndGetAssetMapEditsJSON(t){const{addAssetFeatures:e}=t;if(!(e!=null&&e.length))return null;const a=await this._filterRedundantAssetMaps(e);if(!(e!=null&&e.length))return null;const s=new Array,r=new Map;for(const i of a){const{geometry:o}=i,{vertexSpace:n}=o;if(de(n))s.push(o);else{const u=ce(o);r.set(u,o),i.geometry=u,s.push(u)}}await this.uploadAssets(s);for(const[i,o]of r)o.addExternalSources(i.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(a),updates:[],deletes:[]}}_getAssetMapEditsJSON(t){const e=new Array,a=this.layer.globalIdField,s=this.layer.parsedUrl;for(const r of t){const i=r.geometry,{metadata:o}=i,n=o.getExternalSourcesOnService(s),u=r.getAttribute(a);if(n.length===0){$.getLogger(this).error(`Skipping feature ${u}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:l}=n.find(pe)??n[0];for(const c of l)c.parts.length===1?e.push({globalId:oe(),parentGlobalId:u,assetName:c.assetName,assetHash:c.parts[0].partHash,flags:[]}):$.getLogger(this).error(`Skipping asset ${c.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return e}_createEditsResult(t){const e=t.data,{layerId:a}=this.layer,s=[];let r=null;if(Array.isArray(e))for(const o of e)s.push({id:o.id,editedFeatures:o.editedFeatures}),o.id===a&&(r={addResults:o.addResults??[],updateResults:o.updateResults??[],deleteResults:o.deleteResults??[],attachments:o.attachments,editMoment:o.editMoment});else r=e;const i=Oe(r);if(s.length>0){i.editedFeatureResults=[];for(const o of s){const{editedFeatures:n}=o,u=n!=null&&n.spatialReference?new ue(n.spatialReference):null;i.editedFeatureResults.push({layerId:o.id,editedFeatures:Ee(n,u)})}}return i}_createAttachmentErrorResult(t,e){var r;const a=((r=e.details.messages)==null?void 0:r[0])||e.message,s=e.details.httpStatus||e.details.messageCode;return{objectId:t,globalId:null,error:new A("feature-layer-source:attachment-failure",a,{code:s})}}_getFormDataForAttachment(t,e){const a=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(a)for(const s in e){const r=e[s];r!=null&&(a.set?a.set(s,r):a.append(s,r))}return a}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:a,dynamicDataSource:s}=this.layer;return{...t,query:{gdbVersion:a,layer:s?JSON.stringify({source:s}):void 0,...e.query,f:"json",...this._createRequestQueryOptions(t)},responseType:"json"}}async _filterRedundantAssetMaps(t){const{layer:e}=this,{globalIdField:a,infoFor3D:s,parsedUrl:r}=e;if(s==null||a==null)return t;const i=ge(s);if(i==null)return t;const o=L(r.path,`../${i.id}`),n=new Array,u=new Array;for(const d of t)d.geometry.metadata.getExternalSourcesOnService(r).length>0?u.push(d):n.push(d);const l=u.map(d=>d.getAttribute(a)).filter(M);if(l.length===0)return t;const{assetMapFieldRoles:{parentGlobalId:c,assetHash:p}}=s,f=new le;f.where=`${c} IN (${l.map(d=>`'${d}'`)})`,f.outFields=[p,c],f.returnGeometry=!1;const S=await we(o,f),{features:b}=S;return b.length===0?t:[...n,...u.filter(d=>{const I=d.getAttribute(a);if(!I)return!0;const{metadata:h}=d.geometry,y=b.filter(g=>g.getAttribute(c)===I);if(y.length===0)return!0;const R=y.map(g=>g.getAttribute(p));return h.getExternalSourcesOnService(r).flatMap(({source:g})=>g.flatMap(F=>F.parts.map(E=>E.partHash))).some(g=>R.every(F=>g!==F))})]}};_([T()],O.prototype,"type",void 0),_([T({constructOnly:!0})],O.prototype,"layer",void 0),_([T({readOnly:!0})],O.prototype,"queryTask",null),O=_([W("esri.layers.graphics.sources.FeatureLayerSource")],O);const Te=1e3,Et=O;export{Et as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["./uploadAssets-DAF-QXNX.js","./index-B1qcMJFy.js","./index-DAhQBRAS.css","./External-K9FIQKmG.js","./infoFor3D-DsOdlPuA.js","./uploadAssetErrors-DNb8-q4M.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
