import{a as t,b as s,c as f,ao as T,bV as R,k as z,aF as w,aH as m,bb as M,Q as u,fv as y,gK as O}from"./index-e8c6bcc0.js";import{a as g,c as k}from"./clusterUtils-a6986c79.js";import"./UniqueValueRenderer-6847f026.js";import{a as N,o as v,p as J}from"./jsonUtils-f94670aa.js";import{m as V,p as E}from"./commonProperties-a06e23a3.js";import{v as _}from"./featureLayerUtils-07676dd2.js";import{C as A}from"./LabelClass-669bcee9.js";let c=class extends T{constructor(){super(...arguments),this.type=null}};t([s({type:["selection","cluster","binning"],readOnly:!0,json:{read:!1,write:!0}})],c.prototype,"type",void 0),c=t([f("esri.layers.support.FeatureReduction")],c);var I;const C="esri.layers.support.FeatureReductionBinning";let p=I=class extends c{constructor(i){super(i),this.type="binning",this.binType="geohash",this.fixedBinLevel=3,this.labelingInfo=null,this.labelsVisible=!0,this.maxScale=0,this.popupEnabled=!0,this.popupTemplate=null,this.fields=[],this.renderer=null}writeFields(i,o,r){const e=i.filter(n=>n.statisticType!=="avg_angle").map(n=>n.toJSON());M(r,e,o)}readRenderer(i,o,r){var n;const e=(n=o.drawingInfo)==null?void 0:n.renderer;return e?v(e,o,r)??void 0:_(o,r)}clone(){return new I({fields:u(this.fields),fixedBinLevel:this.fixedBinLevel,labelingInfo:u(this.labelingInfo),labelsVisible:this.labelsVisible,maxScale:this.maxScale,popupEnabled:this.popupEnabled,popupTemplate:u(this.popupTemplate),renderer:u(this.renderer)})}};t([R({binning:"binning"})],p.prototype,"type",void 0),t([R({geohash:"geohash"})],p.prototype,"binType",void 0),t([s({type:Number,range:{min:1,max:9},json:{write:!0}})],p.prototype,"fixedBinLevel",void 0),t([s({type:[A],json:{read:{source:"drawingInfo.labelingInfo"},write:{target:"drawingInfo.labelingInfo"}}})],p.prototype,"labelingInfo",void 0),t([s(V)],p.prototype,"labelsVisible",void 0),t([s({type:Number,json:{default:0,name:"visibilityInfo.maxScale"}})],p.prototype,"maxScale",void 0),t([s(E)],p.prototype,"popupEnabled",void 0),t([s({type:z,json:{name:"popupInfo",write:!0}})],p.prototype,"popupTemplate",void 0),t([s({type:[g],json:{write:!0}})],p.prototype,"fields",void 0),t([w("fields")],p.prototype,"writeFields",null),t([s({types:N,json:{write:{target:"drawingInfo.renderer"}}})],p.prototype,"renderer",void 0),t([m("renderer",["drawingInfo.renderer"])],p.prototype,"readRenderer",null),p=I=t([f(C)],p);const G=p;var x;const D="esri.layers.support.FeatureReductionCluster";function j(i){var o;return i.type==="simple"&&!((o=i.visualVariables)!=null&&o.length)}let l=x=class extends T{constructor(i){super(i),this.type="cluster",this.clusterRadius=y("80px"),this.clusterMinSize=y("12px"),this.clusterMaxSize=y("50px"),this.maxScale=0,this.popupEnabled=!0,this.popupTemplate=null,this.renderer=null,this.symbol=null,this.labelingInfo=null,this.labelsVisible=!0,this.fields=null}readRenderer(i,o,r){var n,a;const e=(n=o.drawingInfo)==null?void 0:n.renderer;return(a=e==null?void 0:e.authoringInfo)!=null&&a.isAutoGenerated?null:e?j(e)?null:v(e,o,r)??void 0:_(o,r)}readSymbol(i,o,r){var n,a;const e=(n=o.drawingInfo)==null?void 0:n.renderer;if((a=e==null?void 0:e.authoringInfo)!=null&&a.isAutoGenerated)return null;if(e&&j(e)){const d=v(e,o,r);return d==null?void 0:d.symbol}return null}writeSymbol(i,o,r,e){var a,d;const n=(d=(a=this.renderer)==null?void 0:a.authoringInfo)==null?void 0:d.isAutoGenerated;if(!this.renderer||n){const b=new J({symbol:i});o.drawingInfo={renderer:b.write({},e)}}}writeFields(i,o,r){const e=i.filter(n=>n.statisticType!=="avg_angle").map(n=>n.toJSON());M(r,e,o)}readFields(i,o,r){return i.filter(e=>!e.isAutoGenerated).map(e=>g.fromJSON(e))}clone(){return new x({clusterRadius:this.clusterRadius,clusterMinSize:this.clusterMinSize,clusterMaxSize:this.clusterMaxSize,labelingInfo:u(this.labelingInfo),labelsVisible:this.labelsVisible,fields:u(this.fields),maxScale:this.maxScale,renderer:u(this.renderer),symbol:u(this.symbol),popupEnabled:this.popupEnabled,popupTemplate:u(this.popupTemplate)})}};t([s({type:["cluster"],readOnly:!0,json:{write:!0}})],l.prototype,"type",void 0),t([s({type:Number,cast:i=>i==="auto"?i:y(i),json:{write:!0}})],l.prototype,"clusterRadius",void 0),t([s({type:Number,cast:y,json:{write:!0}})],l.prototype,"clusterMinSize",void 0),t([s({type:Number,cast:y,json:{write:!0}})],l.prototype,"clusterMaxSize",void 0),t([s({type:Number,json:{default:0,name:"visibilityInfo.maxScale"}})],l.prototype,"maxScale",void 0),t([s(E)],l.prototype,"popupEnabled",void 0),t([s({type:z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],l.prototype,"popupTemplate",void 0),t([s({types:N,json:{write:{target:"drawingInfo.renderer"}}})],l.prototype,"renderer",void 0),t([m("renderer",["drawingInfo.renderer"])],l.prototype,"readRenderer",null),t([s({types:O})],l.prototype,"symbol",void 0),t([m("symbol",["drawingInfo.renderer"])],l.prototype,"readSymbol",null),t([w("symbol")],l.prototype,"writeSymbol",null),t([s({type:[A],json:{read:{source:"drawingInfo.labelingInfo"},write:{target:"drawingInfo.labelingInfo"}}})],l.prototype,"labelingInfo",void 0),t([s(V)],l.prototype,"labelsVisible",void 0),t([s({type:[g],json:{write:!0}})],l.prototype,"fields",void 0),t([w("fields")],l.prototype,"writeFields",null),t([m("fields")],l.prototype,"readFields",null),l=x=t([f(D)],l);const B=l;var S;let h=S=class extends c{constructor(i){super(i),this.type="selection"}clone(){return new S}};t([s({type:["selection"]})],h.prototype,"type",void 0),h=S=t([f("esri.layers.support.FeatureReductionSelection")],h);const $=h,F={key:"type",base:c,typeMap:{cluster:B,binning:G}},H={types:{key:"type",base:c,typeMap:{selection:$,cluster:B,binning:G}},json:{name:"layerDefinition.featureReduction",write:{allowNull:!0},origins:{"web-map":{types:F},"portal-item":{types:F},"web-scene":{types:{key:"type",base:c,typeMap:{selection:$}}}}}},Z=i=>{let o=class extends i{constructor(...r){super(...r),this.own(this.watch("renderer",()=>{if(this.featureReduction){const e=this._normalizeFeatureReduction(this.featureReduction);this._set("featureReduction",e)}},!0))}set featureReduction(r){const e=this._normalizeFeatureReduction(r);this._set("featureReduction",e)}set renderer(r){}_normalizeFeatureReduction(r){var b;if((r==null?void 0:r.type)!=="cluster")return r;const e=r.clone(),n=[new g({name:"cluster_count",isAutoGenerated:!0,statisticType:"count"})],a=(e.fields??[]).filter(L=>!L.isAutoGenerated);if(r.renderer&&!((b=r.renderer.authoringInfo)!=null&&b.isAutoGenerated))return e.fields=[...n,...a],e;if(r.symbol)return e.fields=[...n,...a],e.renderer=null,e;if(!this.renderer)return r;const d=k(n,this.renderer,r,null,!1);return e.fields=[...n,...a],e.renderer=d,e}};return t([s(H)],o.prototype,"featureReduction",null),o=t([f("esri.layers.mixins.FeatureReductionLayer")],o),o};export{Z as n,$ as p,c as t};
