import{e as g,E as l,ac as w,B as y,r as n,m as f,a as I}from"./Accessor-BmwT4B0c.js";import{c as T}from"./Point-Cz2JYYmX.js";import{c as V}from"./GraphicsCollection-BJ5Nr2H8.js";import"./colorUtils-DaPfwnk3.js";import"./defaultCIMValues-Bb-CUowV.js";import"./enums-BTM-fOHQ.js";import"./floatRGBA-Cb__GiDF.js";import"./Extent-g5W9hy0j.js";import"./Polyline-s-JzsQqo.js";import"./definitions-CP59Y04S.js";import"./UpdateTracking2D-DnXhWMyK.js";import"./mathUtils-Cfq9PL9W.js";import"./TextSymbol-BLIQ6RKX.js";import"./GeometryUtils-F7QfOKlc.js";import"./CIMSymbolHelper-BDfNg_6w.js";import"./vec2f32-BbH2jxlN.js";import"./defaults-FkBa0ybj.js";import"./OverrideHelper-BItCoKFp.js";import"./EffectView-vElW3ESK.js";import"./Evented-Dw4_VOGn.js";import"./DisplayObject-Dejv4A66.js";import{u as H}from"./View2D-CUfvXSSH.js";import"./DefaultVertexAttributeLayouts-wSIZdMhB.js";import"./enums-D9v74xTE.js";import"./WGLContainer-CAGx_8nH.js";import"./Texture-BVJ22uHh.js";import"./dataViewUtils-htlyuhrl.js";import"./StyleDefinition-C2Flw6Qv.js";import"./enums-BRzLM11V.js";import"./GridShader-CnyEHbwo.js";import"./cast-CsZslgGN.js";import"./pbf-BsmI3A9L.js";import"./TechniqueType-uMFRS8dR.js";import"./FramebufferObject-B01p0UGV.js";import"./FeatureCommandQueue-D2VPggrt.js";import"./Color-VJEMvW-n.js";import"./PieChartMeshWriter-CydCmunJ.js";import"./aaBoundingBox-Dw3yBk2f.js";import"./opacityUtils-Dim20wpZ.js";import"./renderState-Ci93M1-P.js";import"./glsl-BH37Aalp.js";import"./testSVGPremultipliedAlpha-BGpZOwI7.js";import{A as v}from"./GraphicsView2D-YaB3LUCn.js";import"./reactiveUtils-XM7cS2OP.js";import"./earcut-D9gy186-.js";import"./vec3f32-nZdmKIgz.js";import"./normalizeUtilsCommon-lGDszWRI.js";import"./UpdatingHandles-CzJ4c3KT.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import{r as C,o as a,n as d}from"./imageUtils-Dzs_1RzZ.js";import{S as q}from"./LayerView2D-mneyXHGR.js";import{h as U}from"./HighlightGraphicContainer-wB5ctusc.js";import{h as S,p as b,r as Q}from"./TileStrategy-CtmYSAoK.js";import{e as _}from"./TileKey-DBTeo_j0.js";import{y as $}from"./LayerView-DUZfYZew.js";import{i as G}from"./RefreshableLayerView-CmQe69iO.js";import{P,S as L}from"./MapServiceLayerViewHelper-CxIA-JZr.js";import{r as k}from"./drapedUtils--IsYcWNz.js";import{c as E}from"./HighlightDefaults-CumzVg9-.js";import{g as F}from"./Scheduler-i_u8qdlN.js";import"./writer-DKgfqj4X.js";import"./JSONSupport-DcrLLGjL.js";import"./index-4eY77cms.js";import"./Graphic-Dt0LgVGU.js";import"./Clonable-Z-AWS-16.js";import"./enumeration-DpvDkLNI.js";import"./Promise-DfET-uns.js";import"./ActionToggle-D7439N1A.js";import"./Identifiable-BHVfzH03.js";import"./jsonUtils-CwFG8yN4.js";import"./typeUtils-B6WBEKDM.js";import"./collectionUtils-CTT-51g7.js";import"./Portal-CmmHxpLg.js";import"./screenUtils-_ZIvrt5o.js";import"./vec3f64-BLpZdpfb.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./ReactiveMap-BHFEHYMj.js";import"./SimpleObservable-CvOkykwM.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CGi-tOxo.js";import"./OptimizedGeometry-BJqUA4Pi.js";import"./memoryEstimations-Bcyf-mHz.js";import"./utils-UPZJIDfz.js";import"./rasterizingUtils-C1EbvluX.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./vec2-ChnYg_BJ.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CnpCxTZE.js";import"./defaultsJSON-GKolV7NZ.js";import"./callExpressionWithFeature-Dty09cLj.js";import"./quantizationUtils-DgFbqZi7.js";import"./colorUtils-Rxh2V3ai.js";import"./jsonUtils-DZz5FrgB.js";import"./utils-DYurMneM.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./Viewpoint-DvyUmqUt.js";import"./Camera-CdyTfTAk.js";import"./Cyclical-Dlbl-cQK.js";import"./CollectionFlattener-U8hHQmGf.js";import"./workers-Cds_sd9m.js";import"./Queue-BQesTh_6.js";import"./intl-Duiy0OzY.js";import"./projection-CyCZAIaD.js";import"./TileInfo-DxwC9WcY.js";import"./TileKey-DZd6gJy7.js";import"./DefaultUI-BwWVKFUS.js";import"./jsxFactory-Cnml7uXM.js";import"./uuid-Cl5lrJ4c.js";import"./InputManager-DZ3jJnlx.js";import"./signal-CySMLEX9.js";import"./Basemap-BZmrlnvW.js";import"./loadAll-D1eTJ7uv.js";import"./PortalItem-CTx1kJsR.js";import"./basemapDefinitions-D-Q7PKmu.js";import"./writeUtils-CcunaxF8.js";import"./layerUtils-B__v9OBu.js";import"./groundInstanceUtils-Ben03ZCf.js";import"./editableLayers-CWgCazH-.js";import"./catalogUtils-CGCu8hgu.js";import"./basemapEnsureType-CmRtohu0.js";import"./basemapUtils-oMnqy94d.js";import"./TablesMixin-Bqfi1Ha_.js";import"./Layer-DH4_Pn8a.js";import"./TimeExtent-BO6BsF_x.js";import"./timeUtils-C1c_L2Fd.js";import"./HeightModelInfo-C05IFsWs.js";import"./timeZoneUtils-DxzjpEBb.js";import"./Query-B_2mhyL4.js";import"./Field-BDG0QV_T.js";import"./fieldType-CBeoJWlv.js";import"./FullTextSearch-CBnxSwz4.js";import"./selectionUtils-DYi6daQO.js";import"./ViewEvents-c9mvQ_r3.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BWEEmpSb.js";import"./a11yUtils-ClKbIIe-.js";import"./heightModelInfoUtils-D_x68P3s.js";import"./ViewingMode-Dodu7ZZk.js";import"./vec32-Dvg_eL9J.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-DsXKmbqJ.js";import"./capabilities-DwlKKScG.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-vQlnDsEX.js";import"./accessibleHandler-BaA3O97p.js";import"./CompassViewModel-DBhnIkQP.js";import"./GoTo-zPv0y7kC.js";import"./ZoomViewModel-Bua4WqEj.js";import"./vec2f64-Dy6m9Nrb.js";import"./viewpointUtils-CtXMVquh.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-BTGdXlpz.js";import"./utils-YowqfOgk.js";import"./utils-B-dlKIhi.js";import"./mat3-CR8GKnhD.js";import"./Tile-DxjvolLp.js";import"./quickselect-QQC62dOK.js";import"./utils-BjSXFjBJ.js";import"./Version-Cd3TlGH0.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./WGLBrushVTLSymbol-CmI_2XQu.js";import"./BufferObject-BJilD_hc.js";import"./config-BOD8--da.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-BpBqJqy1.js";import"./Program-C5Xq9SwE.js";import"./Container-CQ-TKdBu.js";import"./featureConversionUtils-CvnFcmH_.js";import"./OptimizedFeature-P2towpqD.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./GraphShaderModule--vK3Hbk2.js";import"./ShaderBuilder-BKul5qh8.js";import"./BindType-BBwFZqyN.js";import"./CircularArray-CujHzHWW.js";import"./FeatureMetadata-Bu8jYZ4s.js";import"./diffUtils-BanfihCO.js";import"./queryUtils-DBEPdow2.js";import"./json-Wa8cmqdu.js";import"./timeSupport-C7DiFkF_.js";import"./FieldsIndex-FW1AMU67.js";import"./TimeOnly-CveCl9ie.js";import"./labelFormatUtils-F9rkrs4Y.js";import"./labelUtils-DCpQ7n-8.js";import"./ZoomMomentumEstimator-BDiG9U4W.js";import"./heatmapTextureUtils-C_5TPY_E.js";import"./lengthUtils-_77UiyVF.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BzFcKfHF.js";import"./libtess-Dhf_mjs_.js";import"./utils-BGwKYX33.js";import"./basicInterfaces-CZwQPxTp.js";import"./mat3f64-BBpwCtoL.js";import"./normalizeUtilsSync-12EQcOVf.js";import"./dehydratedFeatures-kwLHUA1D.js";import"./BitmapTechnique-CQrEueUW.js";import"./TileContainer-B394BLqZ.js";import"./utils-BQBvadb7.js";import"./ClipRect-0Tl6AMAT.js";import"./layerViewUtils-Bevty3Jm.js";import"./AGraphicContainer-CZ0yY9Ih.js";import"./TechniqueInstance-DTD5bLhu.js";import"./ScheduledQueueProcessor-U8WIIyj8.js";import"./scaleUtils-DPfHG2g0.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-Cj6GQMKz.js";import"./popupUtils-CY6-CisY.js";import"./debugFlags-B1LM_Apo.js";const z=[0,0];let m=class extends G(C(q($))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new S(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new b({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:F.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new Q({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),P(this,this.layer)){const e=this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(r,o)=>k(r,o,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,o)=>{e.graphicUpdateHandler({graphic:r,property:o})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=H(t);if(e.length===0)return g();const r=(i==null?void 0:i.name)??E;return this._addHighlightGraphics(e,r),g(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return T((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(z,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:r=0}=i;try{return await this._fetchImage(t,e)}catch(o){if(l(o))throw o;if(!this.resampling)return a(this._tileInfoView.tileInfo.size);if(r<3){const p=this._tileInfoView.getTileParentId(t.id);if(p){const h=new _(p),s=await this._fetchTileWithoutTilemapCache(h,{...i,resamplingLevel:r+1});return d(this._tileInfoView,s,h,t)}}return a(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:o=0}=i,p=new _(0,0,0,0);let h,s=null;try{if(s=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,p,{signal:r}),!this.resampling&&p.level!==t.level)return await w(i),a(this._tileInfoView.tileInfo.size);h=await this._fetchImage(p,r)}catch(c){if(l(c))throw c;if(this.resampling&&s==="unknown"&&o<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){p.set(u);try{h=await this._fetchTileWithTilemapCache(p,{...i,resamplingLevel:o+1})}catch{}}}}return h?this.resampling?d(this._tileInfoView,h,p,t):h:a(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||y.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([f()],m.prototype,"resampling",null),n([f()],m.prototype,"tilemapCache",null),m=n([I("esri.views.2d.layers.TileLayerView2D")],m);const Fr=m;export{Fr as default};
