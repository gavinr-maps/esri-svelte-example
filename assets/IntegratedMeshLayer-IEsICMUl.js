import{r as i,m as s,a as u,V as w,s as m,B as h}from"./Accessor-BmwT4B0c.js";import{S as T}from"./MultiOriginJSONSupport-DbmrbwMa.js";import{V as _,v as O,C as $}from"./reactiveUtils-XM7cS2OP.js";import{o as I}from"./writer-DKgfqj4X.js";import{v as x}from"./persistable-C1YjaxW7.js";import{f as L}from"./Layer-DH4_Pn8a.js";import{i as M}from"./APIKeyMixin-3z69J1h4.js";import{l as N}from"./ArcGISService-CDyDWGI0.js";import{e as V}from"./CustomParametersMixin-Be7WOSEG.js";import{b}from"./OperationalLayer-B__lrMRq.js";import{j as A}from"./PortalLayer-Cqwv_mmr.js";import{t as P}from"./ScaleRangeLayer-Cnzwr9PT.js";import{R as J,V as c}from"./SceneService-2h8a2pP7.js";import{c as j}from"./commonProperties-B0GHoNP5.js";import{p as D,a as E,y as K,m as U}from"./I3SLayerDefinitions-F93A6ZIl.js";import{I as R,P as C,p as z}from"./cast-CsZslgGN.js";import{S as B}from"./JSONSupport-DcrLLGjL.js";import{y as l}from"./SceneModification-7WMFEBC-.js";import{$ as f,Z as F,w as H}from"./elevationInfoUtils-D26wVF2d.js";import"./Evented-Dw4_VOGn.js";import"./SimpleObservable-CvOkykwM.js";import"./MD5-C9MwAd2G.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./uuid-Cl5lrJ4c.js";import"./resourceExtension-DiQ4lOGT.js";import"./index-4eY77cms.js";import"./Identifiable-BHVfzH03.js";import"./Portal-CmmHxpLg.js";import"./Promise-DfET-uns.js";import"./Extent-g5W9hy0j.js";import"./Point-Cz2JYYmX.js";import"./TimeExtent-BO6BsF_x.js";import"./timeUtils-C1c_L2Fd.js";import"./layerContainerType-C5CzMsLd.js";import"./layerUtils-B__v9OBu.js";import"./PortalItem-CTx1kJsR.js";import"./portalItemUtils-ByOtbGao.js";import"./projection-CyCZAIaD.js";import"./vec3f64-BLpZdpfb.js";import"./Polyline-s-JzsQqo.js";import"./mathUtils-Cfq9PL9W.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import"./jsonUtils-DZz5FrgB.js";import"./colorUtils-Rxh2V3ai.js";import"./utils-DYurMneM.js";import"./screenUtils-_ZIvrt5o.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./common-DQOJ18NT.js";import"./originUtils-D69mHv66.js";import"./HeightModelInfo-C05IFsWs.js";import"./I3SIndexInfo-CtHVwWKN.js";import"./jsonContext-Ctyl6VtL.js";import"./resourceUtils-DLwJDPjK.js";import"./resourceUtils-B0t9BqfX.js";import"./saveUtils-D2cY3Oni.js";import"./ElevationInfo-BPOqhCue.js";import"./opacityUtils-Dim20wpZ.js";import"./unitConversionUtils-rg07EgOm.js";import"./lengthUtils-_77UiyVF.js";import"./AttributeTableTemplate-cR37sM72.js";import"./enumeration-DpvDkLNI.js";var a;let n=a=class extends B.JSONSupportMixin(_.ofType(l)){constructor(t){super(t),this.url=null}clone(){return new a({url:this.url,items:this.items.map(t=>t.clone())})}toJSON(t){return this.toArray().map(e=>e.toJSON(t)).filter(e=>!!e.geometry)}static fromJSON(t,e){const r=new a;for(const p of t)r.add(l.fromJSON(p,e));return r}static async fromUrl(t,e,r){const p={url:R(t),origin:"service"},g=await C(t,{responseType:"json",signal:r==null?void 0:r.signal}),S=e.toJSON(),d=[];for(const y of g.data)d.push(l.fromJSON({...y,geometry:{...y.geometry,spatialReference:S}},p));return new a({url:t,items:d})}};i([s({type:String})],n.prototype,"url",void 0),n=a=i([u("esri.layers.support.SceneModifications")],n);const v=n;let o=class extends J(N(b(A(P(T(V(M(L)))))))){constructor(...t){super(...t),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(O(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,$))}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}readModifications(t,e,r){this._modificationsSource={url:z(t,r),context:r}}set elevationInfo(t){t!=null&&t.mode!=="absolute-height"||this._set("elevationInfo",t),this._validateElevationInfo(t)}async load(t){return this.addResolvingPromise(this._doLoad(t)),this}async _doLoad(t){const e=t==null?void 0:t.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},t)}catch(r){w(r)}if(await this._fetchService(e),this._modificationsSource!=null){const r=await v.fromUrl(this._modificationsSource.url,this.spatialReference,t);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,e)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(t,e){return this._debouncedSaveOperations(c.SAVE_AS,{...e,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},t)}async save(){const t={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(c.SAVE,t)}validateLayer(t){if(t.layerType&&t.layerType!=="IntegratedMesh")throw new m("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:t.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new m("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new m("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(t){const e="Integrated mesh layers";f(h.getLogger(this),F(e,"absolute-height",t)),f(h.getLogger(this),H(e,t))}};i([s({type:String,readOnly:!0})],o.prototype,"geometryType",void 0),i([s({type:["show","hide"]})],o.prototype,"listMode",void 0),i([s({type:["IntegratedMeshLayer"]})],o.prototype,"operationalLayerType",void 0),i([s({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),i([s({type:D,readOnly:!0})],o.prototype,"nodePages",void 0),i([s({type:[E],readOnly:!0})],o.prototype,"materialDefinitions",void 0),i([s({type:[K],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),i([s({type:[U],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),i([s({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),i([s({type:v}),x({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],o.prototype,"modifications",void 0),i([I(["web-scene","portal-item"],"modifications")],o.prototype,"readModifications",null),i([s(j)],o.prototype,"elevationInfo",null),i([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),o=i([u("esri.layers.IntegratedMeshLayer")],o);const ee=o;export{ee as default};
