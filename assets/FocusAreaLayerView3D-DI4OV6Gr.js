import{r as d}from"./tslib.es6-B3Jf3DVX.js";import{q as D}from"./Accessor-BLX9ikPh.js";import{watch as T,syncAndInitial as N}from"./reactiveUtils-C5zUhJQJ.js";import{m as _,a as z}from"./subclass-BZA_h8Db.js";import{e as ae}from"./earcut-Lltz9D9k.js";import{e as x}from"./mat4f64-Dk4dwAN8.js";import{A as ne}from"./vec32-Dvg_eL9J.js";import{_ as pe,n as K}from"./vec3f64-BLpZdpfb.js";import{C as ce}from"./computeTranslationToOriginAndRotation-Q27G6TBL.js";import{t as C}from"./aaBoundingBox-BE7cC1jD.js";import{i as L}from"./Indices-DflDlU4Z.js";import{e as le}from"./vec3-kbEkneOB.js";import{l as ue}from"./ViewingMode-Dodu7ZZk.js";import{l as de}from"./LayerView3D-Dkb0AiwM.js";import{o as he}from"./RibbonLine.glsl-BZu1FDpE.js";import{p as fe,n as _e}from"./Graphics3DExtrudeSymbolLayer-DKsUjopW.js";import{b as ge}from"./graphicUtils-CWEFaVJb.js";import{o as U,i as Ae,b as j,Q as ve,h as Q,j as Y,H as Ee,Y as we}from"./Texture-Fac_8AOC.js";import{_ as J}from"./index-Bh2oEzTI.js";import{B as X,g as Z}from"./renderState-DQLu6AJX.js";import{O as S,_ as k,N as V,I as v,E as G,F as ye}from"./enums-D9v74xTE.js";import{O as be}from"./Material-_xx7OZxD.js";import{o as Pe}from"./OverlayCompositing.glsl-CiE3Tt8y.js";import{r as Ce}from"./MergedRenderer-Dli9s1X5.js";import{E as Te}from"./BufferObject-BVi1lwBq.js";import{y as Ne}from"./LayerView-CGYm21KA.js";import{t as ee,o as O}from"./interfaces-DDtDqZYj.js";import{e as $e}from"./VertexAttribute-Cq4MnHjR.js";import"./BindType-BmZEZMMh.js";import{i as xe}from"./mat4-GpOFENPA.js";import{i as H}from"./Matrix3DrawUniform-CiBFaSz6.js";import"./asyncUtils-CWX51uTe.js";import"./Collection-CEdjem1-.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./common-DQOJ18NT.js";import"./mathUtils-C4_ghTv4.js";import"./projectBuffer-Bs7GwaPY.js";import"./Point-Cg0-ChZE.js";import"./cast-Bjksrh93.js";import"./writer-DNAwXnhG.js";import"./assets-C43MgM-v.js";import"./jsonMap-0cxwUWs2.js";import"./geodesicConstants-DWQLYX7F.js";import"./Extent-Bf3YTe7m.js";import"./Polyline-D9YkgmM_.js";import"./heightModelInfoUtils-C6gW75mB.js";import"./HeightModelInfo-9nOoV6LU.js";import"./arcgisLayerUrl-BX1FE5Hm.js";import"./persistableUrlUtils-fa1mAujs.js";import"./dehydratedFeatureUtils-B--Sgpdi.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./sphere-C77djCO6.js";import"./mat3-BRl2i9Bz.js";import"./mat3f64-BBpwCtoL.js";import"./plane-IENfwZlB.js";import"./quatf64-CCm9z-pX.js";import"./vec2f64-miziP1SN.js";import"./mathUtils-BG-eq9fO.js";import"./intersectorUtils-BK9EUwUf.js";import"./boundedPlane-EV1sS2Ke.js";import"./lineSegment-D7sKPPYf.js";import"./verticalOffsetUtils-BDQLpfho.js";import"./orientedBoundingBox-DOAJUK5g.js";import"./quat-4pa1e6ds.js";import"./spatialReferenceEllipsoidUtils-DBE_OFra.js";import"./ElevationProvider-C95wyCKc.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";import"./hydratedFeatures-DBKLr8hT.js";import"./geometry-D964gYQX.js";import"./Graphic-DsxsIjhH.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./fieldUtils-tmQlKvWo.js";import"./intl-CChhNOV8.js";import"./date-DlqISzcw.js";import"./locale-C9TlLpzi.js";import"./messages-OmQvZhAg.js";import"./enumeration-Ba5njXdz.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./screenUtils-_ZIvrt5o.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./collectionUtils-D_lHIu88.js";import"./Portal-C10FKnaA.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./jsonUtils-CEfjT-BK.js";import"./projectVectorToVector-G2uWGoIb.js";import"./projectPointToVector-GINIbYMz.js";import"./projection-B971H0Re.js";import"./Util-BIfApRF5.js";import"./sdfPrimitives-CUWZbMRe.js";import"./vec3f32-nZdmKIgz.js";import"./doublePrecisionUtils-B0owpBza.js";import"./floatRGBA-CfH_2xsy.js";import"./Octree-C8d4sqjv.js";import"./frustum-CQrOepbv.js";import"./vec2-maR1OrZI.js";import"./InterleavedLayout-e-di2fxs.js";import"./BufferView-_QDXRCew.js";import"./AlphaCutoff-UcccL64p.js";import"./Float4DrawUniform-N58YDhuZ.js";import"./Texture-Begq2x5n.js";import"./ShaderTechniqueConfiguration-CBbn2DCi.js";import"./SnappingCandidate-O5eRSE6e.js";import"./renderingInfoUtils-DAsRBUXK.js";import"./visualVariableUtils-DX1kS9Se.js";import"./compilerUtils-Dw3R0f-Z.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./LineCallout.glsl-C1R4fy2f.js";import"./triangle-PTGDC_xJ.js";import"./vec2f32-BbH2jxlN.js";import"./VertexColor.glsl-_ARMpsAT.js";import"./dehydratedFeatures-BiOblf0d.js";import"./quantizationUtils-uj_P09aO.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./featureConversionUtils-D14h8iad.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-BUKTgPFR.js";import"./DecodeSymbolColor.glsl-BPIX0fAF.js";import"./RealisticTree.glsl-CAmeC2w1.js";import"./DefaultMaterial-DgOvtNL9.js";import"./Scheduler-CJu5awNf.js";import"./signal-D4lghLjV.js";import"./debugFlags-BF6Z0j0F.js";import"./triangulationUtils-DWWEtF_0.js";import"./deduplicate-DIJK2kGw.js";import"./Normals-DzBXR8Bg.js";import"./meshVertexSpaceUtils-CXzOFlTI.js";import"./MeshLocalVertexSpace-LEHwMUnu.js";import"./requestImageUtils-DgMiQwsm.js";import"./axisAngleDegrees-Ci2HA7Jo.js";import"./weather-eV4wTXCK.js";import"./HighlightDefaults-D4ckYWWJ.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./NestedMap-GuqgquCN.js";import"./Intersector-wXoCuQ8W.js";import"./VertexArrayObject-lPxPk5E-.js";import"./glUtil-D0YUa0ow.js";import"./UpdatingHandles-GfwcIh5z.js";import"./layerViewUtils-DhFEu8Rd.js";class R extends ee{}function te(){const t=new U;return t.include(Ae),t.outputs.add("fragColor","vec4",0),t.fragment.uniforms.add(new j("colorTexture",e=>e.color),new j("focusArea",e=>e.focusArea),new ve("focusAreaEffectMode",e=>e.effect??1)).main.add(O`float mask = texture( focusArea, uv, 0.0 ).r;
vec4 color = texture( colorTexture, uv, 0.0 );
vec4 colorDeSaturate = vec4(color.r * 0.25 + color.g * 0.5 + color.b * 0.25);
if (focusAreaEffectMode == 1) {
fragColor = mask > 0.0 ? color : 0.55 * colorDeSaturate + 0.45;
} else {
fragColor = mask > 0.0 ? color : 0.33 * mix(color, colorDeSaturate, 0.);
}`),t}const Se=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaColorPassParameters:R,build:te},Symbol.toStringTag,{value:"Module"}));class B extends Q{constructor(e,i,o){super(e,i,new Y(Se,()=>J(()=>Promise.resolve().then(()=>qe),void 0,import.meta.url)),o)}initializePipeline(){return X({colorWrite:Z})}}class F extends ee{constructor(){super(...arguments),this.origin=pe}}function re(){const t=new U;return t.attributes.add($e.POSITION,"vec3"),t.outputs.add("fragColor","vec4",0),t.vertex.uniforms.add(new H("proj",(e,i)=>i.camera.projectionMatrix),new H("view",(e,i)=>xe(Oe,i.camera.viewMatrix,e.origin))).main.add(O`gl_Position = proj * view * vec4(position, 1.0);`),t.fragment.main.add(O`fragColor = vec4(1., 0., 0., 1.);`),t}const Oe=x(),Re=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaMaskPassParameters:F,build:re},Symbol.toStringTag,{value:"Module"}));class W extends Q{constructor(e,i,o){super(e,i,new Y(Re,()=>J(()=>Promise.resolve().then(()=>De),void 0,import.meta.url)),o)}initializePipeline(){return X({colorWrite:Z,depthTest:{func:S.LEQUAL}})}}let u=class extends Ee{constructor(e){super(e),this.consumes={required:["final-color"]},this.produces="final-color",this.focusAreaGeometries=new Array,this._vaos=Array(),this._count=new Array,this._origins=new Array,this._colorParameters=new R,this._maskParameters=new F,e.techniques.precompile(W),e.techniques.precompile(B)}initialize(){this.setExtrudedVolume()}destroy(){this._vaos.forEach(e=>e.dispose()),this._vaos=[],this._count=[],this._origins=[]}render(e){const i=this.techniques.acquire(W),o=this.techniques.acquire(B),s=this.bindParameters,m=e.find(({name:p})=>p==="final-color"),c=m==null?void 0:m.getTexture(),n=s.camera,l=n.fullViewport[2],h=n.fullViewport[3],a=this.fboCache.acquire(l,h,"focusArea",we.RGBA),g=this.fboCache.acquire(l,h,this.produces);if(!i.compiled||!o.compiled||!this._vaos||this.effect===E.NONE)return this.requestRender(),i.release(),o.release(),g.release(),a.release(),m;const r=this.renderingContext;a.attachDepth(m.getAttachment(this.gl.DEPTH_STENCIL_ATTACHMENT)),r.bindFramebuffer(a.fbo),r.clear(k.COLOR|k.STENCIL),r.setViewport(0,0,l,h),r.gl.clearStencil(0),r.gl.clear(r.gl.STENCIL_BUFFER_BIT),r.setClearStencil(0);for(let p=0;p<this._vaos.length;p++){const b=this._vaos[p],A=this._count[p];b&&(this._maskParameters.origin=this._origins[p],r.bindTechnique(i,s,this._maskParameters),r.setFaceCullingEnabled(!1),r.setStencilTestEnabled(!0),r.setStencilWriteMask(255),r.setStencilFunction(S.ALWAYS,0,255),r.setStencilOpSeparate(V.FRONT,v.KEEP,v.INCR_WRAP,v.KEEP),r.setStencilOpSeparate(V.BACK,v.KEEP,v.DECR_WRAP,v.KEEP),r.setDepthWriteEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.bindVAO(b),r.drawArrays(G.TRIANGLES,0,A),r.setFaceCullingEnabled(!1),r.setDepthTestEnabled(!1),r.setStencilFunction(S.NOTEQUAL,0,255),r.setStencilWriteMask(0),r.setColorMask(!0,!0,!0,!0),r.drawArrays(G.TRIANGLES,0,A))}return i.release(),r.gl.clear(r.gl.STENCIL_BUFFER_BIT),r.bindFramebuffer(g.fbo),this._colorParameters.color=c,this._colorParameters.focusArea=a.getTexture(),this._colorParameters.effect=this.effect,r.bindTechnique(o,s,this._colorParameters),r.screen.draw(),a.release(),o.release(),g.attachDepth(m.getAttachment(this.gl.DEPTH_STENCIL_ATTACHMENT)),g}setExtrudedVolume(){var i;const e=this.focusAreaGeometries;this._vaos=[],this._count=[],this._origins=[];for(let o=0;o<e.length;o++){const s=e[o],m=new Array,c=s.indicesBottom;this._origins.push(s.origin);for(let a=0;a<c.length;a++)m.push(s.positions[3*(c[a]-1)]),m.push(s.positions[3*(c[a]-1)+1]),m.push(s.positions[3*(c[a]-1)+2]);const n=s.indicesExtruded;for(let a=0;a<n.length;a++)m.push(s.positions[3*n[a]]),m.push(s.positions[3*n[a]+1]),m.push(s.positions[3*n[a]+2]);const l=new Float32Array(m),h=new Ce(this.renderingContext,be,new Map([["geometry",Pe]]),new Map([["geometry",Te.createVertex(this.renderingContext,ye.STATIC_DRAW,l)]]));(i=this._vaos)==null||i.push(h),this._count.push(c.length+n.length)}}};d([_()],u.prototype,"consumes",void 0),d([_()],u.prototype,"produces",void 0),d([_({constructOnly:!0})],u.prototype,"techniques",void 0),d([_()],u.prototype,"focusAreaGeometries",void 0),d([_()],u.prototype,"effect",void 0),u=d([z("esri.views.3d.webgl-engine.effects.focusArea.FocusAreaRenderNode")],u);class Fe{constructor(e,i,o,s,m){this.positions=e,this.indicesBottom=i,this.indicesExtruded=o,this.height=s,this.origin=m}}var E;(function(t){t[t.NONE=0]="NONE",t[t.BRIGHT=1]="BRIGHT",t[t.DARK=2]="DARK"})(E||(E={}));const $={none:E.NONE,bright:E.BRIGHT,dark:E.DARK},f=0,Ie=1e4;let y=class extends de(Ne){constructor(){super(...arguments),this.type="focusArea-3d",this._elevationContext=new he,this._geometries=new Array}initialize(){this.addHandles([T(()=>this.layer.geometries,(t,e)=>{e=t,this._extrudePolygons(e),this._setFocusAreaRenderNode()},N),T(()=>this.layer.tmpEffect,(t,e)=>{e=t,this._renderNode&&e&&(this._renderNode.effect=$[e])},N),T(()=>this.layer.visible,(t,e)=>{t?this._renderNode??(this._renderNode=new u({view:this.view,techniques:this.view._stage.renderView.techniques,focusAreaGeometries:this._geometries,effect:$[this.layer.tmpEffect??"none"]})):this._renderNode=D(this._renderNode)},N)])}destroy(){this._renderNode=D(this._renderNode),this._geometries=[]}_extrudePolygons(t){this._geometries=[];const e=Ie-f;for(const i of t){const o=x(),s=K(),m=this.view.renderCoordsHelper.viewingMode===ue.Global;m||this.view.renderCoordsHelper.worldUpAtPosition(null,s);const c=ge(i);if(c==null)return;ce(i.spatialReference,[c.x,c.y,0],o,this.view.renderCoordsHelper.spatialReference);const n=ne(Me,[o[12]-f*s[0],o[13]-f*s[1],o[14]-f*s[2]]),l=x();l[12]=-o[12],l[13]=-o[13],l[14]=-o[14];const h=fe(i,this.view.elevationProvider,this.view.renderCoordsHelper,this._elevationContext),{polygons:a,mapPositions:g,position:r}=h;for(const p of a){const b=p.count,A=ae(p.mapPositions,p.holeIndices,3);if(A.length===0)continue;const I=A.length,w=6*b,M=L(w+I),q=L(I),P=C(3*w),oe=C(3*w),ie=C(3*w),se=C(w);_e(r,g,A,p,P,ie,oe,se,M,q,e,s,m),le(P,P,l);const me=new Fe(P,q,M,e,[o[12]+f*n[0],o[13]+f*n[1],o[14]+f*n[2]]);this._geometries.push(me)}}}_setFocusAreaRenderNode(){this._renderNode?(this._renderNode.focusAreaGeometries=this._geometries,this._renderNode.setExtrudedVolume()):this._renderNode=new u({view:this.view,techniques:this.view._stage.renderView.techniques,focusAreaGeometries:this._geometries,effect:$[this.layer.tmpEffect??"none"]})}};d([_()],y.prototype,"type",void 0),d([_()],y.prototype,"layer",void 0),y=d([z("esri.views.3d.layers.FocusAreaLayerView3D")],y);const Me=K(),Oo=y,qe=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaColorPassParameters:R,build:te},Symbol.toStringTag,{value:"Module"})),De=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaMaskPassParameters:F,build:re},Symbol.toStringTag,{value:"Module"}));export{Oo as default};
