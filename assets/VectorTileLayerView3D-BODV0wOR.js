import{D as N,aD as q,M as k,s as O,H as z,i as A,N as $,r as u,m as g,a as U}from"./Accessor-BmwT4B0c.js";import{w as G,d as j,A as W}from"./reactiveUtils-XM7cS2OP.js";import{e as Z}from"./MemCache-CmojB_Z1.js";import{t as K}from"./DefaultUI-BwWVKFUS.js";import{a as Y}from"./Polyline-s-JzsQqo.js";import{p as Q,t as J,y as X}from"./TileInfoViewPOT-CAjkDqgu.js";import{e as tt}from"./TileKey-DBTeo_j0.js";import{d as et,u as it,n as rt,s as ot,f as lt}from"./WGLBrushVTLSymbol-CmI_2XQu.js";import{p as st}from"./VTLMaterialManager-B10yUbF1.js";import{a as y,i as x}from"./StyleDefinition-C2Flw6Qv.js";import{O as at,R as T}from"./enums-D9v74xTE.js";import{l as D}from"./StyleRepository-COGvMSY8.js";import{l as nt}from"./LayerView3D-BJ3u1Cu5.js";import{p as mt}from"./TiledLayerView3D-MBIRqUas.js";import{F as pt,D as ht}from"./terrainUtils-CgFk6NLH.js";import{y as ct}from"./LayerView-DUZfYZew.js";import"./Evented-Dw4_VOGn.js";import"./SimpleObservable-CvOkykwM.js";import"./jsxFactory-Cnml7uXM.js";import"./intl-Duiy0OzY.js";import"./Promise-DfET-uns.js";import"./cast-CsZslgGN.js";import"./index-4eY77cms.js";import"./JSONSupport-DcrLLGjL.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CzJ4c3KT.js";import"./InputManager-DZ3jJnlx.js";import"./Queue-BQesTh_6.js";import"./signal-CySMLEX9.js";import"./Basemap-BZmrlnvW.js";import"./collectionUtils-CTT-51g7.js";import"./Portal-CmmHxpLg.js";import"./writer-DKgfqj4X.js";import"./Extent-g5W9hy0j.js";import"./Point-Cz2JYYmX.js";import"./loadAll-D1eTJ7uv.js";import"./PortalItem-CTx1kJsR.js";import"./basemapDefinitions-D-Q7PKmu.js";import"./writeUtils-CcunaxF8.js";import"./layerUtils-B__v9OBu.js";import"./Color-VJEMvW-n.js";import"./colorUtils-Rxh2V3ai.js";import"./mathUtils-Cfq9PL9W.js";import"./enumeration-DpvDkLNI.js";import"./groundInstanceUtils-Ben03ZCf.js";import"./opacityUtils-Dim20wpZ.js";import"./CollectionFlattener-U8hHQmGf.js";import"./editableLayers-CWgCazH-.js";import"./catalogUtils-CGCu8hgu.js";import"./basemapEnsureType-CmRtohu0.js";import"./basemapUtils-oMnqy94d.js";import"./utils-DYurMneM.js";import"./screenUtils-_ZIvrt5o.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./vec3f64-BLpZdpfb.js";import"./common-DQOJ18NT.js";import"./TablesMixin-Bqfi1Ha_.js";import"./Layer-DH4_Pn8a.js";import"./Identifiable-BHVfzH03.js";import"./TimeExtent-BO6BsF_x.js";import"./timeUtils-C1c_L2Fd.js";import"./GraphicsCollection-BJ5Nr2H8.js";import"./Graphic-Dt0LgVGU.js";import"./Clonable-Z-AWS-16.js";import"./ActionToggle-D7439N1A.js";import"./jsonUtils-CwFG8yN4.js";import"./typeUtils-B6WBEKDM.js";import"./TextSymbol-BLIQ6RKX.js";import"./aaBoundingBox-Dw3yBk2f.js";import"./HeightModelInfo-C05IFsWs.js";import"./timeZoneUtils-DxzjpEBb.js";import"./ReactiveMap-BHFEHYMj.js";import"./Query-B_2mhyL4.js";import"./Field-BDG0QV_T.js";import"./fieldType-CBeoJWlv.js";import"./FullTextSearch-CBnxSwz4.js";import"./selectionUtils-DYi6daQO.js";import"./ViewEvents-c9mvQ_r3.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BWEEmpSb.js";import"./HighlightDefaults-CumzVg9-.js";import"./a11yUtils-ClKbIIe-.js";import"./heightModelInfoUtils-D_x68P3s.js";import"./ViewingMode-Dodu7ZZk.js";import"./projection-CyCZAIaD.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import"./vec32-Dvg_eL9J.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-DsXKmbqJ.js";import"./capabilities-DwlKKScG.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-vQlnDsEX.js";import"./accessibleHandler-BaA3O97p.js";import"./CompassViewModel-DBhnIkQP.js";import"./GoTo-zPv0y7kC.js";import"./ZoomViewModel-Bua4WqEj.js";import"./workers-Cds_sd9m.js";import"./enums-BRzLM11V.js";import"./Rect-CUzevAry.js";import"./Texture-BVJ22uHh.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./pbf-BsmI3A9L.js";import"./memoryEstimations-Bcyf-mHz.js";import"./rasterizingUtils-C1EbvluX.js";import"./floatRGBA-Cb__GiDF.js";import"./defaultCIMValues-Bb-CUowV.js";import"./enums-BTM-fOHQ.js";import"./definitions-CP59Y04S.js";import"./mat3-CR8GKnhD.js";import"./TileStrategy-CtmYSAoK.js";import"./vec2-ChnYg_BJ.js";import"./ScheduledQueueProcessor-U8WIIyj8.js";import"./RenderableTile-FJVLrFon.js";import"./config-BOD8--da.js";import"./GeometryUtils-F7QfOKlc.js";import"./DefaultVertexAttributeLayouts-wSIZdMhB.js";import"./DisplayObject-Dejv4A66.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BufferObject-BJilD_hc.js";import"./TileInfo-DxwC9WcY.js";import"./TileKey-DZd6gJy7.js";import"./vec2f32-BbH2jxlN.js";import"./ShaderCompiler-G2XYGDs6.js";import"./programUtils-CwiKxPbA.js";import"./colorUtils-DaPfwnk3.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./LineCallout.glsl-BQyjm-mE.js";import"./visualVariableUtils-Xcorldoo.js";import"./lengthUtils-_77UiyVF.js";import"./vec2f64-Dy6m9Nrb.js";import"./plane-CpXmOyqq.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./mathUtils-BgCEaV43.js";import"./computeTranslationToOriginAndRotation-DYUrDrjE.js";import"./ElevationContext-BJejROd5.js";import"./dehydratedFeatureUtils-1rrRm6hF.js";import"./ElevationProvider-aS5xrHHy.js";import"./VertexAttribute-Cq4MnHjR.js";import"./unitConversionUtils-rg07EgOm.js";import"./hydratedFeatures-CNHxsqRS.js";import"./projectVectorToVector-CCOy_B5J.js";import"./projectPointToVector-BoxjK-qy.js";import"./Material-C_-mgXN8.js";import"./boundedPlane-DuGhiiFM.js";import"./sphere-Cin5efBj.js";import"./lineSegment-v806maA5.js";import"./NoParameters-t-PuNrgq.js";import"./Indices-D8XWalpO.js";import"./FloatArray-BQXWSSJh.js";import"./BindType-BBwFZqyN.js";import"./Matrix3PassUniform-uCCQMnlP.js";import"./renderState-Ci93M1-P.js";import"./basicInterfaces-CZwQPxTp.js";import"./InterleavedLayout-_dYEAUNK.js";import"./BufferView-0osDbyWD.js";import"./types-D0PSWh4d.js";import"./triangle-B1tKFm7z.js";import"./ShaderTechniqueConfiguration-D4dZMCXS.js";import"./glsl-BH37Aalp.js";import"./requestImageUtils-DWgRKL5q.js";import"./TextureFormat-1mYWTFa-.js";import"./graphicUtils-BFGMMQ1R.js";import"./meshVertexSpaceUtils-AgAbm20L.js";import"./MeshLocalVertexSpace-CnHk-qPr.js";import"./RibbonLine.glsl-DwJpAQ1c.js";import"./sdfPrimitives-DBgFWIDT.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Octree-CmoRJhci.js";import"./ShaderBuilder-BKul5qh8.js";import"./RgbaFloatEncoding.glsl-_io2eW3M.js";import"./Attribute-DGhdp5lO.js";import"./DefaultBufferWriter-CqCDaNCZ.js";import"./projectBoundingRect-C2OcwCLZ.js";import"./dehydratedFeatures-kwLHUA1D.js";import"./quantizationUtils-DgFbqZi7.js";import"./featureConversionUtils-CvnFcmH_.js";import"./OptimizedFeature-P2towpqD.js";import"./OptimizedGeometry-BJqUA4Pi.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-D0U-z06n.js";import"./NormalAttribute.glsl-0GHNIsQf.js";import"./Float4DrawUniform-Db0CLl_z.js";import"./Matrix3DrawUniform-DD7AqlIc.js";import"./webStyleAcceptedFormats-CG7ZQ6BV.js";import"./GeometryUtil-D-PMXorz.js";import"./vec3f32-nZdmKIgz.js";import"./RealisticTree.glsl-PW_KtBDJ.js";import"./Intersector-tBiZcjSu.js";import"./intersectorUtils-BNnvTT1E.js";import"./verticalOffsetUtils-BFnFdbst.js";import"./orientedBoundingBox-B17G_yFO.js";import"./quat-CP7JhygC.js";import"./spatialReferenceEllipsoidUtils-DBqQpPRa.js";import"./Intersector-zrebwyaY.js";import"./DefaultMaterial-GRoe8HM5.js";import"./SceneLighting-BuSMIzqo.js";import"./GLTextureMaterial-96UpbkjC.js";import"./VertexColor.glsl-D3WyDYIi.js";import"./Matrix4PassUniform-COGIPIq4.js";import"./VerticalOffset.glsl-CsMbbWIx.js";import"./Matrix4sPassUniform-SKhQ1xSr.js";import"./Float2PassUniform-x4sHx2JD.js";import"./BooleanBindUniform-BgD_OP8i.js";import"./CameraSpace.glsl-g9iLbhnR.js";import"./Scheduler-i_u8qdlN.js";import"./debugFlags-B1LM_Apo.js";import"./HUDRenderStyle-BhGvVxgm.js";import"./HUDVisibility.glsl-DuFScu5i.js";import"./ShadowCastAccumulate.glsl-DMni1gLj.js";import"./Camera-CdyTfTAk.js";import"./Cyclical-Dlbl-cQK.js";import"./Viewpoint-DvyUmqUt.js";import"./RenderCoordsHelper-DA-pMWeR.js";import"./projectVectorToPoint-DEm8-dt4.js";import"./scaleUtils-DPfHG2g0.js";import"./NormalUtils.glsl-W-nmUbAv.js";import"./earcut-D9gy186-.js";import"./vec3-BXNNVgyU.js";import"./SnappingCandidate-DGkpYqI6.js";import"./triangulationUtils-Cu97ljqy.js";import"./deduplicate-Cp1WDW0w.js";import"./OverlayCompositing.glsl-CUa8aMAb.js";import"./GridLocalOriginFactory-CngFIYNp.js";import"./RenderCamera-CDB-KFBK.js";import"./axisAngleDegrees-DdLZENJj.js";import"./weather-zOic7P_q.js";import"./RenderPlugin-CTXypYLE.js";import"./VertexArrayObject-vYejmVPr.js";import"./NestedMap-GuqgquCN.js";import"./Normals-D6WqMXVD.js";import"./fontUtils-CGi-tOxo.js";import"./cameraUtils-Cg-qbPDO.js";import"./earthUtils-8WLQbUUl.js";import"./spatialReferenceSupport-DfixDcu7.js";import"./ElevationSamplerData-UywXoG8C.js";import"./FramebufferObject-B01p0UGV.js";import"./glUtil-CAJRmga-.js";import"./ShadowCastVisualizeTechniqueConfiguration-vN_a9xco.js";import"./SunCalc-uwgdo0BB.js";import"./VirtualLighting-CdhwLgbn.js";import"./ray-C_tSu6xd.js";import"./RenderFeature-2QP3kBrd.js";import"./unitFormatUtils-Q7ZG7HcF.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./quantityUtils-BsDK158M.js";import"./ZoomMomentumEstimator-BDiG9U4W.js";import"./HUDMaterial-DDt4C7E7.js";import"./labelFormatUtils-F9rkrs4Y.js";import"./labelUtils-DCpQ7n-8.js";import"./DepthRange-BJLjx8ee.js";import"./elevationInfoUtils-D26wVF2d.js";import"./hitTest-Dmi1EcVX.js";import"./LayerConstants-B33OP6sh.js";import"./intersectorUtilsConversions-CiJ6bOx7.js";import"./ElevationRange-BrgM1moX.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./DefaultLoadingContext-pYVsNNqG.js";import"./wosrLoader-CvsaTck0.js";import"./Version-Cd3TlGH0.js";import"./DrawParameters-C9t9_e99.js";import"./resources-D31XxULB.js";import"./WorkerHandle-CKOgUZ7i.js";import"./vec33-KumQEj7U.js";import"./ShaderTechniqueRepository-Ch1TPHrL.js";import"./Blit-_zFq7-RL.js";import"./testSVGPremultipliedAlpha-BGpZOwI7.js";import"./RenderingContext-7iVYEQBa.js";import"./ProgramCache-CuBZBhwD.js";import"./Program-C5Xq9SwE.js";import"./layerViewUtils-Bevty3Jm.js";import"./makeScheduleFunction-CggzEh3c.js";class ut{constructor(t,e,o){this._scale=t,this._shift=e,this._levelShift=o}getLevelRowColumn(t){const e=this.getLevelShift(t[0]),o=this._shift+e;return o?[t[0]-e,t[1]>>o,t[2]>>o]:t}getLevelShift(t){return Math.min(t,this._levelShift)}getOffset(t,e){let o=0,r=0;const i=this._shift+this.getLevelShift(t[0]);if(i){const n=(1<<i)-1,l=e/(this._scale*(1<<i-1));o=(t[2]&n)*l,r=(t[1]&n)*l}return[o,r]}getScale(t){return this._scale*(1<<this._shift+this.getLevelShift(t))}}class B extends Q{constructor(t,e,o,r){super(t,e,o,t.tileInfo.lods.length-1),this._memCache=r,this._ongoingTileRequests=new Map,this._ongoingRequestToController=new Map,this._tileInfoView=new J(t.tileInfo,t.fullExtent)}destroy(){super.destroy(),this._ongoingRequestToController.forEach(t=>t.abort()),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}async getVectorTile(t,e){const o=new tt(t[0],t[1],t[2],0);let r=this._memCache.get(o.id);if(r)return r.retain(),r;const i=await this._getVectorTileData(o);if(N(e),!this._layer)return null;if(r=this._memCache.get(o.id),r)return r.retain(),r;const n=this._layer.tileInfo.getTileBounds(Y(),o),l=this._tileInfoView.getTileResolution(t[0]);return r=new X(o,l,n[0],n[3],512,512,this._styleRepository,this._memCache),r.setData(i),i&&(r.retain(),this._memCache.put(o.id,r,Z)),r.neededForCoverage=!0,r.transforms.tileUnitsToPixels=K(1/8,0,0,0,1/8,0,0,0,1),r}_getVectorTileData(t){const e=t.id;if(this._ongoingTileRequests.has(e))return this._ongoingTileRequests.get(e);const o=new AbortController,r={signal:o.signal},i=this._getParsedVectorTileData(t,r).then(n=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),n)).catch(()=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),null));return this._ongoingTileRequests.set(e,i),this._ongoingRequestToController.set(e,o),i}_getParsedVectorTileData(t,e){return this.fetchTileData(t,e).then(o=>this.parseTileData({key:t,data:o},e))}}const f={vtlBackground:it,vtlFill:lt,vtlLine:ot,vtlCircle:rt,vtlSymbol:et},_=1e-6;class V{constructor(t,e){this.spriteMosaic=t,this.glyphMosaic=e,this._brushCache={vtlBackground:null,vtlFill:null,vtlLine:null,vtlCircle:null,vtlSymbol:null},this._vtlMaterialManager=new st}dispose(){var t,e,o,r,i;(t=this._brushCache.vtlBackground)==null||t.dispose(),(e=this._brushCache.vtlFill)==null||e.dispose(),(o=this._brushCache.vtlLine)==null||o.dispose(),(r=this._brushCache.vtlCircle)==null||r.dispose(),(i=this._brushCache.vtlSymbol)==null||i.dispose(),this._brushCache=null,this._vtlMaterialManager=q(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}get vectorTilesMaterialManager(){return this._vtlMaterialManager}drawSymbols(t,e,o){const r=o.layers;t.renderPass="translucent";let i=this._brushCache.vtlSymbol;i==null&&(i=new f.vtlSymbol,this._brushCache.vtlSymbol=i),d[0]=e;for(let n=0;n<r.length;n++){const l=r[n];if(l.type!==y.SYMBOL)continue;const m=l.getLayoutProperty("visibility");if(m&&m.getValue()===x.NONE)continue;const s=t.displayLevel;l.minzoom!==void 0&&l.minzoom>s+_||l.maxzoom!==void 0&&l.maxzoom<=s-_||(t.styleLayerUID=l.uid,t.styleLayer=l,i.drawMany(t,d))}d[0]=null}drawBackground(t,e,o){if(o.backgroundBucketIds.length===0)return;const{context:r,displayLevel:i,requiredLevel:n}=t;e.key.level=n,r.setBlendingEnabled(!0),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!1),t.renderPass="background";let l=this._brushCache.vtlBackground;l==null&&(l=new f.vtlBackground,this._brushCache.vtlBackground=l),d[0]=e,o.backgroundBucketIds.forEach(m=>{const s=o.getLayerById(m);if(s.type!==y.BACKGROUND)return;const C=s.getLayoutProperty("visibility");C&&C.getValue()===x.NONE||s.minzoom!==void 0&&s.minzoom>i+_||s.maxzoom!==void 0&&s.maxzoom<=i-_||(t.styleLayerUID=s.uid,t.styleLayer=s,l.drawMany(t,d))}),d[0]=null}drawTile(t,e,o,r){const{context:i}=t,n=o.layers;i.setBlendingEnabled(!1),i.setDepthTestEnabled(!0),i.setDepthWriteEnabled(!0),i.setDepthFunction(at.LEQUAL);const l=n.filter(m=>{if(r!=null&&r!==m.type||!e.layerData.has(m.uid))return!1;const s=m.getLayoutProperty("visibility");return(s==null?void 0:s.getValue())!==x.NONE});t.renderPass="opaque";for(let m=l.length-1;m>=0;--m)this._renderStyleLayer(l[m],t,e);i.setDepthWriteEnabled(!1),i.setBlendingEnabled(!0),i.setBlendFunctionSeparate(T.ONE,T.ONE_MINUS_SRC_ALPHA,T.ONE,T.ONE_MINUS_SRC_ALPHA),t.renderPass="translucent",l.forEach(m=>this._renderStyleLayer(m,t,e)),i.setDepthTestEnabled(!1),i.bindVAO()}_renderStyleLayer(t,e,o){const{renderPass:r}=e;let i;switch(t.type){case y.BACKGROUND:if(r!=="background")return;i=this._brushCache.vtlBackground,i||(i=new f.vtlBackground,this._brushCache.vtlBackground=i);break;case y.FILL:if(r!=="opaque"&&e.renderPass!=="translucent")return;i=this._brushCache.vtlFill,i==null&&(i=new f.vtlFill,this._brushCache.vtlFill=i);break;case y.LINE:if(r!=="translucent")return;i=this._brushCache.vtlLine,i==null&&(i=new f.vtlLine,this._brushCache.vtlLine=i);break;case y.CIRCLE:if(r!=="translucent")return;i=this._brushCache.vtlCircle,i==null&&(i=new f.vtlCircle,this._brushCache.vtlCircle=i);break;case y.SYMBOL:if(r!=="translucent")return;i=this._brushCache.vtlSymbol,i==null&&(i=new f.vtlSymbol,this._brushCache.vtlSymbol=i)}const{displayLevel:n}=e,{minzoom:l,maxzoom:m}=t;if(l!==void 0&&l>n+_||m!==void 0&&m<=n-_)return;const{context:s}=e;s.setStencilTestEnabled(!1),s.setStencilWriteMask(0),e.styleLayerUID=t.uid,e.styleLayer=t,d[0]=o,i.drawMany(e,d),d[0]=null}}const d=[null];let c=class extends mt(nt(ct)){constructor(){super(...arguments),this._tileHandlerController=null,this.type="vector-tile-3d",this.levelShift=k("disable-feature:vtl-level-shift")?0:1}initialize(){if(this.layer.fullExtent==null)return void this.addResolvingPromise(Promise.reject(new O("vectortilelayerview:full-extent-undefined","This layer view's layer does not define a fullExtent.")));const{basemapTerrain:a,spatialReference:t,state:e,viewingMode:o}=this.view,r=o==="local"&&!pt(t)||ht.force512VTL?this.layer.tileInfo:this.layer.tileInfo.getCompatibleForVTL(256),i=this._getTileInfoSupportError(r,this.layer.fullExtent);if(i!=null)return this.addResolvingPromise(Promise.reject(i));const n=G(()=>{var p,h;return(h=(p=this.view)==null?void 0:p.basemapTerrain)==null?void 0:h.tilingSchemeLocked}).then(()=>{var w,R;const p=a.tilingScheme,h=p.pixelSize,H=h===256?1:2,v=(w=a.spatialReference)!=null&&w.isGeographic&&h===256?1:0,L=(R=a.spatialReference)!=null&&R.isGeographic||h!==256?0:1;let b;this.schemaHelper=new ut(H,v,this.levelShift+L),b=h===256||h===512?this.layer.tileInfo.getCompatibleForVTL(h):this.layer.tileInfo;const S=this._getTileInfoCompatibilityError(b,p);if(S)throw S;this.tileInfo=b});this._tileHandlerController=new AbortController;const l=this.view.resourceController;this._memCache=l.memoryController.newCache(`vtl-${this.layer.uid}`,p=>p.release()),this.addHandles(j(()=>this.view.qualitySettings.memoryLimit,p=>this._memCache.maxSize=Math.ceil(p/10*1048576),W));const m=new D(this.layer.currentStyleInfo.style);this._tileHandler=new B(this.layer,m,e.contentPixelRatio,this._memCache);const s=this._tileHandlerController.signal,C=dt(l),I=this._tileHandler.start({signal:s,schedule:C}),E=this._tileHandler.spriteMosaic;E.then(p=>{!z(s)&&this._tileHandler&&(this.painter=new V(p,this._tileHandler.glyphMosaic))}),I.then(()=>this._tileHandlerController=null);const M=()=>{var S;this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=new AbortController,this._memCache.clear();const p=this.layer.currentStyleInfo.style,h=((S=this.view.state)==null?void 0:S.contentPixelRatio)??1,H=new D(p),v=new B(this.layer,H,h,this._memCache),L=v.start({signal:this._tileHandlerController.signal,schedule:C}),b=v.spriteMosaic;L.then(()=>this._tileHandlerController=null),this._updatingHandles.addPromise(Promise.all([L,b]).then(([,w])=>{const R=this._tileHandler,P=this.painter;this.painter=new V(w,v.glyphMosaic),this._tileHandler=v,this.emit("data-changed"),R.destroy(),P&&P.dispose()}))};this._updatingHandles.add(()=>{var p;return{style:this.layer.currentStyleInfo.style,pixelRatio:(p=this.view.state)==null?void 0:p.contentPixelRatio}},M),this.addHandles([this.layer.on("paint-change",()=>this.emit("data-changed")),this.layer.on("style-layer-change",M),this.layer.on("delete-style-layer",M),this.layer.on("spriteSource-change",()=>this.emit("data-changed")),this.layer.on("layout-change",()=>this.emit("data-changed")),this.layer.on("style-layer-visibility-change",()=>this.emit("data-changed"))]);const F=Promise.all([n,I,E]);this.addResolvingPromise(F)}destroy(){this.painter=q(this.painter),this._tileHandlerController=A(this._tileHandlerController),this._tileHandler=$(this._tileHandler),this._memCache=$(this._memCache)}get contentZoom(){return k("disable-feature:vtl-level-shift")?1:this.view.qualitySettings.tiledSurface.vtlContentZoom}get displayLevelRange(){const a=this.tileInfo.lods,t=this.layer.minScale||a[0].scale,e=this.layer.maxScale||a[a.length-1].scale,o=this.levelRangeFromScaleRange(t,e);return this.layer.maxScale?o.maxLevel++:o.maxLevel+=this.levelShift,o}get dataScaleRange(){const a=this.tileInfo.lods;return{minScale:a[0].scale,maxScale:a[a.length-1].scale}}get dataLevelRange(){const{minScale:a,maxScale:t}=this.dataScaleRange,e=this.levelRangeFromScaleRange(a,t);return e.minLevel===1&&this.tileInfo.size[0]===256&&(e.minLevel=0),e.maxLevel+=this.levelShift,e}async fetchTile(a,t){const e=this.schemaHelper.getLevelRowColumn(a);return this._tileHandler.getVectorTile(e,t)}get hasVisibleFeatures(){return!0}};u([g()],c.prototype,"layer",void 0),u([g()],c.prototype,"levelShift",void 0),u([g()],c.prototype,"contentZoom",null),u([g()],c.prototype,"displayLevelRange",null),u([g()],c.prototype,"tileInfo",void 0),u([g()],c.prototype,"dataScaleRange",null),u([g()],c.prototype,"dataLevelRange",null),u([g()],c.prototype,"updatingProgressValue",void 0),c=u([U("esri.views.3d.layers.VectorTileLayerView3D")],c);const Ll=c;function dt(a){return t=>a.immediate.schedule(t)}export{Ll as default};
