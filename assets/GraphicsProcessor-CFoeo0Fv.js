import{g as m,E as f,N as c,e as y,r as n,m as a,a as b}from"./Accessor-BmwT4B0c.js";import{b as C}from"./Graphic-Dt0LgVGU.js";import{d,C as w,A as V}from"./reactiveUtils-XM7cS2OP.js";import{y as v}from"./diffUtils-BanfihCO.js";import{h as E}from"./UpdatingHandles-CzJ4c3KT.js";import{f as x}from"./Layer-DH4_Pn8a.js";import{c as _}from"./hydratedFeatures-CNHxsqRS.js";import{r as O,l as S,a as G}from"./LineCallout.glsl-BQyjm-mE.js";import{b as P}from"./Query-B_2mhyL4.js";import{e as A}from"./GridLocalOriginFactory-CngFIYNp.js";import{W as $,u as H}from"./Graphics3DScaleVisibility-CyLlAoK9.js";import{a as I,p as R,u as z}from"./Graphics3DObjectStates-XVMjaI7s.js";import{S as D}from"./graphicUtils-BFGMMQ1R.js";import{e as j}from"./highlightUtils-CENYWDnQ.js";import{C as q}from"./RibbonLine.glsl-DwJpAQ1c.js";let r=class extends m{constructor(i){super(i),this.type="graphics-3d",this.graphicsCore=null,this.drapeSourceType=A.Features,this.scaleVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this._suspendResumeExtent=null,this._updatingHandles=new E}initialize(){const{layer:i}=this,s="effectiveScaleRange"in i?i:null,o=this.scaleVisibilityEnabled&&s!=null,e=new $({owner:this,layer:this.owner.layer,preferredUpdatePolicy:q.SYNC,graphicSymbolSupported:!0,componentFactories:{elevationAlignment:(t,l)=>new R({graphicsCoreOwner:this,graphicsCore:t,queryGraphicUIDsInExtent:l,elevationProvider:this.view.elevationProvider}),scaleVisibility:o?(t,l)=>new H({graphicsCoreOwner:this,layer:s,queryGraphicUIDsInExtent:l,graphicsCore:t,basemapTerrain:this.owner.view.basemapTerrain}):null,objectStates:t=>new I(t)}});if(this._set("graphicsCore",e),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new z({graphicsCoreOwner:this})),"fullOpacity"in this.owner){const t=this.owner;this._updatingHandles.add(()=>t.fullOpacity,()=>this.graphicsCore.opacityChange())}if("elevationInfo"in i){const t=i;this._updatingHandles.add(()=>t.elevationInfo,(l,p)=>{v(l,p)&&this._updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())})}this._set("initializePromise",this._initializeAsync()),this._updatingHandles.addPromise(this.initializePromise)}async _initializeAsync(){try{await this.graphicsCore.initializePromise}catch(i){if(f(i))return;throw i}this.destroyed||(this.addHandles(d(()=>this.view.clippingArea,()=>this._updateClippingExtent(),w)),this._updateClippingExtent(),this._setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics())}destroy(){this._updatingHandles.destroy(),this._set("frustumVisibility",c(this.frustumVisibility)),this._set("graphicsCore",c(this.graphicsCore))}get layer(){return this.owner.layer}get view(){return this.owner.view}get scaleVisibility(){var i;return(i=this.graphicsCore)==null?void 0:i.scaleVisibility}get elevationAlignment(){var i;return(i=this.graphicsCore)==null?void 0:i.elevationAlignment}get scaleVisibilitySuspended(){return!(this.scaleVisibility==null||!this.scaleVisibility.suspended)}get frustumVisibilitySuspended(){return this.frustumVisibility!=null&&this.frustumVisibility.suspended}get suspended(){return this.owner.suspended??!1}get updating(){var i;return!!((i=this.graphicsCore)!=null&&i.updating||this.scaleVisibility!=null&&this.scaleVisibility.updating||this.frustumVisibility!=null&&this.frustumVisibility.updating||this._updatingHandles.updating)}get graphics3DGraphics(){var i;return(i=this.graphicsCore)==null?void 0:i.graphics3DGraphics}get graphics3DGraphicsByObjectID(){var i;return(i=this.graphicsCore)==null?void 0:i.graphics3DGraphicsByObjectID}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner.fullOpacity??1}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}notifyGraphicGeometryChanged(i){this.graphicsCore.notifyGraphicGeometryChanged(i)}notifyGraphicVisibilityChanged(i){this.graphicsCore.notifyGraphicVisibilityChanged(i)}getRenderingInfo(i,s,o){const e=O(i,{renderer:s,arcade:o});if(e!=null&&e.color){const t=e.color;t[0]=t[0]/255,t[1]=t[1]/255,t[2]=t[2]/255}return e}getRenderingInfoAsync(i,s,o,e){return S(i,{renderer:s,arcade:o,...e})}getHit(i){if(this.owner.loadedGraphics){const s=this.owner.loadedGraphics.find(o=>o.uid===i);if(s){const o=this.layer instanceof x?this.layer:null,e=_(s,o);return{type:"graphic",graphic:e,layer:e.layer}}}return null}whenGraphicBounds(i,s){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(i,s):Promise.reject()}computeAttachmentOrigin(i,s){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(i,s):null}getSymbolLayerSize(i,s){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(i,s):null}maskOccludee(i){var t;const s=(t=this.graphicsCore)==null?void 0:t.objectStates;if(!s)return y();const{set:o,handle:e}=s.acquireOccludeeSet(null);return s.setUid(o,i.uid),e}highlight(i,s){var t;const o=(t=this.graphicsCore)==null?void 0:t.objectStates;if(!o||i instanceof P)return u;const e=j(i);if(e.length===0)return u;if(e[0]instanceof C){const l=e.map(g=>g.uid),{set:p,handle:h}=o.acquireHighlightSet(s,null);return o.setUids(p,l),h}if(typeof e[0]=="number"){const l=e,{set:p,handle:h}=o.acquireHighlightSet(s,null);return o.setObjectIds(p,l),h}return u}_setupSuspendResumeExtent(){const{scaleVisibility:i,frustumVisibility:s}=this;if(i==null&&s==null)return;const o=({computedExtent:e,extentPadding:t})=>{this._suspendResumeExtent=D(e,this._suspendResumeExtent,G,t),i!=null&&i.setExtent(this._suspendResumeExtent),s!=null&&s.setExtent(this._suspendResumeExtent)};this.addHandles(d(()=>{var e,t;return{computedExtent:(e=this.graphicsCore)==null?void 0:e.computedExtent,extentPadding:(t=this.graphicsCore)==null?void 0:t.extentPadding}},e=>o(e),V))}_updateClippingExtent(){const i=this.view.clippingArea;this.graphicsCore.setClippingExtent(i,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics()}};n([a()],r.prototype,"type",void 0),n([a({constructOnly:!0})],r.prototype,"owner",void 0),n([a()],r.prototype,"layer",null),n([a()],r.prototype,"view",null),n([a({constructOnly:!0})],r.prototype,"graphicsCore",void 0),n([a()],r.prototype,"scaleVisibility",null),n([a({constructOnly:!0})],r.prototype,"frustumVisibility",void 0),n([a()],r.prototype,"elevationAlignment",null),n([a()],r.prototype,"scaleVisibilitySuspended",null),n([a({readOnly:!0})],r.prototype,"frustumVisibilitySuspended",null),n([a()],r.prototype,"suspended",null),n([a({readOnly:!0})],r.prototype,"updating",null),n([a()],r.prototype,"loadedGraphics",null),n([a()],r.prototype,"fullOpacity",null),n([a()],r.prototype,"slicePlaneEnabled",null),n([a()],r.prototype,"drapeSourceType",void 0),n([a()],r.prototype,"updatePolicy",null),n([a({constructOnly:!0})],r.prototype,"scaleVisibilityEnabled",void 0),n([a({constructOnly:!0})],r.prototype,"frustumVisibilityEnabled",void 0),n([a()],r.prototype,"initializePromise",void 0),r=n([b("esri.views.3d.layers.graphics.GraphicsProcessor")],r);const u=y();export{r as x};
