const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./editingSupport-CA_XWXsU.js","./Graphic-DsxsIjhH.js","./tslib.es6-B3Jf3DVX.js","./geometry-D964gYQX.js","./subclass-BZA_h8Db.js","./Extent-Bf3YTe7m.js","./Point-Cg0-ChZE.js","./Accessor-BLX9ikPh.js","./cast-Bjksrh93.js","./writer-DNAwXnhG.js","./assets-C43MgM-v.js","./index-Bh2oEzTI.js","./index-2kwcjS9-.css","./jsonMap-0cxwUWs2.js","./Polyline-D9YkgmM_.js","./mathUtils-C4_ghTv4.js","./PopupTemplate-BHMhS05j.js","./Clonable-D3rtuBWg.js","./Collection-CEdjem1-.js","./Evented-BHRw9x22.js","./shared-B3wH2qpO.js","./SimpleObservable-KocWTzVy.js","./fieldUtils-tmQlKvWo.js","./intl-CChhNOV8.js","./date-DlqISzcw.js","./locale-C9TlLpzi.js","./messages-OmQvZhAg.js","./enumeration-Ba5njXdz.js","./Color-BCS62Hs5.js","./colorUtils-0bJDPow9.js","./ActionToggle-iT4slXc7.js","./Identifiable-B1UbsKNt.js","./symbols-CNimns--.js","./TextSymbol-D8QO_KUV.js","./screenUtils-_ZIvrt5o.js","./materialUtils-DarhapKC.js","./opacityUtils-C68Tlu6_.js","./vec3f64-BLpZdpfb.js","./aaBoundingBox-BE7cC1jD.js","./persistableUrlUtils-fa1mAujs.js","./collectionUtils-D_lHIu88.js","./Portal-C10FKnaA.js","./Loadable-BabW5Xcc.js","./Promise-B2Hu02L7.js","./reactiveUtils-C5zUhJQJ.js","./asyncUtils-CWX51uTe.js","./jsonUtils-CEfjT-BK.js","./uuid-fwrPAdZb.js","./normalizeUtils-EVmAQ-ak.js","./normalizeUtilsCommon-dT81xWiM.js","./utils-6jMaHUrH.js","./utils-Bema0iXE.js","./EditBusLayer-DoTks2sU.js","./infoFor3D-C0hFfS1m.js","./layerUtils-BrNoooE9.js"])))=>i.map(i=>d[i]);
import{_ as X}from"./index-Bh2oEzTI.js";import{r as i}from"./tslib.es6-B3Jf3DVX.js";import{d as re}from"./Graphic-DsxsIjhH.js";import{q as ie}from"./PopupTemplate-BHMhS05j.js";import"./ClassBreaksRenderer-BuHwSyVK.js";import{u as se}from"./jsonUtils-DxpLMo6d.js";import"./UniqueValueRenderer-BQtAHUSo.js";import"./SimpleRenderer-BV2L9G_n.js";import{i as oe}from"./Clonable-D3rtuBWg.js";import{V as q}from"./Collection-CEdjem1-.js";import{m as o,a as b,s as V,g as ae,b as m,n as f,d as G}from"./subclass-BZA_h8Db.js";import{q as ne,p as le,d as P,c as pe}from"./Accessor-BLX9ikPh.js";import{S as de}from"./MultiOriginJSONSupport-B5nfqtQh.js";import{on as me,sync as ue,whenOnce as ce}from"./reactiveUtils-C5zUhJQJ.js";import{o as v}from"./writer-DNAwXnhG.js";import{$ as ye}from"./Mesh-Dq3yHM_F.js";import{j as he}from"./Point-Cg0-ChZE.js";import fe from"./Layer-CVt7Hb5J.js";import{i as ge,m as ve}from"./uploadAssetErrors-CA2vkP4k.js";import{i as we}from"./APIKeyMixin-Di9kcRBS.js";import{l as be}from"./ArcGISService-B5qxetOY.js";import{e as Ie}from"./CustomParametersMixin-B4u7wiBT.js";import{F as Le}from"./EditBusLayer-DoTks2sU.js";import{b as Fe}from"./OperationalLayer-CVyVfSPu.js";import{j as Se}from"./PortalLayer-CKja4bdW.js";import{t as _e}from"./ScaleRangeLayer-Bb8Ig1Hz.js";import{R as Te,V as Q}from"./SceneService-DR5HS-bd.js";import{f as $e}from"./TemporalLayer-Dpq2hKKV.js";import{f as N,u as Oe,U as Y,V as Ee}from"./assets-C43MgM-v.js";import{g as k,N as J,t as je}from"./fieldUtils-tmQlKvWo.js";import{d as z}from"./TimeInfo-LUiaSFyX.js";import{p as K}from"./TimeExtent-DocT5yPf.js";import{l as xe}from"./TimeInterval-CNlkea1s.js";import{g as M}from"./arcgisLayerUrl-BX1FE5Hm.js";import{s as Ae}from"./associatedFeatureServiceUtils-CXx2I5Ic.js";import{t as Pe}from"./capabilities-Y9lFlGVh.js";import{c as Re,p as De,d as Ue,l as qe,s as Ne}from"./commonProperties-CPyIG_-u.js";import{k as Ce,Z as Ve}from"./featureLayerUtils-DBsQMhTm.js";import{t as Ge,p as Qe}from"./FeatureReductionSelection-7vaL4DYT.js";import{s as ke}from"./fieldProperties-Cgxj08ZE.js";import{Z as Je}from"./FieldsIndex-DpwHKAMX.js";import{p as ee,a as ze,y as Ke,m as Me}from"./I3SLayerDefinitions-BZ_CeKMl.js";import{r as He,n as We}from"./infoFor3D-C0hFfS1m.js";import{C as Ze,n as H}from"./labelingInfo-DYPSPZCH.js";import{p as Be}from"./LayerFloorInfo-CIQjg5Vk.js";import{a as Xe}from"./lazyLayerLoader-Buplpp4b.js";import{t as Ye}from"./meshSpatialReferenceScaleUtils-zow-o13f.js";import{j as et}from"./persistable-DjaiFmiM.js";import{v as R}from"./Polyline-D9YkgmM_.js";import{J as tt,a as rt}from"./projection-B971H0Re.js";import{p as it}from"./persistableUrlUtils-fa1mAujs.js";import{t as st}from"./styleUtils-KMFBtb6u.js";import{b as ot}from"./Query-5Xpquc1r.js";import{$ as W,P as at,w as nt}from"./elevationInfoUtils-BC_66_Fg.js";import{p as lt}from"./popupUtils-BBuPGAHd.js";import{V as pt}from"./I3SUtil-BALmNw_P.js";import{n as dt,p as mt}from"./popupUtils-BaLxn3kI.js";import{r as ut}from"./opacityUtils-C68Tlu6_.js";import"./geometry-D964gYQX.js";import"./Extent-Bf3YTe7m.js";import"./jsonMap-0cxwUWs2.js";import"./symbols-CNimns--.js";import"./enumeration-Ba5njXdz.js";import"./TextSymbol-D8QO_KUV.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./mathUtils-C4_ghTv4.js";import"./screenUtils-_ZIvrt5o.js";import"./cast-Bjksrh93.js";import"./materialUtils-DarhapKC.js";import"./vec3f64-BLpZdpfb.js";import"./aaBoundingBox-BE7cC1jD.js";import"./collectionUtils-D_lHIu88.js";import"./Portal-C10FKnaA.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./locale-C9TlLpzi.js";import"./jsonUtils-CEfjT-BK.js";import"./date-DlqISzcw.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./RendererLegendOptions-B-4se3aU.js";import"./LRUCache-B_PHMSGm.js";import"./MemCache-Dx1v3xLC.js";import"./Version-BSlAgupz.js";import"./OverrideHelper-ti072FkP.js";import"./colorUtils-aL8wj-8G.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-D2PLyMFF.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-uj_P09aO.js";import"./HeatmapColorStop-BJc5nbwr.js";import"./heatmapUtils-Dwiv9IEa.js";import"./SizeVariable-936USOrb.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DX1kS9Se.js";import"./compilerUtils-Dw3R0f-Z.js";import"./lengthUtils-DL1-FDQQ.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./intl-CChhNOV8.js";import"./messages-OmQvZhAg.js";import"./asyncUtils-CWX51uTe.js";import"./diffUtils-BP7jmOAy.js";import"./colorRamps-pKd7I5WZ.js";import"./ColorStop-Dk3U5tCk.js";import"./jsonUtils-Ds2Sqto-.js";import"./layerUtils-BrNoooE9.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-BYTm14n3.js";import"./axisAngleDegrees-Ci2HA7Jo.js";import"./mat4-GpOFENPA.js";import"./quat-4pa1e6ds.js";import"./mat3f64-BBpwCtoL.js";import"./quatf64-CCm9z-pX.js";import"./vec32-Dvg_eL9J.js";import"./MeshComponent-C3VFvn4B.js";import"./imageUtils-CtmzXUTE.js";import"./meshProperties-C4iW0Ukm.js";import"./MeshLocalVertexSpace-LEHwMUnu.js";import"./MeshTransform-D2t3aEmK.js";import"./mat4f64-Dk4dwAN8.js";import"./MeshVertexAttributes-BgxxMxrG.js";import"./meshVertexSpaceUtils-CXzOFlTI.js";import"./triangulationUtils-DWWEtF_0.js";import"./earcut-Lltz9D9k.js";import"./Indices-DflDlU4Z.js";import"./plane-IENfwZlB.js";import"./vec2f64-miziP1SN.js";import"./mathUtils-BG-eq9fO.js";import"./deduplicate-DIJK2kGw.js";import"./projectPointToVector-GINIbYMz.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./vertexSpaceConversion-CPh5QK5U.js";import"./mat3-BRl2i9Bz.js";import"./spatialReferenceEllipsoidUtils-DBE_OFra.js";import"./computeTranslationToOriginAndRotation-Q27G6TBL.js";import"./vec3-kbEkneOB.js";import"./BufferView-_QDXRCew.js";import"./vec2-maR1OrZI.js";import"./vec4-BpYqBTK4.js";import"./External-B2-Xb0PD.js";import"./timeUtils-8fb_2oAt.js";import"./uuid-fwrPAdZb.js";import"./layerContainerType-C5CzMsLd.js";import"./PortalItem-DzgXrpyc.js";import"./portalItemUtils-BzVoFAku.js";import"./originUtils-D69mHv66.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./HeightModelInfo-9nOoV6LU.js";import"./I3SIndexInfo-CzWbq05q.js";import"./jsonContext-DueMnVx9.js";import"./resourceUtils-BZzv7-k7.js";import"./resourceUtils-VfNT3fc0.js";import"./saveUtils-gB1pYTqT.js";import"./ElevationInfo-CA5m_tHv.js";import"./unitConversionUtils-BMfW9yAe.js";import"./AttributeTableTemplate-BZeVyq-j.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./featureQueryAll-DnVoEjkM.js";import"./AttachmentQuery-BUlkjzkx.js";import"./RelationshipQuery-DPPNeuLK.js";import"./DataLayerSource-BKkswDvG.js";import"./UnknownTimeZone-BkowvBs8.js";import"./labelUtils-B8petyBk.js";import"./requestPresets-B-6DU6iY.js";import"./MD5-C9MwAd2G.js";import"./resourceExtension-D8MnQ6oV.js";import"./FullTextSearch-Csd1Hktu.js";import"./projectVectorToVector-G2uWGoIb.js";import"./sphere-C77djCO6.js";import"./I3SBinaryReader-D1r70N_w.js";import"./VertexAttribute-Cq4MnHjR.js";import"./edgeUtils-BUKTgPFR.js";import"./floatRGBA-CfH_2xsy.js";import"./DecodeSymbolColor.glsl-BPIX0fAF.js";import"./interfaces-DDtDqZYj.js";import"./Matrix3DrawUniform-CiBFaSz6.js";import"./BindType-BmZEZMMh.js";import"./Float4DrawUniform-N58YDhuZ.js";import"./orientedBoundingBox-DOAJUK5g.js";import"./ViewingMode-Dodu7ZZk.js";import"./layerViewUtils-DhFEu8Rd.js";function te({associatedLayer:e,serviceUpdateTimeStamp:t}){var d;const r=(d=e==null?void 0:e.editingInfo)==null?void 0:d.lastEditDate,s=e==null?void 0:e.serverGens,a=r!=null,l=t!=null,p=a&&l&&t.lastUpdate!==r.getTime();return a&&(p||!l&&(s==null?void 0:s.minServerGen)!==(s==null?void 0:s.serverGen))}const ct=e=>{let t=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){var a;const r=(a=this.associatedLayer)==null?void 0:a.timeInfo;if(r==null)return null;const s=r.clone();return k(s,this.fieldsIndex),s}set timeInfo(r){k(r,this.fieldsIndex),this._override("timeInfo",r)}get timeExtent(){var r;return(r=this.associatedLayer)==null?void 0:r.timeExtent}set timeExtent(r){this._override("timeExtent",r)}get timeOffset(){var r;return(r=this.associatedLayer)==null?void 0:r.timeOffset}set timeOffset(r){this._override("timeOffset",r)}get datesInUnknownTimezone(){var r;return((r=this.associatedLayer)==null?void 0:r.datesInUnknownTimezone)??!1}set datesInUnknownTimezone(r){this._override("datesInUnknownTimezone",r)}async loadTimeInfoFromService(r){const{serviceTimeInfo:s}=this;if(s==null)return;const{startTimeField:a,endTimeField:l}=s;if(a==null&&l==null||te({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const p=async u=>{var _;let h=null;try{const L=await((_=this.fetchStatistics)==null?void 0:_.call(this,u,r));h=L==null?void 0:L.stats}catch{}if(h==null)return null;const{minTimeStr:I,min:E,maxTimeStr:j,max:x}=h,S=u===a?I??E:j??x;return S!=null?new Date(S):null},[d,c]=await Promise.all([p(a),p(l)]);if(a!=null&&d==null||l!=null&&c==null)return;const y=new K({start:d,end:c});this.setAtOrigin("timeInfo",new z({endField:l,startField:a,fullTimeExtent:y}),"service")}};return i([o({type:z,json:{read:!1,write:!1}})],t.prototype,"timeInfo",null),i([o({type:K,json:{read:!1,write:!1}})],t.prototype,"timeExtent",null),i([o({type:xe,json:{read:!1,write:!1}})],t.prototype,"timeOffset",null),i([o({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],t.prototype,"datesInUnknownTimezone",null),i([o({type:F,readOnly:!0,json:{read:{source:"timeInfo"}}})],t.prototype,"serviceTimeInfo",void 0),t=i([b("esri.layers.mixins.TemporalSceneLayer")],t),t};let F=class extends N{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};i([o({type:String})],F.prototype,"endTimeField",void 0),i([o({type:String})],F.prototype,"startTimeField",void 0),F=i([b("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],F);let g=class extends N{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};i([o({type:String,json:{read:!0,write:!0}})],g.prototype,"name",void 0),i([o({type:String,json:{read:!0,write:!0}})],g.prototype,"field",void 0),i([o({type:[Number],json:{read:!0,write:!0}})],g.prototype,"currentRangeExtent",void 0),i([o({type:[Number],json:{read:!0,write:!0}})],g.prototype,"fullRangeExtent",void 0),i([o({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],g.prototype,"type",void 0),g=i([b("esri.layers.support.RangeInfo")],g);var $;let D=$=class extends Oe(q.ofType(R)){constructor(e){super(e)}clone(){return new $(this.items.map(e=>e.clone()))}write(e,t){return this.toJSON(t)}toJSON(e){var r,s;const t=(r=e==null?void 0:e.layer)==null?void 0:r.spatialReference;return t?this.toArray().map(a=>{var p;if(!t.equals(a.spatialReference)){if(!tt(a.spatialReference,t))return(p=e==null?void 0:e.messages)==null||p.push(new V("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const d=new R;rt(a,d,t),a=d}const l=a.toJSON(e);return delete l.spatialReference,l}).filter(a=>a!=null):((s=e==null?void 0:e.messages)==null||s.push(new V("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(a=>a.toJSON(e)))}static fromJSON(e,t){const r=new $;return e.forEach(s=>r.add(R.fromJSON(s,t))),r}};D=$=i([b("esri.layers.support.PolygonCollection")],D);const O=D;var U;let w=U=class extends N{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new O,this._geometriesSource=null}initialize(){this.addHandles(me(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,ue))}readGeometries(e,t,r){Array.isArray(e)?this.geometries=O.fromJSON(e,r):this._geometriesSource={url:it(e,r),context:r}}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:r,context:s}=this._geometriesSource,a=await Y(r,{responseType:"json",signal:t==null?void 0:t.signal}),l=e.toJSON(),p=a.data.map(d=>({...d,spatialReference:l}));this.geometries=O.fromJSON(p,s),this._geometriesSource=null}clone(){const e=new U({geometries:ae(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};i([o({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],w.prototype,"spatialRelationship",void 0),i([o({type:O,nonNullable:!0,json:{write:!0}}),et({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],w.prototype,"geometries",void 0),i([v(["web-scene","portal-item"],"geometries")],w.prototype,"readGeometries",null),w=U=i([b("esri.layers.support.SceneFilter")],w);const yt=w;async function ht({fieldName:e,statisticsInfo:t,errorContext:r,fieldsIndex:s,path:a,customParameters:l,apiKey:p,signal:d}){if(t==null)throw new m(`${r}:no-cached-statistics`,"Cached statistics are not available for this layer");const c=s.get(e);if(c==null)throw new m(`${r}:field-unexisting`,`Field '${e}' does not exist on the layer`);const y=t.find(I=>I.name===c.name);if(y==null)throw new m(`${r}:no-cached-statistics`,"Cached statistics for this attribute are not available");const u=Ee(a,y.href),{data:h}=await Y(u,{query:{f:"json",...l,token:p},responseType:"json",signal:d});return h}async function ft(e){const t=[];for(const r of e)r.name.toLowerCase().endsWith(".zip")?t.push(gt(r)):t.push(Promise.resolve(r));return(await Promise.all(t)).flat()}async function gt(e){const{BlobReader:t,ZipReader:r,BlobWriter:s}=await X(()=>import("./zipjs-wrapper-DnezS2lx.js"),[],import.meta.url),a=[];return(await new r(new t(e)).getEntries()).forEach(p=>{var y;if(p.directory||/^__MACOS/i.test(p.filename))return;const d=new s,c=(y=p.getData)==null?void 0:y.call(p,d).then(u=>new File([u],p.filename));c&&a.push(c)}),Promise.all(a)}const vt=new Set(["3DObject","Point"]),Z=ke();let n=class extends ct(Le(Te(be(Fe(Se(_e(de(Ie(we(oe(fe))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new q,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=ne(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var s,a,l;const r=(a=(s=this.getFeatureType(t==null?void 0:t.feature))==null?void 0:s.domains)==null?void 0:a[e];return r&&r.type!=="inherited"?r:((l=this.getField(e))==null?void 0:l.domain)??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){var e;return((e=this.associatedLayer)==null?void 0:e.types)??[]}get typeIdField(){var e;return((e=this.associatedLayer)==null?void 0:e.typeIdField)??null}get templates(){var e;return((e=this.associatedLayer)==null?void 0:e.templates)??null}get formTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.formTemplate)??null}get attributeTableTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.attributeTableTemplate)??null}get fieldsIndex(){return new Je(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:ee.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&Ce(this.associatedLayer)}get geometryType(){return wt[this.profile]||"mesh"}set renderer(e){J(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){var C;e=e??Pe;const{query:t,queryRelated:r,editing:{supportsGlobalId:s,supportsRollbackOnFailure:a,supportsUploadWithItemId:l,supportsGeometryUpdate:p,supportsReturnServiceEditsInSourceSpatialReference:d},data:{supportsZ:c,supportsM:y,isVersioned:u,supportsAttachment:h},operations:{supportsEditing:I,supportsAdd:E,supportsUpdate:j,supportsDelete:x,supportsQuery:S,supportsQueryAttachments:_,supportsAsyncConvert3D:L}}=e,T=e.operations.supportsChangeTracking,A=!!((C=this.associatedLayer)!=null&&C.infoFor3D);return{query:t,queryRelated:r,editing:{supportsGlobalId:s,supportsReturnServiceEditsInSourceSpatialReference:d,supportsRollbackOnFailure:a,supportsGeometryUpdate:A&&p,supportsUploadWithItemId:l},data:{supportsAttachment:h,supportsZ:c,supportsM:y,isVersioned:u},operations:{supportsQuery:S,supportsQueryAttachments:_,supportsEditing:I&&T,supportsAdd:A&&E&&T,supportsDelete:A&&x&&T,supportsUpdate:j&&T,supportsAsyncConvert3D:L}}}get editingEnabled(){var e;return this._isOverridden("editingEnabled")?this._get("editingEnabled"):((e=this.associatedLayer)==null?void 0:e.editingEnabled)??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){var e;return((e=this.associatedLayer)==null?void 0:e.infoFor3D)??null}get relationships(){var e;return(e=this.associatedLayer)==null?void 0:e.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e)),e||void 0}get displayField(){var e;return((e=this.associatedLayer)==null?void 0:e.displayField)??null}readProfile(e,t){const r=t.store.profile;return r!=null&&B[r]?B[r]:(f.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}get useViewTime(){var e;return((e=this.associatedLayer)==null?void 0:e.useViewTime)??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(le),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await st(this,{origin:"service"},t),J(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){f.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){var t;const e=new ot;return this.geometryType==="mesh"?(t=this.associatedLayer)!=null&&t.infoFor3D&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(r=>{if(r!=null&&r.features)for(const s of r.features)s.layer=this,s.sourceLayer=this;return r})}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new m("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new m("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){var s;const r=je(this.fieldsIndex,await dt(this,mt(this)));return pt(((s=this.parsedUrl)==null?void 0:s.path)??"",this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new m("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const s=new re;return s.attributes=r[0],s.layer=this,s.sourceLayer=this,s}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(f.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return lt(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new m("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new m("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(Q.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(Q.SAVE,e)}async applyEdits(e,t){const{applyEdits:r}=await X(()=>import("./editingSupport-CA_XWXsU.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54]),import.meta.url);let s=t;await this.load();const a=this.associatedLayer;if(!a)throw new m(`${this.type}-layer:not-editable`,"Service is not editable");await a.load();const{globalIdField:l}=a,p=!!a.infoFor3D,d=(s==null?void 0:s.globalIdUsed)??!0;if(p&&l==null)throw new m(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(p&&!d)throw new m(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return M(a.url)&&p&&e.deleteFeatures!=null&&l!=null&&(s={...s,globalIdToObjectId:await Ve(a,e.deleteFeatures,l)}),r(this,a.source,e,s)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new m(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(e,t){t??(t={});const r=u=>{throw f.getLogger(this).error(".convertMesh()",u.message),u};await this.load(),this.infoFor3D||r(new m("invalid:layer","SceneLayer has no capability for mesh conversion"));const s=await this.extractAndFilterFiles(e),a=s.reduce((u,h)=>He(this.infoFor3D,h)?u+1:u,0);a===0&&r(new ge),a>1&&r(new ve);const l=this.spatialReference,p=t.location??new he({x:0,y:0,z:0,spatialReference:l}),d=p.spatialReference.isGeographic?"local":"georeferenced",c=ye.createWithExternalSource(p,s,{vertexSpace:d,transform:Ye(p.spatialReference),unitConversionDisabled:!0}),[y]=await this.uploadAssets([c],{...t,useAssetOrigin:!t.location});return y}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await ft(e)).filter(r=>We(t,r)):e}validateLayer(e){if(e.layerType&&!vt.has(e.layerType))throw new m("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new m("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new m("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,s){let a=!1,l=!1;if(r==null)a=!0,l=!0;else{const p=s&&s.isGeographic;switch(r){case"east-north-up":case"earth-centered":a=!0,l=p;break;case"vertex-reference-frame":a=!0,l=!p;break;default:a=!1}}if(!a)throw new m("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new m("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new m("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){var e,t,r;if(this._fieldUsageInfo={},this.fields)for(const s of this.fields){const a=!!((e=this.attributeStorageInfo)!=null&&e.some(d=>d.name===s.name)),l=!!((r=(t=this.associatedLayer)==null?void 0:t.fields)!=null&&r.some(d=>d&&s.name===d.name)),p={supportsLabelingInfo:a,supportsRenderer:a,supportsPopupTemplate:a||l,supportsLayerQuery:l};this._fieldUsageInfo[s.name]=p}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){var t;if(!((t=this.associatedLayer)!=null&&t.fields))return;let e=null;for(const r of this.associatedLayer.fields){const s=this.getField(r.name);s?(!s.domain&&r.domain&&(s.domain=r.domain.clone()),s.editable=r.editable,s.nullable=r.nullable,s.length=r.length):(e||(e=this.fields?this.fields.slice():[]),e.push(r.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=G(this);for(let r=0;r<e.length;r++){const s=e[r],a=this.originIdOf(s),l=this.associatedLayer.originIdOf(s);a<l&&(l===P.SERVICE||l===P.PORTAL_ITEM)&&t.setAtOrigin(s,this.associatedLayer[s],l)}}_applyAssociatedLayerExtentOverride(){var t,r,s;const e=(t=this.associatedLayer)==null?void 0:t.getAtOrigin("fullExtent","service");((r=this.associatedLayer)==null?void 0:r.infoFor3D)==null||!e||!M((s=this.associatedLayer)==null?void 0:s.url)||!te(this)||G(this).setAtOrigin("fullExtent",e.clone(),P.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:s}=await Ae(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),a=await Xe.FeatureLayer();this.associatedLayer=new a({url:t,customParameters:this.customParameters,layerId:r,portalItem:s}),await this.associatedLayer.load()}catch(t){pe(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await ce(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?f.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):f.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&W(f.getLogger(this),at("Mesh scene layers","relative-to-scene",e)),W(f.getLogger(this),nt("Scene layers",e))}async fetchStatistics(e,t){var r;return await ht({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:((r=this.parsedUrl)==null?void 0:r.path)??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t==null?void 0:t.signal})}};i([o({types:{key:"type",base:Ge,typeMap:{selection:Qe}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],n.prototype,"featureReduction",void 0),i([o({type:[g],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],n.prototype,"rangeInfos",void 0),i([o({json:{read:!1}})],n.prototype,"associatedLayer",void 0),i([o({type:["show","hide"]})],n.prototype,"listMode",void 0),i([o({type:["ArcGISSceneServiceLayer"]})],n.prototype,"operationalLayerType",void 0),i([o({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),i([o({...Z.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],n.prototype,"fields",void 0),i([o()],n.prototype,"types",null),i([o()],n.prototype,"typeIdField",null),i([o()],n.prototype,"templates",null),i([o()],n.prototype,"formTemplate",null),i([o()],n.prototype,"attributeTableTemplate",null),i([o({readOnly:!0,clonable:!1})],n.prototype,"fieldsIndex",null),i([o({type:Be,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],n.prototype,"floorInfo",void 0),i([o(Z.outFields)],n.prototype,"outFields",void 0),i([o({type:ee,readOnly:!0,json:{read:!1}})],n.prototype,"nodePages",void 0),i([v("service","nodePages",["nodePages","pointNodePages"])],n.prototype,"readNodePages",null),i([o({type:[ze],readOnly:!0})],n.prototype,"materialDefinitions",void 0),i([o({type:[Ke],readOnly:!0})],n.prototype,"textureSetDefinitions",void 0),i([o({type:[Me],readOnly:!0})],n.prototype,"geometryDefinitions",void 0),i([o({readOnly:!0})],n.prototype,"serviceUpdateTimeStamp",void 0),i([o({readOnly:!0})],n.prototype,"attributeStorageInfo",void 0),i([o({readOnly:!0})],n.prototype,"statisticsInfo",void 0),i([o({type:q.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],n.prototype,"excludeObjectIds",void 0),i([o({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],n.prototype,"definitionExpression",void 0),i([o({type:yt,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],n.prototype,"filter",void 0),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],n.prototype,"path",void 0),i([o(Re)],n.prototype,"elevationInfo",null),i([o({readOnly:!0,json:{read:!1}})],n.prototype,"effectiveCapabilities",null),i([o({readOnly:!0})],n.prototype,"effectiveEditingEnabled",null),i([o({type:String})],n.prototype,"geometryType",null),i([o(De)],n.prototype,"labelsVisible",void 0),i([o({type:[Ze],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:H},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:H},write:!0}})],n.prototype,"labelingInfo",void 0),i([o(Ue)],n.prototype,"legendEnabled",void 0),i([o({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var s,a;if(typeof e=="number"&&e>=0&&e<=1)return e;const r=(a=(s=t.layerDefinition)==null?void 0:s.drawingInfo)==null?void 0:a.transparency;return r!==void 0?ut(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],n.prototype,"opacity",void 0),i([o({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],n.prototype,"priority",void 0),i([o({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],n.prototype,"semantic",void 0),i([o({types:se,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],n.prototype,"renderer",null),i([o({json:{read:!1}})],n.prototype,"cachedDrawingInfo",void 0),i([v("service","cachedDrawingInfo")],n.prototype,"readCachedDrawingInfo",null),i([o({readOnly:!0,json:{read:!1}})],n.prototype,"capabilities",null),i([o({type:Boolean,json:{read:!1}})],n.prototype,"editingEnabled",null),i([o({readOnly:!0,json:{write:!1,read:!1}})],n.prototype,"infoFor3D",null),i([o({readOnly:!0,json:{write:!1,read:!1}})],n.prototype,"relationships",null),i([o(qe)],n.prototype,"popupEnabled",void 0),i([o({type:ie,json:{name:"popupInfo",write:!0}})],n.prototype,"popupTemplate",void 0),i([o({readOnly:!0,json:{read:!1}})],n.prototype,"defaultPopupTemplate",null),i([o({type:String,json:{read:!1}})],n.prototype,"objectIdField",void 0),i([v("service","objectIdField",["objectIdField","fields"])],n.prototype,"readObjectIdField",null),i([o({type:String,json:{read:!1}})],n.prototype,"globalIdField",void 0),i([v("service","globalIdField",["globalIdField","fields"])],n.prototype,"readGlobalIdField",null),i([o({readOnly:!0,type:String,json:{read:!1}})],n.prototype,"displayField",null),i([o({type:String,json:{read:!1}})],n.prototype,"profile",void 0),i([v("service","profile",["store.profile"])],n.prototype,"readProfile",null),i([o({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],n.prototype,"normalReferenceFrame",void 0),i([o(Ne)],n.prototype,"screenSizePerspectiveEnabled",void 0),i([o({json:{read:!1,origins:{service:{read:!0}}}})],n.prototype,"serviceItemId",void 0),i([o($e)],n.prototype,"useViewTime",null),n=i([b("esri.layers.SceneLayer")],n);const B={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},wt={"mesh-pyramids":"mesh",points:"point"},Hs=n;export{Hs as default};
