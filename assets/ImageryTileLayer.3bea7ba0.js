import{s as qe,$ as w,a0 as T,cv as J,jf as me,aN as q,d1 as re,dZ as Ue,a1 as Z,jy as Ve,t as O,r as P,ap as et,U as Xe,cD as tt,f as E,h as V,a8 as W,v as it,cf as st,c_ as rt,cg as Ye,e as nt,m as at,bC as ot,is as lt,it as ct,dU as ut,dV as ft,j1 as ht,j3 as dt,iu as mt,dW as pt,aO as yt,f_ as ue,ix as gt,R as xt,gk as It,dN as wt,iX as bt,d2 as St,dz as vt,d_ as Tt}from"./index.ebaf2ed0.js";import{p as Rt,l as Ke,b as De,t as Oe,d as Ze,I as _t,B as kt,k as Ct,c as Pt,e as Mt,r as Ft,s as $t,m as Dt,u as Ot,o as Bt,a as Et}from"./fetchRasterInfo.9c082857.js";import{m as zt,u as Nt,p as Ht,b as At}from"./dataUtils.1b827a68.js";import{U as Lt,S as Jt,p as fe,r as Be,l as he,m as Wt,c as Ce,P as jt,a as Gt,N as qt,b as Ut,n as pe,k as Vt,x as Xt,D as Yt}from"./RasterSymbolizer.0d6a1990.js";import{i as Ee,m as ze,x as Ne,d as Kt,h as Zt}from"./RawBlockCache.b74b9333.js";import{a as ve,C as Qt,U as ei,M as ti,x as ii,u as si}from"./pixelUtils.0ca56111.js";import{k as He,X as ye,_ as Ae,t as Le,e as ri,D as Te,F as Re,V as ni,H as ai,v as oi}from"./rasterProjectionHelper.74865816.js";import{f as li,i as ci,m as Pe,c as ui}from"./utils.2d21cdba.js";import{n as fi,z as hi}from"./TilemapCache.93eccf98.js";import"./ClassBreaksDefinition.75342cea.js";import"./colorUtils.e5585cd0.js";const Je=qe.getLogger("esri.layers.mixins.ImageryTileMixin"),di=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(i){this._set("url",Ve(i,Je))}set renderer(i){this._set("renderer",i),this.updateRenderer()}async convertVectorFieldData(i,s){if(O(i))return null;const r=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:i,dataType:n},s):zt(i,n)}async createFlowMesh(i,s){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(i,s):Nt(i.meshType,i.simulationSettings,i.flowData,P(s.signal)?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(i){var o,c;const{multidimensionalInfo:s}=this.rasterInfo;if(O(s))return i;let r=i.multidimensionalDefinition||this.multidimensionalDefinition;!O(r)&&r.length||(r=De(this.raster.rasterInfo));const n=i.timeExtent||this.timeExtent;if(P(r)&&P(n)&&(P(n.start)||P(n.end))){r=r.map(m=>m.clone());const a=(c=(o=s.variables.find(({name:m})=>m===r[0].variableName))==null?void 0:o.dimensions)==null?void 0:c.find(({name:m})=>m==="StdTime"),l=r.find(({dimensionName:m})=>m==="StdTime");if(!a||!l)return{...i,multidimensionalDefinition:null};const{start:u,end:f}=n,h=O(u)?null:u.getTime(),d=O(f)?null:f.getTime(),p=h!=null?h:d,y=d!=null?d:h;if(P(a.values)){const m=a.values.filter(g=>{if(Array.isArray(g)){if(p===y)return g[0]<=p&&g[1]>=p;const b=g[0]<=p&&g[1]>p||g[0]<y&&g[1]>=y,S=g[0]>=p&&g[1]<=y||g[0]<p&&g[1]>y;return b||S}return p===y?g===p:g>=p&&g<=y});if(m.length){const g=m.sort((b,S)=>{var _,k,R,x;return p===y?((_=b[0])!=null?_:b)-((k=S[0])!=null?k:S):Math.abs(((R=b[1])!=null?R:b)-y)-Math.abs(((x=S[1])!=null?x:S)-y)})[0];l.values=[g]}else r=null}else if(a.hasRegularIntervals&&a.extent){const[m,g]=a.extent;p>g||y<m?r=null:l.values=p===y?[p]:[Math.max(m,p),Math.min(g,y)]}}return{...i,multidimensionalDefinition:r}}async updateRenderer(){if(!this.loaded||JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const i=this._rasterJobHandler.instance;i&&(this.symbolizer.rendererJSON=Oe(this.renderer.toJSON()),this.symbolizer.bind(),await i.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(i,s){const r=i&&i.pixelBlock;if(!(P(r)&&r.pixels&&r.pixels.length>0))return null;let n;await this.updateRenderer();const o=this._rasterJobHandler.instance,{bandIds:c}=this;return n=o?await o.symbolize({...i,simpleStretchParams:s,bandIds:c}):this.symbolizer.symbolize({...i,simpleStretchParams:s,bandIds:c}),n}getTileUrl(i,s,r){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${i}/${s}/${r}`:""}getCompatibleTileInfo(i,s,r=!1){if(!this.loaded||O(s))return null;if(r&&i.equals(this.spatialReference))return this.tileInfo;const n=et(i);return re.create({size:256,spatialReference:i,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(i){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}async fetchTile(i,s,r,n={}){if(n.requestAsImageElement){const o=this.getTileUrl(i,s,r);return Xe(o,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then(c=>c.data)}if(P(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),O(n.multidimensionalDefinition))){const o=n.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,s,r,o),pixelBlock:null}}return await this._initJobHandler(),this.renderer.type==="raster-shaded-relief"&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(i,s,r,n)}async fetchPixels(i,s,r,n={}){return P(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),O(n.multidimensionalDefinition))?{extent:i,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(i,s,r,n))}async identify(i,s={}){return P(this.rasterInfo.multidimensionalInfo)&&!(this.rasterInfo.hasMultidimensionalTranspose&&!!(Ze(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s),O(s.multidimensionalDefinition))?{location:i,value:null}:this.raster.identify(i,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var r;const i=this.rasterInfo.multidimensionalInfo;if(O(i)||this.rasterInfo.dataType!=="standard-time")return!1;const s=(r=this.multidimensionalDefinition[0])==null?void 0:r.variableName;return i.variables.some(n=>n.name===s&&n.dimensions.some(o=>o.name==="StdTime"))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=De(this.raster.rasterInfo)),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const i=new Pt;return this._rasterJobHandler.connectionPromise=i.initialize().then(()=>{this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null,this._cachedRendererJson=null}_configDefaultInterpolation(){var i;if(this.interpolation==null){const s=_t(this.rasterInfo,this.raster.tileType,(i=this.sourceJSON)==null?void 0:i.defaultResamplingMethod);this._set("interpolation",s)}}_configDefaultRenderer(){var r,n,o;const i=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=kt(i)),!this.renderer){const c=Ct(i,{bandIds:this.bandIds,variableName:P(this.multidimensionalDefinition)?(r=this.multidimensionalDefinition[0])==null?void 0:r.variableName:null});this.raster.datasetFormat==="WCSServer"&&c.type==="raster-stretch"&&(((n=i.statistics)==null?void 0:n[0].max)>1e24||((o=i.statistics)==null?void 0:o[0].min)<-1e24)&&(c.dynamicRangeAdjustment=!0,c.statistics=null,c.stretchType==="none"&&(c.stretchType="min-max")),this.renderer=c}this.symbolizer?(this.symbolizer.rendererJSON=Oe(this.renderer.toJSON()),this.symbolizer.rasterInfo=i):this.symbolizer=new Lt({rendererJSON:this.renderer.toJSON(),rasterInfo:i});const s=this.symbolizer.bind();s.success||Je.warn("imagery-tile-mixin",s.error||"The given renderer is not supported by the layer.")}};return w([T()],t.prototype,"_cachedRendererJson",void 0),w([T()],t.prototype,"_compatibleFullExtent",void 0),w([T()],t.prototype,"_rasterJobHandler",void 0),w([T()],t.prototype,"bandIds",void 0),w([T({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),w([T({type:J,json:{read:!1}}),me("rasterInfo.extent")],t.prototype,"fullExtent",void 0),w([T()],t.prototype,"interpolation",void 0),w([T()],t.prototype,"ioConfig",void 0),w([T({type:[Rt]})],t.prototype,"multidimensionalDefinition",void 0),w([T()],t.prototype,"raster",void 0),w([T({readOnly:!0}),me("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),w([T()],t.prototype,"sourceJSON",void 0),w([T({type:q,json:{read:!1}}),me("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),w([T({type:re,json:{read:!1}}),me("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),w([T(Ue)],t.prototype,"url",null),w([T({types:Ke})],t.prototype,"renderer",null),w([T()],t.prototype,"symbolizer",void 0),t=w([Z("esri.layers.ImageryTileMixin")],t),t},ge=8;let U=class extends tt(st){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=He();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:re.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=ye(e.spatialReference);return P(t)&&e.extent.width>=t/2}set url(e){this._set("url",Ve(e,qe.getLogger(this.declaredClass)))}async open(e){throw new E("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,s={}){const r=s.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(e,t,i,r);return this.fetchPixels(n,r.size[0],r.size[1],s)}async identify(e,t={}){var C;const{multidimensionalDefinition:i,timeExtent:s}=t,{hasMultidimensionalTranspose:r,multidimensionalInfo:n}=this.rasterInfo;let{transposedVariableName:o}=t;const c=P(n)&&r&&(s!=null||Ze(i));c&&!o&&(o=P(i)&&i.length>0?i[0].variableName:n.variables[0].name,t={...t,transposedVariableName:o}),t=this._getRequestOptionsWithSliceId(t);const{spatialReference:a,extent:l}=this.rasterInfo,{datumTransformation:u}=t;let f=Ae(e,a,u);if(!l.intersects(f))return{location:f,value:null};if(P(this.rasterInfo.transform)){const F=this.rasterInfo.transform.inverseTransform(f);if(!this.rasterInfo.nativeExtent.intersects(F))return{location:F,value:null};f=F}let h=0;const d=o&&P(n)&&this.rasterInfo.hasMultidimensionalTranspose;if(!d){if(t.srcResolution)h=Le(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(h=await this.computeBestPyramidLevelForLocation(e,t),h==null)return{location:f,value:null}}const p=this.identifyPixelLocation(f,h,null,d);if(p===null)return{location:f,value:null};const{row:y,col:m,rowOffset:g,colOffset:b,blockWidth:S}=p,_=o!=null?o:V(t.sliceId),k=Ee(this.url,_),R=`${h}/${y}/${m}`;let x=ze(k,null,R);O(x)&&(x=this.fetchRawTile(h,y,m,t),Ne(k,null,R,x));const I=await x;if(O(I)||!((C=I.pixels)!=null&&C.length))return{location:f,value:null};const v=g*S+b;return this._processIdentifyResult(I,{srcLocation:f,position:v,pyramidLevel:h,useTransposedTile:d,requestSomeSlices:c,identifyOptions:t})}async fetchPixels(e,t,i,s={}){if(e=ri(e),(s=this._getRequestOptionsWithSliceId(s)).requestRawData)return this._fetchPixels(e,t,i,s);const r=ye(e.spatialReference),n=Te(e);if(O(r)||n===0||n===1&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,s);if(n>=3)return{extent:e,pixelBlock:null};const o=[],{xmin:c,xmax:a}=e,l=Math.round(r/(a-c)*t),u=l-Math.round((r/2-c)/(a-c)*t);let f=0;const h=[];for(let m=0;m<=n;m++){const g=new J({xmin:m===0?c:-r/2,xmax:m===n?a-r*m:r/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),b=m===0?l-u:m===n?t-f:l;f+=b,h.push(b);const S=s.disableWrapAround&&m>0?null:this._fetchPixels(g,b,i,s);o.push(S)}const d=(await Promise.all(o)).map(m=>m==null?void 0:m.pixelBlock);let p=null;const y={width:t,height:i};return this.rasterJobHandler?p=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:h},s)).pixelBlock:p=ve(d,y,{blockWidths:h}),{extent:e,srcExtent:Re(e,this.rasterInfo.spatialReference,s.datumTransformation),pixelBlock:p}}async fetchRawPixels(e,t,i,s={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,s),{nativeExtent:n,nativePixelSize:o,storageInfo:c}=this.rasterInfo,a=2**e,l=o.x*a,u=o.y*a,f=new J({xmin:n.xmin+l*t.x,xmax:n.xmin+l*(t.x+i.width-1),ymin:n.ymax-u*(t.y+i.height-1),ymax:n.ymax-u*t.y,spatialReference:n.spatialReference});if(!r)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:h,mosaicSize:d}=r;if(h.length===1&&P(h[0])&&h[0].width===i.width&&h[0].height===i.height)return{extent:f,srcExtent:f,pixelBlock:r.pixelBlocks[0]};const p=e>0?c.pyramidBlockWidth:c.blockWidth,y=e>0?c.pyramidBlockHeight:c.blockHeight,m={x:t.x%p,y:t.y%y};let g;return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:h,srcMosaicSize:d,destDimension:i,clipOffset:m,clipSize:i,coefs:null,sampleSpacing:null,interpolation:s.interpolation,alignmentInfo:null,blockWidths:null},s)).pixelBlock:g=ve(h,d,{clipOffset:m,clipSize:i}),{extent:f,srcExtent:f,pixelBlock:g}}fetchRawTile(e,t,i,s){throw new E("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Re(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Jt(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var a;const{customFetchParameters:s}=this.ioConfig,{range:r,query:n,headers:o}=t;i=(a=i!=null?i:t.retryCount)!=null?a:this.ioConfig.retryCount;const c=r?{Range:`bytes=${r.from}-${r.to}`}:null;try{return await Xe(e,{...t,query:{...n,...s},headers:{...o,...c}})}catch(l){if(i>0)return i--,this.request(e,t,i);throw l}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return O(t)||O(e)||e.length===0?null:Mt(e,t)}getTileExtentFromTileInfo(e,t,i,s){const r=s.lodAt(e);return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,s.origin,s.spatialReference,s.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:s}=this.rasterInfo;if(!e.tileInfo){const r=[],n=e.maximumPyramidLevel||0;let o=Math.max(s.x,s.y),c=1/.0254*96*o;for(let l=0;l<=n;l++)r.push({level:n-l,resolution:o,scale:c}),o*=2,c*=2;const a=new W({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new re({origin:a,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,s){const{width:r,height:n,nativeExtent:o,pixelSize:c,spatialReference:a}=e,l=new W({x:o.xmin,y:o.ymax,spatialReference:a});s==null&&(s=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const u=this.computeBlockBoundary(o,512,512,{x:o.xmin,y:o.ymax},[c],s);e.storageInfo=new fe({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:l,firstPyramidLevel:1,maximumPyramidLevel:s,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,s,r,n=0,o=2){if(r.length===1&&n>0){r=[...r];let{x:u,y:f}=r[0];for(let h=0;h<n;h++)u*=o,f*=o,r.push({x:u,y:f})}const c=[],{x:a,y:l}=s;for(let u=0;u<r.length;u++){const{x:f,y:h}=r[u];c.push({minCol:Math.floor((e.xmin-a+.1*f)/t/f),maxCol:Math.floor((e.xmax-a-.1*f)/t/f),minRow:Math.floor((l-e.ymax+.1*h)/i/h),maxRow:Math.floor((l-e.ymin-.1*h)/i/h)})}return c}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:s}=this.rasterInfo.storageInfo;if(e===0)return t;if(P(i)&&i.length)return i[e-1];const r=s**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i,s){const{spatialReference:r,nativeExtent:n,storageInfo:o}=this.rasterInfo,{maximumPyramidLevel:c,origin:a,transposeInfo:l}=o,u=s&&P(l)?l.tileSize[0]:o.blockWidth,f=s&&P(l)?l.tileSize[1]:o.blockHeight,h=Ae(e,r,i);if(!n.intersects(h)||t<0||t>c)return null;const d=this.getPyramidPixelSize(t),{x:p,y}=d,m=(a.y-h.y)/y/f,g=(h.x-a.x)/p/u,b=Math.min(f-1,Math.floor((m-Math.floor(m))*f)),S=Math.min(u-1,Math.floor((g-Math.floor(g))*u));return{pyramidLevel:t,row:Math.floor(m),col:Math.floor(g),rowOffset:b,colOffset:S,blockWidth:u,srcLocation:h}}getTileExtent(e,t,i,s,r,n){const[o,c]=n,a=s.x+i*o*e.x,l=a+o*e.x,u=s.y-t*c*e.y,f=u-c*e.y;return new J({xmin:a,xmax:l,ymin:f,ymax:u,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const s=this.rasterInfo.storageInfo.blockBoundary[e];return!s||s.maxRow<t||s.maxCol<i||s.minRow>t||s.minCol>i}async _fetchPixels(e,t,i,s={}){let r=Te(e);if(r>=2)return{extent:e,pixelBlock:null};const n=this._getSourceDataInfo(e,t,i,s),{pyramidLevel:o,pyramidResolution:c,srcResolution:a,srcExtent:l,srcWidth:u,srcHeight:f}=n;if(u===0||f===0)return{extent:e,srcExtent:l,pixelBlock:null};const h=V(this.rasterInfo.transform),d=(h==null?void 0:h.type)==="gcs-shift",p=P(ye(e.spatialReference));!d&&p||(r=Te(n.srcExtent,d));const y=this.rasterInfo.storageInfo,m={x:Math.floor((l.xmin-y.origin.x)/c.x+.1),y:Math.floor((y.origin.y-l.ymax)/c.y+.1)},g=await this._fetchRawTiles(o,m,{width:u,height:f,wrapCount:r},s);if(!g)return{extent:e,srcExtent:l,pixelBlock:null};const b=o>0?y.pyramidBlockWidth:y.blockWidth,S=o>0?y.pyramidBlockHeight:y.blockHeight,_=b===u&&S===f&&m.x%b==0&&m.y%S==0,k=new W({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),R=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:x}=s;if(!R&&_&&g.pixelBlocks.length===1&&b===t&&S===i&&a.x===k.x&&a.y===k.y)return{extent:e,srcExtent:l,pixelBlock:g.pixelBlocks[0]};const I=p&&P(ye(l.spatialReference)),v=s.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");v&&!this.rasterJobHandler&&await He();const C=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:g.extent,pixelSize:k.toJSON(),datumTransformation:x,rasterTransform:h,hasWrapAround:r>0||I,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:v},s):ni({projectedExtent:e,srcBufferExtent:g.extent,pixelSize:k,datumTransformation:x,rasterTransform:h,hasWrapAround:r>0||I,isAdaptive:!1,includeGCSGrid:v});let F;const j=!s.requestRawData,X={rows:C.spacing[0],cols:C.spacing[1]},M=V(this._getRasterTileAlignmentInfo(o,g.extent.xmin)),{pixelBlocks:z,mosaicSize:N,isPartiallyFilled:H}=g;let L=null;if(this.rasterJobHandler)({pixelBlock:F,localNorthDirections:L}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:z,srcMosaicSize:N,destDimension:j?{width:t,height:i}:null,coefs:j?C.coefficients:null,sampleSpacing:j?X:null,projectDirections:v,gcsGrid:v?C.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:s.interpolation,alignmentInfo:M,blockWidths:null},s));else{const B=ve(z,N,{alignmentInfo:M});F=j?Qt(B,{width:t,height:i},C.coefficients,X,s.interpolation):B,v&&C.gcsGrid&&(L=ei({width:t,height:i},C.gcsGrid),F=Ht(F,this.rasterInfo.dataType,L))}return s.requestRawData||v?{srcExtent:l,pixelBlock:F,transformGrid:C,localNorthDirections:L,extent:e,isPartiallyFilled:H}:{srcExtent:l,extent:e,pixelBlock:F}}async _fetchRawTiles(e,t,i,s){const{origin:r,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:o,blockHeight:c}=this.getBlockWidthHeight(e);let{x:a,y:l}=t,{width:u,height:f,wrapCount:h}=i;const d=this._getRasterTileAlignmentInfo(e,0);s.buffer&&(a-=s.buffer.cols,l-=s.buffer.rows,u+=2*s.buffer.cols,f+=2*s.buffer.rows);let p=0,y=0,m=0;h&&P(d)&&({worldColumnCountFromOrigin:y,originColumnOffset:m,rightPadding:p}=d,y*d.blockWidth-p>=a+u&&(p=0));const g=Math.floor(a/o),b=Math.floor(l/c),S=Math.floor((a+u+p-1)/o),_=Math.floor((l+f+p-1)/c),k=n[e];if(!k)return null;const{minRow:R,minCol:x,maxCol:I,maxRow:v}=k;if(h===0&&(_<R||S<x||b>v||g>I))return null;const C=new Array;let F=!1;const j=this.ioConfig.allowPartialFill==null?s.allowPartialFill:this.ioConfig.allowPartialFill;for(let B=b;B<=_;B++)for(let $=g;$<=S;$++){let de=$;if(!s.disableWrapAround&&h&&P(d)&&y<=$&&(de=$-y-m),B>=R&&de>=x&&v>=B&&I>=de){const Fe=this._fetchRawTile(e,B,de,s);j?C.push(new Promise($e=>{Fe.then(Qe=>$e(Qe)).catch(()=>{F=!0,$e(null)})})):C.push(Fe)}else C.push(null)}if(C.length===0)return null;const X=await Promise.all(C),M={height:(_-b+1)*c,width:(S-g+1)*o},{spatialReference:z}=this.rasterInfo,N=this.getPyramidPixelSize(e),{x:H,y:L}=N;return{extent:new J({xmin:r.x+g*o*H,xmax:r.x+(S+1)*o*H,ymin:r.y-(_+1)*c*L,ymax:r.y-b*c*L,spatialReference:z}),pixelBlocks:X,mosaicSize:M,isPartiallyFilled:F}}_fetchRawTile(e,t,i,s){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:n,minCol:o,maxCol:c,maxRow:a}=r;if(t<n||i<o||t>a||i>c)return Promise.resolve(null);const l=Ee(this.url,s.sliceId),u=`${e}/${t}/${i}`;let f=ze(l,s.registryId,u);if(O(f)){const h=new AbortController;f=this.fetchRawTile(e,t,i,{...s,signal:h.signal}),Ne(l,s.registryId,u,f,h),f.catch(()=>Kt(l,s.registryId,u))}return s.signal&&it(s,()=>{Zt(l,s.registryId,u)}),f}_computeMagDirValues(e){var a;const{bandCount:t,dataType:i}=this.rasterInfo;if(!(t===2&&i==="vector-magdir"||i==="vector-uv")||(e==null?void 0:e.length)!==2||!((a=e[0])!=null&&a.length))return null;const s=e[0].length;if(i==="vector-magdir"){const l=e[1].map(u=>(u+360)%360);return[e[0],l]}const[r,n]=e,o=[],c=[];for(let l=0;l<s;l++){const[u,f]=At([r[l],n[l]]);o.push(u),c.push(f)}return[o,c]}_getRasterTileAlignmentInfo(e,t){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=ai(this.rasterInfo)),O(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i,s={}){const r={datumTransformation:s.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};s.srcResolution&&(r.srcResolution=s.srcResolution,this._updateSourceDataInfo(e,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:o,srcHeight:c,pyramidLevel:a}=r,l=o/t,u=c/i,f=a<n&&l*u>=16;if(f||a===n&&(l>ge||u>ge)||o===0||c===0){const h=new W({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let d=oi(h,this.rasterInfo.spatialReference,e,r.datumTransformation);const p=!d||s.srcResolution&&d.x+d.y<s.srcResolution.x+s.srcResolution.y;if(f&&s.srcResolution&&p){const y=Math.round(Math.log(Math.max(l,u))/Math.LN2)-1;if(n-a+3>=y){const m=2**y;d={x:s.srcResolution.x*m,y:s.srcResolution.y*m}}}d&&(r.srcResolution=d,this._updateSourceDataInfo(e,r))}return(r.srcWidth/t>ge||r.srcHeight/i>ge)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:s,datumTransformation:r}=t,{pyramidLevel:n,pyramidResolution:o,excessiveReading:c}=Le(s,this.rasterInfo,this.ioConfig.sampling);if(c)return;let a=t.srcExtent||Re(e,i,r);if(a==null)return;const l=V(this.rasterInfo.transform);l&&(a=l.inverseTransform(a)),t.srcExtent=a;const u=Math.ceil((a.xmax-a.xmin)/o.x-.1),f=Math.ceil((a.ymax-a.ymin)/o.y-.1);t.pyramidLevel=n,t.pyramidResolution=o,t.srcWidth=u,t.srcHeight=f}_getRequestOptionsWithSliceId(e){return P(this.rasterInfo.multidimensionalInfo)&&e.sliceId==null&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:s,pyramidLevel:r,useTransposedTile:n}=t,o=e.pixels[0].length/e.width/e.height;if(!(!e.mask||e.mask[s]))return{location:i,value:null};const{multidimensionalInfo:c}=this.rasterInfo;if(O(c)||!n){const d=e.pixels.map(m=>m[s]),p={location:i,value:d,pyramidLevel:r},y=this._computeMagDirValues(d.map(m=>[m]));return y!=null&&y.length&&(p.magdirValue=y.map(m=>m[0])),p}let a=e.pixels.map(d=>Array.prototype.slice.call(d,s*o,s*o+o)),l=this._computeMagDirValues(a);const{requestSomeSlices:u,identifyOptions:f}=t;let h=Ft(c,f.transposedVariableName);if(u){const d=$t(h,V(f.multidimensionalDefinition),V(f.timeExtent));a=a.map(p=>d.map(y=>p[y])),l=l==null?void 0:l.map(p=>d.map(y=>p[y])),h=d.map(p=>h[p])}return{location:i,value:null,dataSeries:h.map((d,p)=>{const y={value:a.map(m=>m[p]),multidimensionalDefinition:d.multidimensionalDefinition,variableName:d.multidimensionalDefinition[0].variableName,dimensionValues:{}};return l!=null&&l.length&&(y.magdirValue=[l[0][p],l[1][p]]),d.multidimensionalDefinition.forEach(m=>y.dimensionValues[m.dimensionName]=m.values[0]),y}),pyramidLevel:r}}};w([T()],U.prototype,"_rasterTileAlighmentInfo",void 0),w([T({readOnly:!0})],U.prototype,"_isGlobalWrappableSource",null),w([T(Ue)],U.prototype,"url",null),w([T({type:String,json:{write:!0}})],U.prototype,"datasetName",void 0),w([T({type:String,json:{write:!0}})],U.prototype,"datasetFormat",void 0),w([T()],U.prototype,"rasterInfo",void 0),w([T()],U.prototype,"ioConfig",void 0),w([T()],U.prototype,"sourceJSON",void 0),U=w([Z("esri.layers.support.rasterDatasets.BaseRaster")],U);const ae=U;function mi(e){const t=e.fields,i=e.records,s=t.some(l=>l.name.toLowerCase()==="oid")?"OBJECTID":"OID",r=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(l=>({name:l.name,type:"esriFieldType"+l.typeName,alias:l.name}))),n=r.map(l=>l.name),o=[];let c=0,a=0;return i.forEach(l=>{const u={};for(u[s]=c++,a=1;a<n.length;a++)u[n[a]]=l[a-1];o.push({attributes:u})}),{displayFieldName:"",fields:r,features:o}}class pi{static get supportedVersions(){return[5]}static parse(t){const i=new DataView(t),s=3&i.getUint8(0);if(s!==3)return{header:{version:s},recordSet:null};const r=i.getUint32(4,!0),n=i.getUint16(8,!0),o=i.getUint16(10,!0),c={version:s,recordCount:r,headerByteCount:n,recordByteCount:o};let a=32;const l=[],u=[];let f;if(s===3){for(;i.getUint8(a)!==13;)f=String.fromCharCode(i.getUint8(a+11)).trim(),l.push({name:Be(new Uint8Array(t,a,11)),type:f,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(f)],length:i.getUint8(a+16)}),a+=32;if(a+=1,l.length>0)for(;u.length<r&&t.byteLength-a>o;){const h=[];i.getUint8(a)===32?(a+=1,l.forEach(d=>{if(d.type==="C")h.push(Be(new Uint8Array(t,a,d.length)).trim());else if(d.type==="N")h.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(t,a,d.length)).trim(),10));else if(d.type==="F")h.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(t,a,d.length)).trim()));else if(d.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(t,a,d.length)).trim();h.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}a+=d.length}),u.push(h)):a+=o}}return{header:c,fields:l,records:u,recordSet:mi({fields:l,records:u})}}}const ee=new Map;ee.set("int16","esriFieldTypeSmallInteger"),ee.set("int32","esriFieldTypeInteger"),ee.set("int64","esriFieldTypeInteger"),ee.set("float32","esriFieldTypeSingle"),ee.set("float64","esriFieldTypeDouble"),ee.set("text","esriFieldTypeString");const We=8;let oe=class extends ae{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:e==null?void 0:e.signal});if(!this._validateHeader(t))throw new E("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:s}=this._parseHeader(t);if(s.dataType==="thematic"){const r=await this._fetchAuxiliaryInformation();s.attributeTable=r}this._set("storageInfo",i),this._set("rasterInfo",s),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,s={}){const{transposeInfo:r}=this.rasterInfo.storageInfo,{transposedVariableName:n}=s,o=!(!r||!n),c=o?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(c<0)return null;const a=this._buildCacheFilePath(c,t,i,s.multidimensionalDefinition,n),l=this._getIndexRecordFromBundle(t,i,o),u=await this.request(a,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!u)return null;const f=new Uint8Array(u.data),h=this._getTileEndAndContentType(f,l);if(h.recordSize===0)return null;const d=await this.request(a,{range:{from:h.position,to:h.position+h.recordSize},responseType:"array-buffer",signal:s.signal});if(!d)return null;const[p,y]=this._getTileSize(o);return this.decodePixelBlock(d.data,{width:p,height:y,planes:null,pixelType:null,returnPixelInterleavedDims:o})}_validateHeader(e){const t=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&e.type==="RasterInfo"&&!t.some(i=>!e[i])}_parseHeader(e){var L,B;const t=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:i,histograms:s,colormap:r,blockWidth:n,blockHeight:o,firstPyramidLevel:c,maximumPyramidLevel:a}=e,l=e.statistics&&e.statistics.map($=>({min:$.min,max:$.max,avg:$.mean,stddev:$.standardDeviation,median:$.median,mode:$.mode})),u=e.extent.spatialReference,f=(L=e.geodataXform)==null?void 0:L.spatialReference,h=new q((u==null?void 0:u.wkid)||(u==null?void 0:u.wkt)?u:f);let d=new J({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:h});const p=new W({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),y=Math.round((d.xmax-d.xmin)/p.x),m=Math.round((d.ymax-d.ymin)/p.y),g=this._parseTransform(e.geodataXform),b=g?d:null;g&&(d=g.forwardTransform(d),p.x=(d.xmax-d.xmin)/y,p.y=(d.ymax-d.ymin)/m);const S=(B=e.properties)!=null?B:{},_=e.format.toLowerCase().replace("cache/",""),k=new W(e.origin.x,e.origin.y,h);let R,x,I,v;if(r&&r.colors)for(R=[],x=0;x<r.colors.length;x++)I=r.colors[x],v=r.values?r.values[x]:x,R.push([v,255&I,I<<16>>>24,I<<8>>>24,I>>>24]);const C=e.LODInfos,F=[];for(x=0;x<C.levels.length;x++)F.push({level:C.levels[x],resolution:C.resolutions[x],scale:96/.0254*C.resolutions[x]});const j=new re({dpi:96,lods:F,format:_,origin:k,size:[n,o],spatialReference:h}),X={recordSize:We,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*We+64},M=[{maxCol:Math.ceil(y/n)-1,maxRow:Math.ceil(m/o)-1,minCol:0,minRow:0}];let z=2;if(a>0)for(x=0;x<a;x++)M.push({maxCol:Math.ceil(y/z/n)-1,maxRow:Math.ceil(m/z/o)-1,minCol:0,minRow:0}),z*=2;const N=e.mdInfo;let H=null;if(N&&S._yxs){const $=S._yxs;H={packetSize:$.PacketSize,tileSize:[$.TileXSize,$.TileYSize]}}return{storageInfo:X,rasterInfo:new he({width:y,height:m,pixelType:t,bandCount:i,extent:d,nativeExtent:b,transform:g,spatialReference:h,pixelSize:p,keyProperties:S,statistics:l,histograms:s,multidimensionalInfo:N,colormap:R,storageInfo:new fe({blockWidth:n,blockHeight:o,pyramidBlockWidth:n,pyramidBlockHeight:o,origin:k,tileInfo:j,transposeInfo:H,firstPyramidLevel:c,maximumPyramidLevel:a,blockBoundary:M})})}}_parseTransform(e){var i,s;if(!li(e))throw new E("cloudraster:open","the data contains unsupported geodata transform types");const t=ci(e);if(t.type==="identity")return null;if(t.type!=="polynomial"||!((i=t.forwardCoefficients)!=null&&i.length)||!((s=t.inverseCoefficients)!=null&&s.length))throw new E("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return t}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then(n=>n.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(n=>n.data).catch(()=>null),s=await Promise.all([t,i]);let r;if(s[0]){let n=s[0].fields;const o=s[0].values;if(n&&o){n=n.map(a=>({type:a.name==="OID"?"esriFieldTypeOID":ee.get(a.type),name:a.name,alias:a.alias||a.name}));const c=o.map(a=>({attributes:a}));n&&o&&(r={fields:n,features:c})}}return!r&&s[1]&&(r=pi.parse(s[1]).recordSet),rt.fromJSON(r)}_buildCacheFilePath(e,t,i,s,r){const n=this._getPackageSize(!!r),o=Math.floor(t/n)*n,c=Math.floor(i/n)*n,a="R"+this._toHexString4(o)+"C"+this._toHexString4(c);let l="L";l+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,f=s==null?void 0:s[0];if(O(u)||!f)return`${this.url}/_alllayers/${l}/${a}.bundle`;let h="_yxs";if(!r){h=u.variables.find(y=>y.name===f.variableName).dimensions[0].values.indexOf(f.values[0]).toString(16);const p=4-h.length;for(let y=0;y<p;y++)h="0"+h;h="S"+h}const d=this._getVariableFolderName(r||f.variableName);return`${this.url}/_alllayers/${d}/${h}/${l}/${a}.bundle`}_getPackageSize(e=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&P(t)?t.packetSize:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:i}=t;return e&&P(i)?i.tileSize:t.tileInfo.size}_getVariableFolderName(e){return(e=e.trim())===""?"_v":e.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,t,i=!1){const s=this._getPackageSize(i),r=s*(e%s)+t%s;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let s,r=0;for(s=0;s<5;s++)r|=(255&i[s])<<8*s;const n=0xffffffffff&r;for(r=0,s=5;s<8;s++)r|=(255&i[s])<<8*(s-5);return{position:n,recordSize:0xffffffffff&r}}_toHexString4(e){let t=e.toString(16);if(t.length!==4){let i=4-t.length;for(;i-- >0;)t="0"+t}return t}};w([T({readOnly:!0})],oe.prototype,"storageInfo",void 0),w([T({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),oe=w([Z("esri.layers.support.rasterDatasets.CloudRaster")],oe);const yi=oe;let le=class extends ae{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var y;await this.init();const{pixelBlock:t,statistics:i,histograms:s,name:r,keyProperties:n,nativeExtent:o,transform:c}=this.data,{width:a,height:l,pixelType:u}=t,f=this.data.extent||new J({xmin:-.5,ymin:.5,xmax:a-.5,ymax:l-.5,spatialReference:new q({wkid:3857})}),h=(y=this.data.isPseudoSpatialReference)!=null?y:!this.data.extent,d={x:f.width/a,y:f.height/l},p=new he({width:a,height:l,pixelType:u,extent:f,nativeExtent:o,transform:c,pixelSize:d,spatialReference:f.spatialReference,bandCount:3,keyProperties:n||{},statistics:i,isPseudoSpatialReference:h,histograms:s});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(t,{width:512,height:512},e),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(e,t,i,s={}){const r=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(r)}async _buildInMemoryRaster(e,t,i){var l,u;const s=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:s},i):Promise.resolve(ti(e,t,s)),n=P(this.rasterInfo.statistics),o=P(this.rasterInfo.histograms),c=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(Wt(e)),a=await Ye([r,c]);if(!a[0].value&&a[1].value)throw new E("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=a[0].value,n||(this.rasterInfo.statistics=(l=a[1].value)==null?void 0:l.statistics),o||(this.rasterInfo.histograms=(u=a[1].value)==null?void 0:u.histograms)}};w([T({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),w([T()],le.prototype,"data",void 0),le=w([Z("esri.layers.support.rasterDatasets.InMemoryRaster")],le);const gi=le;function ne(e,t){if(!e||!t)return[];let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=[];if(t){const n=ne(e,i);for(let o=0;o<n.length;o++)ne(n[o],t).forEach(c=>s.push(c));return s}const r=e.getElementsByTagNameNS("*",i);if(!r||r.length===0)return[];for(let n=0;n<r.length;n++)s.push(r[n]||r.item[n]);return s}function G(e,t){if(!e||!t)return null;let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=ne(e,i);return s.length>0?t?G(s[0],t):s[0]:null}function K(e,t=null){const i=t?G(e,t):e;let s;return i?(s=i.textContent||i.nodeValue,s?s.trim():null):null}function xi(e,t){const i=ne(e,t),s=[];let r;for(let n=0;n<i.length;n++)r=i[n].textContent||i[n].nodeValue,r&&(r=r.trim(),r!==""&&s.push(r));return s}function xe(e,t){return xi(e,t).map(i=>Number(i))}function ie(e,t){const i=K(e,t);return Number(i)}function _e(e,t){var r;const i=(r=e==null?void 0:e.nodeName)==null?void 0:r.toLowerCase(),s=t.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===s}function je(e,t){if(!e||!t)return null;const i=[];for(let s=0;s<e.length;s++)i.push(e[s]),i.push(t[s]);return i}function Ii(e){var u;const t=G(e,"GeodataXform"),i=Se(ie(t,"SpatialReference/WKID")||K(t,"SpatialReference/WKT"));if(t.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:i,transform:null};const s=(u=ie(t,"PolynomialOrder"))!=null?u:1,r=xe(t,"CoeffX/Double"),n=xe(t,"CoeffY/Double"),o=xe(t,"InverseCoeffX/Double"),c=xe(t,"InverseCoeffY/Double"),a=je(r,n),l=je(o,c);return{spatialReference:i,transform:new Pe({spatialReference:i,polynomialOrder:s,forwardCoefficients:a,inverseCoefficients:l})}}function wi(e){var h;const t=ie(e,"NoDataValue"),i=G(e,"Histograms/HistItem"),s=ie(i,"HistMin"),r=ie(i,"HistMax"),n=ie(i,"BucketCount"),o=(h=K(i,"HistCounts"))==null?void 0:h.split("|").map(d=>Number(d));let c,a,l,u;ne(e,"Metadata/MDI").forEach(d=>{var y;const p=Number((y=d.textContent)!=null?y:d.nodeValue);switch(d.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":c=p;break;case"STATISTICS_MAXIMUM":a=p;break;case"STATISTICS_MEAN":l=p;break;case"STATISTICS_STDDEV":u=p}});const f=ie(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:(o==null?void 0:o.length)&&c!=null&&a!=null?{min:s,max:r,size:n||o.length,counts:o}:null,sourceBandIndex:f,statistics:c!=null&&a!=null?{min:c,max:a,avg:l,stddev:u}:null}}function Se(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&t!==0)return new q({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),s=e.indexOf("PROJCS"),r=s>-1?s:e.indexOf("GEOGCS");if(r===-1)return null;const n=e.slice(r,e.lastIndexOf("]",i)+1).trim(),o=e.slice(i,e.lastIndexOf("]")).trim();t=ke(n);const c=new q(t?{wkid:t}:{wkt:n}),a=ke(o);return a&&(c.vcsWkid=a),c}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=ke(e),new q(t!==0?{wkid:t}:{wkt:e})):null}function ke(e){var r;const t=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(n=>n.trim()).filter(n=>n!==""),i=t[t.length-1].split(","),s=(r=i[0])==null?void 0:r.toLowerCase();if((s==="epsg"||s==="esri")&&e.endsWith('"]]')){const n=Number(i[1]);if(!isNaN(n)&&n!==0)return n}return 0}function Me(e){var s;if(((s=e==null?void 0:e.documentElement.tagName)==null?void 0:s.toLowerCase())!=="pamdataset")return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(r=>{if(r.nodeType===1){if(_e(r,"SRS")){if(!t.spatialReference){const n=K(r);t.spatialReference=Se(n)}}else if(_e(r,"Metadata"))if(r.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:o}=Ii(r);t.transform=o,t.spatialReference||(t.spatialReference=n)}else ne(r,"MDI").forEach(n=>t.metadata[n.getAttribute("key")]=K(n));else if(_e(r,"PAMRasterBand")){const n=wi(r);n.sourceBandIndex!=null&&t.rasterBands[n.sourceBandIndex]==null?t.rasterBands[n.sourceBandIndex]=n:t.rasterBands.push(n)}}});const i=t.rasterBands;if(i){const r=!!i[0].statistics;t.statistics=r?i.map(o=>o.statistics):null;const n=!!i[0].histogram;t.histograms=n?i.map(o=>o.histogram):null}return t}let be=class extends ae{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:s,histograms:r,transform:n}=await this._fetchAuxiliaryData(e);const o=!i;o&&(i=new q({wkid:3857})),(r==null?void 0:r.length)&&s==null&&(s=Ce(r));const{width:c,height:a}=t;let l=new J({xmin:-.5,ymin:.5-a,xmax:c-.5,ymax:.5,spatialReference:i});const u=n?n.forwardTransform(l):l;let f=!0;if(n){const d=n.forwardCoefficients;f=d&&d[1]===0&&d[2]===0,f&&(n=null,l=u)}const h=new gi({data:{extent:u,nativeExtent:l,transform:n,pixelBlock:t,statistics:s,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:o}});await h.open(),h.data=null,this._set("rasterInfo",h.rasterInfo),this._inMemoryRaster=h}fetchRawTile(e,t,i,s={}){return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e==null?void 0:e.signal}),i=jt(t).toUpperCase();if(i!=="JPG"&&i!=="PNG"&&i!=="GIF"&&i!=="BMP")throw new E("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const s=i.toLowerCase(),r=s==="gif"||s==="bmp"||!nt("ios");return await this.decodePixelBlock(t,{format:s,useCanvas:r,hasNoZlibMask:!0})}async _fetchAuxiliaryData(e){var l,u;const t=V(e==null?void 0:e.signal),i=(l=this.ioConfig.skipExtensions)!=null?l:[],s=i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:t}),r=this.datasetFormat,n=r==="JPG"?"jgw":r==="PNG"?"pgw":r==="BMP"?"bpw":null,o=i.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:t}),c=await Ye([s,o]);if(t!=null&&t.aborted)throw at();const a=Me((u=c[0].value)==null?void 0:u.data);if(!a.transform){const f=c[1].value?c[1].value.data.split(`
`).slice(0,6).map(h=>Number(h)):null;a.transform=(f==null?void 0:f.length)===6?new Pe({forwardCoefficients:[f[4],f[5],f[0],-f[1],f[2],-f[3]]}):null}return a}};w([T({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),be=w([Z("esri.layers.support.rasterDatasets.ImageAuxRaster")],be);const Ie=be;let ce=class extends ae{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer"}async open(e){var o,c;await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const s=i.data;if(this.sourceJSON=s,!s)throw new E("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new E("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const r=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=s.cacheType,this.tileType==null&&(r.includes(s.tileInfo.format.toLowerCase())?this.tileType="Map":s.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name.slice(s.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:t});if(!P(n))throw new E("image-server-raster:open","cannot initialize image service");{const a=this.tileType==="Map"?fi(s.tileInfo,s):re.fromJSON(s.tileInfo),{extent:l,pixelSize:u}=n,f=.5/n.width*u.x;let h,d;const p=a.lodAt(Math.max.apply(null,a.lods.map(I=>I.level)));this.tileType!=="Map"&&s.maxScale!==0&&(this.tileType==="Raster"?(h=a.lods.find(I=>I.resolution===u.x),h||(h=a.lods[a.lods.length-1])):(h=a.lods.find(I=>Math.abs(I.scale-s.maxScale)<f),h||(h=a.lods.filter(I=>I.scale>s.maxScale).sort((I,v)=>I.scale>v.scale?1:-1)[0])),u.x=u.y=h.resolution,n.width=Math.ceil((l.xmax-l.xmin)/u.x-.1),n.height=Math.ceil((l.ymax-l.ymin)/u.y-.1)),h||(h=p);const y=a.lodAt(Math.min.apply(null,a.lods.map(I=>I.level)));this.tileType==="Map"?this._levelOffset=a.lods[0].level:s.minScale!==0&&this.tileType==="Elevation"&&(d=a.lods.find(I=>Math.abs(I.scale-s.minScale)<f),this._levelOffset=d.level-y.level),d||(d=y);const m=Math.max(u.x,u.y);(Math.abs(u.x-u.y)>f||!a.lods.some(I=>Math.abs(I.resolution-m)<f))&&(u.x=u.y=h.resolution,n.width=Math.ceil((l.xmax-l.xmin)/u.x-.1),n.height=Math.ceil((l.ymax-l.ymin)/u.y-.1));const g=h.level-d.level,[b,S]=a.size,_=[];a.lods.forEach(I=>{I.level>=d.level&&I.level<=h.level&&_.push({x:I.resolution,y:I.resolution})}),_.sort((I,v)=>I.x-v.x);const k=this.computeBlockBoundary(l,b,S,a.origin,_,g),R=_.length>1?_.slice(1):null;let x;s.transposeInfo&&(x={tileSize:[s.transposeInfo.rows,s.transposeInfo.cols],packetSize:(c=(o=n.keyProperties)==null?void 0:o._yxs.PacketSize)!=null?c:0}),n.storageInfo=new fe({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:R,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:a,transposeInfo:x,blockBoundary:k}),this._fixGCSShift(n),this._set("rasterInfo",n)}if(s.capabilities.toLowerCase().includes("tilemap")){const a={tileInfo:n.storageInfo.tileInfo,parsedUrl:ot(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new hi({layer:a})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:r,extent:n}=this.rasterInfo,{transposeInfo:o}=r,c=P(o)&&!!s.transposedVariableName;if(this._slices&&!c&&s.sliceId==null)return null;const a=c?0:r.maximumPyramidLevel-e+this._levelOffset,l=`${this.url}/tile/${a}/${t}/${i}`,u=this._slices?c?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:f}=await this.request(l,{query:u,responseType:"array-buffer",signal:s.signal});if(!f)return null;const h=c?o.tileSize:r.tileInfo.size,d=await this.decodePixelBlock(f,{width:h[0],height:h[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnPixelInterleavedDims:c}),p=r.blockBoundary[e];if(r.compression!=="jpg"||i>p.minCol&&i<p.maxCol&&t>p.minRow&&t<p.maxRow)return d;const{origin:y,blockWidth:m,blockHeight:g}=r,{x:b,y:S}=this.getPyramidPixelSize(e),_=Math.round((n.xmin-y.x)/b)%m,k=Math.round((n.xmax-y.x)/b)%m||m,R=Math.round((y.y-n.ymax)/S)%g,x=Math.round((y.y-n.ymin)/S)%g||g,I=i===p.minCol?_:0,v=t===p.minRow?R:0,C=i===p.maxCol?k:m,F=t===p.maxRow?x:g;return ii(d,{x:I,y:v},{width:C-I,height:F-v}),d}getSliceIndex(e){if(!this._slices||O(e)||e.length===0)return null;const t=e;for(let i=0;i<this._slices.length;i++){const s=this._slices[i].multidimensionalDefinition;if(s.length===t.length&&!s.some(r=>{const n=t.find(o=>r.variableName===o.variableName&&o.dimensionName===r.dimensionName);return n?(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0])!==(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0]):!0}))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(n=>{var o;return(o=n.data)==null?void 0:o.statistics}),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(n=>{var o;return(o=n.data)==null?void 0:o.histograms}),r=await Promise.all([i,s]);return r[0]&&r[0].forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,V(t.datumTransformation));if(i===null)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let n=r-s+this._levelOffset;const o=i.srcLocation;for(;n>=0;){try{if(await this._tilemapCache.fetchAvailability(n,i.row,i.col,t)==="available")break}catch{}if(n--,s++,i=this.identifyPixelLocation(o,s,V(t.datumTransformation)),i===null)return null}return n===-1||i==null?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON;if(this.tileType==="Map"){const o=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),c=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=q.fromJSON(t.spatialReference||t.extent.spatialReference),l=new W({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a});return new he({width:o,height:c,bandCount:3,extent:J.fromJSON(t.extent),spatialReference:a,pixelSize:l,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=Dt(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then(o=>o.data&&o.data.slices).catch(()=>null):null,n=await Promise.all([s,r]);return this._slices=n[1],n[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;t.xmin===0&&t.xmax===360&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new ui,e.extent=e.transform.forwardTransform(t))}};w([T({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),w([T()],ce.prototype,"tileType",void 0),ce=w([Z("esri.layers.support.rasterDatasets.ImageServerRaster")],ce);const bi=ce,Y=new Map;Y.set("Int8","s8"),Y.set("UInt8","u8"),Y.set("Int16","s16"),Y.set("UInt16","u16"),Y.set("Int32","s32"),Y.set("UInt32","u32"),Y.set("Float32","f32"),Y.set("Float64","f32"),Y.set("Double64","f32");const Q=new Map;Q.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Q.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Q.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Q.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let se=class extends ae{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var y,m;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?V(e.signal):null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:s,files:r}=this._parseHeader(i.data);if(((y=this.ioConfig.skipExtensions)==null?void 0:y.indexOf("aux.xml"))===-1){const g=await this._fetchAuxiliaryData(e);g!=null&&(s.statistics=(m=g.statistics)!=null?m:s.statistics,s.histograms=g.histograms,g.histograms&&O(s.statistics)&&(s.statistics=Ce(g.histograms)))}this._set("rasterInfo",s),this._files=r;const n=await this.request(r.index,{responseType:"array-buffer",signal:t});this._storageIndex=this._parseIndex(n.data);const{blockWidth:o,blockHeight:c}=this.rasterInfo.storageInfo,a=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:l,height:u}=this.rasterInfo,f=[],h=this._getBandSegmentCount();let d=0,p=-1;for(;d<this._storageIndex.length;){p++;const g=Math.ceil(l/o/a**p)-1,b=Math.ceil(u/c/a**p)-1;d+=(g+1)*(b+1)*h*4,f.push({maxRow:b,maxCol:g,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(e,t,i,s={}){const{blockWidth:r,blockHeight:n,blockBoundary:o}=this.rasterInfo.storageInfo,c=o[e];if(!c||c.maxRow<t||c.maxCol<i||c.minRow>t||c.minCol>i)return null;const{bandCount:a,pixelType:l}=this.rasterInfo,{ranges:u,actualTileWidth:f,actualTileHeight:h}=this._getTileLocation(e,t,i);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const v=new Uint8Array(r*n);return new si({width:r,height:n,pixels:null,mask:v,validPixelCount:0})}const{bandIds:d}=this.ioConfig,p=this._getBandSegmentCount(),y=[];let m=0;for(m=0;m<p;m++)(!d||d.indexOf[m]>-1)&&y.push(this.request(this._files.data,{range:{from:u[m].from,to:u[m].to},responseType:"array-buffer",signal:s.signal}));const g=await Promise.all(y),b=g.map(v=>v.data.byteLength).reduce((v,C)=>v+C),S=new Uint8Array(b);let _=0;for(m=0;m<p;m++)S.set(new Uint8Array(g[m].data),_),_+=g[m].data.byteLength;const k=Q.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(S.buffer,{width:r,height:n,format:k,planes:(d==null?void 0:d.length)||a,pixelType:l});if(P(this.rasterInfo.noDataValue)&&k!=="lerc"&&!R.mask){const v=this.rasterInfo.noDataValue[0];if(v!=null){const C=R.width*R.height,F=new Uint8Array(C);if(Math.abs(v)>1e24)for(m=0;m<C;m++)Math.abs((R.pixels[0][m]-v)/v)>1e-6&&(F[m]=1);else for(m=0;m<C;m++)R.pixels[0][m]!==v&&(F[m]=1);R.mask=F}}let x=0,I=0;if(f!==r||h!==n){let v=R.mask;if(v)for(m=0;m<n;m++)if(I=m*r,m<h)for(x=f;x<r;x++)v[I+x]=0;else for(x=0;x<r;x++)v[I+x]=0;else for(v=new Uint8Array(r*n),R.mask=v,m=0;m<h;m++)for(I=m*r,x=0;x<f;x++)v[I+x]=1}return R}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,s,r,n,o;if(Gt){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),s=new Uint8Array(r),n=0;n<e.byteLength/4;n++)for(o=0;o<4;o++)s[4*n+o]=i[4*n+3-o];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return Q.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:s,blockHeight:r,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:o,height:c}=this.rasterInfo,a=this._getBandSegmentCount();let l,u,f,h=0,d=0;for(f=0;f<e;f++)d=n**f,l=Math.ceil(o/s/d),u=Math.ceil(c/r/d),h+=l*u;d=n**e,l=Math.ceil(o/s/d),u=Math.ceil(c/r/d),h+=t*l+i,h*=4*a;const p=this._storageIndex.subarray(h,h+4*a);let y=0,m=0;const g=[];for(let b=0;b<a;b++)y=p[4*b+0]*2**32+p[4*b+1],m=y+p[4*b+2]*2**32+p[4*b+3],g.push({from:y,to:m});return{ranges:g,actualTileWidth:i<l-1?s:Math.ceil(o/d)-s*(l-1),actualTileHeight:t<u-1?r:Math.ceil(c/d)-r*(u-1)}}_parseHeader(e){const t=G(e,"MRF_META/Raster");if(!t)throw new E("mrf:open","not a valid MRF format");const i=G(t,"Size"),s=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),n=parseInt(i.getAttribute("c"),10),o=(K(t,"Compression")||"none").toLowerCase();if(!Q.has(o))throw new E("mrf:open","currently does not support compression "+o);const c=K(t,"DataType")||"UInt8",a=Y.get(c);if(a==null)throw new E("mrf:open","currently does not support pixel type "+c);const l=G(t,"PageSize"),u=parseInt(l.getAttribute("x"),10),f=parseInt(l.getAttribute("y"),10),h=G(t,"DataValues");let d,p;if(h&&(p=h.getAttribute("NoData"),p!=null&&(d=p.trim().split(" ").map(F=>parseFloat(F)))),G(e,"MRF_META/CachedSource"))throw new E("mrf:open","currently does not support MRF referencing other data files");const y=G(e,"MRF_META/GeoTags"),m=G(y,"BoundingBox");let g,b=!1;if(m!=null){const F=parseFloat(m.getAttribute("minx")),j=parseFloat(m.getAttribute("miny")),X=parseFloat(m.getAttribute("maxx")),M=parseFloat(m.getAttribute("maxy")),z=K(y,"Projection")||"";let N;if(z!=="LOCAL_CS[]")if(z.toLowerCase().startsWith("epsg:")){const H=Number(z.slice(5));isNaN(H)||H===0||(N=new q({wkid:H}))}else N=Se(z);else b=!0,N=new q({wkid:3857});g=new J(F,j,X,M),g.spatialReference=N}else b=!0,g=new J({xmin:-.5,ymin:.5-r,xmax:s-.5,ymax:.5,spatialReference:new q({wkid:3857})});const S=G(e,"MRF_META/Rsets"),_=parseInt(S&&S.getAttribute("scale")||"2",10),k=g.spatialReference,R=new fe({origin:new W({x:g.xmin,y:g.ymax,spatialReference:k}),blockWidth:u,blockHeight:f,pyramidBlockWidth:u,pyramidBlockHeight:f,compression:o,pyramidScalingFactor:_}),x=new W({x:g.width/s,y:g.height/r,spatialReference:k}),I=new he({width:s,height:r,extent:g,isPseudoSpatialReference:b,spatialReference:k,bandCount:n,pixelType:a,pixelSize:x,noDataValue:d,storageInfo:R}),v=K(e,"datafile"),C=K(e,"IndexFile");return{rasterInfo:I,files:{mrf:this.url,index:C||this.url.replace(".mrf",".idx"),data:v||this.url.replace(".mrf",Q.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e==null?void 0:e.signal});return Me(t)}catch{return null}}};w([T()],se.prototype,"_files",void 0),w([T()],se.prototype,"_storageIndex",void 0),w([T({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),se=w([Z("esri.layers.support.rasterIO.MRFRaster")],se);const Si=se,Ge=(e,t)=>{const i=e.get(t);return i&&i.values},we=(e,t)=>{const i=e.get(t);return i&&i.values[0]};let te=class extends ae{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var z,N,H,L;await this.init();const t=e?V(e.signal):null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new E("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:s,firstIFD:r,isBigTiff:n}=qt(i),o=[];await this._readIFDs(o,i,s,r,0,n?8:4,t);const c=Ut(o),{width:a,height:l,tileWidth:u,tileHeight:f,planes:h,pixelType:d,compression:p,firstPyramidLevel:y,maximumPyramidLevel:m,pyramidBlockWidth:g,pyramidBlockHeight:b,tileBoundary:S,affine:_,metadata:k}=c,R=((z=c.extent.spatialReference)==null?void 0:z.wkt)||((N=c.extent.spatialReference)==null?void 0:N.wkid);let x=Se(R),I=!1;x==null&&(I=!0,x=new q({wkid:3857}));const v=new J({...c.extent,spatialReference:x}),C=new W(v?{x:v.xmin,y:v.ymax,spatialReference:x}:{x:0,y:0}),F=new fe({blockWidth:u,blockHeight:f,pyramidBlockWidth:g,pyramidBlockHeight:b,compression:p,origin:C,firstPyramidLevel:y,maximumPyramidLevel:m,blockBoundary:S}),j=new W({x:(v.xmax-v.xmin)/a,y:(v.ymax-v.ymin)/l,spatialReference:x}),X=k?{BandProperties:k.bandProperties,DataType:k.dataType}:{},M=new he({width:a,height:l,bandCount:h,pixelType:d,compression:p,pixelSize:j,storageInfo:F,spatialReference:x,isPseudoSpatialReference:I,keyProperties:X,extent:v,statistics:k?k.statistics:null});if(_!=null&&_.length&&(M.nativeExtent=new J({xmin:-.5,ymin:.5-l,xmax:a-.5,ymax:.5,spatialReference:x}),M.transform=new Pe({polynomialOrder:1,forwardCoefficients:[_[2]+_[0]/2,_[5]-_[3]/2,_[0],_[3],-_[1],-_[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new W({x:(v.xmax-v.xmin)/a,y:(v.ymax-v.ymin)/l,spatialReference:x}),F.origin.x=-.5,F.origin.y=.5),!((H=this.ioConfig.skipExtensions)!=null&&H.includes("aux.xml"))){const B=await this._fetchAuxiliaryData(e);if(B!=null){if(M.statistics=(L=B.statistics)!=null?L:M.statistics,M.histograms=B.histograms,B.histograms&&O(M.statistics)&&(M.statistics=Ce(B.histograms)),B.transform&&!_){M.transform=B.transform,M.nativeExtent=M.extent;const $=M.transform.forwardTransform(M.nativeExtent);M.pixelSize=new W({x:($.xmax-$.xmin)/a,y:($.ymax-$.ymin)/l,spatialReference:x}),M.extent=$}M.spatialReference||(M.spatialReference=B.spatialReference)}}if(this._set("rasterInfo",M),this._headerInfo={littleEndian:s,isBigTiff:n,ifds:o,...c},!this._headerInfo.isSupported)throw new E("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,s={}){var k;if(!((k=this._headerInfo)!=null&&k.isSupported)||this.isBlockOutside(e,t,i))return null;const r=this._getTileLocation(e,t,i);if(!r)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:c,ifd:a}=r,l=n.map(R=>this.request(this.url,{range:R,responseType:"array-buffer",signal:s.signal})),u=await Promise.all(l),f=u.map(R=>R.data.byteLength).reduce((R,x)=>R+x),h=u.length===1?u[0].data:new ArrayBuffer(f),d=[0],p=[0];if(u.length>1){const R=new Uint8Array(h);for(let x=0,I=0;x<u.length;x++){const v=u[x].data;R.set(new Uint8Array(v),I),d[x]=I,I+=v.byteLength,p[x]=v.byteLength}}const{blockWidth:y,blockHeight:m}=this.getBlockWidthHeight(e),g=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:a,offsets:d,sizes:p},width:y,height:m,planes:null,pixelType:null});let b,S,_;if(o!==y||c!==m){let R=g.mask;if(R)for(b=0;b<m;b++)if(_=b*y,b<c)for(S=o;S<y;S++)R[_+S]=0;else for(S=0;S<y;S++)R[_+S]=0;else for(R=new Uint8Array(y*m),g.mask=R,b=0;b<c;b++)for(_=b*y,S=0;S<o;S++)R[_+S]=1}return g}async _readIFDs(e,t,i,s,r,n=4,o){if(!s)return null;(s>=t.byteLength||s<0)&&(t=(await this.request(this.url,{range:{from:s+r,to:s+r+this._bufferSize},responseType:"array-buffer",signal:o})).data,r=s+r,s=0);const c=await this._readIFD(t,i,s,r,pe.TIFF_TAGS,n,o);if(e.push(c.ifd),!c.nextIFD)return null;await this._readIFDs(e,t,i,c.nextIFD-r,r,n,o)}async _readIFD(e,t,i,s,r=pe.TIFF_TAGS,n=4,o){if(!e)return null;const c=Vt(e,t,i,s,r,n);if(c.success){const a=[];if(c.ifd.forEach(l=>{l.values||a.push(l)}),a.length>0){const l=a.map(f=>f.offlineOffsetSize),u=Math.min.apply(null,l.map(f=>f[0]));if(Math.min.apply(null,l.map(f=>f[0]+f[1]))-u<=this._bufferSize){const{data:f}=await this.request(this.url,{range:{from:u,to:u+this._bufferSize},responseType:"array-buffer",signal:o});e=f,s=u,a.forEach(h=>Xt(e,t,h,s))}}if(c.ifd.has("GEOKEYDIRECTORY")){const l=c.ifd.get("GEOKEYDIRECTORY"),u=l.values;if(u&&u.length>4){const f=u[0]+"."+u[1]+"."+u[2],h=await this._readIFD(e,t,l.valueOffset+6-s,s,pe.GEO_KEYS,2,o);l.data=h.ifd,l.data&&l.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[f]})}}return c}if(c.requiredBufferSize&&c.requiredBufferSize!==e.byteLength)return(e=(await this.request(this.url,{range:{from:s,to:s+c.requiredBufferSize+4},responseType:"array-buffer",signal:o})).data).byteLength<c.requiredBufferSize?null:this._readIFD(e,t,0,s,pe.TIFF_TAGS,4,o)}_getTileLocation(e,t,i){const{firstPyramidLevel:s,blockBoundary:r}=this.rasterInfo.storageInfo,n=e===0?0:e-(s-1),o=this._headerInfo.ifds[n];if(!o)return null;const c=Yt(o,this._headerInfo),a=Ge(o,"TILEOFFSETS");if(a===void 0)return null;const l=Ge(o,"TILEBYTECOUNTS"),{minRow:u,minCol:f,maxRow:h,maxCol:d}=r[n];if(t>h||i>d||t<u||i<f)return null;const p=we(o,"IMAGEWIDTH"),y=we(o,"IMAGELENGTH"),m=we(o,"TILEWIDTH"),g=we(o,"TILELENGTH"),b=c?this.rasterInfo.bandCount:1,S=b*t*(d+1)+i,_=[{from:a[S],to:a[S+b-1]+l[S+b-1]-1}];if(c){let x=!0;for(let I=0;I<b;I++)if(a[S+I]+l[S+I]!==a[S+I+1]){x=!1;break}if(!x)for(let I=0;I<b;I++)_[I]={from:a[S+I],to:a[S+I]+l[S+I]-1}}const k=a[S],R=l[S];return k==null||R==null?null:{ranges:_,ifd:o,actualTileWidth:i===d?p%m:m,actualTileHeight:t===h?y%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e==null?void 0:e.signal});return Me(t)}catch{return null}}};w([T()],te.prototype,"_files",void 0),w([T()],te.prototype,"_headerInfo",void 0),w([T()],te.prototype,"_bufferSize",void 0),w([T({type:String,json:{write:!0}})],te.prototype,"datasetFormat",void 0),te=w([Z("esri.layers.support.rasterDatasets.TIFFRaster")],te);const vi=te,A=new Map;A.set("CRF",{desc:"Cloud Raster Format",constructor:yi}),A.set("MRF",{desc:"Meta Raster Format",constructor:Si}),A.set("TIFF",{desc:"GeoTIFF",constructor:vi}),A.set("RasterTileServer",{desc:"Raster Tile Server",constructor:bi}),A.set("JPG",{desc:"JPG Raster Format",constructor:Ie}),A.set("PNG",{desc:"PNG Raster Format",constructor:Ie}),A.set("GIF",{desc:"GIF Raster Format",constructor:Ie}),A.set("BMP",{desc:"BMP Raster Format",constructor:Ie});class Ti{static get supportedFormats(){const t=new Set;return A.forEach((i,s)=>t.add(s)),t}static async open(t){const{url:i,ioConfig:s,sourceJSON:r}=t;let n=t.datasetFormat;n==null&&i.lastIndexOf(".")&&(n=i.slice(i.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),i.toLowerCase().includes("/imageserver")&&!i.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const o={url:i,sourceJSON:r,datasetFormat:n,ioConfig:s||{bandIds:null,sampling:null}};let c,a;if(this.supportedFormats.has(n)){if(n==="CRF"&&!s.enableCRF)throw new E("rasterfactory:open",`cannot open raster: ${i}`);return c=A.get(n).constructor,a=new c(o),await a.open({signal:t.signal}),a}if(n)throw new E("rasterfactory:open","not a supported format "+n);const l=Array.from(A.keys());let u=0;const f=()=>(n=l[u++],n&&(n!=="CRF"||s.enableCRF)?(c=A.get(n).constructor,a=new c(o),a.open({signal:t.signal}).then(()=>a).catch(()=>f())):null);return f()}static register(t,i,s){A.has(t.toUpperCase())||A.set(t.toUpperCase(),{desc:i,constructor:s})}}let D=class extends lt(ct(ut(ft(ht(di(dt(mt(pt(Tt))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){const t=P(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(yt).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var r,n,o;let e=[new ue({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const t=(n=(r=this.rasterInfo)==null?void 0:r.attributeTable)==null?void 0:n.fields,i="Raster.";if(t){const c=t.filter(a=>a.type!=="oid"&&a.name.toLowerCase()!=="value").map(a=>{const l=a.clone();return l.name=i+a.name,l});e=e.concat(c)}const s=this.rasterInfo.dataType;if((s==="vector-magdir"||s==="vector-uv")&&P(this.rasterInfo.multidimensionalInfo)){const c=(o=this.rasterInfo.multidimensionalInfo.variables[0].unit)==null?void 0:o.trim(),a="Magnitude"+(c?` (${c})`:"");e.push(new ue({name:"Raster.Magnitude",alias:a,domain:null,editable:!1,type:"double"})),e.push(new ue({name:"Raster.Direction",alias:"Direction (\xB0)",domain:null,editable:!1,type:"double"}))}return e}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const s=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,r=Ot(s,i)||void 0;if(r!=null)return r}createPopupTemplate(e){return gt({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?i.datasetFormat==="RasterTileServer"&&(i.tileType==="Raster"||i.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const s=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new E("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${s}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await Ti.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new E("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const i=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(i,{origin:"service"})}this.title==null&&(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.own(xt(()=>this.customParameters,i=>{this.raster.ioConfig.customFetchParameters=i}))}};w([T({type:[It],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((e=this.bandIds)==null?void 0:e.join(","))!=="0,1,2"}}}}})],D.prototype,"bandIds",void 0),w([T({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),wt(Bt)],D.prototype,"interpolation",void 0),w([T({json:{write:!0}})],D.prototype,"multidimensionalDefinition",void 0),w([T(bt)],D.prototype,"legendEnabled",void 0),w([T({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],D.prototype,"isReference",void 0),w([T({type:["show","hide"]})],D.prototype,"listMode",void 0),w([T({json:{read:!0,write:!0}})],D.prototype,"blendMode",void 0),w([T()],D.prototype,"sourceJSON",void 0),w([T({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],D.prototype,"version",void 0),w([T()],D.prototype,"title",void 0),w([T({readOnly:!0,json:{read:!1}})],D.prototype,"type",void 0),w([T({type:["ArcGISTiledImageServiceLayer"]})],D.prototype,"operationalLayerType",void 0),w([T({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(e,t,i){t[i]=!e}}}})],D.prototype,"popupEnabled",void 0),w([T({type:St,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],D.prototype,"popupTemplate",void 0),w([T({readOnly:!0})],D.prototype,"defaultPopupTemplate",null),w([T({readOnly:!0,type:[ue]})],D.prototype,"fields",void 0),w([T({readOnly:!0,type:[ue]})],D.prototype,"rasterFields",null),w([T({types:Ke,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var t;const e=((t=this.renderer)==null?void 0:t.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!e}}},origins:{"web-scene":{types:Et,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],D.prototype,"renderer",null),w([vt("renderer")],D.prototype,"readRenderer",null),D=w([Z("esri.layers.ImageryTileLayer")],D);const Ei=D;export{Ei as default};
