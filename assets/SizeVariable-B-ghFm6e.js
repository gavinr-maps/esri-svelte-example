import{r as t,m as i,a as d,aN as O,B as u,s as R}from"./Accessor-BmwT4B0c.js";import{o as V,a as S}from"./cast-CsZslgGN.js";import{o as m,r as L}from"./writer-DKgfqj4X.js";import{S as f}from"./JSONSupport-DcrLLGjL.js";import{a as T}from"./Clonable-Z-AWS-16.js";import{o as D}from"./screenUtils-_ZIvrt5o.js";import{v as q,e as p,t as N,a as F,i as b}from"./visualVariableUtils-Xcorldoo.js";let h=class extends T.ClonableMixin(f){constructor(){super(...arguments),this.showLegend=null,this.title=null}};t([i({type:Boolean,json:{write:!0}})],h.prototype,"showLegend",void 0),t([i({type:String,json:{write:!0}})],h.prototype,"title",void 0),h=t([d("esri.renderers.visualVariables.support.VisualVariableLegendOptions")],h);const $=h,x=new V({colorInfo:"color",transparencyInfo:"opacity",rotationInfo:"rotation",sizeInfo:"size"});let l=class extends f{constructor(r){super(r),this.index=null,this.type=null,this.field=null,this.valueExpression=null,this.valueExpressionTitle=null,this.legendOptions=null}castField(r){return r==null?r:typeof r=="function"?(u.getLogger(this).error(".field: field must be a string value"),null):O(r)}get arcadeRequired(){return!!this.valueExpression}clone(){}getAttributeHash(){return`${this.type}-${this.field}-${this.valueExpression}`}};t([i()],l.prototype,"index",void 0),t([i({type:x.apiValues,readOnly:!0,json:{read:x.read,write:{writer:x.write,isRequired:!0}}})],l.prototype,"type",void 0),t([i({type:String,json:{write:!0}})],l.prototype,"field",void 0),t([S("field")],l.prototype,"castField",null),t([i({type:String,json:{write:!0}})],l.prototype,"valueExpression",void 0),t([i({type:String,json:{write:!0}})],l.prototype,"valueExpressionTitle",void 0),t([i({readOnly:!0})],l.prototype,"arcadeRequired",null),t([i({type:$,json:{write:!0}})],l.prototype,"legendOptions",void 0),l=t([d("esri.renderers.visualVariables.VisualVariable")],l);const _=l;function B(e){return D(e)}var w;let o=w=class extends f{constructor(e){super(e),this.label=null,this.size=null,this.value=null,this.useMinValue=null,this.useMaxValue=null}clone(){return new w({label:this.label,size:this.size,value:this.value,useMaxValue:this.useMaxValue,useMinValue:this.useMinValue})}};t([i({type:String,json:{write:!0}})],o.prototype,"label",void 0),t([i({type:Number,cast:D,json:{write:{isRequired:!0}}})],o.prototype,"size",void 0),t([i({type:Number,json:{write:{isRequired:!0}}})],o.prototype,"value",void 0),t([i({type:Boolean,json:{write:!1}})],o.prototype,"useMinValue",void 0),t([i({type:Boolean,json:{write:!1}})],o.prototype,"useMaxValue",void 0),o=w=t([d("esri.renderers.visualVariables.support.SizeStop")],o);const U=o;let c=class extends ${constructor(){super(...arguments),this.customValues=null}};t([i({type:[Number],json:{write:!0}})],c.prototype,"customValues",void 0),c=t([d("esri.renderers.visualVariables.support.SizeVariableLegendOptions")],c);const A=c;var z;const y=new V({width:"width",depth:"depth",height:"height",widthAndDepth:"width-and-depth",all:"all"}),g=new V({unknown:"unknown",inch:"inches",foot:"feet",yard:"yards",mile:"miles","nautical-mile":"nautical-miles",millimeter:"millimeters",centimeter:"centimeters",decimeter:"decimeters",meter:"meters",kilometer:"kilometers"});function j(e){if(e!=null)return typeof e=="string"||typeof e=="number"?B(e):e.type==="size"?p(e)?e:(delete(e={...e}).type,new s(e)):void 0}function E(e,r,a){if(typeof e!="object")return e;const n=new s;return n.read(e,a),n}let s=z=class extends _{constructor(e){super(e),this.axis=null,this.legendOptions=null,this.normalizationField=null,this.scaleBy=null,this.target=null,this.type="size",this.useSymbolValue=null,this.valueExpression=null,this.valueRepresentation=null,this.valueUnit=null}get cache(){return{ipData:this._interpolateData(),hasExpression:!!this.valueExpression,compiledFunc:null,isScaleDriven:this.valueExpression!=null&&q.test(this.valueExpression)}}set index(e){p(this.maxSize)&&(this.maxSize.index=`visualVariables[${e}].maxSize`),p(this.minSize)&&(this.minSize.index=`visualVariables[${e}].minSize`),this._set("index",e)}get inputValueType(){return N(this)}set maxDataValue(e){e&&this.stops&&(u.getLogger(this).warn("cannot set maxDataValue when stops is not null."),e=null),this._set("maxDataValue",e)}set maxSize(e){e&&this.stops&&(u.getLogger(this).warn("cannot set maxSize when stops is not null."),e=null),this._set("maxSize",e)}castMaxSize(e){return j(e)}readMaxSize(e,r,a){return E(e,r,a)}set minDataValue(e){e&&this.stops&&(u.getLogger(this).warn("cannot set minDataValue when stops is not null."),e=null),this._set("minDataValue",e)}set minSize(e){e&&this.stops&&(u.getLogger(this).warn("cannot set minSize when stops is not null."),e=null),this._set("minSize",e)}castMinSize(e){return j(e)}readMinSize(e,r,a){return E(e,r,a)}get arcadeRequired(){return!!this.valueExpression||this.minSize!=null&&typeof this.minSize=="object"&&this.minSize.arcadeRequired||this.maxSize!=null&&typeof this.maxSize=="object"&&this.maxSize.arcadeRequired}set stops(e){this.minDataValue==null&&this.maxDataValue==null&&this.minSize==null&&this.maxSize==null?e&&Array.isArray(e)&&(e=e.filter(r=>!!r)).sort((r,a)=>r.value-a.value):e&&(u.getLogger(this).warn("cannot set stops when one of minDataValue, maxDataValue, minSize or maxSize is not null."),e=null),this._set("stops",e)}get transformationType(){return F(this,this.inputValueType)}readValueExpression(e,r){return e||r.expression&&"$view.scale"}writeValueExpressionWebScene(e,r,a,n){if(e==="$view.scale"){if(n!=null&&n.messages){const v=this.index,M=typeof v=="string"?v:`visualVariables[${v}]`;n.messages.push(new R("property:unsupported",this.type+"VisualVariable.valueExpression = '$view.scale' is not supported in Web Scene. Please remove this property to save the Web Scene.",{instance:this,propertyName:M+".valueExpression",context:n}))}}else r[a]=e}readValueUnit(e){return e?g.read(e):null}clone(){var e,r;return new z({axis:this.axis,field:this.field,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,maxDataValue:this.maxDataValue,maxSize:p(this.maxSize)?this.maxSize.clone():this.maxSize,minDataValue:this.minDataValue,minSize:p(this.minSize)?this.minSize.clone():this.minSize,normalizationField:this.normalizationField,stops:(e=this.stops)==null?void 0:e.map(a=>a.clone()),target:this.target,useSymbolValue:this.useSymbolValue,valueRepresentation:this.valueRepresentation,valueUnit:this.valueUnit,legendOptions:(r=this.legendOptions)==null?void 0:r.clone()})}flipSizes(){if(this.transformationType===b.ClampedLinear){const{minSize:e,maxSize:r}=this;return this.minSize=r,this.maxSize=e,this}if(this.transformationType===b.Stops){const e=this.stops;if(!e)return this;const r=e.map(n=>n.size).reverse(),a=e.length;for(let n=0;n<a;n++)e[n].size=r[n];return this}return this}getAttributeHash(){return`${super.getAttributeHash()}-${this.target}-${this.normalizationField}`}_interpolateData(){var e;return(e=this.stops)==null?void 0:e.map(r=>r.value||0)}};t([i({readOnly:!0})],s.prototype,"cache",null),t([i({type:y.apiValues,json:{type:y.jsonValues,origins:{"web-map":{read:!1}},read:y.read,write:y.write}})],s.prototype,"axis",void 0),t([i()],s.prototype,"index",null),t([i({type:String,readOnly:!0})],s.prototype,"inputValueType",null),t([i({type:A,json:{write:!0}})],s.prototype,"legendOptions",void 0),t([i({type:Number,value:null,json:{write:!0}})],s.prototype,"maxDataValue",null),t([i({type:Number,value:null,json:{write:!0}})],s.prototype,"maxSize",null),t([S("maxSize")],s.prototype,"castMaxSize",null),t([m("maxSize")],s.prototype,"readMaxSize",null),t([i({type:Number,value:null,json:{write:!0}})],s.prototype,"minDataValue",null),t([i({type:Number,value:null,json:{write:!0}})],s.prototype,"minSize",null),t([S("minSize")],s.prototype,"castMinSize",null),t([m("minSize")],s.prototype,"readMinSize",null),t([i({type:String,json:{write:!0}})],s.prototype,"normalizationField",void 0),t([i({readOnly:!0})],s.prototype,"arcadeRequired",null),t([i({type:String})],s.prototype,"scaleBy",void 0),t([i({type:[U],value:null,json:{write:!0}})],s.prototype,"stops",null),t([i({type:["outline"],json:{write:!0}})],s.prototype,"target",void 0),t([i({type:String,readOnly:!0})],s.prototype,"transformationType",null),t([i({type:["size"],json:{type:["sizeInfo"]}})],s.prototype,"type",void 0),t([i({type:Boolean,json:{write:!0,origins:{"web-map":{read:!1}}}})],s.prototype,"useSymbolValue",void 0),t([i({type:String,json:{write:!0}})],s.prototype,"valueExpression",void 0),t([m("valueExpression",["valueExpression","expression"])],s.prototype,"readValueExpression",null),t([L("web-scene","valueExpression")],s.prototype,"writeValueExpressionWebScene",null),t([i({type:["radius","diameter","area","width","distance"],json:{write:!0}})],s.prototype,"valueRepresentation",void 0),t([i({type:g.apiValues,json:{write:g.write,origins:{"web-map":{read:!1},"web-scene":{write:!0},"portal-item":{write:!0}}}})],s.prototype,"valueUnit",void 0),t([m("valueUnit")],s.prototype,"readValueUnit",null),s=z=t([d("esri.renderers.visualVariables.SizeVariable")],s);const Q=s;export{Q as b,_ as c,A as p,U as u};
