import{P as u}from"./cast-CsZslgGN.js";import{f as y,s as d,i as l}from"./utils-YowqfOgk.js";import{r as i,m as n,a as h}from"./Accessor-BmwT4B0c.js";import{S as x}from"./JSONSupport-DcrLLGjL.js";import{d as G}from"./Association-CvaR2Zsv.js";import"./index-4eY77cms.js";import"./writer-DKgfqj4X.js";import"./Polyline-s-JzsQqo.js";import"./Extent-g5W9hy0j.js";import"./Point-Cz2JYYmX.js";import"./mathUtils-Cfq9PL9W.js";import"./typeUtils-cWA9Lf-p.js";import"./NetworkElement-BEwoE6j2.js";let r=class extends x{constructor(t){super(t),this.maxGeometryCountExceeded=!1,this.associations=[]}};i([n({type:Boolean,json:{write:!0}})],r.prototype,"maxGeometryCountExceeded",void 0),i([n({type:[G],json:{write:!0}})],r.prototype,"associations",void 0),r=i([h("esri.rest.networks.support.AssociationGeometriesResult")],r);const $=r;async function k(t,e,o){const s=y(t),m={...e.toJSON(),f:"json"},p=d({...s.query,...m});o?o.method="post":o={method:"post"};const a=l(p,o),c=`${s.path}/synthesizeAssociationGeometries`;return u(c,a).then(f=>R(f,e.outSpatialReference))}function R(t,e){const{data:o}=t;if(e)for(const s of o.associations)s.geometry.spatialReference||(s.geometry.spatialReference=e.clone());return $.fromJSON(o)}export{k as synthesizeAssociationGeometries};
