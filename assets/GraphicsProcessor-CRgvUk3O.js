import{r as n}from"./tslib.es6-B3Jf3DVX.js";import{d as m}from"./Graphic-DsxsIjhH.js";import{b as f,c as b,q as c}from"./Accessor-BLX9ikPh.js";import{m as a,a as C,e as y}from"./subclass-BZA_h8Db.js";import{watch as d,sync as w,syncAndInitial as V}from"./reactiveUtils-C5zUhJQJ.js";import{d as v}from"./diffUtils-BP7jmOAy.js";import{h as E}from"./UpdatingHandles-GfwcIh5z.js";import x from"./Layer-CVt7Hb5J.js";import{c as _}from"./hydratedFeatures-DBKLr8hT.js";import{i as O,l as S}from"./renderingInfoUtils-DAsRBUXK.js";import{b as G}from"./Query-5Xpquc1r.js";import{e as P,C as A}from"./RibbonLine.glsl-BZu1FDpE.js";import{r as I}from"./LineCallout.glsl-C1R4fy2f.js";import{z as H,u as $}from"./ExtentSet-BhWFQ8Zv.js";import{p as z,a as R,u as D}from"./Graphics3DObjectStates-DLTNWJbN.js";import{S as j}from"./graphicUtils-CWEFaVJb.js";import{n as q}from"./highlightUtils-BYmbiZ48.js";let r=class extends f{constructor(i){super(i),this.type="graphics-3d",this.graphicsCore=null,this.drapeSourceType=P.Features,this.scaleVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this._suspendResumeExtent=null,this._updatingHandles=new E}initialize(){const{layer:i}=this,s="effectiveScaleRange"in i?i:null,o=this.scaleVisibilityEnabled&&s!=null,t=new H({owner:this,layer:this.owner.layer,preferredUpdatePolicy:A.SYNC,graphicSymbolSupported:!0,componentFactories:{elevationAlignment:(e,l)=>new z({graphicsCoreOwner:this,graphicsCore:e,queryGraphicUIDsInExtent:l,elevationProvider:this.view.elevationProvider}),scaleVisibility:o?(e,l)=>new $({graphicsCoreOwner:this,layer:s,queryGraphicUIDsInExtent:l,graphicsCore:e,basemapTerrain:this.owner.view.basemapTerrain}):null,objectStates:e=>new R(e)}});if(this._set("graphicsCore",t),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new D({graphicsCoreOwner:this})),"fullOpacity"in this.owner){const e=this.owner;this._updatingHandles.add(()=>e.fullOpacity,()=>this.graphicsCore.opacityChange())}if("elevationInfo"in i){const e=i;this._updatingHandles.add(()=>e.elevationInfo,(l,p)=>{v(l,p)&&this._updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())})}this._set("initializePromise",this._initializeAsync()),this._updatingHandles.addPromise(this.initializePromise)}async _initializeAsync(){try{await this.graphicsCore.initializePromise}catch(i){if(b(i))return;throw i}this.destroyed||(this.addHandles(d(()=>this.view.clippingArea,()=>this._updateClippingExtent(),w)),this._updateClippingExtent(),this._setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics())}destroy(){this._updatingHandles.destroy(),this._set("frustumVisibility",c(this.frustumVisibility)),this._set("graphicsCore",c(this.graphicsCore))}get layer(){return this.owner.layer}get view(){return this.owner.view}get scaleVisibility(){var i;return(i=this.graphicsCore)==null?void 0:i.scaleVisibility}get elevationAlignment(){var i;return(i=this.graphicsCore)==null?void 0:i.elevationAlignment}get scaleVisibilitySuspended(){return!(this.scaleVisibility==null||!this.scaleVisibility.suspended)}get frustumVisibilitySuspended(){return this.frustumVisibility!=null&&this.frustumVisibility.suspended}get suspended(){return this.owner.suspended??!1}get updating(){var i;return!!((i=this.graphicsCore)!=null&&i.updating||this.scaleVisibility!=null&&this.scaleVisibility.updating||this.frustumVisibility!=null&&this.frustumVisibility.updating||this._updatingHandles.updating)}get graphics3DGraphics(){var i;return(i=this.graphicsCore)==null?void 0:i.graphics3DGraphics}get graphics3DGraphicsByObjectID(){var i;return(i=this.graphicsCore)==null?void 0:i.graphics3DGraphicsByObjectID}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner.fullOpacity??1}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}notifyGraphicGeometryChanged(i){this.graphicsCore.notifyGraphicGeometryChanged(i)}notifyGraphicVisibilityChanged(i){this.graphicsCore.notifyGraphicVisibilityChanged(i)}getRenderingInfo(i,s,o){const t=O(i,{renderer:s,arcade:o});if(t!=null&&t.color){const e=t.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}return t}getRenderingInfoAsync(i,s,o,t){return S(i,{renderer:s,arcade:o,...t})}getHit(i){if(this.owner.loadedGraphics){const s=this.owner.loadedGraphics.find(o=>o.uid===i);if(s){const o=this.layer instanceof x?this.layer:null,t=_(s,o);return{type:"graphic",graphic:t,layer:t.layer}}}return null}whenGraphicBounds(i,s){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(i,s):Promise.reject()}computeAttachmentOrigin(i,s){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(i,s):null}getSymbolLayerSize(i,s){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(i,s):null}maskOccludee(i){var e;const s=(e=this.graphicsCore)==null?void 0:e.objectStates;if(!s)return y();const{set:o,handle:t}=s.acquireOccludeeSet(null);return s.setUid(o,i.uid),t}highlight(i,s){var e;const o=(e=this.graphicsCore)==null?void 0:e.objectStates;if(!o||i instanceof G)return h;const t=q(i);if(t.length===0)return h;if(t[0]instanceof m){const l=t.map(g=>g.uid),{set:p,handle:u}=o.acquireHighlightSet(s,null);return o.setUids(p,l),u}if(typeof t[0]=="number"){const l=t,{set:p,handle:u}=o.acquireHighlightSet(s,null);return o.setObjectIds(p,l),u}return h}_setupSuspendResumeExtent(){const{scaleVisibility:i,frustumVisibility:s}=this;if(i==null&&s==null)return;const o=({computedExtent:t,extentPadding:e})=>{this._suspendResumeExtent=j(t,this._suspendResumeExtent,I,e),i!=null&&i.setExtent(this._suspendResumeExtent),s!=null&&s.setExtent(this._suspendResumeExtent)};this.addHandles(d(()=>{var t,e;return{computedExtent:(t=this.graphicsCore)==null?void 0:t.computedExtent,extentPadding:(e=this.graphicsCore)==null?void 0:e.extentPadding}},t=>o(t),V))}_updateClippingExtent(){const i=this.view.clippingArea;this.graphicsCore.setClippingExtent(i,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics()}};n([a()],r.prototype,"type",void 0),n([a({constructOnly:!0})],r.prototype,"owner",void 0),n([a()],r.prototype,"layer",null),n([a()],r.prototype,"view",null),n([a({constructOnly:!0})],r.prototype,"graphicsCore",void 0),n([a()],r.prototype,"scaleVisibility",null),n([a({constructOnly:!0})],r.prototype,"frustumVisibility",void 0),n([a()],r.prototype,"elevationAlignment",null),n([a()],r.prototype,"scaleVisibilitySuspended",null),n([a({readOnly:!0})],r.prototype,"frustumVisibilitySuspended",null),n([a()],r.prototype,"suspended",null),n([a({readOnly:!0})],r.prototype,"updating",null),n([a()],r.prototype,"loadedGraphics",null),n([a()],r.prototype,"fullOpacity",null),n([a()],r.prototype,"slicePlaneEnabled",null),n([a()],r.prototype,"drapeSourceType",void 0),n([a()],r.prototype,"updatePolicy",null),n([a({constructOnly:!0})],r.prototype,"scaleVisibilityEnabled",void 0),n([a({constructOnly:!0})],r.prototype,"frustumVisibilityEnabled",void 0),n([a()],r.prototype,"initializePromise",void 0),r=n([C("esri.views.3d.layers.graphics.GraphicsProcessor")],r);const h=y();export{r as x};
