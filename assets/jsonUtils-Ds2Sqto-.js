import{w as y,f as p,g as f,k as I,l as x,o as F,q as T,x as C,r as L,n as U,s as V,t as D,C as z}from"./symbols-CNimns--.js";import{b}from"./subclass-BZA_h8Db.js";import{b as h}from"./layerUtils-BrNoooE9.js";import{l as u}from"./Color-BCS62Hs5.js";import{V as w}from"./Collection-CEdjem1-.js";import{e as S}from"./screenUtils-_ZIvrt5o.js";import{S as E,u as P,c as W}from"./defaults-DZ1kfMRx.js";import{e as j,i as q}from"./defaultsJSON-GKolV7NZ.js";import{d as A,y as B,S as G,m as H}from"./TextSymbol-D8QO_KUV.js";const J=y.fromSimpleMarkerSymbol(E),K=p.fromSimpleLineSymbol(P),N=f.fromSimpleFillSymbol(W),O=new I({symbolLayers:new w([new x({material:{color:j},edges:new F({size:S(1),color:new u(q)})})])}),Q=new p({symbolLayers:new w([new T({material:{color:new u([0,0,0])},size:S(1)})])}),R=new f({symbolLayers:new w([new x({outline:{color:new u([0,0,0]),size:S(1)}})])});function ie(e){if(e==null)return null;switch(e.type){case"mesh":return O;case"point":case"multipoint":return J;case"polyline":return K;case"polygon":case"extent":return N}return null}const M="#useCIMFallbackSymbology()",a={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function X(e,n=a){var i,g,$,d;if(!e)return{symbol:null};const{retainId:t=a.retainId,ignoreDrivers:o=a.ignoreDrivers,hasLabelingContext:r=a.hasLabelingContext,retainCIM:m=a.retainCIM,cimFallbackEnabled:l=a.cimFallbackEnabled}=n;let s=null;if(C(e)||e instanceof L)s=e.clone();else if(e.type==="cim"){const c=(g=(i=e.data)==null?void 0:i.symbol)==null?void 0:g.type;switch(c){case"CIMPointSymbol":s=m?e.clone():y.fromCIMSymbol(e);break;case"CIMLineSymbol":l&&(s=Q.clone(),($=n==null?void 0:n.logWarning)==null||$.call(n,M,"Unsupported CIM line symbology converted to fallback 3D line symbology"));break;case"CIMPolygonSymbol":l&&(s=R.clone(),(d=n==null?void 0:n.logWarning)==null||d.call(n,M,"Unsupported CIM polygon symbology converted to fallback 3D polygon symbology"))}if(!s)return{error:new b("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${c||"unknown"}' is unsupported in 3D`,{symbol:e})}}else if(e instanceof A)s=p.fromSimpleLineSymbol(e);else if(e instanceof B)s=y.fromSimpleMarkerSymbol(e);else if(e instanceof U)s=y.fromPictureMarkerSymbol(e);else if(e instanceof G)s=n.geometryType&&n.geometryType==="mesh"?I.fromSimpleFillSymbol(e):f.fromSimpleFillSymbol(e);else{if(!(e instanceof H))return{error:new b("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${e.type||e.declaredClass}' is unsupported in 3D`,{symbol:e})};s=r?V.fromTextSymbol(e):y.fromTextSymbol(e)}return t&&s&&s.type!=="cim"&&(s.id=e.id),o&&C(s)&&s.symbolLayers.forEach(c=>c.ignoreDrivers=!0),{symbol:s}}function ae(e,n,t,o){const r=v(e,{},{context:o,isLabelSymbol:!1});r!=null&&(n[t]=r)}function me(e,n,t,o){const r=v(e,{},{context:o,isLabelSymbol:!0});r!=null&&(n[t]=r)}function k(e){return e instanceof D||e instanceof L}function Y(e){return e instanceof D&&(e.type==="polygon-3d"||e.type==="line-3d")}function v(e,n,t){var s;if(e==null)return null;const{context:o,isLabelSymbol:r}=t,m=o==null?void 0:o.origin,l=o==null?void 0:o.messages;if(m==="web-scene"&&!k(e)){const i=X(e,{retainCIM:!0,hasLabelingContext:r});return i.symbol!=null?i.symbol.write(n,o):(l==null||l.push(new b("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:e,context:o,error:i.error})),null)}return h(o==null?void 0:o.layer)&&Y(e)?(l==null||l.push(new b("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported on layers of type '${(s=o==null?void 0:o.layer)==null?void 0:s.declaredClass}'.`,{symbol:e,context:o})),null):(m==="web-map"||m==="portal-item"&&!h(o==null?void 0:o.layer))&&k(e)?(l==null||l.push(new b("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:e,context:o})),null):e.write(n,o)}function ye(e,n){return z(e,null,n)}export{ie as d,a as g,me as i,ae as l,ye as p,X as u};
