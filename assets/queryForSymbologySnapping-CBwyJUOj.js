import"./geometry-CnaxvJsv.js";import{s as D}from"./Accessor-D6mNnsWy.js";import{n as O}from"./mathUtils-ClvKsMak.js";import{i as P}from"./projectPointToVector-C-hGM2ap.js";import{e as q}from"./projectVectorToVector-BLdiwuTJ.js";import{s as E}from"./elevationInfoUtils-C0SzfJu0.js";import{l as G,n as A,p as B,o as H,R as J}from"./RenderGeometry-C4TY81Cr.js";import{f as $}from"./Point-TlcsOcXV.js";import{i as N}from"./fieldUtils-C5R42-PY.js";async function X(t,p,d,f,a){const{elevationProvider:l,renderCoordsHelper:i}=t,{elevationInfo:u}=p,{pointsInFeatures:b,spatialReference:m}=f,g=$.fromJSON(m),h=G(u,!0),y=await A(h,g,a);D(a);const c=[],e=new Set,r=new Set,o=new H,n=q(0,0,0,$.WGS84),s=new J,S=O();n.spatialReference=g;const j=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:w,points:v}of b){const I=d(w);if(I==null){for(const R of v)c.push(R.z??0);e.add(w);continue}I.isDraped&&r.add(w);const z=I.graphic.geometry;o.setFromElevationInfo(E(z,u)),o.updateFeatureExpressionInfoContext(y,I.graphic,p);for(const{x:R,y:C,z:F}of v)n.x=R,n.y=C,n.z=F??0,await P(n,S,j,0,{signal:a}),B(S,l,o,i,s),c.push(s.z)}return{elevations:c,drapedObjectIds:r,failedObjectIds:e}}async function Y(t,p,d){if(t==null||p.candidates.length===0)return x;const f=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,a=[],l=[],{renderer:i}=t,u=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?N():null,b=async(e,{graphic:r,graphics3DSymbol:o})=>{const n=await u,s=await t.getRenderingInfoAsync(r,i,n,{signal:d});return s==null?[]:o.queryForSnapping(e,g,s,d)},{candidates:m,spatialReference:g}=p;for(let e=0;e<m.length;++e){const r=m[e],{objectId:o}=r,n=typeof o=="number"?f==null?void 0:f.get(o):void 0;if(n==null)continue;const{graphics3DSymbol:s}=n;s.symbologySnappingSupported&&(a.push(b(r,n)),l.push(e))}if(a.length===0)return x;const h=await Promise.all(a);D(d);const y=[],c=[];for(let e=0;e<h.length;++e){const r=h[e],o=l[e];for(const n of r)y.push(n),c.push(o)}return{candidates:y,sourceCandidateIndices:c}}const x={candidates:[],sourceCandidateIndices:[]};export{X as m,Y as r};
