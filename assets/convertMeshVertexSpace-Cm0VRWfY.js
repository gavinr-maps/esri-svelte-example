import{D as e,s,c as m}from"./Accessor-BmwT4B0c.js";import{p as n}from"./MeshVertexAttributes-CAQDsbB5.js";import{B as a}from"./vertexSpaceConversion-Dzgt1uZW.js";import"./JSONSupport-DcrLLGjL.js";import"./cast-CsZslgGN.js";import"./index-4eY77cms.js";import"./meshProperties-C4iW0Ukm.js";import"./mathUtils-Cfq9PL9W.js";import"./Point-Cz2JYYmX.js";import"./writer-DKgfqj4X.js";import"./mat3-CR8GKnhD.js";import"./common-DQOJ18NT.js";import"./mat3f64-BBpwCtoL.js";import"./mat4-Fi6iAz29.js";import"./vec3f64-BLpZdpfb.js";import"./mat4f64-Dk4dwAN8.js";import"./vec32-Dvg_eL9J.js";import"./spatialReferenceEllipsoidUtils-DBqQpPRa.js";import"./computeTranslationToOriginAndRotation-DYUrDrjE.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import"./projectPointToVector-BoxjK-qy.js";import"./projection-CyCZAIaD.js";import"./SimpleObservable-CvOkykwM.js";import"./Extent-g5W9hy0j.js";import"./Polyline-s-JzsQqo.js";import"./meshVertexSpaceUtils-AgAbm20L.js";import"./MeshLocalVertexSpace-CnHk-qPr.js";import"./Clonable-Z-AWS-16.js";import"./enumeration-DpvDkLNI.js";import"./vec3-BXNNVgyU.js";import"./colorUtils-Rxh2V3ai.js";import"./BufferView-0osDbyWD.js";import"./vec2-ChnYg_BJ.js";import"./vec42-YcqnINSP.js";import"./vec4-CYI93Mrm.js";async function Q(t,o,r){await Promise.resolve(),e(r);const i=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!i)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const p=t.cloneAndModifyVertexAttributes(new n({...i,uv:m(t.vertexAttributes.uv),color:m(t.vertexAttributes.color)}),o);return p.transform=null,p}export{Q as convertMeshVertexSpace};
