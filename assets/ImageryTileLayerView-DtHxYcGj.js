import{e as r}from"./Evented-CXIxDjmW.js";import{d as P}from"./Graphic-Dc7F67nR.js";import{y as s,b as V,c as L}from"./subclass-BR3PhgZG.js";import{i as S}from"./timeSupport-BapPa47N.js";import{v as _,s as E}from"./rasterProjectionHelper-CSjnNBma.js";import{p as O}from"./popupUtils-sb3Ob2mW.js";const k=R=>{let t=class extends R{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}get timeExtent(){var a;return S(this.layer,(a=this.view)==null?void 0:a.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){return _(this.layer.fullExtent,this.view.spatialReference,!0)}supportsSpatialReference(a){return!!E(this.layer.serviceRasterInfo,a)}async fetchPopupFeaturesAtLocation(a,f){var g;const{layer:e}=this;if(!a)throw new L("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:e});const{popupEnabled:b}=e,T=O(e,f);if(!b||T==null)return[];const h=[],{value:o,magdirValue:l,processedValue:p}=await e.identify(a,{timeExtent:this.timeExtent,signal:f==null?void 0:f.signal});let y="";if(o!=null&&o.length){y=e.type==="imagery-tile"&&e.hasStandardTime()&&o[0]!=null?o.map(d=>e.getStandardTimeValue(d)).join(", "):o.join(", ");const i={ObjectId:0},c="Raster.ServicePixelValue";i[c]=e.type==="imagery-tile"&&e.raster.datasetFormat==="Function"?p==null?void 0:p.join(", "):y,i[c+".Raw"]=y;const u=((g=e.raster)==null?void 0:g.rasterInfo)??e.serviceRasterInfo,v=u==null?void 0:u.attributeTable;if(v!=null){const{fields:d,features:j}=v,w=d.find(({name:n})=>n.toLowerCase()==="value"),F=i[c],m=w?j.find(n=>String(n.attributes[w.name])===F):null;if(m)for(const n in m.attributes)m.attributes.hasOwnProperty(n)&&(i[this._rasterFieldPrefix+n]=m.attributes[n])}const x=u==null?void 0:u.dataType;x!=="vector-magdir"&&x!=="vector-uv"||(i["Raster.Magnitude"]=l==null?void 0:l[0],i["Raster.Direction"]=l==null?void 0:l[1]);const I=new P({geometry:this.fullExtent.clone(),attributes:i,layer:e,sourceLayer:e});h.push(I)}return h}_getfullExtent(){return E(this.layer.serviceRasterInfo,this.view.spatialReference)}};return r([s()],t.prototype,"fullExtent",null),r([s()],t.prototype,"layer",void 0),r([s({readOnly:!0})],t.prototype,"timeExtent",null),r([s()],t.prototype,"view",void 0),r([s()],t.prototype,"tileInfo",void 0),r([s({readOnly:!0})],t.prototype,"hasTilingEffects",null),r([s()],t.prototype,"datumTransformation",null),t=r([V("esri.views.layers.ImageryTileLayerView")],t),t};export{k as u};
