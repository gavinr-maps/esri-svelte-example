import"./geometry-D964gYQX.js";import{I as j,U as $,q as P}from"./assets-C43MgM-v.js";import{d as R}from"./asyncUtils-CWX51uTe.js";import{e as L,n as A}from"./date-DLgTylpo.js";import{b as I,n as G}from"./subclass-BZA_h8Db.js";import{c as Q}from"./Accessor-BLX9ikPh.js";import{O as M}from"./projection-B971H0Re.js";import{t as J}from"./json-Wa8cmqdu.js";import{s as U,O as Z,af as Y,g as B,a1 as H}from"./Point-Cg0-ChZE.js";import{e as K}from"./OptimizedFeature-6cJ-QFG5.js";import{s as W}from"./OptimizedGeometry-BF8iz5FO.js";import{m as z}from"./FeatureStore-Dr0GQdbp.js";import{x as X}from"./queryUtils-O-WFKoZd.js";import{V as ee}from"./QueryEngine-DrzbS-Dm.js";import{c as te}from"./number-CUaGJe2K.js";import{c as _,K as ie,H as ne}from"./fieldUtils-tmQlKvWo.js";import{a as re,u as oe}from"./clientSideDefaults-BCN5Jkqv.js";import{Z as N}from"./FieldsIndex-DpwHKAMX.js";import{i as E}from"./date-DlqISzcw.js";import"./Extent-Bf3YTe7m.js";import"./tslib.es6-B3Jf3DVX.js";import"./Polyline-D9YkgmM_.js";import"./writer-DNAwXnhG.js";import"./mathUtils-C4_ghTv4.js";import"./jsonMap-0cxwUWs2.js";import"./index-Bh2oEzTI.js";import"./SimpleObservable-KocWTzVy.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./cast-Bjksrh93.js";import"./Evented-BHRw9x22.js";import"./aaBoundingBox-BE7cC1jD.js";import"./featureConversionUtils-D14h8iad.js";import"./jsonUtils-CEfjT-BK.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-BhV7QrYA.js";import"./PooledRBush-D7s4d_Fs.js";import"./quickselect-QQC62dOK.js";import"./timeSupport-T1g9-JyG.js";import"./optimizedFeatureQueryEngineAdapter-BOPMFOve.js";import"./centroid-DdLmOD72.js";import"./normalizeUtils-EVmAQ-ak.js";import"./normalizeUtilsCommon-dT81xWiM.js";import"./utils-6jMaHUrH.js";import"./utils-Bema0iXE.js";import"./LRUCache-B_PHMSGm.js";import"./MemCache-Dx1v3xLC.js";import"./WhereClause-BNiy948d.js";import"./TimeOnly-DOn_Hy89.js";import"./UnknownTimeZone-BkowvBs8.js";import"./locale-C9TlLpzi.js";import"./fieldType-BuzM0UHS.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./quantizationUtils-uj_P09aO.js";import"./utils-Bh2cHa3t.js";import"./screenUtils-_ZIvrt5o.js";import"./timeUtils-8fb_2oAt.js";import"./heatmapUtils-Dwiv9IEa.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-BwQ00KBJ.js";import"./Basemap-DVYOaWHz.js";import"./Collection-CEdjem1-.js";import"./shared-B3wH2qpO.js";import"./collectionUtils-D_lHIu88.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./loadAll-B6mYSptb.js";import"./Portal-C10FKnaA.js";import"./PortalItem-DzgXrpyc.js";import"./persistableUrlUtils-fa1mAujs.js";import"./messages-OmQvZhAg.js";import"./writeUtils-Dz7BsE1e.js";import"./layerUtils-BrNoooE9.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./utils-rwwdQ1Ui.js";import"./ClassBreaksDefinition-CS8Z_VNX.js";import"./enumeration-Ba5njXdz.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Scheduler-CJu5awNf.js";import"./reactiveUtils-C5zUhJQJ.js";import"./signal-D4lghLjV.js";import"./debugFlags-BF6Z0j0F.js";import"./intl-CChhNOV8.js";import"./capabilities-Y9lFlGVh.js";import"./defaultsJSON-GKolV7NZ.js";function se(r,t,e){var s,a;t=(s=_(t))==null?void 0:s.toLowerCase(),e=(a=_(e))==null?void 0:a.toLowerCase();const i=r.map(c=>c.toLowerCase()),n=t?r[i.indexOf(t)]:null,o=e?r[i.indexOf(e)]:null;return{longitudeFieldName:n||r[i.indexOf(le.find(c=>i.includes(c)))],latitudeFieldName:o||r[i.indexOf(ae.find(c=>i.includes(c)))]}}const ae=["lat","lat83","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point_y"],le=["lon","lng","lng83","long","long83","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point_x"],b=/^\s*"([\S\s]*)"\s*$/,O=/""/g,S=`
`,me=[","," ",";","|","	"];function*q(r,t,e){let i=0;for(;i<=r.length;){const n=r.indexOf(t,i),o=r.slice(i,n>-1?n:void 0);i+=o.length+t.length,e&&!o.trim()||(yield o)}}function C(r){const t=r.includes(`\r
`)?`\r
`:S;return q(r,t,!0)}function v(r,t){return q(r,t,!1)}function ce(r,t,e){r=r.trim(),t=t==null?void 0:t.trim();const i=[],n=Array.from(new Set([e==null?void 0:e.delimiter,...me])).filter(s=>s!=null);for(const s of n){const a=w(r,s).length,c=w(t,s).length??a;a>1&&i.push({weight:Math.min(a,c),delimiter:s})}const o=i.sort(({weight:s},{weight:a})=>a-s).map(({delimiter:s})=>s);for(const s of o){const a=D(r,s).names,c=se(a,e==null?void 0:e.longitudeField,e==null?void 0:e.latitudeField);if(c.longitudeFieldName&&c.latitudeFieldName)return{delimiter:s,locationInfo:c}}return{delimiter:o[0],locationInfo:null}}function*k(r,t,e,i=()=>Object.create(null)){const n=C(r);n.next();let o="",s="",a=0,c=i(),u=0;e:for(const h of n){const d=v(h,e);for(const y of d)if(o+=s+y,s="",a+=V(y),a%2==0){if(a>0){const g=b.exec(o);if(!g){c=i(),u=0,o="",a=0;continue e}c[t[u]]=g[1].replaceAll(O,'"'),u++}else c[t[u]]=o,u++;o="",a=0}else s=e;a===0?(yield c,c=i(),u=0):s=S}}function D(r,t){const e=w(r,t).filter(n=>n!=null),i=e.map(n=>_(n));for(let n=i.length-1;n>=0;n--)i[n]||(i.splice(n,1),e.splice(n,1));return{names:i,aliases:e}}function w(r,t){if(!(r!=null&&r.length))return[];const e=[];let i="",n="",o=0;const s=v(r,t);for(const a of s)if(i+=n+a,n="",o+=V(a),o%2==0){if(o>0){const c=b.exec(i);c&&e.push(c[1].replaceAll(O,'"'))}else e.push(i);i="",o=0}else n=t;return e}function V(r){let t=0,e=0;for(e=r.indexOf('"',e);e>=0;)t++,e=r.indexOf('"',e+1);return t}function ue(r,t,e,i,n){const o=[],s=k(r,e,t),a=[];for(const c of s){if(a.length===10)break;a.push(c)}for(let c=0;c<e.length;c++){const u=e[c],h=i[c];if(u===n.longitudeFieldName||u===n.latitudeFieldName)o.push({name:u,type:"esriFieldTypeDouble",alias:h});else{let d;switch(pe(a.map(y=>y[u]))){case"integer":d="esriFieldTypeInteger";break;case"double":d="esriFieldTypeDouble";break;case"date":d="esriFieldTypeDate";break;default:d="esriFieldTypeString"}o.push({name:u,type:d,alias:h,length:ie(d)})}}return o}function pe(r){if(!r.length)return"string";const t=/[^+\-.,0-9]/;return r.map(e=>{if(e!==""){if(!t.test(e)){let i=x(e);if(!isNaN(i))return/[.,]/.test(e)||!Number.isInteger(i)||i>214783647||i<-214783648?"double":"integer";if(e.includes("E")&&(i=Number(e),!Number.isNaN(i)||e.includes(",")&&(e=e.replace(",","."),i=Number(e),!Number.isNaN(i))))return"double"}return L(e)?"date":"string"}}).reduce((e,i)=>e===void 0?i:i===void 0?e:e===i?i:e==="string"||i==="string"?"string":e==="double"||i==="double"?"double":void 0)}const x=function(){const r=te(),t=new RegExp("^"+r.regexp+"$"),e=new RegExp("["+r.group+"\\s\\xa0]","g"),i=r.factor;return n=>{const o=t.exec(n);if(r.factor=i,!o)return NaN;let s=o[1];if(!o[1]){if(!o[2])return NaN;s=o[2],r.factor*=-1}return s=s.replace(e,"").replace(r.decimal,"."),+s*r.factor}}();function de(r){return JSON.parse(JSON.stringify(r))}const fe=oe("esriGeometryPoint"),he=["csv"],ye=[0,0];class ge{constructor(t,e){this.x=t,this.y=e}}class ei{constructor(){this._queryEngine=null,this._snapshotFeatures=async t=>{const e=await this._fetch(t);return this._createFeatures(e)}}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){var c;this._loadOptions=t;const[i]=await Promise.all([this._fetch(e.signal),this._checkProjection((c=t==null?void 0:t.parsingOptions)==null?void 0:c.spatialReference)]),n=Fe(i,t);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const o=await this._createFeatures(i);this._queryEngine.featureStore.addMany(o);const{fullExtent:s,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=s,a){const{start:u,end:h}=a;n.layerDefinition.timeInfo.timeExtent=[u,h]}return n}async applyEdits(){throw new I("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){var n;this._loadOptions.customParameters=t,(n=this._snapshotTask)==null||n.abort(),this._snapshotTask=R(this._snapshotFeatures),this._snapshotTask.promise.then(o=>{this._queryEngine.featureStore.clear(),o&&this._queryEngine.featureStore.addMany(o)},o=>{this._queryEngine.featureStore.clear(),Q(o)||G.getLogger("esri.layers.CSVLayer").error(new I("csv-layer:refresh","An error occurred during refresh",{error:o}))}),await this._waitSnapshotComplete();const{fullExtent:e,timeExtent:i}=await this._queryEngine.fetchRecomputedExtents();return{extent:e,timeExtent:i}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:e,customParameters:i}=this._loadOptions;if(!e)throw new I("csv-layer:invalid-source","url not defined");const n=j(e);return(await $(n.path,{query:{...n.query,...i},responseType:"text",signal:t})).data}_createQueryEngine(t){const{objectIdField:e,fields:i,extent:n,timeInfo:o}=t.layerDefinition,s=new z({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new ee({fieldsIndex:N.fromLayerJSON({fields:i,dateFieldsTimeReference:{timeZoneIANA:E}}),geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:o,objectIdField:e,spatialReference:n.spatialReference||{wkid:4326},featureStore:s})}async _createFeatures(t){const{latitudeFieldName:e,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:o,spatialReference:s}=this._queryEngine;let a=[];const c=[],u=o.fields.filter(l=>l.name!==n).map(l=>l.name);let h=0;const d={};for(const l of o.fields)if(l.type!=="esriFieldTypeOID"&&l.type!=="esriFieldTypeGlobalID"){const f=ne(l);f!==void 0&&(d[l.name]=f)}const y=k(t,u,this._delimiter,re(d,n));for(const l of y){const f=this._parseCoordinateValue(l[e]),F=this._parseCoordinateValue(l[i]);if(F!=null&&f!=null&&!isNaN(f)&&!isNaN(F)){l[e]=f,l[i]=F;for(const m in l)if(m!==e&&m!==i)if(o.isDateField(m))l[m]=A(l[m]);else if(o.isNumericField(m)){const p=x(l[m]);isNaN(p)?l[m]=null:l[m]=p}else l[m]!=null&&(l[m]=de(l[m]));l[n]=h,h++,a.push(new ge(F,f)),c.push(l)}}if(!U({wkid:4326},s))if(Z(s))for(const l of a)[l.x,l.y]=Y(l.x,l.y,ye);else a=M(J,a,B.WGS84,s,null,null);const g=[];for(let l=0;l<a.length;l++){const{x:f,y:F}=a[l],m=c[l];m[n]=l+1,g.push(new K(new W([],[f,F]),m,null,m[n]))}return g}_parseCoordinateValue(t){if(t==null||t==="")return null;let e=x(t);return(isNaN(e)||Math.abs(e)>181)&&(e=parseFloat(t)),e}async _checkProjection(t){try{await X(H,t)}catch{throw new I("csv-layer:projection-not-supported","Projection not supported")}}}function Fe(r,t){var l,f,F;const e=t.parsingOptions||{},i={delimiter:e.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:e.latitudeField,longitudeFieldName:e.longitudeField}},n=i.layerDefinition={name:P(t.url,he)||"csv",dateFieldsTimeReference:{timeZoneIANA:E},drawingInfo:fe,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:e.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:e.spatialReference||{wkid:4326}}},o=C(r),s=(l=o.next().value)==null?void 0:l.trim(),a=(f=o.next().value)==null?void 0:f.trim();if(!s)throw new I("csv-layer:empty-csv","CSV is empty",{csv:r});const{delimiter:c,locationInfo:u}=ce(s,a,e);if(!c)throw new I("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:s,secondLine:a,parsingOptions:e});if(!u)throw new I("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:s,secondLine:a,parsingOptions:e});i.locationInfo=u,i.delimiter=c;const{names:h,aliases:d}=D(s,c),y=ue(r,i.delimiter,h,d,i.locationInfo);if((F=e.fields)!=null&&F.length){const m=new N(e.fields);for(const p of y){const T=m.get(p.name);T&&Object.assign(p,T)}}if(!y.some(m=>m.type==="esriFieldTypeOID"&&(n.objectIdField=m.name,!0))){const m={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};n.objectIdField=m.name,y.unshift(m)}n.fields=y;const g=new N(n.fields);if(i.locationInfo&&(i.locationInfo.latitudeFieldName=g.get(i.locationInfo.latitudeFieldName).name,i.locationInfo.longitudeFieldName=g.get(i.locationInfo.longitudeFieldName).name),n.timeInfo){const m=n.timeInfo;if(m.startTimeField){const p=g.get(m.startTimeField);p?(m.startTimeField=p.name,p.type="esriFieldTypeDate"):m.startTimeField=null}if(m.endTimeField){const p=g.get(m.endTimeField);p?(m.endTimeField=p.name,p.type="esriFieldTypeDate"):m.endTimeField=null}if(m.trackIdField){const p=g.get(m.trackIdField);m.trackIdField=p?p.name:null}m.startTimeField||m.endTimeField||(n.timeInfo=null)}return i}export{ei as default};
