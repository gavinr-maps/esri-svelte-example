import{e as p}from"./Evented-CXIxDjmW.js";import{S,J as v,s as d,z as w}from"./Accessor-D6mNnsWy.js";import{y as m,b,S as k}from"./subclass-BR3PhgZG.js";import{P as u,d as E,v as F,c as C}from"./reactiveUtils-BFQ0BtrB.js";import{t as P}from"./memoize-DsJmrG76.js";import{h as $}from"./UpdatingHandles-CMtXpTiG.js";import{j as A}from"./Polyline-BQFeqYXi.js";import{N as G,J as I,K as H}from"./projection-tSh-0UvX.js";import{a as R}from"./normalizeUtilsSync-DD8htqGn.js";import{o as O}from"./geometry-CnaxvJsv.js";import{o as x}from"./featureConversionUtils-B-SknPj_.js";import{e as z}from"./OptimizedFeature-7juV2tZm.js";import{m as Z}from"./FeatureStore-GQfqFqRN.js";import{$ as M}from"./QueryEngine-BaqPXEl6.js";import{Z as L}from"./FieldsIndex-DHql50vu.js";import{y as J}from"./elevationInfoUtils-C0SzfJu0.js";import{J as y}from"./utils-CvMr5svk.js";import{i as W,y as N}from"./SnappingManager-DFm0py-D.js";import{o as j,i as q}from"./queryEngineUtils-YM7vbhkh.js";import{i as g,r as T,n as f}from"./symbologySnappingCandidates-DjmIkAOi.js";import{I as U}from"./Scheduler-CDoWuxMK.js";import"./shared-B3wH2qpO.js";import"./writer-3zufXUNV.js";import"./Extent-B4rrMrqp.js";import"./Point-TlcsOcXV.js";import"./jsonMap-DCC6W5ex.js";import"./assets-BNizZMOZ.js";import"./index-BVncS3aY.js";import"./mathUtils-ClvKsMak.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./jsonUtils-DtWlwXHP.js";import"./normalizeUtilsCommon-DNPu20r0.js";import"./aaBoundingBox-BGxkJAW0.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./BoundsStore-BYcuS8_t.js";import"./PooledRBush-CGlhTzFe.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./timeSupport-86-Lo3YD.js";import"./normalizeUtils-CuTX3yb4.js";import"./utils-Blh5cXWv.js";import"./utils-Bh7lx_TM.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-Buta7wlw.js";import"./centroid-DdLmOD72.js";import"./MemCache-C6WUx-5V.js";import"./LRUCache-ju6LnIBZ.js";import"./WhereClause-CO6Fm86l.js";import"./TimeOnly-BtK5SiqG.js";import"./UnknownTimeZone-D0GlcniK.js";import"./Promise-CZrWwByK.js";import"./fieldType-CIG5ey7e.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./quantizationUtils-DFd0XKEL.js";import"./fieldUtils-C5R42-PY.js";import"./intl-CArXn1et.js";import"./utils-hH5IaWNz.js";import"./screenUtils-PfxkaaMN.js";import"./timeUtils-DQR2jUPL.js";import"./heatmapUtils-C-uT6ZIV.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./utils-HfpQY-3e.js";import"./Basemap-CKBB4cRW.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-DCqdz-K4.js";import"./loadAll-z9YY33Kx.js";import"./PortalItem-CaeKabGc.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./writeUtils-BUKZUL8X.js";import"./layerUtils-BzjQnEdj.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./utils-DUUw13Ab.js";import"./ClassBreaksDefinition-BpZNgsmK.js";import"./enumeration--HlxOQ_N.js";import"./SnappingCandidate-O5eRSE6e.js";import"./unitConversionUtils-BUA_O87q.js";import"./lengthUtils-vgIBtB6M.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./symbols-CfvYGR4J.js";import"./TextSymbol-zZq0BA1M.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./Clonable-cKbRam6-.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./cimSymbolUtils-Ctf0ZrmH.js";import"./utils-D8D39sLt.js";import"./projectVectorToVector-BLdiwuTJ.js";import"./projectPointToVector-C-hGM2ap.js";import"./vec2-B_ymkwGp.js";import"./vec2f64-Diu2Kaa8.js";import"./geodesicUtils-DyOqnDq-.js";import"./plane-Bz78OrLf.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./mathUtils-kvswLROa.js";import"./sphere-DIv2hmik.js";import"./geometry2dUtils-BraNT6Fs.js";import"./FeatureFilter-DqmBE6ye.js";import"./TimeExtent-Dl-qaORu.js";import"./Query-BpMwiNVl.js";import"./DataLayerSource-BX7Ap_tY.js";import"./Field-poIiHWUc.js";import"./FullTextSearch-BhJOgh_r.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./InputManager-C4xu1R9l.js";import"./Queue-DpHko4Yk.js";import"./signal-DzOfzcfh.js";import"./keybindings-DYR2fa8r.js";import"./utils-CXgSw6Sd.js";import"./layerViewUtils-D2JqIDZ8.js";import"./geodesicLengthMeasurementUtils-YCCCQWpE.js";import"./quantityUtils-Cz8e0KG8.js";import"./geometryEngine-DyRMGqqp.js";import"./geometryEngineBase-RmbNeFm7.js";import"./hydrated-CRSW297p.js";import"./Cyclical-BY_I03kj.js";import"./VertexSnappingCandidate-DG5gTQ3a.js";import"./PointSnappingHint-DJuRAzp4.js";import"./debugFlags-B3L9P_UW.js";const _="graphics-collections";let n=class extends S{get updating(){return this._updatingHandles.updating}get _hasZ(){const t=this.view;return t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d";if(!i||e.type==="map-notes")return g();const o=async(r,s)=>(await w(t.whenLayerView(e),s)).elevationAlignPointsInFeatures(r,s);return g(i,{elevationInfo:e.elevationInfo,alignPointsInFeatures:o})}get _snappingElevationFilter(){const{view:t}=this,e=t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes";return T(e)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d",o=this._extrudedPolygonSymbolsCount>0;return i&&e.type!=="map-notes"&&o?f(o,async(r,s)=>{const a=await t.whenLayerView(e);return d(s),a.queryForSymbologySnapping({candidates:r,spatialReference:t.spatialReference},s)}):f()}constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new $,this._memoizedMakeGetGroundElevation=P(q)}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources(t=>this._destroySource(t)),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add(()=>this.getGraphicsLayers(),i=>{this._updatingHandles.removeHandles(_);for(const o of i)this._addMany(o.graphics.toArray()),this.addHandles([o.on("graphic-update",r=>this._onGraphicUpdate(r)),this._updatingHandles.addOnCollectionChange(()=>o.graphics,r=>this._onGraphicsChanged(r))],_)},u);const{view:t}=this,{layer:e}=this.layerSource;t!=null&&t.type==="3d"&&e.type!=="map-notes"&&t.elevationProvider&&this.addHandles([t.elevationProvider.on("elevation-change",({context:i})=>{J(i,e.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),E(()=>e.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),u),F(()=>e,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(t,e){const{point:i,coordinateHelper:{spatialReference:o}}=t,r=await v(this._mapSources(l=>this._fetchCandidatesForSource(l,t,e)));d(e);const s=this._memoizedMakeGetGroundElevation(this.view,o),a=r.flat().map(l=>j(l,s));return W(i,a),a}async _fetchCandidatesForSource(t,e,i){var h;const o=N(e,((h=this.view)==null?void 0:h.type)??"2d"),r=await t.queryEngine.executeQueryForSnapping(o,i);d(i);const s=await this._snappingElevationAligner.alignCandidates(r.candidates,e.coordinateHelper.spatialReference,i);d(i);const a=await this._symbologySnappingFetcher.fetch(s,i);d(i);const l=a.length===0?s:[...s,...a];return this._snappingElevationFilter.filter(o,l)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some(e=>e.graphics.includes(t.graphic)))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const e of t.removed)this._remove(e);this._addMany(t.added)}_addMany(t){const e=[],i=new Map;for(const o of t)o.geometry!=null&&(this._needsInitializeProjection(o.geometry.spatialReference)?(e.push(o.geometry.spatialReference),i.set(o.uid,o)):this._add(o));this._createPendingAdd(e,i)}_createPendingAdd(t,e){if(!t.length)return;const i=C(async s=>{await G(t.map(a=>({source:a,dest:this.spatialReference})),{signal:s}),this._markLoadedSpatialReferences(t);for(const[,a]of e)this._add(a)});this._updatingHandles.addPromise(i.promise);const o={task:i,graphics:e},r=()=>k(this._pendingAdds,o);i.promise.then(r,r),this._pendingAdds.push(o)}_markLoadedSpatialReferences(t){for(const e of t){e.wkid!=null&&this._loadedWkids.add(e.wkid);const i=e.wkt2||e.wkt;i&&this._loadedWkts.add(i)}}_add(t){if(t.geometry==null||!t.visible)return;let e=t.geometry;if(e.type==="mesh")return;e.type==="extent"&&(e=A.fromExtent(e));const i=this._ensureSource(e.type);if(i==null)return;const o=this._createOptimizedFeature(t.uid,e);o!=null&&(i.featureStore.add(o),y(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){if(t.wkid!=null&&this._loadedWkids.has(t.wkid))return!1;const e=t.wkt2||t.wkt;return(!e||!this._loadedWkts.has(e))&&!I(t,this.spatialReference)}_createOptimizedFeature(t,e){const i=H(R(e),this.spatialReference);if(!i)return null;const o=this._ensureGeometryHasZ(i),r=x(o,this._hasZ,!1);return new z(r,{[c]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const e=o=>{for(;o.length<3;)o.push(0)},i=t.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(e);break;case"polyline":i.paths.forEach(o=>o.forEach(e));break;case"polygon":i.rings.forEach(o=>o.forEach(e))}return i}_ensureSource(t){const e=this._sources[t];if(e!=null)return e;const i=this._createSource(t);return this._sources[t]=i,i}_createSource(t){const e=O.toJSON(t),i=this._hasZ,o=new Z({geometryType:e,hasZ:i,hasM:!1});return{featureStore:o,queryEngine:new M({featureStore:o,fieldsIndex:L.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:e,hasM:!1,hasZ:i,objectIdField:c,spatialReference:this.spatialReference,priority:U.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources(e=>this._removeFromSource(e,t));for(const e of this._pendingAdds)e.graphics.delete(t.uid),e.graphics.size===0&&e.task.abort()}_removeFromSource(t,e){const i=e.uid;t.featureStore.has(i)&&(t.featureStore.removeById(e.uid),y(e.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:e,polygon:i,polyline:o,multipoint:r}=this._sources,s=[];return e!=null&&s.push(t(e)),i!=null&&s.push(t(i)),o!=null&&s.push(t(o)),r!=null&&s.push(t(r)),s}};p([m()],n.prototype,"getGraphicsLayers",void 0),p([m({constructOnly:!0})],n.prototype,"layerSource",void 0),p([m({constructOnly:!0})],n.prototype,"spatialReference",void 0),p([m({constructOnly:!0})],n.prototype,"view",void 0),p([m({readOnly:!0})],n.prototype,"updating",null),p([m({readOnly:!0})],n.prototype,"availability",void 0),p([m()],n.prototype,"_hasZ",null),p([m()],n.prototype,"_snappingElevationAligner",null),p([m()],n.prototype,"_snappingElevationFilter",null),p([m()],n.prototype,"_symbologySnappingFetcher",null),p([m()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),n=p([b("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};
