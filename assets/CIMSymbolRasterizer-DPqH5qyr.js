import{i as k}from"./CIMResourceManager-C2sepdjO.js";import{e as _,a as E,K as F}from"./CIMSymbolHelper-C1Ghh-WW.js";import{y as G}from"./OverrideHelper-C4oumxVn.js";import{V as P}from"./utils-CO7DMJWl.js";import"./fontUtils-CILP_6vp.js";import"./subclass-BR3PhgZG.js";import"./imageUtils-9KeT6Jbh.js";import"./index-CeCSsEgo.js";import"./assets-C2mb-ea2.js";import"./Evented-CXIxDjmW.js";import"./Accessor-D6mNnsWy.js";import"./BidiEngine-BwB1Df7c.js";import"./screenUtils-PfxkaaMN.js";import"./Polyline-D97hl-6E.js";import"./writer-3zufXUNV.js";import"./Extent-DHjqVB-p.js";import"./Point-DB4Hp4hH.js";import"./jsonMap-DCC6W5ex.js";import"./mathUtils-ClvKsMak.js";import"./TextSymbol-gKE-H_J6.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./enumeration--HlxOQ_N.js";import"./jsonUtils-Cma_7A64.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-BSPpv37S.js";import"./enums-BRXbslMp.js";import"./geometry-DpwwkAX1.js";import"./definitions-ByNBSgP9.js";import"./mat2d-DPkeMmgR.js";import"./mat2df32-orApM5a3.js";import"./vec2-B_ymkwGp.js";import"./vec2f32-BbH2jxlN.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./defaults-DCm7iNI6.js";import"./defaultsJSON-GKolV7NZ.js";import"./colorUtils-D5nOabzP.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./fieldUtils-CNduWQU9.js";import"./intl-Dpfm8vPB.js";import"./Promise-CZrWwByK.js";import"./quantizationUtils-CIQDbQFJ.js";const q=96/72;class _t{constructor(y){this._spatialReference=y,this._imageDataCanvas=null,this._cimResourceManager=new k}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(y,u,w,f,a,i,s,m,M){if(!y)return null;const{data:h}=y;if(!h||h.type!=="CIMSymbolReference"||!h.symbol)return null;const{symbol:C}=h;i||(i=P(C));const r=await G.resolveSymbolOverrides(h,u,this._spatialReference,a,i,s,m),p=this._cimResourceManager,d=[];_.fetchResources(r,p,d),_.fetchFonts(r,p,d),d.length>0&&await Promise.all(d);const{width:e,height:o}=w,R=D(i,e,o,f),t=_.getEnvelope(r,R,p);if(!t)return null;let n=1,I=0,v=0;switch(C.type){case"CIMPointSymbol":case"CIMTextSymbol":{let c=1;t.width>e&&(c=e/t.width);let g=1;t.height>o&&(g=o/t.height),f==="preview"&&(t.width<e&&(c=e/t.width),t.height<o&&(g=o/t.height)),n=Math.min(c,g),I=t.x+t.width/2,v=t.y+t.height/2}break;case"CIMLineSymbol":{(M||t.height>o)&&(n=o/t.height),v=t.y+t.height/2;const c=t.x*n+e/2,g=(t.x+t.width)*n+e/2,{paths:b}=R;b[0][0][0]-=c/n,b[0][2][0]-=(g-e)/n}break;case"CIMPolygonSymbol":{I=t.x+t.width/2,v=t.y+t.height/2;const c=t.x*n+e/2,g=(t.x+t.width)*n+e/2,b=t.y*n+o/2,S=(t.y+t.height)*n+o/2,{rings:l}=R;c<0&&(l[0][0][0]-=c,l[0][3][0]-=c,l[0][4][0]-=c),b<0&&(l[0][0][1]+=b,l[0][1][1]+=b,l[0][4][1]+=b),g>e&&(l[0][1][0]-=g-e,l[0][2][0]-=g-e),S>o&&(l[0][2][1]+=S-o,l[0][3][1]+=S-o)}}const z={type:"cim",data:{type:"CIMSymbolReference",symbol:r}};return this.rasterize(z,e,o,I,v,n,i,1,R)}rasterize(y,u,w,f,a,i,s,m=0,M=null){const{data:h}=y;if(!h||h.type!=="CIMSymbolReference"||!h.symbol)return null;const{symbol:C}=h,r=this._canvas,p=(window.devicePixelRatio||1)*q;r.width=u*p,r.height=w*p,s||(s=P(C)),M||(M=D(s,u,w,"legend")),r.width+=2*m,r.height+=2*m;const d=r.getContext("2d",{willReadFrequently:!0}),e=F.createIdentity();return e.translate(-f,-a),e.scale(i*p,-i*p),e.translate(u*p/2+m,w*p/2+m),d.clearRect(0,0,r.width,r.height),new E(d,this._cimResourceManager,e,!0).drawSymbol(C,M),d.getImageData(0,0,r.width,r.height)}}function D(x,y,u,w){const a=-y/2+1,i=y/2-1,s=u/2-1,m=-u/2+1;switch(x){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[a,0],[0,0],[i,0]]]};default:return w==="legend"?{rings:[[[a,s],[i,0],[i,m],[a,m],[a,s]]]}:{rings:[[[a,s],[i,s],[i,m],[a,m],[a,s]]]}}}export{_t as CIMSymbolRasterizer};
