import{r as n}from"./tslib.es6-B3Jf3DVX.js";import{b as w}from"./Accessor-BLX9ikPh.js";import{o as x}from"./Evented-BHRw9x22.js";import{watch as D,sync as G}from"./reactiveUtils-C5zUhJQJ.js";import{u as y,g as f,f as z}from"./screenUtils-_ZIvrt5o.js";import{m as r,a as M}from"./subclass-BZA_h8Db.js";import{b as _}from"./vec2-maR1OrZI.js";import{p as I}from"./vec32-Dvg_eL9J.js";import{n as H}from"./vec3f64-BLpZdpfb.js";import{J as E,K as L}from"./projection-B971H0Re.js";import{c as k}from"./projectPointToVector-GINIbYMz.js";import{l as J}from"./elevationInfoUtils-BC_66_Fg.js";import{J as O}from"./defaults-DZ1kfMRx.js";import{h as R}from"./ElevationInfo-CA5m_tHv.js";import{i as X}from"./drapedUtils-HWKOCxgF.js";function Y(e){let o=0,i=0,t=0;return e?(e.type==="cim"&&e.data.symbol&&"symbolLayers"in e.data.symbol&&e.data.symbol.symbolLayers&&e.data.symbol.symbolLayers.map(l=>{l.type==="CIMVectorMarker"&&l.anchorPoint&&(Math.abs(l.anchorPoint.x)>o&&(o=l.anchorPoint.x),Math.abs(l.anchorPoint.y)>i&&(i=l.anchorPoint.y),l.size!=null&&l.size>t&&(t=l.size))}),o=y(o),i=y(i),t=y(t),{offsetX:o,offsetY:i,size:t}):{offsetX:o,offsetY:i,size:t}}let s=class extends w{set graphic(e){this._circleCollisionCache=null,this._originalSymbol=e.symbol,this._set("graphic",e),this.attachSymbolChanged()}get elevationInfo(){const{layer:e}=this.graphic,o=e&&"elevationInfo"in e?e.elevationInfo:null,i=J(this.graphic),t=o?o.offset:0;return new R({mode:i,offset:t})}set focusedSymbol(e){e!==this._get("focusedSymbol")&&(this._set("focusedSymbol",e),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(e){e!==this._get("grabbing")&&(this._set("grabbing",e),this._updateGraphicSymbol())}set hovering(e){e!==this._get("hovering")&&(this._set("hovering",e),this._updateGraphicSymbol())}set selected(e){e!==this._get("selected")&&(this._set("selected",e),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:e?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}constructor(e){super(e),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.consumesClicks=!0,this.events=new x.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(e){const o=this.graphic;if(o.visible===!1)return null;const i=o.geometry;if(i==null)return null;const t=this._get("focusedSymbol"),l=t??o.symbol;return this.view.type==="2d"?this._intersectDistance2D(this.view,e,i,l):this._intersectDistance3D(this.view,e,o)}attach(){this.attachSymbolChanged(),this.layer!=null&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this.layer!=null&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=D(()=>{var e;return(e=this.graphic)==null?void 0:e.symbol},e=>{e!=null&&e!==this.focusedSymbol&&e!==this._originalSymbol&&(this._originalSymbol=e,this._focused&&this.focusedSymbol!=null&&(this.graphic.symbol=this.focusedSymbol))},G)}detachSymbolChanged(){this._graphicSymbolChangedHandle!=null&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}onElevationChange(){}onViewChange(){}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&this.focusedSymbol!=null?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(e,o,i,t){var b,g;if((t=t||O(i))==null)return null;const l=1;let h=this._circleCollisionCache;if(i.type==="point"&&t.type==="cim"&&((b=t.data.symbol)==null?void 0:b.type)==="CIMPointSymbol"&&t.data.symbol.symbolLayers){const{offsetX:c,offsetY:a,size:m}=Y(t),u=f(o,v),p=m/2,d=e.toScreen(i),C=d.x+c,P=d.y+a;return _(u,[C,P])<p*p?l:null}if(i.type!=="point"||t.type!=="simple-marker")return X(o,i,e)?l:null;if(h==null||!h.originalPoint.equals(i)){const c=i,a=e.spatialReference;if(E(c.spatialReference,a)){const m=L(c,a);h={originalPoint:c.clone(),mapPoint:m,radiusPx:y(t.size)},this._circleCollisionCache=h}}if(h!=null){const c=f(o,v),a=(g=e.toScreen)==null?void 0:g.call(e,h.mapPoint);if(!a)return null;const m=h.radiusPx,u=a.x+y(t.xoffset),p=a.y-y(t.yoffset);return _(c,[u,p])<m*m?l:null}return null}_intersectDistance3D(e,o,i){const t=e.toMap(o,{include:[i]});return t&&k(t,S,e.renderSpatialReference)?I(S,e.state.camera.eye):null}};n([r({constructOnly:!0,nonNullable:!0})],s.prototype,"graphic",null),n([r()],s.prototype,"elevationInfo",null),n([r({constructOnly:!0,nonNullable:!0})],s.prototype,"view",void 0),n([r({value:null})],s.prototype,"focusedSymbol",null),n([r({constructOnly:!0})],s.prototype,"layer",void 0),n([r()],s.prototype,"interactive",void 0),n([r()],s.prototype,"selectable",void 0),n([r()],s.prototype,"grabbable",void 0),n([r({value:!1})],s.prototype,"grabbing",null),n([r()],s.prototype,"dragging",void 0),n([r()],s.prototype,"hovering",null),n([r({value:!1})],s.prototype,"selected",null),n([r()],s.prototype,"cursor",void 0),s=n([M("esri.views.interactive.GraphicManipulator")],s);const S=H(),v=z();export{s as S,Y as s};
