import{D as e,s,c as m}from"./Accessor-BHnuXKD2.js";import{p as n}from"./MeshVertexAttributes-Dh8Pp9-Y.js";import{B as a}from"./vertexSpaceConversion-Dbe11h0o.js";import"./JSONSupport-CGdeqxpk.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./meshProperties-C4iW0Ukm.js";import"./mathUtils-DV9iOXpW.js";import"./Point-XGrwlf63.js";import"./writer-B2bQV2uU.js";import"./mat3-CR8GKnhD.js";import"./common-DQOJ18NT.js";import"./mat3f64-BBpwCtoL.js";import"./mat4-Fi6iAz29.js";import"./vec3f64-BLpZdpfb.js";import"./mat4f64-Dk4dwAN8.js";import"./vec32-Dvg_eL9J.js";import"./spatialReferenceEllipsoidUtils-DM073JUd.js";import"./computeTranslationToOriginAndRotation-BT43Xu5d.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./projectPointToVector-BS0u8fq6.js";import"./projection-B2I9Bzj_.js";import"./SimpleObservable-7oieNGD8.js";import"./Extent-CBBGeHb-.js";import"./Polyline-BmuD2-ZN.js";import"./meshVertexSpaceUtils-SW0WEjNN.js";import"./MeshLocalVertexSpace-C0YDTRex.js";import"./Clonable-DvJsj5LF.js";import"./enumeration-Cr5WIZs4.js";import"./vec3-Bn81gjoR.js";import"./colorUtils-Rxh2V3ai.js";import"./BufferView-_QDXRCew.js";import"./vec2-maR1OrZI.js";import"./vec42-YcqnINSP.js";import"./vec4-DcW4fpPA.js";async function Q(t,o,r){await Promise.resolve(),e(r);const i=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!i)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const p=t.cloneAndModifyVertexAttributes(new n({...i,uv:m(t.vertexAttributes.uv),color:m(t.vertexAttributes.color)}),o);return p.transform=null,p}export{Q as convertMeshVertexSpace};
