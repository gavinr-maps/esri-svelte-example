import{r as s}from"./tslib.es6-B3Jf3DVX.js";import{q as f,Y as ee,j as te}from"./Accessor-BLX9ikPh.js";import{m as r,a as R,t as ie,n as se}from"./subclass-BZA_h8Db.js";import{e as k,B as re,n as G}from"./jsxFactory-CJa39Fro.js";import{watch as g,initial as $,whenOnce as oe}from"./reactiveUtils-C5zUhJQJ.js";import{j as D,g as U,I as ne,ab as C}from"./Point-Cg0-ChZE.js";import{K as L,W as ae}from"./projection-B971H0Re.js";import{e as pe}from"./defaultUnit-_T4IY-sW.js";import"./geometry-D964gYQX.js";import{d as A}from"./Graphic-DsxsIjhH.js";import"./intl-CChhNOV8.js";import{d as le}from"./symbols-CNimns--.js";import{R as E,I as K,L as me}from"./colorUtils-aL8wj-8G.js";import{g as he,d as ue,D as ce}from"./unitFormatUtils-CZ2bRlFg.js";import{h as de}from"./UpdatingHandles-GfwcIh5z.js";import{geodesicLength as ge,geodesicDensify as ve,planarLength as ye}from"./geometryEngine-DGiYLHJy.js";import{y as N,R as O,z as T}from"./geodesicUtils-FCYOaNwu.js";import x from"./GraphicsLayer-i3FeUJ_n.js";import{l as H}from"./ViewingMode-Dodu7ZZk.js";import{d as _e}from"./SnappingVisualizer2D-Br8KvMdL.js";import{l as fe}from"./Draw-dun67gWj.js";import{E as z,p as we,P as be}from"./EditGeometryOperations-Cl8Sbfxr.js";import{n as Le,p as Me,E as $e,f as Se}from"./InteractiveToolBase-vg6J8uyT.js";import{S as De}from"./GraphicManipulator-Dc-QfW2U.js";import{e as Ce}from"./SnappingContext-lR2hMWGP.js";import{f as Oe}from"./SnappingDragPipelineStep-rzVcndp8.js";import{a as Te}from"./SnappingManagerPool-CewNAGGP.js";import{G as xe}from"./SnappingManager-BJPyuu7J.js";import{h as B}from"./messages-OmQvZhAg.js";import{g as Ae}from"./locale-C9TlLpzi.js";import{m as Re,a as Ie,y as P}from"./TextSymbol-D8QO_KUV.js";import{d as ke}from"./Polyline-D9YkgmM_.js";import{p as Ge,u as Ue}from"./MeasurementWidgetContent-DYwVXn7I.js";import{e as W}from"./globalCss-CZa70j6i.js";import"./Evented-BHRw9x22.js";import"./Promise-B2Hu02L7.js";import"./uuid-fwrPAdZb.js";import"./cast-Bjksrh93.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./asyncUtils-CWX51uTe.js";import"./Collection-CEdjem1-.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./writer-DNAwXnhG.js";import"./jsonMap-0cxwUWs2.js";import"./vec3f64-BLpZdpfb.js";import"./Extent-Bf3YTe7m.js";import"./projectBuffer-Bs7GwaPY.js";import"./mathUtils-C4_ghTv4.js";import"./geodesicConstants-DWQLYX7F.js";import"./getDefaultUnitForView-Ce2vZZap.js";import"./Portal-C10FKnaA.js";import"./Loadable-BabW5Xcc.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./fieldUtils-tmQlKvWo.js";import"./date-DlqISzcw.js";import"./enumeration-Ba5njXdz.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./jsonUtils-CEfjT-BK.js";import"./screenUtils-_ZIvrt5o.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./aaBoundingBox-BE7cC1jD.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./Cyclical-oTUX3aX7.js";import"./quantityUtils-D0GB2dMc.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-C9rxSL4a.js";import"./GraphicsCollection-FfahqxsR.js";import"./Layer-CVt7Hb5J.js";import"./TimeExtent-DocT5yPf.js";import"./timeUtils-8fb_2oAt.js";import"./BlendLayer-CXM4n_Ge.js";import"./jsonUtils-CSnQD004.js";import"./parser-CTsgEym6.js";import"./utils-93yNk4Xc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./ScaleRangeLayer-Bb8Ig1Hz.js";import"./ElevationInfo-CA5m_tHv.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";import"./vec2-maR1OrZI.js";import"./vec2f64-miziP1SN.js";import"./enums-CmIX1y88.js";import"./SnappingVisualizer-BtjTdiTG.js";import"./PointSnappingHint-D7X20mlb.js";import"./vec32-Dvg_eL9J.js";import"./projectVectorToVector-G2uWGoIb.js";import"./projectPointToVector-GINIbYMz.js";import"./SnappingOperation-CaI4DIP4.js";import"./Scheduler-CJu5awNf.js";import"./signal-D4lghLjV.js";import"./debugFlags-BF6Z0j0F.js";import"./InputManager-Ba9xzDpe.js";import"./Queue-yu3bZ02p.js";import"./keybindings-DoOdil3D.js";import"./screenUtils-WcqhHU65.js";import"./elevationInfoUtils-BC_66_Fg.js";import"./surfaceCoordinateSystems-DhFxihAh.js";import"./memoize-DsJmrG76.js";import"./ReactiveSet-BU2iaegS.js";import"./diffUtils-BP7jmOAy.js";import"./dehydratedFeatureComparison-06VFTqH5.js";import"./angularMeasurementUtils-7e2vxqzG.js";import"./SketchLabelOptions-DDQnGNSN.js";import"./hydratedFeatures-DBKLr8hT.js";import"./mat2d-D9DBP-jx.js";import"./mat2df64-CBKYtunK.js";import"./quat-4pa1e6ds.js";import"./mat3f64-BBpwCtoL.js";import"./quatf64-CCm9z-pX.js";import"./compilerUtils-Dw3R0f-Z.js";import"./plane-IENfwZlB.js";import"./mat4f64-Dk4dwAN8.js";import"./mathUtils-BG-eq9fO.js";import"./geometry2dUtils-DdyQE7AQ.js";import"./meshVertexSpaceUtils-CXzOFlTI.js";import"./MeshLocalVertexSpace-LEHwMUnu.js";import"./interfaces-D6pIddIh.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./drapedUtils-HWKOCxgF.js";import"./Query-5Xpquc1r.js";import"./DataLayerSource-BKkswDvG.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./FullTextSearch-Csd1Hktu.js";import"./utils-BpB3MnW1.js";import"./Version-BSlAgupz.js";import"./sphere-C77djCO6.js";import"./mat3-BRl2i9Bz.js";import"./viewUtils-DrPohWV3.js";import"./UnitSelect-Bx5aDsPO.js";const M=1e5;let h=class extends Le{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new de,this._vertices=[],this.geodesicDistanceThreshold=null,this.measurement=null,this.measurementLabel=null}initialize(){B("esri/core/t9n/Units").then(t=>{this.messages=t});const e=this.view;this._draw=new fe({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this._snappingManagerResult=Te(e),this.addHandles([Ae(async()=>{this.messages=await B("esri/core/t9n/Units")}),g(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updatePolylines()},$),g(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:i})=>i);for(const{handle:i}of this._vertices)i.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)}),g(()=>this.snappingOptions.featureSources,t=>{for(const i of t)i.layer!==this._measurementLayer&&i.layer!==this._manipulatorLayer||(i.enabled=!1)},$),this._snappingManagerResult]),xe(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=f(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=f(this._measurementLayer),this._manipulatorLayer=f(this._manipulatorLayer),this._snappingLayer=f(this._snappingLayer),this._updatingHandles=f(this._updatingHandles),this._resetVertices()}get _snappingManager(){return this._snappingManagerResult.snappingManager}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this._snappingManager.options}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}_getSnappingContext(e){return new Ce({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new z(new we("point",be(!1,!1,this.view.spatialReference)),H.Local),visualizer:new _e(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._snappingManager,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],i=>this._updateSketch(i.vertices)),t.on("draw-complete",()=>{this._stopSketch()})}_stopSketch(){this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:o,manipulator:u}=this._vertices.pop();o.remove(),this.manipulators.remove(u)}for(let o=this._vertices.length;o<e.length;o++){const[u,d]=e[o],v=new D({x:u,y:d,spatialReference:t}),y=Ee(v,this.view,this._manipulatorLayer);this.manipulators.add(y);const w=z.fromGeometry(v,H.Local),q=[w.on("vertex-update",b=>{const _=b.vertices.at(0);_&&(this._vertices[o].coord=[_.pos[0],_.pos[1]],this._updatePolylines())}),Me(y,(b,_,We,F)=>{const Q=this._getSnappingContext(F),X=this._snappingManager,Z=this._updatingHandles,{snappingStep:J}=Oe({snappingContext:Q,snappingManager:X,updatingHandles:Z});_.next($e(this.view)).next(S=>{if(S.action==="start"){const I=new D(S.mapStart);b.graphic.geometry=I,w.trySetGeometry(I)}return S}).next(...J).next(Se({operations:w})).next(()=>{b.graphic.geometry=w.data.geometry})})];this._vertices.push({manipulator:y,coord:[u,d],handle:ie(q)})}const i=this._vertices.length-1,n=this._vertices[i],[p,a]=e[i];n.coord[0]===p&&n.coord[1]===a||(n.coord=[p,a],n.manipulator.graphic.geometry=new D({x:p,y:a,spatialReference:t}));const l=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach(({manipulator:o})=>{o.interactive=l==null||o!==l}),this._updatePolylines()}_updatePolylines(){var v;if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=this._vertices.map(({coord:y})=>y),{measurement:t,drawing:i,original:n}=He(e,this.view.spatialReference,this.geodesicDistanceThreshold);this._set("measurement",t);const p=Pe(this.messages,t,this.unit);let a,l;this._set("measurementLabel",p);const{graphics:o}=this._measurementLayer,u=o.length===2,{effectiveTheme:d}=this.view;u?(a=o.at(0),l=o.at(1)):(a=new A({symbol:new le({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:E(d.accentColor).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:d.accentColor.toArray()}]}}})}),l=new A({symbol:new Re({color:d.textColor,haloColor:K(E(d.textColor,me.Low),.5),haloSize:2,font:new Ie({size:14,family:"sans-serif"})})}),o.removeAll(),o.addMany([a,l])),a.geometry=i,l.geometry=(v=n.extent)==null?void 0:v.center,l.symbol.text=p}};function Ee(e,t,i){const n=K(t.effectiveTheme.accentColor,.5),p={type:"simple-line",width:0},a=8,l=new P({style:"circle",color:n,size:a,outline:p}),o=new P({style:"circle",color:n,size:1.5*a,outline:p}),u=new A({geometry:e,symbol:l});return new De({view:t,layer:i,graphic:u,focusedSymbol:o})}function He(e,t,i){const n=new ke({paths:[e],spatialReference:t});let p,a;if(t.isGeographic)if(N(t))p=O([n],"meters")[0],a=T(n,M);else{const l=L(n,U.WGS84),o=T(l,M);p=O([l],"meters")[0],a=L(o,t)}else if(t.isWebMercator)p=ge(n,"meters"),a=ve(n,M,"meters");else{const l=ye(n,"meters");if(i!=null&&l>=i){const o=L(n,U.WGS84),u=T(o,M);p=O([o],"meters")[0],a=L(u,t)}else p=l,a=n}return{measurement:{geometry:a,length:p},original:n,drawing:a}}function ze(e){return e!=null}function Be(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:n}=e;return t&&!n&&!N(e)||!t&&!i}function Pe(e,t,i){if(!t||!e)return"";switch(i){case"metric":return ce(e,t.length,"meters");case"imperial":return ue(e,t.length,"meters");default:return he(e,ne(t.length,"meters",i),i)}}s([r()],h.prototype,"_drawActive",void 0),s([r({readOnly:!0})],h.prototype,"cursor",null),s([r({value:!0})],h.prototype,"editable",null),s([r({type:Number})],h.prototype,"geodesicDistanceThreshold",void 0),s([r({readOnly:!0})],h.prototype,"measurement",void 0),s([r({readOnly:!0})],h.prototype,"measurementLabel",void 0),s([r()],h.prototype,"messages",void 0),s([r()],h.prototype,"unit",void 0),s([r()],h.prototype,"updating",null),s([r({constructOnly:!0})],h.prototype,"view",void 0),h=s([R("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],h);let c=class extends Ge{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="DistanceMeasurement2DViewModel is only supported in 2D views."}initialize(){this.addHandles([g(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),g(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},$),g(()=>this.geodesicDistanceThreshold,e=>{this.tool!=null&&(this.tool.geodesicDistanceThreshold=e)},$)])}get geodesicDistanceThreshold(){return this._get("geodesicDistanceThreshold")}set geodesicDistanceThreshold(e){ee(se.getLogger(this),"geodesicDistanceThreshold",{version:"4.29",warnOnce:!0}),this._set("geodesicDistanceThreshold",e)}get measurement(){return this.tool!=null?this.tool.measurement:null}get measurementLabel(){return this.tool!=null?this.tool.measurementLabel:null}get state(){var e;return this.disabled||this.view==null||!ze((e=this.view)==null?void 0:e.spatialReference)?"disabled":this.tool!=null&&this.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return C}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await oe(()=>e.ready),Be(e.spatialReference)&&await ae()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new h({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return e!=null&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(e==null)return[];const t=e.filter(i=>C.includes(i));return t.length===0?C.slice():t}};s([r(pe)],c.prototype,"defaultUnit",void 0),s([r()],c.prototype,"geodesicDistanceThreshold",null),s([r({readOnly:!0})],c.prototype,"measurement",null),s([r({readOnly:!0})],c.prototype,"measurementLabel",null),s([r({readOnly:!0})],c.prototype,"state",null),s([r({type:String})],c.prototype,"unit",null),s([r({type:[String]})],c.prototype,"unitOptions",null),c=s([R("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],c);const Y=c,j="esri-distance-measurement-2d",V={base:j,newMeasurementButton:`${j}__clear-button`};let m=class extends re{constructor(e,t){super(e,t),this.messages=null,this.messagesCommon=null,this.viewModel=new Y}get active(){return this.viewModel.active}get icon(){return"measure-line"}set icon(e){this._overrideIfSome("icon",e)}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,unit:i,unitOptions:n,viewModel:p}=this,{active:a,measurementLabel:l,state:o,supported:u}=p;return G("div",{"aria-label":this.messages.widgetLabel,class:this.classes(V.base,W.widget,W.panel),key:this,role:"presentation"},this.visible?G(Ue,{active:a,measurementItems:[{key:"distance",title:e.distance,value:l}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:V.newMeasurementButton,state:o,supported:u,unit:i,unitOptions:n,onNewMeasurementClick:()=>{te(this.viewModel.start())},onUnitChange:d=>{this.unit=d}}):null)}};s([r({readOnly:!0})],m.prototype,"active",null),s([r()],m.prototype,"icon",null),s([r()],m.prototype,"label",null),s([r()],m.prototype,"uiStrings",void 0),s([r(),k("esri/widgets/DistanceMeasurement2D/t9n/DistanceMeasurement2D")],m.prototype,"messages",void 0),s([r(),k("esri/t9n/common")],m.prototype,"messagesCommon",void 0),s([r()],m.prototype,"unit",null),s([r()],m.prototype,"unitOptions",null),s([r()],m.prototype,"view",null),s([r({type:Y})],m.prototype,"viewModel",void 0),s([r({type:Boolean})],m.prototype,"visible",null),m=s([R("esri.widgets.DistanceMeasurement2D")],m);const Ds=m;export{Ds as default};
