import{c as $,a as S}from"./devEnvironmentUtils-CnNDiFMM.js";import{s as y}from"./Accessor-BmwT4B0c.js";import{I as u,p as w,R as D}from"./cast-CsZslgGN.js";import{C as v}from"./Portal-CmmHxpLg.js";import{m as F}from"./jsonUtils-B-voMz-i.js";import{S as x,e as N,i as U}from"./Graphic-Dt0LgVGU.js";import{p as O,m as P,i as A,y as M,h as W}from"./styleUtils-ColFrJ-Z.js";import{e as k}from"./webStyleAcceptedFormats-CG7ZQ6BV.js";import"./index-4eY77cms.js";import"./JSONSupport-DcrLLGjL.js";import"./Promise-DfET-uns.js";import"./writer-DKgfqj4X.js";import"./Extent-g5W9hy0j.js";import"./Point-Cz2JYYmX.js";import"./layerUtils-B__v9OBu.js";import"./TextSymbol-BLIQ6RKX.js";import"./Color-VJEMvW-n.js";import"./colorUtils-Rxh2V3ai.js";import"./mathUtils-Cfq9PL9W.js";import"./enumeration-DpvDkLNI.js";import"./screenUtils-_ZIvrt5o.js";import"./reactiveUtils-XM7cS2OP.js";import"./Evented-Dw4_VOGn.js";import"./SimpleObservable-CvOkykwM.js";import"./defaults-FkBa0ybj.js";import"./defaultsJSON-GKolV7NZ.js";import"./Clonable-Z-AWS-16.js";import"./opacityUtils-Dim20wpZ.js";import"./ActionToggle-D7439N1A.js";import"./Identifiable-BHVfzH03.js";import"./jsonUtils-CwFG8yN4.js";import"./Polyline-s-JzsQqo.js";import"./typeUtils-B6WBEKDM.js";import"./collectionUtils-CTT-51g7.js";import"./vec3f64-BLpZdpfb.js";import"./aaBoundingBox-Dw3yBk2f.js";function vt(o,t,r){const e=o.name;return e==null?Promise.reject(new y("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference")):o.styleName==="Esri2DPointSymbolsStyle"?B(e,t,r):A(o,t,r).then(m=>z(m,e,t,M,r))}function q(o,t){return t.items.find(r=>r.name===o)}async function z(o,t,r,e,m){var h,g;const a=(r==null?void 0:r.portal)!=null?r.portal:v.getDefault(),i={portal:a,url:u(o.baseUrl)},n=q(t,o.data);if(!n)throw new y("symbolstyleutils:symbol-name-not-found",`The symbol name '${t}' could not be found`,{symbolName:t});const c=(m==null?void 0:m.acceptedFormats)??k,b=e(n,c);if(!b)throw new y("symbolstyleutils:symbol-reference-no-accepted-format",`The symbol name '${t}' does not have an accepted format (one of ${c})`,{symbolName:t});const{url:T,format:C}=b;let s=w(T,i),p=((h=n.thumbnail)==null?void 0:h.href)??null;const f=(g=n.thumbnail)==null?void 0:g.imageData;$()&&(s=S(s)??"",p=S(p));const E={portal:a,url:u(D(s)),origin:"portal-item"};return O(s,m).then(d=>{const I=C==="cim"?P(d.data):d.data,l=F(I,E);if(l&&x(l)){if(p){const R=w(p,i);l.thumbnail=new N({url:R})}else f&&(l.thumbnail=new N({url:`data:image/png;base64,${f}`}));o.styleUrl?l.styleOrigin=new U({portal:r.portal,styleUrl:o.styleUrl,name:t}):o.styleName&&(l.styleOrigin=new U({portal:r.portal,styleName:o.styleName,name:t}))}return l})}function B(o,t,r){const e=W.replaceAll(/\{SymbolName\}/gi,o),m=t.portal!=null?t.portal:v.getDefault();return O(e,r).then(a=>{const i=P(a.data);return F(i,{portal:m,url:u(D(e)),origin:"portal-item"})})}export{z as fetchSymbolFromStyle,q as getStyleItemFromStyle,vt as resolveWebStyleSymbol};
