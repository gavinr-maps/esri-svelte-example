import{e as g,E as l,ac as w,B as y,r as n,m as f,a as I}from"./Accessor-BHnuXKD2.js";import{c as T}from"./Point-XGrwlf63.js";import{c as V}from"./GraphicsCollection-CkliHSk1.js";import"./colorUtils-BAowQmkN.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./floatRGBA-CR2j2c7-.js";import"./Extent-CBBGeHb-.js";import"./Polyline-BmuD2-ZN.js";import"./definitions-LJaw2n5Z.js";import"./UpdateTracking2D-BJv4lrAz.js";import"./mathUtils-DV9iOXpW.js";import"./TextSymbol-BQ_NW9Xo.js";import"./GeometryUtils-B5FJlfZD.js";import"./CIMSymbolHelper-Vkq7AVTn.js";import"./vec2f32-BbH2jxlN.js";import"./defaults-Dwxdhopq.js";import"./OverrideHelper-CrxTOYuK.js";import"./EffectView-BDbE94Th.js";import"./Evented-DCWccWGU.js";import"./DisplayObject-S19ALweP.js";import{u as H}from"./View2D-CIpCSKxG.js";import"./DefaultVertexAttributeLayouts-DMsCtEEh.js";import"./enums-D9v74xTE.js";import"./WGLContainer-Bm0UZ79M.js";import"./Texture-D-SqNa4i.js";import"./dataViewUtils-CH0QMRr9.js";import"./StyleDefinition-DxJzQnGW.js";import"./enums-BRzLM11V.js";import"./GridShader-BTUgme4s.js";import"./cast-BA_-jlhc.js";import"./pbf-CFI-xDDp.js";import"./TechniqueType-uMFRS8dR.js";import"./FramebufferObject-DHwDHMWe.js";import"./FeatureCommandQueue-C_h-Fzgt.js";import"./Color-gncXBiLc.js";import"./PieChartMeshWriter-CYKOJPZo.js";import"./aaBoundingBox-CeBivBRq.js";import"./opacityUtils-CSd4XoR2.js";import"./renderState-e7QeQoUO.js";import"./glsl-BH37Aalp.js";import"./testSVGPremultipliedAlpha-CpxLiQJP.js";import{A as v}from"./GraphicsView2D-Op6juEbw.js";import"./reactiveUtils-BR0C1Kq4.js";import"./earcut-Lltz9D9k.js";import"./vec3f32-nZdmKIgz.js";import"./normalizeUtilsCommon-D0zPTJCj.js";import"./UpdatingHandles-ptqz1ck8.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import{r as C,o as a,n as d}from"./imageUtils-2R_Ot9YP.js";import{S as q}from"./LayerView2D-BMuowJAc.js";import{h as U}from"./HighlightGraphicContainer-B3qGPoDG.js";import{h as S,p as b,r as Q}from"./TileStrategy-DlGVvP4C.js";import{e as _}from"./TileKey-BtGhNUzq.js";import{y as $}from"./LayerView-DF8EqCYi.js";import{i as G}from"./RefreshableLayerView-Digmhts2.js";import{P,S as L}from"./MapServiceLayerViewHelper-CS8r6V-d.js";import{r as k}from"./drapedUtils-DFAbG8en.js";import{c as E}from"./HighlightDefaults-ESbuT2uR.js";import{g as F}from"./Scheduler-B_GuBefw.js";import"./writer-B2bQV2uU.js";import"./JSONSupport-CGdeqxpk.js";import"./index-tefRSezt.js";import"./Graphic-CFXUQZlS.js";import"./Clonable-DvJsj5LF.js";import"./enumeration-Cr5WIZs4.js";import"./Promise-CmQqe-ke.js";import"./ActionToggle-__-l4AdQ.js";import"./Identifiable-BrT7zvUW.js";import"./jsonUtils-Cu7OBRmN.js";import"./typeUtils-BSg8Y507.js";import"./collectionUtils-CbaToa73.js";import"./Portal-CTRRujjZ.js";import"./screenUtils-_ZIvrt5o.js";import"./vec3f64-BLpZdpfb.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./ReactiveMap-Dwhwbx9R.js";import"./SimpleObservable-7oieNGD8.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-D0SfAiSy.js";import"./OptimizedGeometry-7IxBWtHr.js";import"./memoryEstimations-5gFNwkKK.js";import"./utils-B91u8350.js";import"./rasterizingUtils-5QTNbyfl.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./vec2-maR1OrZI.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CnpCxTZE.js";import"./defaultsJSON-GKolV7NZ.js";import"./callExpressionWithFeature-CM_sm0iu.js";import"./quantizationUtils-2Az-xHPA.js";import"./colorUtils-Rxh2V3ai.js";import"./jsonUtils-TjZmCq6l.js";import"./utils-DYurMneM.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./Viewpoint-Cv8Otrne.js";import"./Camera-DJtV7zYb.js";import"./Cyclical-CPiNl4ru.js";import"./CollectionFlattener-B9CFCLSp.js";import"./workers-D8Q3pEzK.js";import"./Queue-BOnccek2.js";import"./intl-Do3GEEJ7.js";import"./projection-B2I9Bzj_.js";import"./TileInfo-CRfZy5zq.js";import"./TileKey-DZd6gJy7.js";import"./DefaultUI-DqLHkAzt.js";import"./jsxFactory-CLjKarlq.js";import"./uuid-Cl5lrJ4c.js";import"./InputManager-Bs9UE-jw.js";import"./signal-DSa0yokC.js";import"./Basemap-BHdJ6wQH.js";import"./loadAll-Do8S8AWH.js";import"./PortalItem-CXk7DqVv.js";import"./basemapDefinitions-BmB40s1J.js";import"./writeUtils-C3ZSK02Z.js";import"./layerUtils-dJgsXxkC.js";import"./groundInstanceUtils-Ben03ZCf.js";import"./editableLayers-BZGjz8nI.js";import"./catalogUtils-CK4eMvD1.js";import"./basemapEnsureType-BVU7UGJp.js";import"./basemapUtils-DQr5T1wn.js";import"./TablesMixin-BzMj7HDl.js";import"./Layer-C9uQlTBT.js";import"./TimeExtent-J5qnUFx_.js";import"./timeUtils-D2X862bk.js";import"./HeightModelInfo-B3GZyQFz.js";import"./timeZoneUtils-COos5xIr.js";import"./Query-DCBIeen2.js";import"./Field-Cyk7Ur5d.js";import"./fieldType-L-VlbZqy.js";import"./FullTextSearch-BWm_kPUE.js";import"./selectionUtils-DYi6daQO.js";import"./ViewEvents-Hl5AOQnu.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-DyhV4TAA.js";import"./a11yUtils-CSYUX1kC.js";import"./heightModelInfoUtils-CMg1cdju.js";import"./ViewingMode-Dodu7ZZk.js";import"./vec32-Dvg_eL9J.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-brik-GLm.js";import"./capabilities-DwlKKScG.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-rIBXQ52V.js";import"./CompassViewModel-BAJa4WdS.js";import"./GoTo-BsXOAO95.js";import"./ZoomViewModel-BZXEbLSs.js";import"./vec2f64-Dy6m9Nrb.js";import"./viewpointUtils-DmJh_Ev7.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-XRAPXbWa.js";import"./utils-Cy8wFNQo.js";import"./utils-CkSELPnj.js";import"./mat3-CR8GKnhD.js";import"./Tile-CkUxg4dk.js";import"./quickselect-QQC62dOK.js";import"./utils-D02V2_jH.js";import"./Version-9k2AOv05.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./WGLBrushVTLSymbol-DhI09LJn.js";import"./BufferObject-CIl3vJtA.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-C4sWoKdv.js";import"./Program-DD6La1z3.js";import"./Container-C9XOJkyO.js";import"./featureConversionUtils-DpmsPUmt.js";import"./OptimizedFeature-DcMLlxvB.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./GraphShaderModule-CNt-QO7Z.js";import"./ShaderBuilder-DV1s2efh.js";import"./BindType-BBwFZqyN.js";import"./CircularArray-CujHzHWW.js";import"./FeatureMetadata-_zu3ofPi.js";import"./diffUtils-CMkuJvD2.js";import"./queryUtils-DBeaQ3x_.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Cvj97qZO.js";import"./FieldsIndex-DFdVonga.js";import"./TimeOnly-yGYcAQQJ.js";import"./labelFormatUtils-B--9rEVY.js";import"./labelUtils-Dq8OkaT-.js";import"./ZoomMomentumEstimator-Igei2Npb.js";import"./heatmapTextureUtils-nYqDzBiV.js";import"./lengthUtils-DjJgJFRg.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BFetastB.js";import"./libtess-BP1QYsmS.js";import"./utils-ilH32Koe.js";import"./basicInterfaces-CZwQPxTp.js";import"./mat3f64-BBpwCtoL.js";import"./normalizeUtilsSync-D3hTE8bq.js";import"./dehydratedFeatures-Nwhn-hep.js";import"./BitmapTechnique-BNS3S4LA.js";import"./TileContainer-CLAMojvR.js";import"./utils-BQBvadb7.js";import"./ClipRect-XfrmCbGe.js";import"./layerViewUtils-tkZ5z_iY.js";import"./AGraphicContainer-DIPYSkLv.js";import"./TechniqueInstance-B8VcS8pm.js";import"./ScheduledQueueProcessor-DfrR8pp0.js";import"./scaleUtils-CfLu-sg1.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils--wN8JjVc.js";import"./popupUtils-Bp0XPfzq.js";import"./debugFlags-ZrDyTcDc.js";const z=[0,0];let m=class extends G(C(q($))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new S(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new b({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:F.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new Q({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),P(this,this.layer)){const e=this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(r,o)=>k(r,o,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,o)=>{e.graphicUpdateHandler({graphic:r,property:o})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=H(t);if(e.length===0)return g();const r=(i==null?void 0:i.name)??E;return this._addHighlightGraphics(e,r),g(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return T((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(z,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:r=0}=i;try{return await this._fetchImage(t,e)}catch(o){if(l(o))throw o;if(!this.resampling)return a(this._tileInfoView.tileInfo.size);if(r<3){const p=this._tileInfoView.getTileParentId(t.id);if(p){const h=new _(p),s=await this._fetchTileWithoutTilemapCache(h,{...i,resamplingLevel:r+1});return d(this._tileInfoView,s,h,t)}}return a(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:o=0}=i,p=new _(0,0,0,0);let h,s=null;try{if(s=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,p,{signal:r}),!this.resampling&&p.level!==t.level)return await w(i),a(this._tileInfoView.tileInfo.size);h=await this._fetchImage(p,r)}catch(c){if(l(c))throw c;if(this.resampling&&s==="unknown"&&o<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){p.set(u);try{h=await this._fetchTileWithTilemapCache(p,{...i,resamplingLevel:o+1})}catch{}}}}return h?this.resampling?d(this._tileInfoView,h,p,t):h:a(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||y.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([f()],m.prototype,"resampling",null),n([f()],m.prototype,"tilemapCache",null),m=n([I("esri.views.2d.layers.TileLayerView2D")],m);const Fr=m;export{Fr as default};
