import{e as u}from"./Evented-CXIxDjmW.js";import"./geometry-DpwwkAX1.js";import{c as y,n as V,y as b,b as W}from"./subclass-BR3PhgZG.js";import{d as a,P as T}from"./reactiveUtils-BFQ0BtrB.js";import{_ as A,z as E,d as x,n as f}from"./mathUtils-ClvKsMak.js";import{n as L}from"./projectVectorToVector-Chzd0Pq0.js";import{P as M,h as I}from"./aaBoundingBox-rJEWaOSN.js";import{G as P,f as D}from"./Point-DB4Hp4hH.js";import{l as F}from"./LayerView3D-DMyi427V.js";import{l as $,o as s,i as w}from"./Viewshed.glsl-DunS1wrb.js";import{t as C}from"./WaterSurface.glsl-BJUc652W.js";import{i as R}from"./PopupSceneLayerView-BK2Ttnde.js";import{y as U}from"./LayerView-CbIY_4n2.js";import{c as z}from"./layerViewUtils-D2JqIDZ8.js";import"./Accessor-D6mNnsWy.js";import"./Extent-DHjqVB-p.js";import"./Polyline-D97hl-6E.js";import"./writer-3zufXUNV.js";import"./jsonMap-DCC6W5ex.js";import"./shared-B3wH2qpO.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./projectPointToVector-D3506wm2.js";import"./projection-A9yUaaTs.js";import"./index-CeCSsEgo.js";import"./assets-C2mb-ea2.js";import"./heightModelInfoUtils-BSzg1Wnl.js";import"./HeightModelInfo-CSXZysDz.js";import"./arcgisLayerUrl-Cgl5IQFD.js";import"./persistableUrlUtils-BcifXQ1Z.js";import"./Viewpoint-B260yGoV.js";import"./Clonable-cKbRam6-.js";import"./Cyclical-BY_I03kj.js";import"./jsonUtils-Cma_7A64.js";import"./jsxFactory-CbAu6VfF.js";import"./intl-Dpfm8vPB.js";import"./Promise-CZrWwByK.js";import"./uuid-fwrPAdZb.js";import"./screenUtils-PfxkaaMN.js";import"./workers-8Q6jrI18.js";import"./Queue-DpHko4Yk.js";import"./GraphicsCollection-nEq2FD1R.js";import"./Graphic-Dc7F67nR.js";import"./PopupTemplate-ByHks6sq.js";import"./fieldUtils-CNduWQU9.js";import"./enumeration--HlxOQ_N.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./symbols-CsUQ5BxR.js";import"./TextSymbol-gKE-H_J6.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-liet8xHC.js";import"./boundedPlane-CZE_hxQR.js";import"./sphere-7666U3LO.js";import"./mat4-ybYUU6jq.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./plane-Bz78OrLf.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-kvswLROa.js";import"./lineSegment-BvgMMk26.js";import"./RenderCoordsHelper-DgY-kqpV.js";import"./spatialReferenceEllipsoidUtils-BL8s_3ls.js";import"./projectVectorToPoint-Cwe6B2HP.js";import"./ElevationProvider-BHZsEIDd.js";import"./ViewingMode-Dodu7ZZk.js";import"./verticalOffsetUtils-DaB1QvwW.js";import"./mat3-DRqs2t5W.js";import"./orientedBoundingBox-COq6pSqo.js";import"./quat-ChS85qAG.js";import"./computeTranslationToOriginAndRotation-CLzktXYu.js";import"./scaleUtils-BciLowpa.js";import"./layerUtils-erzwAANv.js";import"./DefaultUI-DVON9ypr.js";import"./UpdatingHandles-CMtXpTiG.js";import"./InputManager-C4xu1R9l.js";import"./signal-DzOfzcfh.js";import"./Map-C4JPDBFj.js";import"./Basemap-DhGpUWGY.js";import"./loadAll-DDw-urzS.js";import"./PortalItem-BuTU9OuN.js";import"./writeUtils-3wz9AuW7.js";import"./Ground-BuxgFYJy.js";import"./compilerUtils-BA04t1lN.js";import"./CollectionFlattener-CkyePFnC.js";import"./editableLayers-BHlaPs85.js";import"./catalogUtils--o1nDhfl.js";import"./basemapUtils-CkCKogG3.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./TablesMixin-BKe9x_jT.js";import"./Layer-C96_yo4i.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./ReactiveMap-Dl_3-Rm5.js";import"./Query-Cx4awVKu.js";import"./DataLayerSource-6X35yXpo.js";import"./Field-C8SaaeoI.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BNIhEccm.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BGG3AyYa.js";import"./a11yUtils-DwloBVAu.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-DFh8uIGE.js";import"./Compass-DD0Dkx4v.js";import"./utils-DsJqvptN.js";import"./GoTo-CyjNnle5.js";import"./NavigationToggle-C75z3F4y.js";import"./Zoom-DVO2GqC9.js";import"./viewpointUtils-NBu6CVKZ.js";import"./frustum-DqmLJYYu.js";import"./earthUtils-BoWm1Npn.js";import"./spatialReferenceSupport-C0HdvI6F.js";import"./ElevationSamplerData-IYvomv6Y.js";import"./terrainUtils-DI2O4VuO.js";import"./TileInfo-DkEc90N-.js";import"./TileKey-DZd6gJy7.js";import"./Environment-CIgtfJ1a.js";import"./weather-TVtZwW4o.js";import"./quantityUtils-d_-fFwhF.js";import"./colorUtils-D5nOabzP.js";import"./vec2-B_ymkwGp.js";import"./interfaces-B8ge7Jg9.js";import"./Texture-CcsX4Ue_.js";import"./NormalAttribute.glsl-Dqf1UPF9.js";import"./BindType-BmZEZMMh.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-BMqL_pkg.js";import"./enums-BlUEVwJR.js";import"./Texture-BbJIOVx_.js";import"./basicInterfaces-wONHx_SN.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-B6BGScAS.js";import"./Material-BN_i9QRJ.js";import"./triangle-B7rKLsGW.js";import"./lengthUtils-D7_DvYH0.js";import"./renderState-PYzNpa1K.js";import"./requestImageUtils-DgB0_9qP.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./RenderGeometry-CXcYvifi.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-CF_CpVBS.js";import"./unitConversionUtils-Dl04YuQU.js";import"./hydratedFeatures-Cy9DBeYQ.js";import"./axisAngleDegrees-CHCWDIqP.js";import"./Scheduler-CDoWuxMK.js";import"./debugFlags-B3L9P_UW.js";import"./Float4DrawUniform-CWdxHXQ-.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-DQVAqpsn.js";import"./InterleavedLayout-UIhsB8jd.js";import"./BufferView-B7Z-dzh4.js";import"./floatRGBA-C8rGFKJ0.js";import"./Intersector-CYIO18dt.js";import"./glUtil-C6KhMg1m.js";import"./MemCache-C6WUx-5V.js";import"./VertexArrayObject-Cwnso4un.js";import"./BufferObject-CjYoWxgZ.js";import"./Program-BE7XUO18.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./ShadowCastVisualizeTechniqueConfiguration-CoPYcmeP.js";import"./euclideanLengthMeasurementUtils-Cc80-VfJ.js";import"./ray-DM1mbnrb.js";import"./ZoomMomentumEstimator-BjFm7M7Z.js";import"./ColorMaterial.glsl-CJh1RTEZ.js";import"./VertexColor.glsl-lPkEAKYQ.js";import"./labelFormatUtils-jemMExFz.js";import"./labelUtils-Cczy0uDR.js";import"./FeatureTileDescriptor3D-eAC3sTRJ.js";import"./elevationInfoUtils-Bl7QRRwv.js";import"./ElevationQueryTileCache-Sgr0RZBH.js";import"./LayerConstants-B33OP6sh.js";import"./Intersector-wnm5hmmT.js";import"./ElevationRange-BrgM1moX.js";import"./geometryServiceUtils-K7u_-O-B.js";import"./project-C_6NxEch.js";import"./utils-D61i9O7E.js";import"./utils-Dx8bgRIB.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./objectResourceUtils-DwPhzmLp.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./vec3-C3Q-RF_i.js";import"./vec4-L9zJLV3y.js";import"./Version-_Vxue7Ui.js";import"./vec2f32-BbH2jxlN.js";import"./DecodeSymbolColor.glsl-CeBC4xQe.js";import"./RenderableTile-BEiJLF3C.js";import"./enums-BRzLM11V.js";import"./TileStrategy-_ezroEyM.js";import"./TileKey-CIqLSCov.js";import"./QueueProcessor-Bu6RBZRX.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-BIPVF1RK.js";import"./DisplayObject-DFOkWAgp.js";import"./StyleDefinition-BK3ROBTO.js";import"./enums-BRXbslMp.js";import"./GeometryUtils-BSPpv37S.js";import"./Normals-D1LdtP06.js";import"./resources-BB7af0HE.js";import"./edgeUtils-BIb6yRHm.js";import"./edgeProcessing-kh6EVSro.js";import"./deduplicate-DxTSMkFY.js";import"./testSVGPremultipliedAlpha-CKx7iZPZ.js";import"./RenderingContext-B0G6O7lI.js";import"./ProgramCache-DZJRjGv8.js";import"./imageUtils-9KeT6Jbh.js";import"./dehydratedFeatures-fOLmpfQS.js";import"./quantizationUtils-CIQDbQFJ.js";import"./featureConversionUtils-DdoZh_25.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./earcut-BqgeR2O3.js";import"./SnappingCandidate-O5eRSE6e.js";import"./visualVariableUtils-DzaXbn8H.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./triangulationUtils-D8OjVISe.js";import"./CIMSymbolHelper-C1Ghh-WW.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CILP_6vp.js";import"./utils-CO7DMJWl.js";import"./definitions-ByNBSgP9.js";import"./mat2d-DPkeMmgR.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./defaults-DCm7iNI6.js";import"./defaultsJSON-GKolV7NZ.js";import"./OverrideHelper-C4oumxVn.js";import"./cimSymbolUtils-D00GIWna.js";import"./utils-C1cS-0Yj.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./LRUCache-ju6LnIBZ.js";import"./lineStippleUtils-BcQwIcXj.js";import"./MeshComponent-D1ps11B9.js";import"./MeshVertexAttributes-DVEL_Tlm.js";import"./meshVertexSpaceUtils-CtidK-ZY.js";import"./MeshLocalVertexSpace-Xt9zU6DE.js";import"./projection-CJ-ESJIf.js";import"./DefaultLayouts-Bz7P2wdj.js";import"./styleUtils-DQEZjdpw.js";import"./webStyleSymbolUtils-BtUE3Q7L.js";import"./jsonUtils-C6dvhNjw.js";import"./popupUtils-sb3Ob2mW.js";var r;(function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"})(r||(r={}));const l=f(),S=f();let n=class extends R(F(U)){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this.ignoresMemoryFactor=!0,this._dbgFlags=new Set}get baseUrl(){var e;return((e=this.layer.parsedUrl)==null?void 0:e.path)??""}get wasmLayerId(){return this._wasmLayerId}initialize(){var d;if(this._dbgFlags.add(r.Error),this.view.viewingMode!=="local")throw new y("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(!((d=this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat)!=null&&d.textureFloat))throw new y("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const e=this.layer.spatialReference;if(!P(e,this.view.spatialReference))throw new y("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const t=this.layer.currentVariableId,o=this.layer.getVolume(t),m=this.layer.getVariable(t);if(o!=null&&m!=null){const h=o.dimensions[0],i=o.dimensions[1],c=o.zDimension;if(c>1){const g=o.dimensions[c],v=h.size*i.size*g.size;let _=1;switch(m.renderingFormat.type){case"Int16":case"UInt16":_=2;break;case"Int32":case"UInt32":case"Float32":_=4}this._futureMemory=_*v}}const p=$(this).then(h=>{this._wasmLayerId=h,this._suspendedHandle=a(()=>this.suspended,i=>{const c=s(this.view);c&&c.setEnabled(this,!i)},T),this.addHandles([a(()=>this.layer.renderMode,i=>this._pushRenderModeToWasm(i)),a(()=>this.layer.currentVariableId,i=>this._pushCurrentVariableIdToWasm(i)),a(()=>this.layer.getSections(),i=>this._pushSectionsToWasm(i)),a(()=>this.layer.getVariableStyles(),i=>this._pushVariableStylesToWasm(i)),a(()=>this.layer.getVolumeStyles(),i=>this._pushVolumeStylesToWasm(i)),a(()=>this.layer.enableDynamicSections,i=>this._pushEnableDynamicSectionsToWasm(i)),a(()=>this.layer.enableIsosurfaces,i=>this._pushEnableIsosurfacesToWasm(i)),a(()=>this.layer.enableSections,i=>this._pushEnableSectionsToWasm(i)),a(()=>this.layer.enableSlices,i=>this._pushEnableSlicesToWasm(i)),a(()=>[this.layer.timeOffset,this.layer.timeExtent,this.layer.useViewTime],()=>this._updateLayerTimeProperties()),a(()=>this.slicePlaneEnabled,i=>this._pushAnalysisSliceToWasm(i,this.view.slicePlane)),a(()=>this.view.slicePlane,i=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,i))])}).catch(h=>{if(w(this),this._wasmLayerId=-1,h===-1)throw new y("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(h===-2)throw new y("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(p)}destroy(){w(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){const e=s(this.view);return!(this._wasmLayerId<0||e==null)&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}get usedMemory(){return this._usedMemory}get unloadedMemory(){return this._futureMemory}get performanceInfo(){return new C(this.usedMemory)}get visibleAtCurrentScale(){return z(this.layer.effectiveScaleRange,this.view.terrainScale)}whenGraphicBounds(e,t){const o=e.attributes["Voxel.WorldPosition"];if(o){const m=M(),p=JSON.parse(o);if(L(p,this.view.renderSpatialReference,S,this.view.spatialReference||D.WGS84))return I(m,S),Promise.resolve({boundingBox:m,screenSpaceObjects:[]})}return Promise.reject()}setUsedMemory(e){this._usedMemory=e,this._futureMemory=0}captureFrustum(){const e=s(this.view);e==null||e.captureFrustum()}toggleFullVolumeExtentDraw(){const e=s(this.view);e==null||e.toggleFullVolumeExtentDraw(this)}getLayerTimes(){const e=s(this.view);return(e==null?void 0:e.getLayerTimes(this))??[]}getCurrentLayerTimeIndex(){const e=s(this.view);return(e==null?void 0:e.getCurrentLayerTimeIndex(this))??0}_pushRenderModeToWasm(e){const t=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setRenderMode(this,e)||this._dbg(r.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(e){const t=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setStaticSections(this,e)||this._dbg(r.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(e){const t=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setCurrentVariable(this,e)||this._dbg(r.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(e){const t=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setVariableStyles(this,e)||this._dbg(r.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!")}_accountForEnableSlices(e,t){const o=t??this.layer.enableSlices;for(let m=0;m<e.length;++m){const p=e[m];for(const d of p.slices)d.enabled=d.enabled&&o}}_pushVolumeStylesToWasm(e){const t=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t&&(this._accountForEnableSlices(e,null),t.setVolumeStyles(this,e)||this._dbg(r.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(e,t){const o=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(o?"have WASM":"don't have WASM!!!"));let m=!1;if(o){if(t){const p=t.origin;A(l,t.basis1,t.basis2),E(l,l),m=o.setAnalysisSlice(this,e,p,l)}else x(l,0,0,1),m=o.setAnalysisSlice(this,!1,l,l);m||this._dbg(r.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_updateLayerTimeProperties(){const e=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._updateLayerTimeProperties() called, "+(e?"have WASM":"don't have WASM!!!")),e&&e.updateLayerTimeProperties(this)}_pushEnableDynamicSectionsToWasm(e){const t=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setEnableDynamicSections(this,e)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!")}_pushEnableSlicesToWasm(e){const t=s(this.view);if(this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t){const o=this.layer.getVolumeStyles();this._accountForEnableSlices(o,e),t.setVolumeStyles(this,o)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(e){const t=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setEnableIsosurfaces(this,e)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!")}_pushEnableSectionsToWasm(e){const t=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setEnableSections(this,e)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!")}async whenGraphicAttributes(e,t){return e}_dbg(e,t){this._dbgFlags.has(e)&&(e===r.Error?V.getLogger(this).error(t):V.getLogger(this).warn(t))}};u([b()],n.prototype,"layer",void 0),u([b()],n.prototype,"baseUrl",null),u([b({type:Boolean})],n.prototype,"slicePlaneEnabled",void 0),u([b({readOnly:!0})],n.prototype,"visibleAtCurrentScale",null),n=u([W("esri.views.3d.layers.VoxelLayerView3D")],n);const Mo=n;export{Mo as default};
