import{e as i}from"./Evented-CXIxDjmW.js";import"./geometry-DpwwkAX1.js";import{d as P}from"./Graphic-Dc7F67nR.js";import"./symbols-CsUQ5BxR.js";import{V as w}from"./reactiveUtils-BFQ0BtrB.js";import{y as p,b as C,a as N,c as B,e as F,d as L}from"./subclass-BR3PhgZG.js";import{S as W}from"./MultiOriginJSONSupport-DjAXzJun.js";import{o as c,r as k}from"./writer-3zufXUNV.js";import{V as S,J as z,_ as A,W as K,K as V}from"./projection-A9yUaaTs.js";import{D as I,l as J,I as M,i as $,K as R}from"./Polyline-D97hl-6E.js";import{R as q}from"./normalizeUtils-Bi6Jza1f.js";import{f as h,G as H}from"./Point-DB4Hp4hH.js";import U from"./FeatureLayer-BCmfw45U.js";import Z from"./GraphicsLayer-D2NeCfd2.js";import{f as Q}from"./Layer-C96_yo4i.js";import{n as X}from"./objectIdUtils-4dd1rf9p.js";import{l as Y}from"./BlendLayer-DmvCcS5c.js";import{b as ee}from"./OperationalLayer-B61mRSes.js";import{j as te}from"./PortalLayer-iKUPhGZB.js";import{t as re}from"./ScaleRangeLayer-CKYXLXxK.js";import{y as D}from"./Field-C8SaaeoI.js";import{S as oe,d as ie,y as T,m as le}from"./TextSymbol-gKE-H_J6.js";import{w as ae}from"./Extent-DHjqVB-p.js";import"./Accessor-D6mNnsWy.js";import"./jsonMap-DCC6W5ex.js";import"./PopupTemplate-ByHks6sq.js";import"./Clonable-cKbRam6-.js";import"./assets-C2mb-ea2.js";import"./index-CeCSsEgo.js";import"./fieldUtils-CNduWQU9.js";import"./intl-Dpfm8vPB.js";import"./Promise-CZrWwByK.js";import"./mathUtils-ClvKsMak.js";import"./enumeration--HlxOQ_N.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./jsonUtils-Cma_7A64.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-rJEWaOSN.js";import"./persistableUrlUtils-BcifXQ1Z.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-liet8xHC.js";import"./shared-B3wH2qpO.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./normalizeUtilsCommon-tgSpcwHH.js";import"./utils-D61i9O7E.js";import"./utils-Dx8bgRIB.js";import"./ClassBreaksRenderer-DMO3d0Rn.js";import"./UniqueValueRenderer-dci9bLM8.js";import"./diffUtils--7ofoPN-.js";import"./colorRamps-CFlTi-ob.js";import"./SizeVariable-aYYWlweG.js";import"./ColorStop-CXfPDZon.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DzaXbn8H.js";import"./compilerUtils-BA04t1lN.js";import"./lengthUtils-D7_DvYH0.js";import"./jsonUtils-C6dvhNjw.js";import"./layerUtils-erzwAANv.js";import"./defaults-DCm7iNI6.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-DQEZjdpw.js";import"./jsonUtils-CuoSmH2q.js";import"./LRUCache-ju6LnIBZ.js";import"./MemCache-C6WUx-5V.js";import"./Version-_Vxue7Ui.js";import"./FieldsIndex-IOXc-mnc.js";import"./UnknownTimeZone-D0GlcniK.js";import"./OverrideHelper-C4oumxVn.js";import"./colorUtils-D5nOabzP.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./utils-CO7DMJWl.js";import"./quantizationUtils-CIQDbQFJ.js";import"./HeatmapColorStop-CgvKf0-E.js";import"./heatmapUtils-C-uT6ZIV.js";import"./SimpleRenderer-DvJZ7cyq.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureLayerBase-CD91dIfN.js";import"./inputs-CnJRqwLx.js";import"./formUtils-Dni92j4V.js";import"./HeightModelInfo-CSXZysDz.js";import"./arcgisLayerUrl-Cgl5IQFD.js";import"./commonProperties-C-F8Nu9F.js";import"./ElevationInfo-BxYXLfrw.js";import"./unitConversionUtils-Dl04YuQU.js";import"./featureLayerUtils-CeNLEyq1.js";import"./featureQueryAll-CRo1-WqJ.js";import"./Query-Cx4awVKu.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./DataLayerSource-6X35yXpo.js";import"./FullTextSearch-BNIhEccm.js";import"./AttachmentQuery-Dn4NbT1Z.js";import"./RelationshipQuery-kHvI2dm7.js";import"./fieldType-CIG5ey7e.js";import"./LayerFloorInfo-BN2blBAm.js";import"./Relationship-WMN17mIX.js";import"./serviceCapabilitiesUtils-GL2GsHu0.js";import"./workers-8Q6jrI18.js";import"./Queue-DpHko4Yk.js";import"./editsZScale-BMHD7K6h.js";import"./queryZScale-B_YkkRy9.js";import"./FeatureSet-DyOnd9Rj.js";import"./APIKeyMixin-DpJrW91V.js";import"./ArcGISService-Dr1J04Ka.js";import"./CustomParametersMixin-BStBpako.js";import"./EditBusLayer-C6pLlK14.js";import"./uuid-fwrPAdZb.js";import"./FeatureEffectLayer-B3ucpbgh.js";import"./FeatureEffect-BXMKpemG.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./FeatureFilter-BzdN7b7E.js";import"./FeatureReductionLayer-7Q3CJbxJ.js";import"./FeatureReductionSelection-Do1LXJh7.js";import"./labelingInfo-C8CHVUWS.js";import"./labelUtils-Cczy0uDR.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-CfmzojSk.js";import"./OrderByInfo-Bn0SWspE.js";import"./RefreshableLayer-B26jSd3d.js";import"./TemporalLayer-D6vkocFU.js";import"./TimeInterval-CjSB1odC.js";import"./TimeInfo-Cq5mDY2W.js";import"./FeatureTemplate-BOr53vUa.js";import"./FeatureType-ByEWGsln.js";import"./fieldProperties-DJEV41A1.js";import"./versionUtils-ByKR3-oH.js";import"./styleUtils-BATHgMyw.js";import"./TopFeaturesQuery-BBItvyOE.js";import"./popupUtils-fsHWupnf.js";import"./interfaces-CL2NbQte.js";import"./GraphicsCollection-nEq2FD1R.js";import"./PortalItem-BuTU9OuN.js";import"./portalItemUtils-DIZSrm3T.js";function b(t){return t.featureCollectionType==="markup"||t.layers.some(e=>e.layerDefinition.visibilityField!=null||!E(e))}function E({layerDefinition:t,featureSet:e}){const r=t.geometryType??e.geometryType;return v.find(o=>{var l,n,s;return r===o.geometryTypeJSON&&((s=(n=(l=t.drawingInfo)==null?void 0:l.renderer)==null?void 0:n.symbol)==null?void 0:s.type)===o.identifyingSymbol.type})}function _(){return new ae({xmin:-180,ymin:-90,xmax:180,ymax:90})}const x=new D({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),ne=new D({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0,length:255});let y=class extends Z{constructor(t){super(t),this.visibilityMode="inherited"}initialize(){for(const t of this.graphics)t.sourceLayer=this.layer;this.graphics.on("after-add",t=>{t.item.sourceLayer=this.layer}),this.graphics.on("after-remove",t=>{t.item.sourceLayer=null})}get fullExtent(){var r;const t=(r=this.layer)==null?void 0:r.spatialReference,e=this.fullBounds;return t?e==null?S(_(),t).geometry:$(e,t):null}get fullBounds(){var r;const t=(r=this.layer)==null?void 0:r.spatialReference;if(!t)return null;const e=I();return this.graphics.forEach(o=>{const l=o.geometry!=null?S(o.geometry,t).geometry:null;l!=null&&J(e,l.type==="point"?l:l.extent,e)}),M(e,R)?null:e}get sublayers(){return this.graphics}};i([p({readOnly:!0})],y.prototype,"fullExtent",null),i([p({readOnly:!0})],y.prototype,"fullBounds",null),i([p({readOnly:!0})],y.prototype,"sublayers",null),i([p()],y.prototype,"layer",void 0),i([p()],y.prototype,"layerId",void 0),i([p({readOnly:!0})],y.prototype,"visibilityMode",void 0),y=i([C("esri.layers.MapNotesLayer.MapNotesSublayer")],y);const v=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:new oe().toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:new ie().toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:new T().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:new T().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:new le().toJSON()}];let a=class extends Y(re(ee(te(W(Q))))){constructor(t){super(t),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=h.WGS84,this.sublayers=new w(v.map(e=>new y({id:e.id,layerId:e.layerId,title:e.title,layer:this}))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(t,e,r){return{operations:{supportsMapNotesEditing:!b(e)&&(r==null?void 0:r.origin)!=="portal-item"}}}readFeatureCollections(t,e,r){if(!b(e))return null;const o=e.layers.map(l=>{const n=new U;return n.read(l,r),n});return new w({items:o})}readLegacyfeatureCollectionJSON(t,e){return b(e)?N(e.featureCollection):null}get fullExtent(){var r;const t=this.spatialReference,e=I();return this.sublayers!=null?this.sublayers.forEach(({fullBounds:o})=>o!=null?J(e,o,e):e,e):(r=this.featureCollectionJSON)!=null&&r.layers.some(o=>o.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(o=>{const l=S(o.layerDefinition.extent,t).geometry;l!=null&&J(e,l,e)}),M(e,R)?S(_(),t).geometry:$(e,t)}readMinScale(t,e){for(const r of e.layers)if(r.layerDefinition.minScale!=null)return r.layerDefinition.minScale;return 0}readMaxScale(t,e){for(const r of e.layers)if(r.layerDefinition.maxScale!=null)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(t,e){return e.layers.length?h.fromJSON(e.layers[0].layerDefinition.spatialReference):h.WGS84}readSublayers(t,e,r){if(b(e))return null;const o=[];let l=e.layers.reduce((n,s)=>Math.max(n,s.layerDefinition.id??-1),-1)+1;for(const n of e.layers){const{layerDefinition:s,featureSet:m}=n,u=s.id??l++,d=E(n);if(d!=null){const f=new y({id:d.id,title:s.name,layerId:u,layer:this,graphics:m.features.map(({geometry:g,symbol:O,attributes:j,popupInfo:G})=>P.fromJSON({attributes:j,geometry:g,symbol:O,popupTemplate:G}))});o.push(f)}}return new w(o)}writeSublayers(t,e,r,o){var d;const{minScale:l,maxScale:n}=this;if(t==null)return;const s=t.some(f=>f.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing)return void(s&&((d=o==null?void 0:o.messages)==null?void 0:d.push(new B("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"))));const m=[];let u=this.spatialReference.toJSON();e:for(const f of t)for(const g of f.graphics)if(g.geometry!=null){u=g.geometry.spatialReference.toJSON();break e}for(const f of v){const g=t.find(O=>f.id===O.id);this._writeMapNoteSublayer(m,g,f,l,n,u,o)}F("featureCollection.layers",m,e)}get textLayer(){return this._findSublayer("textLayer")}load(t){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},t)),Promise.resolve(this)}read(t,e){"featureCollection"in t&&(t=N(t),Object.assign(t,t.featureCollection)),super.read(t,e)}async beforeSave(){if(this.sublayers==null)return;let t=null;const e=[];for(const o of this.sublayers)for(const l of o.graphics)if(l.geometry!=null){const n=l.geometry;t?H(n.spatialReference,t)||(z(n.spatialReference,t)||A()||await K(),l.geometry=V(n,t)):t=n.spatialReference,e.push(l)}const r=await q(e.map(o=>o.geometry));e.forEach((o,l)=>o.geometry=r[l])}_findSublayer(t){var e;return this.sublayers==null?null:((e=this.sublayers)==null?void 0:e.find(r=>r.id===t))??null}_writeMapNoteSublayer(t,e,r,o,l,n,s){const m=[];if(e!=null){for(const u of e.graphics)this._writeMapNote(m,u,r.geometryType,s);this._normalizeObjectIds(m,x),t.push({layerDefinition:{name:e.title,drawingInfo:{renderer:{type:"simple",symbol:N(r.identifyingSymbol)}},id:e.layerId,geometryType:r.geometryTypeJSON,minScale:o,maxScale:l,objectIdField:"OBJECTID",fields:[x.toJSON(),ne.toJSON()],spatialReference:n},featureSet:{features:m,geometryType:r.geometryTypeJSON}})}}_writeMapNote(t,e,r,o){var u,d;if(e==null)return;const{geometry:l,symbol:n,popupTemplate:s}=e;if(l==null)return;if(l.type!==r)return void((u=o==null?void 0:o.messages)==null?void 0:u.push(new L("map-notes-layer:invalid-geometry-type",`Geometry "${l.type}" cannot be saved in "${r}" layer`,{graphic:e})));if(n==null)return void((d=o==null?void 0:o.messages)==null?void 0:d.push(new L("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:e})));const m={attributes:{...e.attributes},geometry:l.toJSON(),symbol:n.toJSON()};s!=null&&(m.popupInfo=s.toJSON()),t.push(m)}_normalizeObjectIds(t,e){const r=e.name;let o=X(r,t)+1;const l=new Set;for(const n of t){n.attributes||(n.attributes={});const{attributes:s}=n;(s[r]==null||l.has(s[r]))&&(s[r]=o++),l.add(s[r])}}};i([p({readOnly:!0})],a.prototype,"capabilities",void 0),i([c(["portal-item","web-map"],"capabilities",["layers"])],a.prototype,"readCapabilities",null),i([p({readOnly:!0})],a.prototype,"featureCollections",void 0),i([c(["web-map","portal-item"],"featureCollections",["layers"])],a.prototype,"readFeatureCollections",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],a.prototype,"featureCollectionJSON",void 0),i([c(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],a.prototype,"readLegacyfeatureCollectionJSON",null),i([p({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],a.prototype,"featureCollectionType",void 0),i([p({readOnly:!0})],a.prototype,"fullExtent",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],a.prototype,"legendEnabled",void 0),i([p({type:["show","hide","hide-children"]})],a.prototype,"listMode",void 0),i([p({type:Number,nonNullable:!0,json:{write:!1}})],a.prototype,"minScale",void 0),i([c(["web-map","portal-item"],"minScale",["layers"])],a.prototype,"readMinScale",null),i([p({type:Number,nonNullable:!0,json:{write:!1}})],a.prototype,"maxScale",void 0),i([c(["web-map","portal-item"],"maxScale",["layers"])],a.prototype,"readMaxScale",null),i([p({readOnly:!0})],a.prototype,"multipointLayer",null),i([p({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],a.prototype,"operationalLayerType",void 0),i([p({readOnly:!0})],a.prototype,"pointLayer",null),i([p({readOnly:!0})],a.prototype,"polygonLayer",null),i([p({readOnly:!0})],a.prototype,"polylineLayer",null),i([p({type:h})],a.prototype,"spatialReference",void 0),i([c(["web-map","portal-item"],"spatialReference",["layers"])],a.prototype,"readSpatialReference",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],a.prototype,"sublayers",void 0),i([c("web-map","sublayers",["layers"])],a.prototype,"readSublayers",null),i([k("web-map","sublayers")],a.prototype,"writeSublayers",null),i([p({readOnly:!0})],a.prototype,"textLayer",null),i([p()],a.prototype,"title",void 0),i([p({readOnly:!0,json:{read:!1}})],a.prototype,"type",void 0),a=i([C("esri.layers.MapNotesLayer")],a);const Ar=a;export{Ar as default};
