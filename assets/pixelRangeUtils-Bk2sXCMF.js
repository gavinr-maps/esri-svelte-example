const S=9999999e31,y=2e-7,U={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function x(t){return U[t]??[-34028234663852886e22,34028234663852886e22]}function O(t,n){return t==null||n==null?"s32":t<0?t>=-128&&n<128?"s8":t>=-32768&&n<32768?"s16":"s32":n<256?"u8":n<65536?"u16":"u32"}function V(t){return((t==null?void 0:t.startsWith("s"))||(t==null?void 0:t.startsWith("u")))??!1}function P(t,n,e,r){let[l,o]=x(e);const s=V(e);return s&&(l-=1e-5,o+=1e-5),s?e.startsWith("u")?v(t,n,r,[l,o]):w(t,n,r,[l,o]):I(t,n,r,[l,o])}function W(t,n){for(let e=0;e<n.length;e++)n[e]&&isNaN(t[e])&&(n[e]=0,t[e]=0)}function v(t,n,e,r){const[l,o]=r;for(let s=0;s<n.length;s++)if(n[s]){const i=t[s];i<l||i>o?n[s]=0:e[s]=i+.5|0}}function w(t,n,e,r){const[l,o]=r;for(let s=0;s<n.length;s++)if(n[s]){const i=t[s];i<l||i>o?n[s]=0:e[s]=i+(i>0?.5:-.5)|0}}function I(t,n,e,r){const[l,o]=r;for(let s=0;s<n.length;s++)if(n[s]){const i=t[s];i<l||i>o?n[s]=0:e[s]=i}}function C(t,n,e){var M,k;if(t.depthCount&&t.depthCount>1)return;const{pixels:r,statistics:l,pixelType:o}=t,s=r[0].length,i=t.bandMasks??[],g=t.mask??new Uint8Array(s).fill(255),E=o==="f32"||o==="f64",p=x(o);let N=!1;for(let u=0;u<r.length;u++){const c=typeof n=="number"?n:n[u];if(c==null)continue;const d=((M=l==null?void 0:l[u])==null?void 0:M.minValue)??p[0],m=((k=l==null?void 0:l[u])==null?void 0:k.maxValue)??p[1];if(d>c+Number.EPSILON||m<c-Number.EPSILON)continue;const h=i[u]||g.slice(),f=r[u],A=e==null?void 0:e.customFloatTolerance;if(E&&A!==0){let a=A;a||(a=Math.abs(c)>=S?y*Math.abs(c):o==="f32"?2**-23:Number.EPSILON);for(let b=0;b<f.length;b++)h[b]&&Math.abs(f[b]-c)<a&&(f[b]=0,h[b]=0,g[b]=0,N=!0)}else for(let a=0;a<f.length;a++)h[a]&&f[a]===c&&(f[a]=0,h[a]=0,g[a]=0,N=!0);i[u]=h}if(N){const u=t.bandMasks||t.pixels.length>1?i:null;e!=null&&e.matchAllNoData?t.mask=u&&u.length>1?L(u):g:(t.bandMasks=u,t.mask=g)}function L(u){if(u.length<2)return u[0];const c=u[0].length,d=new Uint8Array(c).fill(0);for(let m=0;m<u.length;m++){const h=u[m];for(let f=0;f<c;f++)h[f]&&(d[f]=255)}return d}N&&"updateStatistics"in t&&t.updateStatistics()}export{C as a,W as i,O as l,V as o,x as s,P as u};
