import{d as R,n as v,P as f,r as m,z as $,_ as h,M}from"./mathUtils-ClvKsMak.js";import{f as x,g as P,W as B,a2 as S}from"./Point-TlcsOcXV.js";import{n as b,r as G}from"./mat4-ybYUU6jq.js";import{a as g}from"./spatialReferenceEllipsoidUtils-DuE2W35w.js";import{c as Z}from"./projectPointToVector-C-hGM2ap.js";import{t as z}from"./projectVectorToPoint-GP7lggIC.js";import{n as y}from"./projectVectorToVector-BLdiwuTJ.js";import{n as c}from"./Polyline-BQFeqYXi.js";import{H as U,_ as E}from"./boundedPlane-Xr4Vx-V9.js";import{Z as F,c as I}from"./sphere-DIv2hmik.js";import{c as s,m as L,S as O}from"./plane-Bz78OrLf.js";import{t as _}from"./ElevationProvider-eMOI1-3B.js";import{l as u}from"./ViewingMode-Dodu7ZZk.js";function T(r){const{value:t,operations:e}=r;return{operations:e,value:e.create(t)}}function Y(r,t,e){return r.operations.setExtent(r.value,t,e.value),e}function j(r){return{operations:r,value:r.create()}}function w(r,t,e=j(r)){return e.operations=r,r.copy(t,e.value),e}function q(r){return w(I,F(0,0,0,P(r).radius))}const A=2**50;function H(){return w(E,U([0,0,0],[A,0,0],[0,A,0]))}function W(r,t,e){return r.operations.axisAt(r.value,t,c.Z,e)}function X(r,t,e,o){return r.operations.axisAt(r.value,t,e,o)}function k(r,t,e){return r.operations.intersectRay(r.value,t,e)}function D(r,t,e){return r.operations.intersectRayClosestSilhouette(r.value,t,e)}function J(r,t){return r.operations.altitudeAt(r.value,t)}function C(r,t,e,o){return r.operations.setAltitudeAt(r.value,t,e,o)}function K(r,t,e,o){return t!==o&&b(o,t),R(a,o[12],o[13],o[14]),C(r,a,e,a),o[12]=a[0],o[13]=a[1],o[14]=a[2],o}function d(r,t,e){return r.operations.elevate(r.value,t,e.value)}const a=v();function lt(r,t,e,o,n){return n[0]=f(r,t),n[1]=f(r,e),n[2]=f(r,o),n}function mt(r,t,e,o,n){m(e,r),m(l,t),$(l,l),h(o,l,e),h(n,o,e)}function ft(r,t){return r?g(t):t.isGeographic?x.PlateCarree:t}const l=v();class p{constructor(t,e,o,n){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=o,this._coordinateSystem=n,this._tmpCoordinateSystem=T(n),this.referenceEllipsoid=P(e),this.sphericalPCPF=g(e)}set extent(t){t&&Y(this._coordinateSystem,t,this._coordinateSystem)}getAltitude(t){return J(this._coordinateSystem,t)}setAltitude(t,e,o=t){return C(this._coordinateSystem,o,e,t)}setAltitudeOfTransformation(t,e){K(this._coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return W(this._coordinateSystem,t,e)}worldBasisAtPosition(t,e,o){return X(this._coordinateSystem,t,e,o)}basisMatrixAtPosition(t,e){const o=this.worldBasisAtPosition(t,c.X,s.get()),n=this.worldBasisAtPosition(t,c.Y,s.get()),i=this.worldBasisAtPosition(t,c.Z,s.get());return G(e,o[0],o[1],o[2],0,n[0],n[1],n[2],0,i[0],i[1],i[2],0,0,0,0,1),e}headingAtPosition(t,e){const o=this.worldUpAtPosition(t,s.get()),n=this.worldBasisAtPosition(t,c.Y,s.get()),i=L(e,n,o);return M(i)}intersectManifoldClosestSilhouette(t,e,o){return d(this._coordinateSystem,e,this._tmpCoordinateSystem),D(this._tmpCoordinateSystem,t,o),o}intersectManifold(t,e,o){d(this._coordinateSystem,e,this._tmpCoordinateSystem);const n=s.get();return k(this._tmpCoordinateSystem,t,n)?m(o,n):null}intersectInfiniteManifold(t,e,o){if(this.viewingMode===u.Global)return this.intersectManifold(t,e,o);d(this._coordinateSystem,e,this._tmpCoordinateSystem);const n=this._tmpCoordinateSystem.value,i=s.get();return O(n.plane,t,i)?m(o,i):null}toRenderCoords(t,e,o){return _(t)?Z(t,e,this.spatialReference):y(t,e,o,this.spatialReference)}fromRenderCoords(t,e,o=null){return _(e)?(o!=null&&(e.spatialReference=o),z(t,this.spatialReference,e)?e:null):y(t,this.spatialReference,e,o)?e:null}static create(t,e){switch(t){case u.Local:return new p(u.Local,e,B(e),H());case u.Global:return new p(u.Global,e,1,q(e))}}static renderUnitScaleFactor(t,e){return S(t)/S(e)}}export{lt as q,p as v,mt as w,ft as z};
