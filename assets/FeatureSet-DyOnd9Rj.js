import{e as h}from"./Evented-CXIxDjmW.js";import{n as F}from"./geometry-DpwwkAX1.js";import{d as S}from"./Graphic-Dc7F67nR.js";import{n as P}from"./jsonMap-DCC6W5ex.js";import{f as j}from"./assets-C2mb-ea2.js";import{y as d,b as q,a as J}from"./subclass-BR3PhgZG.js";import{o as T,r as N}from"./writer-3zufXUNV.js";import{f as w}from"./Point-DB4Hp4hH.js";import{y as O,f as v}from"./jsonUtils-Cma_7A64.js";import{y as $}from"./Field-C8SaaeoI.js";var G;const z=new P({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let c=G=class extends j{constructor(o){super(o),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(o,a){var i;const n=w.fromJSON(a.spatialReference),e=[];for(let t=0;t<o.length;t++){const l=o[t],f=S.fromJSON(l),m=(i=l.geometry)==null?void 0:i.spatialReference;f.geometry==null||m||(f.geometry.spatialReference=n);const r=l.aggregateGeometries,y=f.aggregateGeometries;if(r&&y!=null)for(const s in y){const u=y[s],g=r[s],p=g==null?void 0:g.spatialReference;u==null||p||(u.spatialReference=n)}e.push(f)}return e}writeGeometryType(o,a,n,e){if(o)return void z.write(o,a,n,e);const{features:i}=this;if(i){for(const t of i)if((t==null?void 0:t.geometry)!=null)return void z.write(t.geometry.type,a,n,e)}}readQueryGeometry(o,a){if(!o)return null;const n=!!o.spatialReference,e=O(o);return e&&!n&&a.spatialReference&&(e.spatialReference=w.fromJSON(a.spatialReference)),e}writeSpatialReference(o,a){if(o)return void(a.spatialReference=o.toJSON());const{features:n}=this;if(n){for(const e of n)if(e&&e.geometry!=null&&e.geometry.spatialReference)return void(a.spatialReference=e.geometry.spatialReference.toJSON())}}clone(){return new G(this.cloneProperties())}cloneProperties(){return J({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(o){const a=this.write();if(a.features&&Array.isArray(o)&&o.length>0)for(let n=0;n<a.features.length;n++){const e=a.features[n];if(e.geometry){const i=o==null?void 0:o[n];e.geometry=(i==null?void 0:i.toJSON())||e.geometry}}return a}quantize(o){const{scale:[a,n],translate:[e,i]}=o,t=r=>Math.round((r-e)/a),l=r=>Math.round((i-r)/n),f=this.features,m=this._getQuantizationFunction(this.geometryType,t,l);for(let r=0,y=f.length;r<y;r++)m!=null&&m(f[r].geometry)||(f.splice(r,1),r--,y--);return this.transform=o,this}unquantize(){var u,g;const{geometryType:o,features:a,transform:n}=this;if(!n)return this;const{translate:[e,i],scale:[t,l]}=n,f=p=>p*t+e,m=p=>i-p*l;let r=null,y=null;if(this.hasZ&&((u=n==null?void 0:n.scale)==null?void 0:u[2])!=null){const{translate:[,,p],scale:[,,R]}=n;r=x=>x*R+p}if(this.hasM&&((g=n==null?void 0:n.scale)==null?void 0:g[3])!=null){const{translate:[,,,p],scale:[,,,R]}=n;y=x=>x==null?x:x*R+p}const s=this._getHydrationFunction(o,f,m,r,y);for(const{geometry:p}of a)p!=null&&s&&s(p);return this.transform=null,this}_quantizePoints(o,a,n){let e,i;const t=[];for(let l=0,f=o.length;l<f;l++){const m=o[l];if(l>0){const r=a(m[0]),y=n(m[1]);r===e&&y===i||(t.push([r-e,y-i]),e=r,i=y)}else e=a(m[0]),i=n(m[1]),t.push([e,i])}return t.length>0?t:null}_getQuantizationFunction(o,a,n){return o==="point"?e=>(e.x=a(e.x),e.y=n(e.y),e):o==="polyline"||o==="polygon"?e=>{const i=v(e)?e.rings:e.paths,t=[];for(let l=0,f=i.length;l<f;l++){const m=i[l],r=this._quantizePoints(m,a,n);r&&t.push(r)}return t.length>0?(v(e)?e.rings=t:e.paths=t,e):null}:o==="multipoint"?e=>{const i=this._quantizePoints(e.points,a,n);return i&&i.length>0?(e.points=i,e):null}:o==="extent"?e=>e:null}_getHydrationFunction(o,a,n,e,i){return o==="point"?t=>{t.x=a(t.x),t.y=n(t.y),e&&(t.z=e(t.z))}:o==="polyline"||o==="polygon"?t=>{const l=v(t)?t.rings:t.paths;let f,m;for(let r=0,y=l.length;r<y;r++){const s=l[r];for(let u=0,g=s.length;u<g;u++){const p=s[u];u>0?(f+=p[0],m+=p[1]):(f=p[0],m=p[1]),p[0]=a(f),p[1]=n(m)}}if(e&&i)for(let r=0,y=l.length;r<y;r++){const s=l[r];for(let u=0,g=s.length;u<g;u++){const p=s[u];p[2]=e(p[2]),p[3]=i(p[3])}}else if(e)for(let r=0,y=l.length;r<y;r++){const s=l[r];for(let u=0,g=s.length;u<g;u++){const p=s[u];p[2]=e(p[2])}}else if(i)for(let r=0,y=l.length;r<y;r++){const s=l[r];for(let u=0,g=s.length;u<g;u++){const p=s[u];p[2]=i(p[2])}}}:o==="extent"?t=>{t.xmin=a(t.xmin),t.ymin=n(t.ymin),t.xmax=a(t.xmax),t.ymax=n(t.ymax),e&&t.zmax!=null&&t.zmin!=null&&(t.zmax=e(t.zmax),t.zmin=e(t.zmin)),i&&t.mmax!=null&&t.mmin!=null&&(t.mmax=i(t.mmax),t.mmin=i(t.mmin))}:o==="multipoint"?t=>{const l=t.points;let f,m;for(let r=0,y=l.length;r<y;r++){const s=l[r];r>0?(f+=s[0],m+=s[1]):(f=s[0],m=s[1]),s[0]=a(f),s[1]=n(m)}if(e&&i)for(let r=0,y=l.length;r<y;r++){const s=l[r];s[2]=e(s[2]),s[3]=i(s[3])}else if(e)for(let r=0,y=l.length;r<y;r++){const s=l[r];s[2]=e(s[2])}else if(i)for(let r=0,y=l.length;r<y;r++){const s=l[r];s[2]=i(s[2])}}:null}};h([d({type:String,json:{write:!0}})],c.prototype,"displayFieldName",void 0),h([d({type:Boolean,json:{write:{overridePolicy:o=>({enabled:o})}}})],c.prototype,"exceededTransferLimit",void 0),h([d({type:[S],json:{write:!0}})],c.prototype,"features",void 0),h([T("features")],c.prototype,"readFeatures",null),h([d({type:[$],json:{write:!0}})],c.prototype,"fields",void 0),h([d({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:z.read}}})],c.prototype,"geometryType",void 0),h([N("geometryType")],c.prototype,"writeGeometryType",null),h([d({type:Boolean,json:{write:{overridePolicy:o=>({enabled:o})}}})],c.prototype,"hasM",void 0),h([d({type:Boolean,json:{write:{overridePolicy:o=>({enabled:o})}}})],c.prototype,"hasZ",void 0),h([d({types:F,json:{write:!0}})],c.prototype,"queryGeometry",void 0),h([T("queryGeometry")],c.prototype,"readQueryGeometry",null),h([d({type:w,json:{write:!0}})],c.prototype,"spatialReference",void 0),h([N("spatialReference")],c.prototype,"writeSpatialReference",null),h([d({json:{write:!0}})],c.prototype,"transform",void 0),c=G=h([q("esri.rest.support.FeatureSet")],c),c.prototype.toJSON.isDefaultToJSON=!0;const E=c;export{E as d};
