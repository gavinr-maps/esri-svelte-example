import{D as N,aD as q,M as k,s as O,H as z,i as A,N as $,r as u,m as g,a as U}from"./Accessor-BHnuXKD2.js";import{w as G,d as j,A as W}from"./reactiveUtils-BR0C1Kq4.js";import{e as Z}from"./MemCache-CDoaVBHf.js";import{t as K}from"./DefaultUI-DqLHkAzt.js";import{a as Y}from"./Polyline-BmuD2-ZN.js";import{p as Q,t as J,y as X}from"./TileInfoViewPOT-FmVgP544.js";import{e as tt}from"./TileKey-BtGhNUzq.js";import{u as et,f as it,s as rt,n as ot,d as lt}from"./WGLBrushVTLSymbol-DhI09LJn.js";import{p as st}from"./VTLMaterialManager-B10yUbF1.js";import{a as y,i as x}from"./StyleDefinition-DxJzQnGW.js";import{O as at,R as T}from"./enums-D9v74xTE.js";import{l as D}from"./StyleRepository-qSIkk_zE.js";import{l as nt}from"./LayerView3D-dAX18iJt.js";import{p as mt}from"./TiledLayerView3D-DY9XuaXa.js";import{F as pt,D as ht}from"./terrainUtils-NB9gChf5.js";import{y as ct}from"./LayerView-DF8EqCYi.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./jsxFactory-CLjKarlq.js";import"./intl-Do3GEEJ7.js";import"./Promise-CmQqe-ke.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-ptqz1ck8.js";import"./InputManager-Bs9UE-jw.js";import"./Queue-BOnccek2.js";import"./signal-DSa0yokC.js";import"./Basemap-BHdJ6wQH.js";import"./collectionUtils-CbaToa73.js";import"./Portal-CTRRujjZ.js";import"./writer-B2bQV2uU.js";import"./Extent-CBBGeHb-.js";import"./Point-XGrwlf63.js";import"./loadAll-Do8S8AWH.js";import"./PortalItem-CXk7DqVv.js";import"./basemapDefinitions-BmB40s1J.js";import"./writeUtils-C3ZSK02Z.js";import"./layerUtils-dJgsXxkC.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./mathUtils-DV9iOXpW.js";import"./enumeration-Cr5WIZs4.js";import"./groundInstanceUtils-Ben03ZCf.js";import"./opacityUtils-CSd4XoR2.js";import"./CollectionFlattener-B9CFCLSp.js";import"./editableLayers-BZGjz8nI.js";import"./catalogUtils-CK4eMvD1.js";import"./basemapEnsureType-BVU7UGJp.js";import"./basemapUtils-DQr5T1wn.js";import"./utils-DYurMneM.js";import"./screenUtils-_ZIvrt5o.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./vec3f64-BLpZdpfb.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BzMj7HDl.js";import"./Layer-C9uQlTBT.js";import"./Identifiable-BrT7zvUW.js";import"./TimeExtent-J5qnUFx_.js";import"./timeUtils-D2X862bk.js";import"./GraphicsCollection-CkliHSk1.js";import"./Graphic-CFXUQZlS.js";import"./Clonable-DvJsj5LF.js";import"./ActionToggle-__-l4AdQ.js";import"./jsonUtils-Cu7OBRmN.js";import"./typeUtils-BSg8Y507.js";import"./TextSymbol-BQ_NW9Xo.js";import"./aaBoundingBox-CeBivBRq.js";import"./HeightModelInfo-B3GZyQFz.js";import"./timeZoneUtils-COos5xIr.js";import"./ReactiveMap-Dwhwbx9R.js";import"./Query-DCBIeen2.js";import"./Field-Cyk7Ur5d.js";import"./fieldType-L-VlbZqy.js";import"./FullTextSearch-BWm_kPUE.js";import"./selectionUtils-DYi6daQO.js";import"./ViewEvents-Hl5AOQnu.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-DyhV4TAA.js";import"./HighlightDefaults-ESbuT2uR.js";import"./a11yUtils-CSYUX1kC.js";import"./heightModelInfoUtils-CMg1cdju.js";import"./ViewingMode-Dodu7ZZk.js";import"./projection-B2I9Bzj_.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./vec32-Dvg_eL9J.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-brik-GLm.js";import"./capabilities-DwlKKScG.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-rIBXQ52V.js";import"./CompassViewModel-BAJa4WdS.js";import"./GoTo-BsXOAO95.js";import"./ZoomViewModel-BZXEbLSs.js";import"./workers-D8Q3pEzK.js";import"./enums-BRzLM11V.js";import"./Rect-CUzevAry.js";import"./Texture-D-SqNa4i.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./pbf-CFI-xDDp.js";import"./memoryEstimations-5gFNwkKK.js";import"./rasterizingUtils-5QTNbyfl.js";import"./floatRGBA-CR2j2c7-.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./definitions-LJaw2n5Z.js";import"./mat3-CR8GKnhD.js";import"./TileStrategy-DlGVvP4C.js";import"./vec2-maR1OrZI.js";import"./ScheduledQueueProcessor-DfrR8pp0.js";import"./RenderableTile-Ewnw5ULl.js";import"./config-MDUrh2eL.js";import"./GeometryUtils-B5FJlfZD.js";import"./DefaultVertexAttributeLayouts-DMsCtEEh.js";import"./DisplayObject-S19ALweP.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BufferObject-CIl3vJtA.js";import"./TileInfo-CRfZy5zq.js";import"./TileKey-DZd6gJy7.js";import"./vec2f32-BbH2jxlN.js";import"./ShaderCompiler-G2XYGDs6.js";import"./programUtils-CwiKxPbA.js";import"./colorUtils-BAowQmkN.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./LineCallout.glsl-BFpkOc4i.js";import"./visualVariableUtils-Bp9QCb8E.js";import"./lengthUtils-DjJgJFRg.js";import"./vec2f64-Dy6m9Nrb.js";import"./plane-4dpuo6-e.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./mathUtils-B9R7G-2c.js";import"./computeTranslationToOriginAndRotation-BT43Xu5d.js";import"./ElevationContext-jcnAn7VT.js";import"./dehydratedFeatureUtils-1rrRm6hF.js";import"./ElevationProvider-aS5xrHHy.js";import"./VertexAttribute-Cq4MnHjR.js";import"./unitConversionUtils-C4AR5obr.js";import"./hydratedFeatures-BVVSs98j.js";import"./projectVectorToVector-dS8io47t.js";import"./projectPointToVector-BS0u8fq6.js";import"./Material-Ba8x5bbY.js";import"./boundedPlane-Dyz2ub5d.js";import"./sphere-DQxj5tsv.js";import"./lineSegment-C-CDF7QX.js";import"./NoParameters-t-PuNrgq.js";import"./Indices-Db9lERgy.js";import"./FloatArray-BCfeX8wo.js";import"./BindType-BBwFZqyN.js";import"./Matrix3PassUniform-Bhi2fM3C.js";import"./renderState-e7QeQoUO.js";import"./basicInterfaces-CZwQPxTp.js";import"./InterleavedLayout-Dvj-Snan.js";import"./BufferView-_QDXRCew.js";import"./types-D0PSWh4d.js";import"./triangle-D_E6eTS3.js";import"./ShaderTechniqueConfiguration-YrUOztAU.js";import"./glsl-BH37Aalp.js";import"./requestImageUtils-Brn0e8z8.js";import"./TextureFormat-1mYWTFa-.js";import"./graphicUtils-Daa6cjYT.js";import"./meshVertexSpaceUtils-SW0WEjNN.js";import"./MeshLocalVertexSpace-C0YDTRex.js";import"./RibbonLine.glsl-D3IEIaDR.js";import"./sdfPrimitives-B8Jbwvqs.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Octree-B-jwmuW2.js";import"./ShaderBuilder-DV1s2efh.js";import"./RgbaFloatEncoding.glsl-_io2eW3M.js";import"./Attribute-B-NAci_J.js";import"./DefaultBufferWriter-D4XUxbP-.js";import"./projectBoundingRect-BA_jRNoI.js";import"./dehydratedFeatures-Nwhn-hep.js";import"./quantizationUtils-2Az-xHPA.js";import"./featureConversionUtils-DpmsPUmt.js";import"./OptimizedFeature-DcMLlxvB.js";import"./OptimizedGeometry-7IxBWtHr.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-52Urp6s4.js";import"./NormalAttribute.glsl-BPQl43kJ.js";import"./Float4DrawUniform-C_Hqa-pI.js";import"./Matrix3DrawUniform-B_gSHO7v.js";import"./webStyleAcceptedFormats-CG7ZQ6BV.js";import"./GeometryUtil-vHI0hYMT.js";import"./vec3f32-nZdmKIgz.js";import"./RealisticTree.glsl-BIYA2y1x.js";import"./Intersector-DqUGp7Vs.js";import"./intersectorUtils-l6zkk4nF.js";import"./verticalOffsetUtils-CUH6QZ7-.js";import"./orientedBoundingBox-9z4w3ZAL.js";import"./quat-4pa1e6ds.js";import"./spatialReferenceEllipsoidUtils-DM073JUd.js";import"./Intersector-DPK4WnQE.js";import"./DefaultMaterial-B5sYRDQR.js";import"./SceneLighting-fZH2UQ_L.js";import"./GLTextureMaterial-BXvkeRxQ.js";import"./VertexColor.glsl-C67vI27I.js";import"./Matrix4PassUniform-LFIUaE9i.js";import"./VerticalOffset.glsl-0YVQE7vQ.js";import"./Matrix4sPassUniform--uPzDbTP.js";import"./Float2PassUniform-Blij1ug3.js";import"./BooleanBindUniform-xvVHJCDz.js";import"./CameraSpace.glsl-BZ4Eapt3.js";import"./Scheduler-B_GuBefw.js";import"./debugFlags-ZrDyTcDc.js";import"./HUDRenderStyle-BhGvVxgm.js";import"./HUDVisibility.glsl-DSeZY4v-.js";import"./ShadowCastAccumulate.glsl-7ziGQBCy.js";import"./Camera-DJtV7zYb.js";import"./Cyclical-CPiNl4ru.js";import"./Viewpoint-Cv8Otrne.js";import"./RenderCoordsHelper-BbefYyBA.js";import"./projectVectorToPoint-d6Mr4zvQ.js";import"./scaleUtils-CfLu-sg1.js";import"./NormalUtils.glsl-CV524hT5.js";import"./earcut-Lltz9D9k.js";import"./vec3-Bn81gjoR.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-ChyeOnqC.js";import"./deduplicate-8uOXlcvp.js";import"./OverlayCompositing.glsl-BbJKjUZQ.js";import"./GridLocalOriginFactory-BvhZ_UoU.js";import"./RenderCamera-BovI3JTe.js";import"./axisAngleDegrees-8Sw4vC28.js";import"./weather-DtiKeY2t.js";import"./RenderPlugin-B2sz29jJ.js";import"./VertexArrayObject-DcVjXzZo.js";import"./NestedMap-GuqgquCN.js";import"./Normals-OOhKYumi.js";import"./fontUtils-D0SfAiSy.js";import"./cameraUtils-D51h-KGF.js";import"./earthUtils-5Ip67eD0.js";import"./spatialReferenceSupport-CJqi4Nvp.js";import"./ElevationSamplerData-ejt2NMnl.js";import"./FramebufferObject-DHwDHMWe.js";import"./glUtil-D0YUa0ow.js";import"./ShadowCastVisualizeTechniqueConfiguration-WdqoNZsk.js";import"./SunCalc-uwgdo0BB.js";import"./VirtualLighting-CTSkZQzH.js";import"./ray-D3Okb4cY.js";import"./RenderFeature-3I21ZjJq.js";import"./unitFormatUtils-Dbksq3U5.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./quantityUtils-1LswOhxZ.js";import"./ZoomMomentumEstimator-Igei2Npb.js";import"./HUDMaterial-DRUv4rua.js";import"./labelFormatUtils-B--9rEVY.js";import"./labelUtils-Dq8OkaT-.js";import"./DepthRange-C25RnOB3.js";import"./elevationInfoUtils-RSZ4Logn.js";import"./hitTest-CblPROa1.js";import"./LayerConstants-B33OP6sh.js";import"./intersectorUtilsConversions-CZnn6t-z.js";import"./ElevationRange-BrgM1moX.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./DefaultLoadingContext-b8vwa5ZD.js";import"./wosrLoader-F8PxTYxV.js";import"./Version-9k2AOv05.js";import"./DrawParameters-C0gywgJQ.js";import"./resources-CcZcI9oR.js";import"./WorkerHandle-B2QLNs3X.js";import"./vec33-KumQEj7U.js";import"./ShaderTechniqueRepository-CuJwDr2t.js";import"./Blit-D5AxBSxC.js";import"./testSVGPremultipliedAlpha-CpxLiQJP.js";import"./RenderingContext-BkhmhK8E.js";import"./ProgramCache-D9MJNX7j.js";import"./Program-DD6La1z3.js";import"./layerViewUtils-tkZ5z_iY.js";import"./makeScheduleFunction-CggzEh3c.js";class ut{constructor(t,e,o){this._scale=t,this._shift=e,this._levelShift=o}getLevelRowColumn(t){const e=this.getLevelShift(t[0]),o=this._shift+e;return o?[t[0]-e,t[1]>>o,t[2]>>o]:t}getLevelShift(t){return Math.min(t,this._levelShift)}getOffset(t,e){let o=0,r=0;const i=this._shift+this.getLevelShift(t[0]);if(i){const n=(1<<i)-1,l=e/(this._scale*(1<<i-1));o=(t[2]&n)*l,r=(t[1]&n)*l}return[o,r]}getScale(t){return this._scale*(1<<this._shift+this.getLevelShift(t))}}class B extends Q{constructor(t,e,o,r){super(t,e,o,t.tileInfo.lods.length-1),this._memCache=r,this._ongoingTileRequests=new Map,this._ongoingRequestToController=new Map,this._tileInfoView=new J(t.tileInfo,t.fullExtent)}destroy(){super.destroy(),this._ongoingRequestToController.forEach(t=>t.abort()),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}async getVectorTile(t,e){const o=new tt(t[0],t[1],t[2],0);let r=this._memCache.get(o.id);if(r)return r.retain(),r;const i=await this._getVectorTileData(o);if(N(e),!this._layer)return null;if(r=this._memCache.get(o.id),r)return r.retain(),r;const n=this._layer.tileInfo.getTileBounds(Y(),o),l=this._tileInfoView.getTileResolution(t[0]);return r=new X(o,l,n[0],n[3],512,512,this._styleRepository,this._memCache),r.setData(i),i&&(r.retain(),this._memCache.put(o.id,r,Z)),r.neededForCoverage=!0,r.transforms.tileUnitsToPixels=K(1/8,0,0,0,1/8,0,0,0,1),r}_getVectorTileData(t){const e=t.id;if(this._ongoingTileRequests.has(e))return this._ongoingTileRequests.get(e);const o=new AbortController,r={signal:o.signal},i=this._getParsedVectorTileData(t,r).then(n=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),n)).catch(()=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),null));return this._ongoingTileRequests.set(e,i),this._ongoingRequestToController.set(e,o),i}_getParsedVectorTileData(t,e){return this.fetchTileData(t,e).then(o=>this.parseTileData({key:t,data:o},e))}}const v={vtlBackground:et,vtlFill:it,vtlLine:rt,vtlCircle:ot,vtlSymbol:lt},f=1e-6;class V{constructor(t,e){this.spriteMosaic=t,this.glyphMosaic=e,this._brushCache={vtlBackground:null,vtlFill:null,vtlLine:null,vtlCircle:null,vtlSymbol:null},this._vtlMaterialManager=new st}dispose(){var t,e,o,r,i;(t=this._brushCache.vtlBackground)==null||t.dispose(),(e=this._brushCache.vtlFill)==null||e.dispose(),(o=this._brushCache.vtlLine)==null||o.dispose(),(r=this._brushCache.vtlCircle)==null||r.dispose(),(i=this._brushCache.vtlSymbol)==null||i.dispose(),this._brushCache=null,this._vtlMaterialManager=q(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}get vectorTilesMaterialManager(){return this._vtlMaterialManager}drawSymbols(t,e,o){const r=o.layers;t.renderPass="translucent";let i=this._brushCache.vtlSymbol;i==null&&(i=new v.vtlSymbol,this._brushCache.vtlSymbol=i),d[0]=e;for(let n=0;n<r.length;n++){const l=r[n];if(l.type!==y.SYMBOL)continue;const m=l.getLayoutProperty("visibility");if(m&&m.getValue()===x.NONE)continue;const s=t.displayLevel;l.minzoom!==void 0&&l.minzoom>s+f||l.maxzoom!==void 0&&l.maxzoom<=s-f||(t.styleLayerUID=l.uid,t.styleLayer=l,i.drawMany(t,d))}d[0]=null}drawBackground(t,e,o){if(o.backgroundBucketIds.length===0)return;const{context:r,displayLevel:i,requiredLevel:n}=t;e.key.level=n,r.setBlendingEnabled(!0),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!1),t.renderPass="background";let l=this._brushCache.vtlBackground;l==null&&(l=new v.vtlBackground,this._brushCache.vtlBackground=l),d[0]=e,o.backgroundBucketIds.forEach(m=>{const s=o.getLayerById(m);if(s.type!==y.BACKGROUND)return;const C=s.getLayoutProperty("visibility");C&&C.getValue()===x.NONE||s.minzoom!==void 0&&s.minzoom>i+f||s.maxzoom!==void 0&&s.maxzoom<=i-f||(t.styleLayerUID=s.uid,t.styleLayer=s,l.drawMany(t,d))}),d[0]=null}drawTile(t,e,o,r){const{context:i}=t,n=o.layers;i.setBlendingEnabled(!1),i.setDepthTestEnabled(!0),i.setDepthWriteEnabled(!0),i.setDepthFunction(at.LEQUAL);const l=n.filter(m=>{if(r!=null&&r!==m.type||!e.layerData.has(m.uid))return!1;const s=m.getLayoutProperty("visibility");return(s==null?void 0:s.getValue())!==x.NONE});t.renderPass="opaque";for(let m=l.length-1;m>=0;--m)this._renderStyleLayer(l[m],t,e);i.setDepthWriteEnabled(!1),i.setBlendingEnabled(!0),i.setBlendFunctionSeparate(T.ONE,T.ONE_MINUS_SRC_ALPHA,T.ONE,T.ONE_MINUS_SRC_ALPHA),t.renderPass="translucent",l.forEach(m=>this._renderStyleLayer(m,t,e)),i.setDepthTestEnabled(!1),i.bindVAO()}_renderStyleLayer(t,e,o){const{renderPass:r}=e;let i;switch(t.type){case y.BACKGROUND:if(r!=="background")return;i=this._brushCache.vtlBackground,i||(i=new v.vtlBackground,this._brushCache.vtlBackground=i);break;case y.FILL:if(r!=="opaque"&&e.renderPass!=="translucent")return;i=this._brushCache.vtlFill,i==null&&(i=new v.vtlFill,this._brushCache.vtlFill=i);break;case y.LINE:if(r!=="translucent")return;i=this._brushCache.vtlLine,i==null&&(i=new v.vtlLine,this._brushCache.vtlLine=i);break;case y.CIRCLE:if(r!=="translucent")return;i=this._brushCache.vtlCircle,i==null&&(i=new v.vtlCircle,this._brushCache.vtlCircle=i);break;case y.SYMBOL:if(r!=="translucent")return;i=this._brushCache.vtlSymbol,i==null&&(i=new v.vtlSymbol,this._brushCache.vtlSymbol=i)}const{displayLevel:n}=e,{minzoom:l,maxzoom:m}=t;if(l!==void 0&&l>n+f||m!==void 0&&m<=n-f)return;const{context:s}=e;s.setStencilTestEnabled(!1),s.setStencilWriteMask(0),e.styleLayerUID=t.uid,e.styleLayer=t,d[0]=o,i.drawMany(e,d),d[0]=null}}const d=[null];let c=class extends mt(nt(ct)){constructor(){super(...arguments),this._tileHandlerController=null,this.type="vector-tile-3d",this.levelShift=k("disable-feature:vtl-level-shift")?0:1}initialize(){if(this.layer.fullExtent==null)return void this.addResolvingPromise(Promise.reject(new O("vectortilelayerview:full-extent-undefined","This layer view's layer does not define a fullExtent.")));const{basemapTerrain:a,spatialReference:t,state:e,viewingMode:o}=this.view,r=o==="local"&&!pt(t)||ht.force512VTL?this.layer.tileInfo:this.layer.tileInfo.getCompatibleForVTL(256),i=this._getTileInfoSupportError(r,this.layer.fullExtent);if(i!=null)return this.addResolvingPromise(Promise.reject(i));const n=G(()=>{var p,h;return(h=(p=this.view)==null?void 0:p.basemapTerrain)==null?void 0:h.tilingSchemeLocked}).then(()=>{var w,R;const p=a.tilingScheme,h=p.pixelSize,H=h===256?1:2,_=(w=a.spatialReference)!=null&&w.isGeographic&&h===256?1:0,L=(R=a.spatialReference)!=null&&R.isGeographic||h!==256?0:1;let b;this.schemaHelper=new ut(H,_,this.levelShift+L),b=h===256||h===512?this.layer.tileInfo.getCompatibleForVTL(h):this.layer.tileInfo;const S=this._getTileInfoCompatibilityError(b,p);if(S)throw S;this.tileInfo=b});this._tileHandlerController=new AbortController;const l=this.view.resourceController;this._memCache=l.memoryController.newCache(`vtl-${this.layer.uid}`,p=>p.release()),this.addHandles(j(()=>this.view.qualitySettings.memoryLimit,p=>this._memCache.maxSize=Math.ceil(p/10*1048576),W));const m=new D(this.layer.currentStyleInfo.style);this._tileHandler=new B(this.layer,m,e.contentPixelRatio,this._memCache);const s=this._tileHandlerController.signal,C=dt(l),I=this._tileHandler.start({signal:s,schedule:C}),E=this._tileHandler.spriteMosaic;E.then(p=>{!z(s)&&this._tileHandler&&(this.painter=new V(p,this._tileHandler.glyphMosaic))}),I.then(()=>this._tileHandlerController=null);const M=()=>{var S;this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=new AbortController,this._memCache.clear();const p=this.layer.currentStyleInfo.style,h=((S=this.view.state)==null?void 0:S.contentPixelRatio)??1,H=new D(p),_=new B(this.layer,H,h,this._memCache),L=_.start({signal:this._tileHandlerController.signal,schedule:C}),b=_.spriteMosaic;L.then(()=>this._tileHandlerController=null),this._updatingHandles.addPromise(Promise.all([L,b]).then(([,w])=>{const R=this._tileHandler,P=this.painter;this.painter=new V(w,_.glyphMosaic),this._tileHandler=_,this.emit("data-changed"),R.destroy(),P&&P.dispose()}))};this._updatingHandles.add(()=>{var p;return{style:this.layer.currentStyleInfo.style,pixelRatio:(p=this.view.state)==null?void 0:p.contentPixelRatio}},M),this.addHandles([this.layer.on("paint-change",()=>this.emit("data-changed")),this.layer.on("style-layer-change",M),this.layer.on("delete-style-layer",M),this.layer.on("spriteSource-change",()=>this.emit("data-changed")),this.layer.on("layout-change",()=>this.emit("data-changed")),this.layer.on("style-layer-visibility-change",()=>this.emit("data-changed"))]);const F=Promise.all([n,I,E]);this.addResolvingPromise(F)}destroy(){this.painter=q(this.painter),this._tileHandlerController=A(this._tileHandlerController),this._tileHandler=$(this._tileHandler),this._memCache=$(this._memCache)}get contentZoom(){return k("disable-feature:vtl-level-shift")?1:this.view.qualitySettings.tiledSurface.vtlContentZoom}get displayLevelRange(){const a=this.tileInfo.lods,t=this.layer.minScale||a[0].scale,e=this.layer.maxScale||a[a.length-1].scale,o=this.levelRangeFromScaleRange(t,e);return this.layer.maxScale?o.maxLevel++:o.maxLevel+=this.levelShift,o}get dataScaleRange(){const a=this.tileInfo.lods;return{minScale:a[0].scale,maxScale:a[a.length-1].scale}}get dataLevelRange(){const{minScale:a,maxScale:t}=this.dataScaleRange,e=this.levelRangeFromScaleRange(a,t);return e.minLevel===1&&this.tileInfo.size[0]===256&&(e.minLevel=0),e.maxLevel+=this.levelShift,e}async fetchTile(a,t){const e=this.schemaHelper.getLevelRowColumn(a);return this._tileHandler.getVectorTile(e,t)}get hasVisibleFeatures(){return!0}};u([g()],c.prototype,"layer",void 0),u([g()],c.prototype,"levelShift",void 0),u([g()],c.prototype,"contentZoom",null),u([g()],c.prototype,"displayLevelRange",null),u([g()],c.prototype,"tileInfo",void 0),u([g()],c.prototype,"dataScaleRange",null),u([g()],c.prototype,"dataLevelRange",null),u([g()],c.prototype,"updatingProgressValue",void 0),c=u([U("esri.views.3d.layers.VectorTileLayerView3D")],c);const Ll=c;function dt(a){return t=>a.immediate.schedule(t)}export{Ll as default};
