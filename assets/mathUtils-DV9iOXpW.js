const M=new Float32Array(1);function g(n){--n;for(let r=1;r<32;r<<=1)n|=n>>r;return n+1}function c(n,r,e){return Math.min(Math.max(n,r),e)}function B(n,r){return r===0?0:Math.round(n/r)*r}function E(n){return!(n&n-1)}function I(n){return n--,n|=n>>1,n|=n>>2,n|=n>>4,n|=n>>8,n|=n>>16,++n}function p(n){return 10**Math.ceil(Math.LOG10E*Math.log(n))}function m(n,r,e){return n+(r-n)*e}function w(n,r,e,u,t){return m(u,t,(n-r)/(e-r))}function x(n){return n*Math.PI/180}function y(n){return 180*n/Math.PI}function A(n,r=1e-6){return(n<0?-1:1)/Math.max(Math.abs(n),r)}function P(n){return Math.acos(c(n,-1,1))}function S(n){return Math.asin(c(n,-1,1))}function i(n,r,e=1e-6){return n===r?!0:!Number.isFinite(n)||!Number.isFinite(r)?!1:(n>r?n-r:r-n)<=e}function d(n,r,e=1e-6){return!i(n,r,e)&&n>r}function L(n,r,e=1e-6){return!i(n,r,e)&&n<r}function T(n,r,e=1e-6){return i(n,r,e)||n>r}const o=new DataView(new ArrayBuffer(Float64Array.BYTES_PER_ELEMENT));function f(n){return o.setFloat64(0,n),o.getBigInt64(0)}function N(n){return o.setBigInt64(0,n),o.getFloat64(0)}const a=BigInt("1000000"),F=b(1);function b(n){const r=f(n=Math.abs(n)),e=N(r<=a?a:r-a);return Math.abs(n-e)}function _(n,r,e=F){if(n===r)return!0;if(!Number.isFinite(n)||!Number.isFinite(r))return!1;if(e!=null&&b(Math.min(Math.abs(n),Math.abs(r)))<e)return Math.abs(n-r)<=e;const u=f(n),t=f(r);return u<0!=t<0?!1:!((u<t?t-u:u-t)>a)}function v(n,r,e=1e-6){if(n===r)return!0;if(!Number.isFinite(n)||!Number.isFinite(r))return!1;const u=Math.abs(n-r),t=Math.abs(n),s=Math.abs(r);if(n===0||r===0||t<1e-12&&s<1e-12){if(u>.01*e)return!1}else if(u/(t+s)>e)return!1;return!0}function $(n){return l(Math.max(-h,Math.min(n,h)))}function l(n){return M[0]=n,M[0]}function q(n,r,e){const u=c((e-n)/(r-n),0,1);return u*u*(3-2*u)}function D(n){const r=n[0]*n[0]+n[1]*n[1]+n[2]*n[2],e=n[3]*n[3]+n[4]*n[4]+n[5]*n[5],u=n[6]*n[6]+n[7]*n[7]+n[8]*n[8];return!(i(r,1)&&i(e,1)&&i(u,1))}function G(n,r){return(n%r+r)%r}const h=l(34028234663852886e22);function O(n,r,e){if(e===void 0||+e==0)return Math[n](r);if(r=+r,e=+e,isNaN(r)||typeof e!="number"||e%1!=0)return NaN;let u=r.toString().split("e");return u=(r=Math[n](+(u[0]+"e"+(u[1]?+u[1]-e:-e)))).toString().split("e"),+(u[0]+"e"+(u[1]?+u[1]+e:e))}export{v as A,L as F,q as L,y as M,d as N,_ as P,$ as S,D as T,G as _,p as a,P as b,w as c,B as e,T as g,A as h,I as i,S as l,i as m,g as n,m as o,h as q,c as r,x as s,E as u,O as v};
