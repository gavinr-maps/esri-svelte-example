import{I as V,P as $,A}from"./cast-BA_-jlhc.js";import{a as j}from"./reactiveUtils-BR0C1Kq4.js";import{e as R,n as L}from"./date-DLgTylpo.js";import{s as _,E as G,B as Q}from"./Accessor-BHnuXKD2.js";import{V as M}from"./projection-B2I9Bzj_.js";import{c as B,O as J,ah as Z,g as Y,a4 as U}from"./Point-XGrwlf63.js";import{t as K}from"./json-Wa8cmqdu.js";import{s as W}from"./OptimizedFeature-DcMLlxvB.js";import{e as z}from"./OptimizedGeometry-7IxBWtHr.js";import{u as H}from"./executeQueryForSnapping-DNwXF6kY.js";import{f as X}from"./FeatureStore-CozDnyvc.js";import{x as ee}from"./queryUtils-DBeaQ3x_.js";import{L as te}from"./QueryEngine-BJMZSAnZ.js";import{c as ie}from"./number-BWHn6sm2.js";import{p as I,K as ne,n as re,c as oe}from"./opacityUtils-CSd4XoR2.js";import{a as se,u as ae}from"./clientSideDefaults-BOCfNRNG.js";import{Z as w}from"./FieldsIndex-DFdVonga.js";import{n as E}from"./Promise-CmQqe-ke.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./vec3f64-BLpZdpfb.js";import"./Extent-CBBGeHb-.js";import"./Polyline-BmuD2-ZN.js";import"./writer-B2bQV2uU.js";import"./mathUtils-DV9iOXpW.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./memoryEstimations-5gFNwkKK.js";import"./jsonUtils-Cu7OBRmN.js";import"./normalizeUtils-XRAPXbWa.js";import"./normalizeUtilsCommon-D0zPTJCj.js";import"./utils-Cy8wFNQo.js";import"./utils-CkSELPnj.js";import"./timeSupport-Cvj97qZO.js";import"./featureConversionUtils-DpmsPUmt.js";import"./aaBoundingBox-CeBivBRq.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-Cf415lwW.js";import"./PooledRBush-BHbZLwLz.js";import"./quickselect-QQC62dOK.js";import"./optimizedFeatureQueryEngineAdapter-Dffp2J7r.js";import"./WhereClauseCache-CrfkeLux.js";import"./LRUCache-DS2O1kTf.js";import"./MemCache-CDoaVBHf.js";import"./WhereClause-diW5rNp6.js";import"./TimeOnly-yGYcAQQJ.js";import"./fieldType-L-VlbZqy.js";import"./QueryEngineCapabilities-DZTubngj.js";import"./timeUtils-D2X862bk.js";import"./quantizationUtils-2Az-xHPA.js";import"./utils-D8exU0T6.js";import"./screenUtils-_ZIvrt5o.js";import"./heatmapUtils-DA7NmY3d.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-DLmnG8WZ.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./intl-Do3GEEJ7.js";import"./timeZoneUtils-COos5xIr.js";import"./utils-B8VMZhYy.js";import"./ClassBreaksDefinition-DvZJqFCP.js";import"./enumeration-Cr5WIZs4.js";import"./SnappingCandidate-O5eRSE6e.js";import"./FixedIntervalBinParameters-uigAmvtd.js";import"./NormalizationBinParametersMixin-D6iHLB7I.js";import"./Clonable-DvJsj5LF.js";import"./Scheduler-B_GuBefw.js";import"./signal-DSa0yokC.js";import"./debugFlags-ZrDyTcDc.js";import"./defaultsJSON-GKolV7NZ.js";function le(r,t,e){var s,a;t=(s=I(t))==null?void 0:s.toLowerCase(),e=(a=I(e))==null?void 0:a.toLowerCase();const i=r.map(u=>u.toLowerCase()),n=t?r[i.indexOf(t)]:null,o=e?r[i.indexOf(e)]:null;return{longitudeFieldName:n||r[i.indexOf(ue.find(u=>i.includes(u)))],latitudeFieldName:o||r[i.indexOf(me.find(u=>i.includes(u)))]}}const me=["lat","lat83","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point_y"],ue=["lon","lng","lng83","long","long83","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point_x"],b=/^\s*"([\S\s]*)"\s*$/,S=/""/g,O=`
`,ce=[","," ",";","|","	"];function*q(r,t,e){let i=0;for(;i<=r.length;){const n=r.indexOf(t,i),o=r.slice(i,n>-1?n:void 0);i+=o.length+t.length,e&&!o.trim()||(yield o)}}function C(r){const t=r.includes(`\r
`)?`\r
`:O;return q(r,t,!0)}function v(r,t){return q(r,t,!1)}function de(r,t,e){r=r.trim(),t=t==null?void 0:t.trim();const i=[],n=Array.from(new Set([e==null?void 0:e.delimiter,...ce])).filter(s=>s!=null);for(const s of n){const a=N(r,s).length,u=N(t,s).length??a;a>1&&i.push({weight:Math.min(a,u),delimiter:s})}const o=i.sort(({weight:s},{weight:a})=>a-s).map(({delimiter:s})=>s);for(const s of o){const a=D(r,s).names,u=le(a,e==null?void 0:e.longitudeField,e==null?void 0:e.latitudeField);if(u.longitudeFieldName&&u.latitudeFieldName)return{delimiter:s,locationInfo:u}}return{delimiter:o[0],locationInfo:null}}function*k(r,t,e,i=()=>Object.create(null)){const n=C(r);n.next();let o="",s="",a=0,u=i(),c=0;e:for(const h of n){const p=v(h,e);for(const y of p)if(o+=s+y,s="",a+=P(y),a%2==0){if(a>0){const g=b.exec(o);if(!g){u=i(),c=0,o="",a=0;continue e}u[t[c]]=g[1].replaceAll(S,'"'),c++}else u[t[c]]=o,c++;o="",a=0}else s=e;a===0?(yield u,u=i(),c=0):s=O}}function D(r,t){const e=N(r,t).filter(n=>n!=null),i=e.map(n=>I(n));for(let n=i.length-1;n>=0;n--)i[n]||(i.splice(n,1),e.splice(n,1));return{names:i,aliases:e}}function N(r,t){if(!(r!=null&&r.length))return[];const e=[];let i="",n="",o=0;const s=v(r,t);for(const a of s)if(i+=n+a,n="",o+=P(a),o%2==0){if(o>0){const u=b.exec(i);u&&e.push(u[1].replaceAll(S,'"'))}else e.push(i);i="",o=0}else n=t;return e}function P(r){let t=0,e=0;for(e=r.indexOf('"',e);e>=0;)t++,e=r.indexOf('"',e+1);return t}function pe(r,t,e,i,n){const o=[],s=k(r,e,t),a=[];for(const u of s){if(a.length===10)break;a.push(u)}for(let u=0;u<e.length;u++){const c=e[u],h=i[u];if(c===n.longitudeFieldName||c===n.latitudeFieldName)o.push({name:c,type:"esriFieldTypeDouble",alias:h});else{let p;switch(fe(a.map(y=>y[c]))){case"integer":p="esriFieldTypeInteger";break;case"double":p="esriFieldTypeDouble";break;case"date":p="esriFieldTypeDate";break;default:p="esriFieldTypeString"}o.push({name:c,type:p,alias:h,length:ne(p)})}}return o}function fe(r){if(!r.length)return"string";const t=/[^+\-.,0-9]/;return r.map(e=>{if(e!==""){if(!t.test(e)){let i=x(e);if(!isNaN(i))return/[.,]/.test(e)||!Number.isInteger(i)||i>214783647||i<-214783648?"double":"integer";if(e.includes("E")&&(i=Number(e),!Number.isNaN(i)||e.includes(",")&&(e=e.replace(",","."),i=Number(e),!Number.isNaN(i))))return"double"}return R(e)?"date":"string"}}).reduce((e,i)=>e===void 0?i:i===void 0?e:e===i?i:e==="string"||i==="string"?"string":e==="double"||i==="double"?"double":void 0)}const x=function(){const r=ie(),t=new RegExp("^"+r.regexp+"$"),e=new RegExp("["+r.group+"\\s\\xa0]","g"),i=r.factor;return n=>{const o=t.exec(n);if(r.factor=i,!o)return NaN;let s=o[1];if(!o[1]){if(!o[2])return NaN;s=o[2],r.factor*=-1}return s=s.replace(e,"").replace(r.decimal,"."),+s*r.factor}}();function he(r){return JSON.parse(JSON.stringify(r))}const ye=ae("esriGeometryPoint"),ge=["csv"],Fe=[0,0];class _e{constructor(t,e){this.x=t,this.y=e}}class Gt{constructor(){this._queryEngine=null,this._snapshotFeatures=async t=>{const e=await this._fetch(t);return this._createFeatures(e)}}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){var u;this._loadOptions=t;const[i]=await Promise.all([this._fetch(e.signal),this._checkProjection((u=t==null?void 0:t.parsingOptions)==null?void 0:u.spatialReference)]),n=Ie(i,t);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const o=await this._createFeatures(i);this._queryEngine.featureStore.addMany(o);const{fullExtent:s,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=s,a){const{start:c,end:h}=a;n.layerDefinition.timeInfo.timeExtent=[c,h]}return n}async applyEdits(){throw new _("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(re)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),H(this._queryEngine,t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(t){var n;this._loadOptions.customParameters=t,(n=this._snapshotTask)==null||n.abort(),this._snapshotTask=j(this._snapshotFeatures),this._snapshotTask.promise.then(o=>{this._queryEngine.featureStore.clear(),o&&this._queryEngine.featureStore.addMany(o)},o=>{this._queryEngine.featureStore.clear(),G(o)||Q.getLogger("esri.layers.CSVLayer").error(new _("csv-layer:refresh","An error occurred during refresh",{error:o}))}),await this._waitSnapshotComplete();const{fullExtent:e,timeExtent:i}=await this._queryEngine.fetchRecomputedExtents();return{extent:e,timeExtent:i}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:e,customParameters:i}=this._loadOptions;if(!e)throw new _("csv-layer:invalid-source","url not defined");const n=V(e);return(await $(n.path,{query:{...n.query,...i},responseType:"text",signal:t})).data}_createQueryEngine(t){const{objectIdField:e,fields:i,extent:n,timeInfo:o}=t.layerDefinition,s=new X({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new te({fieldsIndex:w.fromLayerJSON({fields:i,dateFieldsTimeReference:{timeZoneIANA:E}}),geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:o,objectIdField:e,spatialReference:n.spatialReference||{wkid:4326},featureStore:s})}async _createFeatures(t){const{latitudeFieldName:e,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:o,spatialReference:s}=this._queryEngine;let a=[];const u=[],c=o.fields.filter(l=>l.name!==n).map(l=>l.name);let h=0;const p={};for(const l of o.fields)if(l.type!=="esriFieldTypeOID"&&l.type!=="esriFieldTypeGlobalID"){const f=oe(l);f!==void 0&&(p[l.name]=f)}const y=k(t,c,this._delimiter,se(p,n));for(const l of y){const f=this._parseCoordinateValue(l[e]),F=this._parseCoordinateValue(l[i]);if(F!=null&&f!=null&&!isNaN(f)&&!isNaN(F)){l[e]=f,l[i]=F;for(const m in l)if(m!==e&&m!==i)if(o.isDateField(m))l[m]=L(l[m]);else if(o.isNumericField(m)){const d=x(l[m]);isNaN(d)?l[m]=null:l[m]=d}else l[m]!=null&&(l[m]=he(l[m]));l[n]=h,h++,a.push(new _e(F,f)),u.push(l)}}if(!B({wkid:4326},s))if(J(s))for(const l of a)[l.x,l.y]=Z(l.x,l.y,Fe);else a=M(K,a,Y.WGS84,s,null,null);const g=[];for(let l=0;l<a.length;l++){const{x:f,y:F}=a[l],m=u[l];m[n]=l+1,g.push(new W(new z([],[f,F]),m,null,m[n]))}return g}_parseCoordinateValue(t){if(t==null||t==="")return null;let e=x(t);return(isNaN(e)||Math.abs(e)>181)&&(e=parseFloat(t)),e}async _checkProjection(t){try{await ee(U,t)}catch{throw new _("csv-layer:projection-not-supported","Projection not supported")}}}function Ie(r,t){var l,f,F;const e=t.parsingOptions||{},i={delimiter:e.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:e.latitudeField,longitudeFieldName:e.longitudeField}},n=i.layerDefinition={name:A(t.url,ge)||"csv",dateFieldsTimeReference:{timeZoneIANA:E},drawingInfo:ye,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:e.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:e.spatialReference||{wkid:4326}}},o=C(r),s=(l=o.next().value)==null?void 0:l.trim(),a=(f=o.next().value)==null?void 0:f.trim();if(!s)throw new _("csv-layer:empty-csv","CSV is empty",{csv:r});const{delimiter:u,locationInfo:c}=de(s,a,e);if(!u)throw new _("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:s,secondLine:a,parsingOptions:e});if(!c)throw new _("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:s,secondLine:a,parsingOptions:e});i.locationInfo=c,i.delimiter=u;const{names:h,aliases:p}=D(s,u),y=pe(r,i.delimiter,h,p,i.locationInfo);if((F=e.fields)!=null&&F.length){const m=new w(e.fields);for(const d of y){const T=m.get(d.name);T&&Object.assign(d,T)}}if(!y.some(m=>m.type==="esriFieldTypeOID"&&(n.objectIdField=m.name,!0))){const m={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};n.objectIdField=m.name,y.unshift(m)}n.fields=y;const g=new w(n.fields);if(i.locationInfo&&(i.locationInfo.latitudeFieldName=g.get(i.locationInfo.latitudeFieldName).name,i.locationInfo.longitudeFieldName=g.get(i.locationInfo.longitudeFieldName).name),n.timeInfo){const m=n.timeInfo;if(m.startTimeField){const d=g.get(m.startTimeField);d?(m.startTimeField=d.name,d.type="esriFieldTypeDate"):m.startTimeField=null}if(m.endTimeField){const d=g.get(m.endTimeField);d?(m.endTimeField=d.name,d.type="esriFieldTypeDate"):m.endTimeField=null}if(m.trackIdField){const d=g.get(m.trackIdField);m.trackIdField=d?d.name:null}m.startTimeField||m.endTimeField||(n.timeInfo=null)}return i}export{Gt as default};
