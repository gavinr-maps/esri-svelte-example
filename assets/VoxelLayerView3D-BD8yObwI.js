import{s as y,B as V,r as c,m as b,a as W}from"./Accessor-BHnuXKD2.js";import{d as a,P as T}from"./reactiveUtils-BR0C1Kq4.js";import{_ as A,A as x,o as E}from"./vec32-Dvg_eL9J.js";import{n as S}from"./vec3f64-BLpZdpfb.js";import{c as M,g as L}from"./Point-XGrwlf63.js";import{n as I}from"./projectVectorToVector-dS8io47t.js";import{q as P,l as D}from"./aaBoundingBox-CeBivBRq.js";import{l as F}from"./LayerView3D-dAX18iJt.js";import{t as $}from"./VoxelGraphic-J82YY2Vw.js";import{l as R,o as s,i as w}from"./ShadowCastAccumulate.glsl-7ziGQBCy.js";import{t as C}from"./LineCallout.glsl-BFpkOc4i.js";import{i as U}from"./PopupSceneLayerView-BHOZSW5P.js";import{y as G}from"./LayerView-DF8EqCYi.js";import{l as H,r as z}from"./layerViewUtils-tkZ5z_iY.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./common-DQOJ18NT.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./writer-B2bQV2uU.js";import"./Extent-CBBGeHb-.js";import"./Polyline-BmuD2-ZN.js";import"./mathUtils-DV9iOXpW.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./projectPointToVector-BS0u8fq6.js";import"./projection-B2I9Bzj_.js";import"./heightModelInfoUtils-CMg1cdju.js";import"./HeightModelInfo-B3GZyQFz.js";import"./Graphic-CFXUQZlS.js";import"./Clonable-DvJsj5LF.js";import"./opacityUtils-CSd4XoR2.js";import"./Promise-CmQqe-ke.js";import"./enumeration-Cr5WIZs4.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./ActionToggle-__-l4AdQ.js";import"./Identifiable-BrT7zvUW.js";import"./jsonUtils-Cu7OBRmN.js";import"./typeUtils-BSg8Y507.js";import"./TextSymbol-BQ_NW9Xo.js";import"./screenUtils-_ZIvrt5o.js";import"./collectionUtils-CbaToa73.js";import"./Portal-CTRRujjZ.js";import"./Camera-DJtV7zYb.js";import"./Cyclical-CPiNl4ru.js";import"./Viewpoint-Cv8Otrne.js";import"./jsxFactory-CLjKarlq.js";import"./intl-Do3GEEJ7.js";import"./uuid-Cl5lrJ4c.js";import"./workers-D8Q3pEzK.js";import"./Queue-BOnccek2.js";import"./GraphicsCollection-CkliHSk1.js";import"./projectBoundingRect-BA_jRNoI.js";import"./boundedPlane-Dyz2ub5d.js";import"./sphere-DQxj5tsv.js";import"./mat4-Fi6iAz29.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./mat3-CR8GKnhD.js";import"./mat3f64-BBpwCtoL.js";import"./plane-4dpuo6-e.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./vec2f64-Dy6m9Nrb.js";import"./mathUtils-B9R7G-2c.js";import"./lineSegment-C-CDF7QX.js";import"./RenderCoordsHelper-BbefYyBA.js";import"./spatialReferenceEllipsoidUtils-DM073JUd.js";import"./projectVectorToPoint-d6Mr4zvQ.js";import"./dehydratedFeatureUtils-1rrRm6hF.js";import"./ViewingMode-Dodu7ZZk.js";import"./scaleUtils-CfLu-sg1.js";import"./layerUtils-dJgsXxkC.js";import"./DefaultUI-DqLHkAzt.js";import"./UpdatingHandles-ptqz1ck8.js";import"./InputManager-Bs9UE-jw.js";import"./signal-DSa0yokC.js";import"./Basemap-BHdJ6wQH.js";import"./loadAll-Do8S8AWH.js";import"./PortalItem-CXk7DqVv.js";import"./basemapDefinitions-BmB40s1J.js";import"./writeUtils-C3ZSK02Z.js";import"./groundInstanceUtils-Ben03ZCf.js";import"./CollectionFlattener-B9CFCLSp.js";import"./editableLayers-BZGjz8nI.js";import"./catalogUtils-CK4eMvD1.js";import"./basemapEnsureType-BVU7UGJp.js";import"./basemapUtils-DQr5T1wn.js";import"./utils-DYurMneM.js";import"./mat4f32-DcsiF_Rp.js";import"./TablesMixin-BzMj7HDl.js";import"./Layer-C9uQlTBT.js";import"./TimeExtent-J5qnUFx_.js";import"./timeUtils-D2X862bk.js";import"./timeZoneUtils-COos5xIr.js";import"./ReactiveMap-Dwhwbx9R.js";import"./Query-DCBIeen2.js";import"./Field-Cyk7Ur5d.js";import"./fieldType-L-VlbZqy.js";import"./FullTextSearch-BWm_kPUE.js";import"./selectionUtils-DYi6daQO.js";import"./ViewEvents-Hl5AOQnu.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-DyhV4TAA.js";import"./HighlightDefaults-ESbuT2uR.js";import"./a11yUtils-CSYUX1kC.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-brik-GLm.js";import"./capabilities-DwlKKScG.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-rIBXQ52V.js";import"./CompassViewModel-BAJa4WdS.js";import"./GoTo-BsXOAO95.js";import"./ZoomViewModel-BZXEbLSs.js";import"./NormalUtils.glsl-CV524hT5.js";import"./earcut-Lltz9D9k.js";import"./computeTranslationToOriginAndRotation-BT43Xu5d.js";import"./Indices-Db9lERgy.js";import"./vec3-Bn81gjoR.js";import"./ElevationContext-jcnAn7VT.js";import"./ElevationProvider-aS5xrHHy.js";import"./VertexAttribute-Cq4MnHjR.js";import"./unitConversionUtils-C4AR5obr.js";import"./lengthUtils-DjJgJFRg.js";import"./hydratedFeatures-BVVSs98j.js";import"./SnappingCandidate-O5eRSE6e.js";import"./graphicUtils-Daa6cjYT.js";import"./meshVertexSpaceUtils-SW0WEjNN.js";import"./MeshLocalVertexSpace-C0YDTRex.js";import"./triangulationUtils-ChyeOnqC.js";import"./deduplicate-8uOXlcvp.js";import"./Attribute-B-NAci_J.js";import"./Material-Ba8x5bbY.js";import"./NoParameters-t-PuNrgq.js";import"./FloatArray-BCfeX8wo.js";import"./BindType-BBwFZqyN.js";import"./Matrix3PassUniform-Bhi2fM3C.js";import"./Texture-D-SqNa4i.js";import"./enums-D9v74xTE.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./renderState-e7QeQoUO.js";import"./basicInterfaces-CZwQPxTp.js";import"./InterleavedLayout-Dvj-Snan.js";import"./BufferView-_QDXRCew.js";import"./vec2-maR1OrZI.js";import"./types-D0PSWh4d.js";import"./triangle-D_E6eTS3.js";import"./ShaderTechniqueConfiguration-YrUOztAU.js";import"./glsl-BH37Aalp.js";import"./requestImageUtils-Brn0e8z8.js";import"./TextureFormat-1mYWTFa-.js";import"./edgeUtils-52Urp6s4.js";import"./floatRGBA-CR2j2c7-.js";import"./NormalAttribute.glsl-BPQl43kJ.js";import"./RgbaFloatEncoding.glsl-_io2eW3M.js";import"./Float4DrawUniform-C_Hqa-pI.js";import"./Matrix3DrawUniform-B_gSHO7v.js";import"./OverlayCompositing.glsl-BbJKjUZQ.js";import"./GridLocalOriginFactory-BvhZ_UoU.js";import"./RibbonLine.glsl-D3IEIaDR.js";import"./sdfPrimitives-B8Jbwvqs.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Octree-B-jwmuW2.js";import"./ShaderBuilder-DV1s2efh.js";import"./SceneLighting-fZH2UQ_L.js";import"./RenderCamera-BovI3JTe.js";import"./axisAngleDegrees-8Sw4vC28.js";import"./quat-4pa1e6ds.js";import"./weather-DtiKeY2t.js";import"./BooleanBindUniform-xvVHJCDz.js";import"./RenderPlugin-B2sz29jJ.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-DcVjXzZo.js";import"./BufferObject-CIl3vJtA.js";import"./memoryEstimations-5gFNwkKK.js";import"./NestedMap-GuqgquCN.js";import"./HUDRenderStyle-BhGvVxgm.js";import"./Scheduler-B_GuBefw.js";import"./debugFlags-ZrDyTcDc.js";import"./Normals-OOhKYumi.js";import"./DefaultMaterial-B5sYRDQR.js";import"./GLTextureMaterial-BXvkeRxQ.js";import"./DefaultBufferWriter-D4XUxbP-.js";import"./verticalOffsetUtils-CUH6QZ7-.js";import"./orientedBoundingBox-9z4w3ZAL.js";import"./VertexColor.glsl-C67vI27I.js";import"./Matrix4PassUniform-LFIUaE9i.js";import"./VerticalOffset.glsl-0YVQE7vQ.js";import"./Matrix4sPassUniform--uPzDbTP.js";import"./Float2PassUniform-Blij1ug3.js";import"./CameraSpace.glsl-BZ4Eapt3.js";import"./fontUtils-D0SfAiSy.js";import"./cameraUtils-D51h-KGF.js";import"./Intersector-DqUGp7Vs.js";import"./intersectorUtils-l6zkk4nF.js";import"./earthUtils-5Ip67eD0.js";import"./spatialReferenceSupport-CJqi4Nvp.js";import"./ElevationSamplerData-ejt2NMnl.js";import"./terrainUtils-NB9gChf5.js";import"./TileInfo-CRfZy5zq.js";import"./TileKey-DZd6gJy7.js";import"./vec3f32-nZdmKIgz.js";import"./FramebufferObject-DHwDHMWe.js";import"./glUtil-D0YUa0ow.js";import"./ShadowCastVisualizeTechniqueConfiguration-WdqoNZsk.js";import"./SunCalc-uwgdo0BB.js";import"./VirtualLighting-CTSkZQzH.js";import"./ray-D3Okb4cY.js";import"./RenderFeature-3I21ZjJq.js";import"./unitFormatUtils-Dbksq3U5.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./quantityUtils-1LswOhxZ.js";import"./ZoomMomentumEstimator-Igei2Npb.js";import"./HUDMaterial-DRUv4rua.js";import"./HUDVisibility.glsl-DSeZY4v-.js";import"./labelFormatUtils-B--9rEVY.js";import"./labelUtils-Dq8OkaT-.js";import"./DepthRange-C25RnOB3.js";import"./elevationInfoUtils-RSZ4Logn.js";import"./hitTest-CblPROa1.js";import"./LayerConstants-B33OP6sh.js";import"./intersectorUtilsConversions-CZnn6t-z.js";import"./Intersector-DPK4WnQE.js";import"./ElevationRange-BrgM1moX.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./MemCache-CDoaVBHf.js";import"./DefaultLoadingContext-b8vwa5ZD.js";import"./wosrLoader-F8PxTYxV.js";import"./Version-9k2AOv05.js";import"./DrawParameters-C0gywgJQ.js";import"./TileStrategy-DlGVvP4C.js";import"./TileKey-BtGhNUzq.js";import"./ScheduledQueueProcessor-DfrR8pp0.js";import"./RenderableTile-Ewnw5ULl.js";import"./config-MDUrh2eL.js";import"./StyleDefinition-DxJzQnGW.js";import"./enums-BJSSbDkD.js";import"./enums-BRzLM11V.js";import"./GeometryUtils-B5FJlfZD.js";import"./DefaultVertexAttributeLayouts-DMsCtEEh.js";import"./DisplayObject-S19ALweP.js";import"./resources-CcZcI9oR.js";import"./WorkerHandle-B2QLNs3X.js";import"./colorUtils-BAowQmkN.js";import"./GeometryUtil-vHI0hYMT.js";import"./vec33-KumQEj7U.js";import"./ShaderTechniqueRepository-CuJwDr2t.js";import"./Blit-D5AxBSxC.js";import"./testSVGPremultipliedAlpha-CpxLiQJP.js";import"./RenderingContext-BkhmhK8E.js";import"./ProgramCache-D9MJNX7j.js";import"./Program-DD6La1z3.js";import"./makeScheduleFunction-CggzEh3c.js";import"./visualVariableUtils-Bp9QCb8E.js";import"./vec2f32-BbH2jxlN.js";import"./dehydratedFeatures-Nwhn-hep.js";import"./quantizationUtils-2Az-xHPA.js";import"./featureConversionUtils-DpmsPUmt.js";import"./OptimizedFeature-DcMLlxvB.js";import"./OptimizedGeometry-7IxBWtHr.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./webStyleAcceptedFormats-CG7ZQ6BV.js";import"./RealisticTree.glsl-BIYA2y1x.js";import"./popupUtils-Bp0XPfzq.js";var r;(function(t){t[t.API=1]="API",t[t.VerboseAPI=2]="VerboseAPI",t[t.Error=3]="Error"})(r||(r={}));const l=S(),g=S();let n=class extends U(F(G)){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this.ignoresMemoryFactor=!0,this._dbgFlags=new Set}get baseUrl(){var t;return((t=this.layer.parsedUrl)==null?void 0:t.path)??""}get wasmLayerId(){return this._wasmLayerId}initialize(){var d;if(this._dbgFlags.add(r.Error),this.view.viewingMode!=="local")throw new y("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(!((d=this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat)!=null&&d.textureFloat))throw new y("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const t=this.layer.spatialReference;if(!M(t,this.view.spatialReference))throw H("voxel layer",t.wkid,this.view.spatialReference.wkid);const i=this.layer.currentVariableId,o=this.layer.getVolume(i),m=this.layer.getVariable(i);if(o!=null&&m!=null){const h=o.dimensions[0],e=o.dimensions[1],u=o.zDimension;if(u>1){const f=o.dimensions[u],v=h.size*e.size*f.size;let _=1;switch(m.renderingFormat.type){case"Int16":case"UInt16":_=2;break;case"Int32":case"UInt32":case"Float32":_=4}this._futureMemory=_*v}}const p=R(this).then(h=>{this._wasmLayerId=h,this._suspendedHandle=a(()=>this.suspended,e=>{const u=s(this.view);u&&u.setEnabled(this,!e)},T),this.addHandles([a(()=>this.layer.renderMode,e=>this._pushRenderModeToWasm(e)),a(()=>this.layer.currentVariableId,e=>this._pushCurrentVariableIdToWasm(e)),a(()=>this.layer.getSections(),e=>this._pushSectionsToWasm(e)),a(()=>this.layer.getVariableStyles(),e=>this._pushVariableStylesToWasm(e)),a(()=>this.layer.getVolumeStyles(),e=>this._pushVolumeStylesToWasm(e)),a(()=>this.layer.enableDynamicSections,e=>this._pushEnableDynamicSectionsToWasm(e)),a(()=>this.layer.enableIsosurfaces,e=>this._pushEnableIsosurfacesToWasm(e)),a(()=>this.layer.enableSections,e=>this._pushEnableSectionsToWasm(e)),a(()=>this.layer.enableSlices,e=>this._pushEnableSlicesToWasm(e)),a(()=>[this.layer.timeOffset,this.layer.timeExtent,this.layer.useViewTime],()=>this._updateLayerTimeProperties()),a(()=>this.slicePlaneEnabled,e=>this._pushAnalysisSliceToWasm(e,this.view.slicePlane)),a(()=>this.view.slicePlane,e=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,e))])}).catch(h=>{if(w(this),this._wasmLayerId=-1,h===-1)throw new y("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(h===-2)throw new y("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(p)}destroy(){w(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){const t=s(this.view);return!(this._wasmLayerId<0||t==null)&&t.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}get usedMemory(){return this._usedMemory}get unloadedMemory(){return this._futureMemory}get performanceInfo(){return new C(this.usedMemory)}get visibleAtCurrentScale(){return z(this.layer.effectiveScaleRange,this.view.scale)}whenGraphicBounds(t,i){const o=t.attributes["Voxel.WorldPosition"];if(o){const m=P(),p=JSON.parse(o);if(I(p,this.view.renderSpatialReference,g,this.view.spatialReference||L.WGS84))return D(m,g),Promise.resolve({boundingBox:m,screenSpaceObjects:[]})}return Promise.reject()}async whenGraphicAttributes(t,i){const o=s(this.view);if(!o)return t;const m=[];for(const p of t)this._isValidVoxelGraphic(p)&&m.push(p);return m.length&&await o.getOtherFieldPopupValues(m,i),t}_isValidVoxelGraphic(t){return t instanceof $}setUsedMemory(t){this._usedMemory=t,this._futureMemory=0}captureFrustum(){const t=s(this.view);t==null||t.captureFrustum()}toggleFullVolumeExtentDraw(){const t=s(this.view);t==null||t.toggleFullVolumeExtentDraw(this)}getLayerTimes(){const t=s(this.view);return(t==null?void 0:t.getLayerTimes(this))??[]}getCurrentLayerTimeIndex(){const t=s(this.view);return(t==null?void 0:t.getCurrentLayerTimeIndex(this))??0}dropQueryRenderTarget(){const t=s(this.view);t==null||t.dropQueryRenderTarget()}_pushRenderModeToWasm(t){const i=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(i?"have WASM":"don't have WASM!!!")),i!=null&&i.setRenderMode(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(t){const i=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(i?"have WASM":"don't have WASM!!!")),i!=null&&i.setStaticSections(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(t){const i=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(i?"have WASM":"don't have WASM!!!")),i!=null&&i.setCurrentVariable(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(t){const i=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(i?"have WASM":"don't have WASM!!!")),i!=null&&i.setVariableStyles(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!")}_accountForEnableSlices(t,i){const o=i??this.layer.enableSlices;for(let m=0;m<t.length;++m){const p=t[m];for(const d of p.slices)d.enabled=d.enabled&&o}}_pushVolumeStylesToWasm(t){const i=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(i?"have WASM":"don't have WASM!!!")),i&&(this._accountForEnableSlices(t,null),i.setVolumeStyles(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(t,i){const o=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(o?"have WASM":"don't have WASM!!!"));let m=!1;if(o){if(i){const p=i.origin;A(l,i.basis1,i.basis2),x(l,l),m=o.setAnalysisSlice(this,t,p,l)}else E(l,0,0,1),m=o.setAnalysisSlice(this,!1,l,l);m||this._dbg(r.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_updateLayerTimeProperties(){const t=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._updateLayerTimeProperties() called, "+(t?"have WASM":"don't have WASM!!!")),t&&t.updateLayerTimeProperties(this)}_pushEnableDynamicSectionsToWasm(t){const i=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(i?"have WASM":"don't have WASM!!!")),i!=null&&i.setEnableDynamicSections(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!")}_pushEnableSlicesToWasm(t){const i=s(this.view);if(this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(i?"have WASM":"don't have WASM!!!")),i){const o=this.layer.getVolumeStyles();this._accountForEnableSlices(o,t),i.setVolumeStyles(this,o)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(t){const i=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(i?"have WASM":"don't have WASM!!!")),i!=null&&i.setEnableIsosurfaces(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!")}_pushEnableSectionsToWasm(t){const i=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(i?"have WASM":"don't have WASM!!!")),i!=null&&i.setEnableSections(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!")}_dbg(t,i){this._dbgFlags.has(t)&&(t===r.Error?V.getLogger(this).error(i):V.getLogger(this).warn(i))}};c([b()],n.prototype,"layer",void 0),c([b()],n.prototype,"baseUrl",null),c([b({type:Boolean})],n.prototype,"slicePlaneEnabled",void 0),c([b({readOnly:!0})],n.prototype,"visibleAtCurrentScale",null),n=c([W("esri.views.3d.layers.VoxelLayerView3D")],n);const zo=n;export{zo as default};
