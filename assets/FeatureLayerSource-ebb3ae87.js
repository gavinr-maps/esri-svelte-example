import{eC as k,x as M,a as O,b as x,c as C,ej as j,d9 as D,v as N,a1 as R,R as v,aR as U,aC as P,cL as Q,aY as L,by as J,_ as G,T as E,eD as V,bb as H,ax as W,ay as Y,eE as $,eF as z,s as I,eG as X,N as Z,j as B,aJ as K,eH as ee}from"./index-e8c6bcc0.js";import{e as te}from"./mat4f64-1413b4a7.js";import{m as se}from"./MeshGeoreferencedRelativeVertexSpace-c1b8c848.js";import{r as ae}from"./vec32-7a655b74.js";import{A as re}from"./External-5dc63178.js";import{isFeatureIdentifierArrayWithGlobalId as ie,isFeatureIdentifierArrayWithObjectId as ne}from"./editingSupport-f8cbf80a.js";import{o as oe}from"./clientSideDefaults-f0d03b7e.js";import{x as ue}from"./QueryTask-6db8e904.js";import{s as le}from"./executeQueryJSON-5cf36760.js";import{i as de}from"./editsZScale-b2a6d781.js";import{b as ce}from"./Query-ce383482.js";import"./normalizeUtils-f64efc29.js";import"./normalizeUtilsCommon-123fc71f.js";import"./utils-c9a76eea.js";import"./EditBusLayer-d52c85d8.js";import"./QueryEngineCapabilities-42e44ded.js";import"./defaultsJSON-b087dd4d.js";import"./executeForIds-19c4dd3c.js";import"./query-0796d492.js";import"./pbfQueryUtils-a8ac8764.js";import"./pbf-2b43d9bb.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-c236a6ea.js";import"./executeQueryPBF-e7d41349.js";import"./featureConversionUtils-096a49d9.js";import"./FeatureSet-72ed3e08.js";import"./Field-fadcb771.js";import"./fieldType-a79b2e2e.js";function pe(t){const{vertexSpace:e}=t;if(e.isRelative)return t.clone();const{anchor:s}=t,a=s.clone(),r=k(he,[-a.x,-a.y,-a.z]),u=new se({origin:[a.x,a.y,a.z]}),i=t.cloneWithVertexSpace(u),{position:l}=i.vertexAttributes;return i.vertexAttributes.position=ae(new Float64Array(l.length),l,r),i.vertexAttributesChanged(),i}const he=te(),ye=new M({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),me=new Set(["Feature Layer","Oriented Imagery Layer","Table"]),ge=new M({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let w=class extends j{constructor(){super(...arguments),this.type="feature-layer",this.refresh=D(async()=>{var s,a;await this.load();const t=(s=this.sourceJSON.editingInfo)==null?void 0:s.lastEditDate;if(t==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const e=t!==((a=this.sourceJSON.editingInfo)==null?void 0:a.lastEditDate);return{dataChanged:e,updates:e?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(t){const e=t!=null?t.signal:null,s=this.layer.sourceJSON;return this.addResolvingPromise(this._fetchService(s,e)),Promise.resolve(this)}get queryTask(){var c;const{capabilities:t,parsedUrl:e,dynamicDataSource:s,infoFor3D:a,gdbVersion:r,spatialReference:u,fieldsIndex:i}=this.layer,l=N("featurelayer-pbf")&&(t==null?void 0:t.query.supportsFormatPBF)&&a==null,n=((c=t==null?void 0:t.operations)==null?void 0:c.supportsQueryAttachments)??!1;return new ue({url:e.path,pbfSupported:l,fieldsIndex:i,infoFor3D:a,dynamicDataSource:s,gdbVersion:r,sourceSpatialReference:u,queryAttachmentsSupported:n})}async addAttachment(t,e){await this.load();const s=t.attributes[this.layer.objectIdField],a=this.layer.parsedUrl.path+"/"+s+"/addAttachment",r=this._getLayerRequestOptions(),u=this._getFormDataForAttachment(e,r.query);try{const i=await R(a,{body:u});return this._createFeatureEditResult(i.data.addAttachmentResult)}catch(i){throw this._createAttachmentErrorResult(s,i)}}async updateAttachment(t,e,s){await this.load();const a=t.attributes[this.layer.objectIdField],r=this.layer.parsedUrl.path+"/"+a+"/updateAttachment",u=this._getLayerRequestOptions({query:{attachmentId:e}}),i=this._getFormDataForAttachment(s,u.query);try{const l=await R(r,{body:i});return this._createFeatureEditResult(l.data.updateAttachmentResult)}catch(l){throw this._createAttachmentErrorResult(a,l)}}async applyEdits(t,e){var _,q,f,S,A,T;await this.load();const{layer:s}=this,a=s.infoFor3D,r=a!=null,u=r||((e==null?void 0:e.globalIdUsed)??!1),i=r?await this._uploadMeshesAndGetAssetMapEditsJSON(t):null,l=((_=t.addFeatures)==null?void 0:_.map(F=>this._getFeatureJSON(F,a)))??[],n=(await Promise.all(l)).filter(v),c=((q=t.updateFeatures)==null?void 0:q.map(F=>this._getFeatureJSON(F,a)))??[],h=(await Promise.all(c)).filter(v),y=this._getFeatureIds(t.deleteFeatures,u);de(n,h,s.spatialReference);const p=await this._getAttachmentEditsJSON(t),b=s.capabilities.editing.supportsAsyncApplyEdits&&r,o={gdbVersion:(e==null?void 0:e.gdbVersion)||s.gdbVersion,rollbackOnFailure:e==null?void 0:e.rollbackOnFailureEnabled,useGlobalIds:u,returnEditMoment:e==null?void 0:e.returnEditMoment,usePreviousEditMoment:e==null?void 0:e.usePreviousEditMoment,sessionId:e==null?void 0:e.sessionId,async:b};e!=null&&e.returnServiceEditsOption?(o.edits=JSON.stringify([{id:s.layerId,adds:n,updates:h,deletes:y,attachments:p,assetMaps:i}]),o.returnServiceEditsOption=ye.toJSON(e==null?void 0:e.returnServiceEditsOption),o.returnServiceEditsInSourceSR=e==null?void 0:e.returnServiceEditsInSourceSR):(o.adds=n.length?JSON.stringify(n):null,o.updates=h.length?JSON.stringify(h):null,o.deletes=y.length?u?JSON.stringify(y):y.join(","):null,o.attachments=p&&JSON.stringify(p),o.assetMaps=i!=null?JSON.stringify(i):void 0);const d=this._getLayerRequestOptions({method:"post",query:o}),m=e!=null&&e.returnServiceEditsOption?s.url:s.parsedUrl.path,g=b?await this._asyncApplyEdits(m+"/applyEdits",d):await R(m+"/applyEdits",d);if(!((f=s.capabilities.operations)!=null&&f.supportsEditing)&&((A=(S=s.effectiveCapabilities)==null?void 0:S.operations)!=null&&A.supportsEditing)){const F=(T=U)==null?void 0:T.findCredential(s.url);await(F==null?void 0:F.refreshToken())}return this._createEditsResult(g)}async deleteAttachments(t,e){await this.load();const s=t.attributes[this.layer.objectIdField],a=this.layer.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await R(a,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(r){throw this._createAttachmentErrorResult(s,r)}}fetchRecomputedExtents(t={}){const e=t.signal;return this.load({signal:e}).then(async()=>{const s=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:a,url:r}=this.layer,{data:u}=await R(`${r}/${a}`,s),{id:i,extent:l,fullExtent:n,timeExtent:c}=u,h=l||n;return{id:i,fullExtent:h&&P.fromJSON(h),timeExtent:c&&Q.fromJSON({start:c[0],end:c[1]})}})}async queryAttachments(t,e={}){await this.load();const s=this._getLayerRequestOptions(e);return this.queryTask.executeAttachmentQuery(t,s)}async queryFeatures(t,e){return await this.load(),this.queryTask.execute(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:this._createRequestQueryOptions(e)})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopFeatures(t,e){return await this.load(),this.queryTask.executeTopFeaturesQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopObjectIds(t,e){return await this.load(),this.queryTask.executeForTopIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopExtents(t,e){return await this.load(),this.queryTask.executeForTopExtents(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopCount(t,e){return await this.load(),this.queryTask.executeForTopCount(t,{...e,query:this._createRequestQueryOptions(e)})}async fetchPublishingStatus(){if(!L(this.layer.url))return"unavailable";const t=J(this.layer.url,"status"),e=await R(t,{query:{f:"json"}});return ge.fromJSON(e.data.status)}async uploadAssets(t,e){const{uploadAssets:s}=await G(()=>import("./uploadAssets-1a809329.js"),["./uploadAssets-1a809329.js","./index-e8c6bcc0.js","./index-0da2eac5.css","./External-5dc63178.js"],import.meta.url);return s(t,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},e)}async _asyncApplyEdits(t,e){const s=(await R(t,e)).data.statusUrl;for(;;){const a=(await R(s,{query:{f:"json"},responseType:"json"})).data;switch(a.status){case"Completed":return R(a.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new E("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new E("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await V(fe)}}_createRequestQueryOptions(t){const e={...this.layer.customParameters,token:this.layer.apiKey,...t==null?void 0:t.query};return this.layer.datesInUnknownTimezone&&(e.timeReferenceUnknownClient=!0),e}async _fetchService(t,e){if(!t){const{data:a}=await R(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:N("featurelayer-advanced-symbols")?{returnAdvancedSymbols:!0}:{},signal:e}));t=a}this.sourceJSON=this._patchServiceJSON(t);const s=t.type;if(!me.has(s))throw new E("feature-layer-source:unsupported-type",`Source type "${s}" is not supported`)}_patchServiceJSON(t){var e;if(t.type!=="Table"&&t.geometryType&&!((e=t==null?void 0:t.drawingInfo)!=null&&e.renderer)&&!t.defaultSymbol){const s=oe(t.geometryType).renderer;H("drawingInfo.renderer",s,t)}return t.geometryType==="esriGeometryMultiPatch"&&t.infoFor3D&&(t.geometryType="mesh"),t}async _getFeatureJSON(t,e){const{geometry:s}=t,a={...t.attributes};if(e!=null&&(s==null?void 0:s.type)==="mesh"){const{transformFieldRoles:r}=e,{origin:u,spatialReference:i,transform:l}=s,n=this.layer.spatialReference;await W(i,n);const c=Y(u,n);if(a[r.originX]=c.x,a[r.originY]=c.y,a[r.originZ]=c.z??0,l!=null){const{translation:h,scale:y,rotation:p}=l,{vertexSpace:b}=s,o=b.isGeoreferenced?1:$(i)/$(n);a[r.translationX]=h[0]*o,a[r.translationY]=-h[2]*o,a[r.translationZ]=h[1]*o,a[r.scaleX]=y[0],a[r.scaleY]=y[2],a[r.scaleZ]=y[1],a[r.rotationX]=p[0],a[r.rotationY]=p[2],a[r.rotationZ]=p[1],a[r.rotationDeg]=p[3]}return{geometry:null,attributes:a}}return s==null?{attributes:a}:s.type==="mesh"||s.type==="extent"?null:{geometry:s.toJSON(),attributes:a}}async _getAttachmentEditsJSON(t){const e=await Promise.all((t.addAttachments??[]).map(r=>this._getAttachmentEditJSON(r))),s=await Promise.all((t.updateAttachments??[]).map(r=>this._getAttachmentEditJSON(r))),a=t.deleteAttachments??[];return e.length||s.length||a.length?{adds:e,updates:s,deletes:[...a]}:null}async _getAttachmentEditJSON(t){const{feature:e,attachment:s}=t,{globalId:a,name:r,contentType:u,data:i,uploadId:l}=s,n={globalId:a,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(e&&(n.parentGlobalId="attributes"in e?e.attributes&&e.attributes[this.layer.globalIdField]:e.globalId),l)n.uploadId=l;else if(i){const c=await z(i);c&&(n.contentType=c.mediaType,n.data=c.data),i instanceof File&&(n.name=i.name)}return r&&(n.name=r),u&&(n.contentType=u),n}async _uploadMeshesAndGetAssetMapEditsJSON(t){const{addAssetFeatures:e}=t;if(!(e!=null&&e.length))return null;const s=await this._filterRedundantAssetMaps(e);if(!(e!=null&&e.length))return null;const a=new Array,r=new Map;for(const u of s){const{geometry:i}=u,{vertexSpace:l}=i;if(l.isRelative)a.push(i);else{const n=pe(i);r.set(n,i),u.geometry=n,a.push(n)}}await this.uploadAssets(a);for(const[u,i]of r)i.addExternalSources(u.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(s),updates:[],deletes:[]}}_getAssetMapEditsJSON(t){const e=new Array,s=this.layer.globalIdField,a=this.layer.parsedUrl;for(const r of t){const u=r.geometry,{metadata:i}=u,l=i.getExternalSourcesOnService(a),n=r.getAttribute(s);if(l.length===0){I.getLogger(this).error(`Skipping feature ${n}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:c}=l.find(re)??l[0],{vertexSpace:h}=u,y=h.isGeoreferenced?["PROJECT_VERTICES"]:[];for(const p of c)p.parts.length===1?e.push({globalId:X(),parentGlobalId:n,assetName:p.assetName,assetHash:p.parts[0].partHash,flags:y}):I.getLogger(this).error(`Skipping asset ${p.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return e}_getFeatureIds(t,e){if(!t||t.length===0)return[];if(e&&ie(t))return t.map(r=>r.globalId);if(ne(t))return t.map(r=>r.objectId);const{layer:s}=this,a=e?s.globalIdField:s.objectIdField;return a?t.map(r=>r.getAttribute(a)):[]}_createEditsResult(t){var n,c,h,y,p,b;const e=t.data,{layerId:s}=this.layer,a=[];let r=null;if(Array.isArray(e))for(const o of e)a.push({id:o.id,editedFeatures:o.editedFeatures}),o.id===s&&(r={addResults:o.addResults??[],updateResults:o.updateResults??[],deleteResults:o.deleteResults??[],attachments:o.attachments,editMoment:o.editMoment});else r=e;const u=r==null?void 0:r.assetMaps;if(u){for(const o of u.addResults)o.success||I.getLogger(this).error(`Failed to map asset to feature with globalId ${o.globalId}.`);for(const o of u.updateResults)o.success||I.getLogger(this).error(`Failed to map asset to feature with globalId ${o.globalId}.`)}const i=r==null?void 0:r.attachments,l={addFeatureResults:((n=r==null?void 0:r.addResults)==null?void 0:n.map(this._createFeatureEditResult,this))??[],updateFeatureResults:((c=r==null?void 0:r.updateResults)==null?void 0:c.map(this._createFeatureEditResult,this))??[],deleteFeatureResults:((h=r==null?void 0:r.deleteResults)==null?void 0:h.map(this._createFeatureEditResult,this))??[],addAttachmentResults:i&&i.addResults?i.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:i&&i.updateResults?i.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:i&&i.deleteResults?i.deleteResults.map(this._createFeatureEditResult,this):[]};if(r!=null&&r.editMoment&&(l.editMoment=r.editMoment),a.length>0){l.editedFeatureResults=[];for(const o of a){const{editedFeatures:d}=o,m=d!=null&&d.spatialReference?new Z(d.spatialReference):null;l.editedFeatureResults.push({layerId:o.id,editedFeatures:{adds:((y=d==null?void 0:d.adds)==null?void 0:y.map(g=>this._createEditedFeature(g,m)))||[],updates:((p=d==null?void 0:d.updates)==null?void 0:p.map(g=>({original:this._createEditedFeature(g[0],m),current:this._createEditedFeature(g[1],m)})))||[],deletes:((b=d==null?void 0:d.deletes)==null?void 0:b.map(g=>this._createEditedFeature(g,m)))||[],spatialReference:m}})}}return l}_createEditedFeature(t,e){return new B({attributes:t.attributes,geometry:K({...t.geometry,spatialReference:e})})}_createFeatureEditResult(t){const e=t.success===!0?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new E("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}_createAttachmentErrorResult(t,e){const s=e.details.messages&&e.details.messages[0]||e.message,a=e.details.httpStatus||e.details.messageCode;return{objectId:t,globalId:null,error:new E("feature-layer-source:attachment-failure",s,{code:a})}}_getFormDataForAttachment(t,e){const s=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(s)for(const a in e){const r=e[a];r!=null&&(s.set?s.set(a,r):s.append(a,r))}return s}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:s,dynamicDataSource:a}=this.layer;return{...t,query:{gdbVersion:s,layer:a?JSON.stringify({source:a}):void 0,...e.query,f:"json",...this._createRequestQueryOptions(t)},responseType:"json"}}async _filterRedundantAssetMaps(t){const{layer:e}=this,{globalIdField:s,infoFor3D:a,parsedUrl:r}=e;if(a==null||s==null)return t;const u=ee(a);if(u==null)return t;const i=J(r.path,`../${u.id}`),l=new Array,n=new Array;for(const d of t)d.geometry.metadata.getExternalSourcesOnService(r).length>0?n.push(d):l.push(d);const c=n.map(d=>d.getAttribute(s)).filter(v);if(c.length===0)return t;const{assetMapFieldRoles:{parentGlobalId:h,assetHash:y}}=a,p=new ce;p.where=`${h} IN (${c.map(d=>`'${d}'`)})`,p.outFields=[y,h],p.returnGeometry=!1;const b=await le(i,p),{features:o}=b;return o.length===0?t:[...l,...n.filter(d=>{const m=d.getAttribute(s);if(!m)return!0;const{metadata:g}=d.geometry,_=o.filter(f=>f.getAttribute(h)===m);if(_.length===0)return!0;const q=_.map(f=>f.getAttribute(y));return g.getExternalSourcesOnService(r).flatMap(({source:f})=>f.flatMap(S=>S.parts.map(A=>A.partHash))).some(f=>q.every(S=>f!==S))})]}};O([x()],w.prototype,"type",void 0),O([x({constructOnly:!0})],w.prototype,"layer",void 0),O([x({readOnly:!0})],w.prototype,"queryTask",null),w=O([C("esri.layers.graphics.sources.FeatureLayerSource")],w);const fe=1e3,We=w;export{We as default};
