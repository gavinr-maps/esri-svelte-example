import{h as m}from"./Accessor-BmwT4B0c.js";import{e as n,g as p}from"./Point-Cz2JYYmX.js";import{G as t}from"./geometryEngineBase-B0ZyeKAX.js";import{hydratedAdapter as i}from"./hydrated-DcIAHEVL.js";import"./cast-CsZslgGN.js";import"./index-4eY77cms.js";import"./JSONSupport-DcrLLGjL.js";import"./writer-DKgfqj4X.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./Extent-g5W9hy0j.js";import"./Polyline-s-JzsQqo.js";import"./mathUtils-Cfq9PL9W.js";function a(e){const r=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return r?m(p,r):p.WGS84}function V(e){return t.extendedSpatialReferenceInfo(e)}function v(e,r){return n(e),t.clip(i,a(e),e,r)}function z(e,r){return n(e),t.cut(i,a(e),e,r)}function H(e,r){return n(e),n(r),t.contains(i,a(e),e,r)}function I(e,r){return n(e),n(r),t.crosses(i,a(e),e,r)}function J(e,r,o){return n(e),n(r),t.distance(i,a(e),e,r,o)}function N(e,r){return n(e),n(r),t.equals(i,a(e),e,r)}function O(e,r){return n(e),n(r),t.intersects(i,a(e),e,r)}function b(e,r){return n(e),n(r),t.touches(i,a(e),e,r)}function j(e,r){return n(e),n(r),t.within(i,a(e),e,r)}function q(e,r){return n(e),n(r),t.disjoint(i,a(e),e,r)}function B(e,r){return n(e),n(r),t.overlaps(i,a(e),e,r)}function C(e,r,o){return n(e),n(r),t.relate(i,a(e),e,r,o)}function E(e){return n(e),t.isSimple(i,a(e),e)}function G(e){return n(e),t.simplify(i,a(e),e)}function P(e,r=!1){return t.convexHull(i,a(e),e,r)}function W(e,r){return n(r),t.difference(i,a(e),e,r)}function k(e,r){return n(r),t.symmetricDifference(i,a(e),e,r)}function F(e,r){return n(r),t.intersect(i,a(e),e,r)}function K(e){return t.union(i,a(e),e)}function M(e,r,o,s,c,f){return t.offset(i,a(e),e,r,o,s,c,f)}function Q(e,r,o,s=!1){return t.buffer(i,a(e),e,r,o,s)}function U(e,r,o,s,c,f){return t.geodesicBuffer(i,a(e),e,r,o,s,c,f)}function X(e,r,o=!0){return n(e),t.nearestCoordinate(i,a(e),e,r,o)}function Y(e,r){return n(e),t.nearestVertex(i,a(e),e,r)}function Z(e,r,o,s){return n(e),t.nearestVertices(i,a(e),e,r,o,s)}function l(e){var r;return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?((r=e.extent)==null?void 0:r.center)??null:null}function _(e,r,o){if(e==null)throw new u;const s=e.spatialReference;if((o=o??l(e))==null)throw new u;const c=e.constructor.fromJSON(t.rotate(e,r,o));return c.spatialReference=s,c}function $(e,r){if(e==null)throw new u;const o=e.spatialReference;if((r=r??l(e))==null)throw new u;const s=e.constructor.fromJSON(t.flipHorizontal(e,r));return s.spatialReference=o,s}function ee(e,r){if(e==null)throw new u;const o=e.spatialReference;if((r=r??l(e))==null)throw new u;const s=e.constructor.fromJSON(t.flipVertical(e,r));return s.spatialReference=o,s}function re(e,r,o,s){return n(e),t.generalize(i,a(e),e,r,o,s)}function te(e,r,o){return n(e),t.densify(i,a(e),e,r,o)}function ne(e,r,o,s=0){return n(e),t.geodesicDensify(i,a(e),e,r,o,s)}function ie(e,r){return n(e),t.planarArea(i,a(e),e,r)}function ae(e,r){return n(e),t.planarLength(i,a(e),e,r)}function oe(e,r,o){return n(e),t.geodesicArea(i,a(e),e,r,o)}function se(e,r,o){return n(e),t.geodesicLength(i,a(e),e,r,o)}function ce(e,r){return t.intersectLinesToPoints(i,a(e),e,r)}function ue(e,r){t.changeDefaultSpatialReferenceTolerance(e,r)}function fe(e){t.clearDefaultSpatialReferenceTolerance(e)}class u extends Error{constructor(){super("Illegal Argument Exception")}}export{Q as buffer,ue as changeDefaultSpatialReferenceTolerance,fe as clearDefaultSpatialReferenceTolerance,v as clip,H as contains,P as convexHull,I as crosses,z as cut,te as densify,W as difference,q as disjoint,J as distance,N as equals,V as extendedSpatialReferenceInfo,$ as flipHorizontal,ee as flipVertical,re as generalize,oe as geodesicArea,U as geodesicBuffer,ne as geodesicDensify,se as geodesicLength,F as intersect,ce as intersectLinesToPoints,O as intersects,E as isSimple,X as nearestCoordinate,Y as nearestVertex,Z as nearestVertices,M as offset,B as overlaps,ie as planarArea,ae as planarLength,C as relate,_ as rotate,G as simplify,k as symmetricDifference,b as touches,K as union,j as within};
