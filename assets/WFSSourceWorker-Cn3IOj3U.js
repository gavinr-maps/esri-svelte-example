import{a as T}from"./reactiveUtils-XM7cS2OP.js";import{s as d,D as c,B as g,U as y,E as C}from"./Accessor-BmwT4B0c.js";import{c as E}from"./Point-Cz2JYYmX.js";import{s as q,u as P}from"./featureConversionUtils-CvnFcmH_.js";import{u as I}from"./executeQueryForSnapping-DWE9tz1Z.js";import{f as $}from"./FeatureStore-BuDu5Iw5.js";import{x as b,j}from"./queryUtils-DBEPdow2.js";import{L as N}from"./QueryEngine-BokU27l9.js";import{E as O,N as Q}from"./geojson-C9Ip3oRW.js";import{g as M}from"./sourceUtils-BFhZjJqS.js";import{o as k,e as L,K as _}from"./wfsUtils-QowjOM_s.js";import{Z as U}from"./FieldsIndex-FW1AMU67.js";import{n as A}from"./opacityUtils-Dim20wpZ.js";import{n as Z}from"./Promise-DfET-uns.js";import"./Evented-Dw4_VOGn.js";import"./SimpleObservable-CvOkykwM.js";import"./cast-CsZslgGN.js";import"./index-4eY77cms.js";import"./JSONSupport-DcrLLGjL.js";import"./writer-DKgfqj4X.js";import"./aaBoundingBox-Dw3yBk2f.js";import"./Extent-g5W9hy0j.js";import"./Polyline-s-JzsQqo.js";import"./mathUtils-Cfq9PL9W.js";import"./jsonUtils-CwFG8yN4.js";import"./OptimizedFeature-P2towpqD.js";import"./memoryEstimations-Bcyf-mHz.js";import"./OptimizedGeometry-BJqUA4Pi.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./normalizeUtils-BTGdXlpz.js";import"./normalizeUtilsCommon-lGDszWRI.js";import"./utils-YowqfOgk.js";import"./utils-B-dlKIhi.js";import"./timeSupport-C7DiFkF_.js";import"./BoundsStore-CI-maf3v.js";import"./PooledRBush--ue4CxG1.js";import"./quickselect-QQC62dOK.js";import"./optimizedFeatureQueryEngineAdapter-D7doR0mc.js";import"./projection-CyCZAIaD.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import"./json-Wa8cmqdu.js";import"./WhereClauseCache-CJbuf62r.js";import"./LRUCache-CXiGQWMN.js";import"./MemCache-CmojB_Z1.js";import"./WhereClause-xGR0ztic.js";import"./TimeOnly-CveCl9ie.js";import"./fieldType-CBeoJWlv.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./timeUtils-C1c_L2Fd.js";import"./quantizationUtils-DgFbqZi7.js";import"./utils-Co_tyUES.js";import"./screenUtils-_ZIvrt5o.js";import"./heatmapUtils-Cyq-bAyG.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-v4CMtYiY.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./intl-Duiy0OzY.js";import"./timeZoneUtils-DxzjpEBb.js";import"./utils-Dyua10sr.js";import"./ClassBreaksDefinition-C7KVmBug.js";import"./enumeration-DpvDkLNI.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-ZfcJap1f.js";import"./NormalizationBinParametersMixin-CZD0XfhN.js";import"./Clonable-Z-AWS-16.js";import"./Scheduler-i_u8qdlN.js";import"./signal-CySMLEX9.js";import"./debugFlags-B1LM_Apo.js";import"./date-Ctp1FiBW.js";import"./typeUtils-B6WBEKDM.js";import"./xmlUtils-CtUoQO7q.js";import"./Field-BDG0QV_T.js";const x="esri.layers.WFSLayer";class ce{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:r,getFeatureOutputFormat:o,fields:i,geometryType:u,featureType:s,maxRecordCount:n,maxTotalRecordCount:l,maxPageCount:R,objectIdField:f,customParameters:F}=t,{spatialReference:p,getFeatureSpatialReference:h}=k(r,s,t.spatialReference);try{await b(h,p)}catch{throw new d("unsupported-projection","Projection not supported",{inSpatialReference:h,outSpatialReference:p})}c(e),this._customParameters=F,this._featureType=s,this._fieldsIndex=U.fromLayerJSON({fields:i,dateFieldsTimeReference:i.some(S=>S.type==="esriFieldTypeDate")?{timeZoneIANA:Z}:null}),this._geometryType=u,this._getFeatureUrl=r,this._getFeatureOutputFormat=o,this._getFeatureSpatialReference=h,this._maxRecordCount=n,this._maxTotalRecordCount=l,this._maxPageCount=R,this._objectIdField=f,this._spatialReference=p;let m=await this._snapshotFeatures(e);if(m.errors.length>0&&(this._supportsPagination=!1,m=await this._snapshotFeatures(e),m.errors.length>0))throw m.errors[0];return this._queryEngine=new N({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,objectIdField:f,spatialReference:p,timeInfo:null,featureStore:new $({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(m.features),{warnings:w(m),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new d("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(A)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),I(this._queryEngine,t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(t){var e;return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,(e=this._snapshotTask)==null||e.abort(),this._snapshotTask=T(r=>this._snapshotFeatures({signal:r})),this._snapshotTask.promise.then(r=>{var o;this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(r.features);for(const i of w(r))g.getLogger(x).warn(new y("wfs-layer:refresh-warning",i.message,i.details));(o=r.errors)!=null&&o.length&&g.getLogger(x).warn(new y("wfs-layer:refresh-error","Refresh completed with errors",{errors:r.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t==null?void 0:t.signal,r=this._maxTotalRecordCount,o=this._maxPageCount,i=this._supportsPagination?await L(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let u=[];const s=[];if(i==null)try{u=await this._singleQuery(e)}catch(n){C(n)||s.push(n)}else{const n=Math.min(i,r),l=J(this,Math.max(1,Math.min(Math.ceil(n/this._maxRecordCount),o)),e);await Promise.allSettled(Array.from({length:10}).map(()=>v(l,u,s)))}return c(e),{features:u,totalRecordCount:i,maxTotalRecordCount:r,maxPageCount:o,errors:s}}async _singleQuery(t){const e=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(e,{signal:t})}async _pageQuery(t,e){const r=t*this._maxRecordCount,o=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:r,count:this._maxRecordCount,signal:e});return this._processGeoJSON(o,{startIndex:r,signal:e})}_processGeoJSON(t,e){O(t,this._getFeatureSpatialReference.wkid);const{startIndex:r,signal:o}=e;c(o);const i=Q(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!E(this._spatialReference,this._getFeatureSpatialReference))for(const s of i)s.geometry!=null&&(s.geometry=q(j(P(s.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=r??1;for(const s of i){const n={};M(this._fieldsIndex,n,s.attributes,!0),s.attributes=n,n[this._objectIdField]==null&&(s.objectId=n[this._objectIdField]=u++)}return i}}function*J(a,t,e){for(let r=0;r<t;r++)yield a._pageQuery(r,e)}async function v(a,t,e){let r=a.next();for(;!r.done;){try{const o=await r.value;t.push(...o)}catch(o){C(o)||e.push(o)}r=a.next()}}function w(a){const t=[];return a.totalRecordCount!=null&&(a.features.length<a.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${a.features.length} of ${a.totalRecordCount} in ${a.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount}}),a.totalRecordCount>a.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${a.totalRecordCount} features exceeds the maximum allowed of ${a.maxTotalRecordCount}.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount,maxTotalRecordCount:a.maxTotalRecordCount}})),t}export{ce as default};
