import{E as c,B as y,r as u,m as w,a as g}from"./Accessor-BHnuXKD2.js";import{c as s}from"./Point-XGrwlf63.js";import{r as I,n as f}from"./imageUtils-2R_Ot9YP.js";import{S}from"./LayerView2D-BMuowJAc.js";import{h as T,p as V,r as v}from"./TileStrategy-DlGVvP4C.js";import{e as d}from"./TileKey-BtGhNUzq.js";import{y as x}from"./LayerView-DF8EqCYi.js";import{i as M}from"./RefreshableLayerView-Digmhts2.js";import{g as q}from"./Scheduler-B_GuBefw.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./writer-B2bQV2uU.js";import"./Polyline-BmuD2-ZN.js";import"./Extent-CBBGeHb-.js";import"./mathUtils-DV9iOXpW.js";import"./DefaultUI-DqLHkAzt.js";import"./reactiveUtils-BR0C1Kq4.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./jsxFactory-CLjKarlq.js";import"./intl-Do3GEEJ7.js";import"./Promise-CmQqe-ke.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-ptqz1ck8.js";import"./InputManager-Bs9UE-jw.js";import"./Queue-BOnccek2.js";import"./signal-DSa0yokC.js";import"./Basemap-BHdJ6wQH.js";import"./collectionUtils-CbaToa73.js";import"./Portal-CTRRujjZ.js";import"./loadAll-Do8S8AWH.js";import"./PortalItem-CXk7DqVv.js";import"./basemapDefinitions-BmB40s1J.js";import"./writeUtils-C3ZSK02Z.js";import"./layerUtils-dJgsXxkC.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./enumeration-Cr5WIZs4.js";import"./groundInstanceUtils-Ben03ZCf.js";import"./opacityUtils-CSd4XoR2.js";import"./CollectionFlattener-B9CFCLSp.js";import"./editableLayers-BZGjz8nI.js";import"./catalogUtils-CK4eMvD1.js";import"./basemapEnsureType-BVU7UGJp.js";import"./basemapUtils-DQr5T1wn.js";import"./utils-DYurMneM.js";import"./screenUtils-_ZIvrt5o.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./vec3f64-BLpZdpfb.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BzMj7HDl.js";import"./Layer-C9uQlTBT.js";import"./Identifiable-BrT7zvUW.js";import"./TimeExtent-J5qnUFx_.js";import"./timeUtils-D2X862bk.js";import"./GraphicsCollection-CkliHSk1.js";import"./Graphic-CFXUQZlS.js";import"./Clonable-DvJsj5LF.js";import"./ActionToggle-__-l4AdQ.js";import"./jsonUtils-Cu7OBRmN.js";import"./typeUtils-BSg8Y507.js";import"./TextSymbol-BQ_NW9Xo.js";import"./aaBoundingBox-CeBivBRq.js";import"./HeightModelInfo-B3GZyQFz.js";import"./timeZoneUtils-COos5xIr.js";import"./ReactiveMap-Dwhwbx9R.js";import"./Query-DCBIeen2.js";import"./Field-Cyk7Ur5d.js";import"./fieldType-L-VlbZqy.js";import"./FullTextSearch-BWm_kPUE.js";import"./selectionUtils-DYi6daQO.js";import"./ViewEvents-Hl5AOQnu.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-DyhV4TAA.js";import"./HighlightDefaults-ESbuT2uR.js";import"./a11yUtils-CSYUX1kC.js";import"./heightModelInfoUtils-CMg1cdju.js";import"./ViewingMode-Dodu7ZZk.js";import"./projection-B2I9Bzj_.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./vec32-Dvg_eL9J.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-brik-GLm.js";import"./capabilities-DwlKKScG.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-rIBXQ52V.js";import"./CompassViewModel-BAJa4WdS.js";import"./GoTo-BsXOAO95.js";import"./ZoomViewModel-BZXEbLSs.js";import"./BitmapTechnique-BNS3S4LA.js";import"./mat3-CR8GKnhD.js";import"./vec2f32-BbH2jxlN.js";import"./DisplayObject-S19ALweP.js";import"./enums-D9v74xTE.js";import"./Texture-D-SqNa4i.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./definitions-LJaw2n5Z.js";import"./GraphShaderModule-CNt-QO7Z.js";import"./View2D-CIpCSKxG.js";import"./Viewpoint-Cv8Otrne.js";import"./Camera-DJtV7zYb.js";import"./Cyclical-CPiNl4ru.js";import"./workers-D8Q3pEzK.js";import"./TileInfo-CRfZy5zq.js";import"./TileKey-DZd6gJy7.js";import"./vec2-maR1OrZI.js";import"./vec2f64-Dy6m9Nrb.js";import"./viewpointUtils-DmJh_Ev7.js";import"./mat2d-D9DBP-jx.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-XRAPXbWa.js";import"./normalizeUtilsCommon-D0zPTJCj.js";import"./utils-Cy8wFNQo.js";import"./utils-CkSELPnj.js";import"./mat2df32-orApM5a3.js";import"./Tile-CkUxg4dk.js";import"./quickselect-QQC62dOK.js";import"./utils-D02V2_jH.js";import"./Version-9k2AOv05.js";import"./FramebufferObject-DHwDHMWe.js";import"./BufferObject-CIl3vJtA.js";import"./memoryEstimations-5gFNwkKK.js";import"./Program-DD6La1z3.js";import"./ShaderBuilder-DV1s2efh.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-uMFRS8dR.js";import"./DefaultVertexAttributeLayouts-DMsCtEEh.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./TileContainer-CLAMojvR.js";import"./WGLContainer-Bm0UZ79M.js";import"./dataViewUtils-CH0QMRr9.js";import"./BoundingBox-CnpCxTZE.js";import"./WGLBrushVTLSymbol-DhI09LJn.js";import"./StyleDefinition-DxJzQnGW.js";import"./enums-BJSSbDkD.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-C4sWoKdv.js";import"./vec3f32-nZdmKIgz.js";import"./Container-C9XOJkyO.js";import"./EffectView-BDbE94Th.js";import"./jsonUtils-TjZmCq6l.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-DpmsPUmt.js";import"./OptimizedFeature-DcMLlxvB.js";import"./OptimizedGeometry-7IxBWtHr.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./utils-BQBvadb7.js";import"./ClipRect-XfrmCbGe.js";import"./layerViewUtils-tkZ5z_iY.js";import"./ScheduledQueueProcessor-DfrR8pp0.js";import"./debugFlags-ZrDyTcDc.js";const R=[0,0];let o=class extends M(I(S(x))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){var r;const{activeLayer:t}=this.layer,{tileMatrixSet:i}=t;if(i&&s((r=i.tileInfo)==null?void 0:r.spatialReference,this.view.spatialReference))return i;const e=this._getTileMatrixSetBySpatialReference(t);return e&&e.id!==t.tileMatrixSetId?(t.tileMatrixSetId=e.id,e):null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume()}attach(){var i;const t=(i=this.tileMatrixSet)==null?void 0:i.tileInfo;t&&(this._tileInfoView=new T(t),this._fetchQueue=new V({tileInfoView:this._tileInfoView,concurrency:16,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:q.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new v({cachePolicy:"keep",resampling:!0,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add(()=>{var e,r;return[(r=(e=this.layer)==null?void 0:e.activeLayer)==null?void 0:r.styleId,this.tileMatrixSet]},()=>this.doRefresh())),super.attach())}detach(){var t,i;super.detach(),(t=this._tileStrategy)==null||t.destroy(),(i=this._fetchQueue)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return((i=this.layer.activeLayer.tileMatrixSets)==null?void 0:i.some(e=>{var r;return s((r=e.tileInfo)==null?void 0:r.spatialReference,t)}))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(R,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:a=0}=i;if(!e)return this._fetchImage(t,r);const p=new d(0,0,0,0);let l;try{await e.fetchAvailabilityUpsample(t.level,t.row,t.col,p,{signal:r}),l=await this._fetchImage(p,r)}catch(m){if(c(m))throw m;if(a<3){const h=this._tileInfoView.getTileParentId(t.id);if(h){const n=new d(h),_=await this.fetchTile(n,{...i,resamplingLevel:a+1});return f(this._tileInfoView,_,n,t)}}throw m}return f(this._tileInfoView,l,p,t)}canResume(){const t=super.canResume();return t&&this.tileMatrixSet!==null}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){c(i)||y.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}_getTileMatrixSetBySpatialReference(t){var i;return(i=t.tileMatrixSets)==null?void 0:i.find(e=>{var r;return s((r=e.tileInfo)==null?void 0:r.spatialReference,this.view.spatialReference)})}};u([w({readOnly:!0})],o.prototype,"tileMatrixSet",null),o=u([g("esri.views.2d.layers.WMTSLayerView2D")],o);const ve=o;export{ve as default};
