import{r as n,m as c,a as R,k as O,B as S,s as h}from"./Accessor-BHnuXKD2.js";import{M as T,d as L,N as j,S as P,O as K,I as U,P as g}from"./cast-BA_-jlhc.js";import{o as y,r as V}from"./writer-B2bQV2uU.js";import{i as N}from"./originUtils-D69mHv66.js";import{w}from"./Extent-CBBGeHb-.js";import{v as C}from"./HeightModelInfo-B3GZyQFz.js";import{g as b}from"./Point-XGrwlf63.js";import{u as M,y as q}from"./commonProperties-C0eC30J9.js";import{r as z}from"./I3SIndexInfo-DP6w_-xh.js";import{C as J}from"./Portal-CTRRujjZ.js";import k from"./PortalItem-CXk7DqVv.js";import{o as A}from"./jsonContext-CdRtpU_S.js";import{p as F,n as B}from"./resourceUtils-sguC8912.js";import{t as D}from"./saveUtils-DLMLWtvP.js";let Z=null;function H(){return Z}const pe=s=>{let a=class extends s{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=O(async(t,e,i)=>{switch(t){case v.SAVE:return this._save(e);case v.SAVE_AS:return this._saveAs(i,e)}})}readSpatialReference(t,e){return I(e)}readFullExtent(t,e,i){if(t!=null&&typeof t=="object"){const o=t.spatialReference==null?{...t,spatialReference:I(e)}:t;return w.fromJSON(o,i)}const r=e.store,l=I(e);return l==null||(r==null?void 0:r.extent)==null||!Array.isArray(r.extent)||r.extent.some(o=>o<x)?null:new w({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:l})}parseVersionString(t){const e={major:Number.NaN,minor:Number.NaN,versionString:t},i=t.split(".");return i.length>=2&&(e.major=parseInt(i[0],10),e.minor=parseInt(i[1],10)),e}readVersion(t,e){const i=e.store,r=i.version!=null?i.version.toString():"";return this.parseVersionString(r)}readTitlePortalItem(t){return this.sublayerTitleMode!=="item-title"?void 0:t}readTitleService(t,e){var l;const i=(l=this.portalItem)==null?void 0:l.title;if(this.sublayerTitleMode==="item-title")return this.url?T(this.url,e.name):e.name;let r=e.name;if(!r&&this.url){const o=L(this.url);o!=null&&(r=o.title)}return this.sublayerTitleMode==="item-title-and-service-name"&&i&&(r=i+" - "+r),j(r)}set url(t){if(t==null)return void this._set("url",t);const e=P({layer:this,url:t,nonStandardUrlAllowed:!1,logger:S.getLogger(this)});this._set("url",e.url),e.layerId!=null&&this._set("layerId",e.layerId)}writeUrl(t,e,i,r){K(this,t,"layers",e,r)}get parsedUrl(){const t=this._get("url"),e=U(t);return e&&this.layerId!=null&&(e.path=`${e.path}/layers/${this.layerId}`),e}async _fetchIndexAndUpdateExtent(t,e){var i;this.indexInfo=z(((i=this.parsedUrl)==null?void 0:i.path)??"",this.rootNode,t,this.customParameters,this.apiKey,S.getLogger(this),e),this.fullExtent==null||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(t){var e,i,r,l;if((t==null?void 0:t.type)==="page"){const o=t.rootIndex%t.pageSize,p=(i=(e=t.rootPage)==null?void 0:e.nodes)==null?void 0:i[o];if(((r=p==null?void 0:p.obb)==null?void 0:r.center)==null||p.obb.halfSize==null)throw new h("sceneservice:invalid-node-page","Invalid node page.");if(p.obb.center[0]<x||this.fullExtent==null||this.fullExtent.hasZ)return;const d=p.obb.halfSize,u=p.obb.center[2],f=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);this.fullExtent.zmin=u-f,this.fullExtent.zmax=u+f}else if((t==null?void 0:t.type)==="node"){const o=(l=t.rootNode)==null?void 0:l.mbs;if(!Array.isArray(o)||o.length!==4||o[0]<x)return;const p=o[2],d=o[3],{fullExtent:u}=this;u&&(u.zmin=p-d,u.zmax=p+d)}}async _fetchService(t){if(this.url==null)throw new h("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(this.layerId==null&&/SceneServer\/*$/i.test(this.url)){const e=await this._fetchFirstLayerId(t);e!=null&&(this.layerId=e)}return this._fetchServiceLayer(t)}async _fetchFirstLayerId(t){const e=await g(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t});if(e.data&&Array.isArray(e.data.layers)&&e.data.layers.length>0)return e.data.layers[0].id}async _fetchServiceLayer(t){var l;const e=await g(((l=this.parsedUrl)==null?void 0:l.path)??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t});e.ssl&&this.url&&(this.url=this.url.replace(/^http:/i,"https:"));let i=!1;if(e.data.layerType&&e.data.layerType==="Voxel"&&(i=!0),i)return this._fetchVoxelServiceLayer();const r=e.data;this.read(r,this._getServiceContext()),this.validateLayer(r)}async _fetchVoxelServiceLayer(t){var i;const e=(await g(((i=this.parsedUrl)==null?void 0:i.path)+"/layer",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t})).data;this.read(e,this._getServiceContext()),this.validateLayer(e)}_getServiceContext(){var t;return{origin:"service",portalItem:this.portalItem,portal:(t=this.portalItem)==null?void 0:t.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&typeof this.beforeSave=="function"&&await this.beforeSave()}validateLayer(t){}async _saveAs(t,e){const i={...$,...e};let r=k.from(t);if(!r)throw new h("sceneservice:portal-item-required","_saveAs() requires a portal item to save to");r.id&&(r=r.clone(),r.id=null);const l=r.portal||J.getDefault();await this._ensureLoadBeforeSave(),r.type=_,r.portal=l;const o=A(r,"portal-item",!0),p={layers:[this.write({},o)]};return await Promise.all(o.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(p,o,i),this.url&&(r.url=this.url),r.title||(r.title=this.title),E(r,i,m.newItem),await l.signIn(),await l.user.addItem({item:r,folder:i==null?void 0:i.folder,data:p}),await F(this.resourceReferences,o),this.portalItem=r,N(o),o.portalItem=r,r}async _save(t){const e={...$,...t};if(!this.portalItem)throw new h("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==_)throw new h("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${_}"`);await this._ensureLoadBeforeSave();const i=A(this.portalItem,"portal-item",!0),r={layers:[this.write({},i)]};return await Promise.all(i.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(r,i,e),this.url&&(this.portalItem.url=this.url),this.portalItem.title||(this.portalItem.title=this.title),E(this.portalItem,e,m.existingItem),await B(this.portalItem,r,this.resourceReferences,i),N(i),this.portalItem}async _validateAgainstJSONSchema(t,e,i){const r=i==null?void 0:i.validationOptions;D(e,{errorName:"sceneservice:save"},{ignoreUnsupported:r==null?void 0:r.ignoreUnsupported,supplementalUnsupportedErrors:["scenemodification:unsupported"]});const l=r==null?void 0:r.enabled,o=H();if(l&&o){const p=(await o()).validate(t,i.portalItemLayerType);if(!p.length)return;const d=`Layer item did not validate:
${p.join(`
`)}`;if(S.getLogger(this).error(`_validateAgainstJSONSchema(): ${d}`),r.failPolicy==="throw"){const u=p.map(f=>new h("sceneservice:schema-validation",f));throw new h("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{validationErrors:u})}}}};return n([c(M)],a.prototype,"id",void 0),n([c({type:b})],a.prototype,"spatialReference",void 0),n([y("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],a.prototype,"readSpatialReference",null),n([c({type:w})],a.prototype,"fullExtent",void 0),n([y("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],a.prototype,"readFullExtent",null),n([c({readOnly:!0,type:C})],a.prototype,"heightModelInfo",void 0),n([c({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],a.prototype,"minScale",void 0),n([c({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],a.prototype,"maxScale",void 0),n([c({readOnly:!0})],a.prototype,"version",void 0),n([y("version",["store.version"])],a.prototype,"readVersion",null),n([c({type:String,json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),n([c({type:String,json:{read:!1}})],a.prototype,"sublayerTitleMode",void 0),n([c({type:String})],a.prototype,"title",void 0),n([y("portal-item","title")],a.prototype,"readTitlePortalItem",null),n([y("service","title",["name"])],a.prototype,"readTitleService",null),n([c({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],a.prototype,"layerId",void 0),n([c(q)],a.prototype,"url",null),n([V("url")],a.prototype,"writeUrl",null),n([c()],a.prototype,"parsedUrl",null),n([c({readOnly:!0})],a.prototype,"store",void 0),n([c({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],a.prototype,"rootNode",void 0),a=n([R("esri.layers.mixins.SceneService")],a),a},x=-1e38;function I(s){if(s.spatialReference!=null)return b.fromJSON(s.spatialReference);const a=s.store,t=a.indexCRS||a.geographicCRS,e=t&&parseInt(t.slice(t.lastIndexOf("/")+1),10);return e!=null?new b(e):null}function E(s,a,t){s.typeKeywords||(s.typeKeywords=[]);const e=a.getTypeKeywords();for(const i of e)s.typeKeywords.push(i);s.typeKeywords&&(s.typeKeywords=s.typeKeywords.filter((i,r,l)=>l.indexOf(i)===r),t===m.newItem&&(s.typeKeywords=s.typeKeywords.filter(i=>i!=="Hosted Service")))}var m;(function(s){s[s.existingItem=0]="existingItem",s[s.newItem=1]="newItem"})(m||(m={}));const _="Scene Service",$={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var v;(function(s){s[s.SAVE=0]="SAVE",s[s.SAVE_AS=1]="SAVE_AS"})(v||(v={}));export{pe as R,v as V};
