import{B as m,r as e,m as r,a as l,L as u}from"./Accessor-BmwT4B0c.js";import{a as d}from"./Clonable-Z-AWS-16.js";import{o as y}from"./cast-CsZslgGN.js";import{S as c}from"./JSONSupport-DcrLLGjL.js";import{r as i}from"./enumeration-DpvDkLNI.js";import{g as n}from"./Point-Cz2JYYmX.js";import{f as h}from"./jsonUtils-CwFG8yN4.js";import{l as f}from"./typeUtils-B6WBEKDM.js";import{g as p}from"./queryUtils-DBEPdow2.js";import{c as v,m as w,u as b,a as g,b as j}from"./FixedIntervalBinParameters-ZfcJap1f.js";import{m as S,s as R}from"./Query-B_2mhyL4.js";import{p as T}from"./TimeExtent-BO6BsF_x.js";import{p as $}from"./timeZoneUtils-DxzjpEBb.js";import"./index-4eY77cms.js";import"./writer-DKgfqj4X.js";import"./Extent-g5W9hy0j.js";import"./Polyline-s-JzsQqo.js";import"./mathUtils-Cfq9PL9W.js";import"./projection-CyCZAIaD.js";import"./SimpleObservable-CvOkykwM.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import"./normalizeUtils-BTGdXlpz.js";import"./normalizeUtilsCommon-lGDszWRI.js";import"./utils-YowqfOgk.js";import"./utils-B-dlKIhi.js";import"./json-Wa8cmqdu.js";import"./NormalizationBinParametersMixin-CZD0XfhN.js";import"./Field-BDG0QV_T.js";import"./fieldType-CBeoJWlv.js";import"./FullTextSearch-CBnxSwz4.js";import"./timeUtils-C1c_L2Fd.js";import"./Promise-DfET-uns.js";const B=new y({asc:"ascending",desc:"descending"}),x={base:j,key:"type",typeMap:{"auto-interval":g,date:b,"fixed-boundaries":w,"fixed-interval":v}};let t=class extends d.ClonableMixin(c){constructor(o){super(o),this.binParameters=null,this.binOrder="ascending",this.cacheHint=void 0,this.datumTransformation=null,this.defaultSpatialReference=null,this.distance=void 0,this.geometry=null,this.lowerBoundaryAlias=null,this.outSpatialReference=null,this.outStatistics=null,this.returnDistinctValues=null,this.spatialRelationship="intersects",this.timeExtent=null,this.upperBoundaryAlias=null,this.units=null,this.where="1=1"}set outTimeZone(o){this._set("outTimeZone",o),o&&!$(o)&&m.getLogger(this).warn("#outTimeZone",`the parsed value '${o}' may not be a valid IANA time zone`)}};e([r({types:x,json:{name:"bin",write:!0}})],t.prototype,"binParameters",void 0),e([i(B)],t.prototype,"binOrder",void 0),e([r({type:Boolean,json:{write:!0}})],t.prototype,"cacheHint",void 0),e([r({json:{write:!0}})],t.prototype,"datumTransformation",void 0),e([r({type:n,json:{name:"defaultSR",write:!0}})],t.prototype,"defaultSpatialReference",void 0),e([r({type:Number,json:{write:{overridePolicy:o=>({enabled:o>0})}}})],t.prototype,"distance",void 0),e([r({types:f,json:{read:h,write:!0}})],t.prototype,"geometry",void 0),e([r({type:String,json:{write:!0}})],t.prototype,"lowerBoundaryAlias",void 0),e([r({type:n,json:{name:"outSR",write:!0}})],t.prototype,"outSpatialReference",void 0),e([r({type:[S],json:{write:{enabled:!0,overridePolicy(){return{enabled:this.outStatistics!=null&&this.outStatistics.length>0}}}}})],t.prototype,"outStatistics",void 0),e([r({value:null,json:{name:"outTimeReference",read:{reader:o=>o.ianaTimeZone},write:{writer:(o,a,s)=>{o&&(a[s]={ianaTimeZone:o})}}}})],t.prototype,"outTimeZone",null),e([r({type:Boolean,json:{write:!0}})],t.prototype,"returnDistinctValues",void 0),e([i(R,{name:"spatialRel"})],t.prototype,"spatialRelationship",void 0),e([r({type:T,json:{write:!0}})],t.prototype,"timeExtent",void 0),e([r({type:String,json:{write:!0}})],t.prototype,"upperBoundaryAlias",void 0),e([r({type:String,json:{read:p.read,write:{writer:p.write,overridePolicy(o){return{enabled:o!=null&&this.distance!=null}}}}})],t.prototype,"units",void 0),e([r({type:String,json:{write:!0}})],t.prototype,"where",void 0),t=e([l("esri.rest.support.AttributeBinsQuery")],t);const st=t;t.from=u(t);export{st as default};
