import{r as T}from"./tslib.es6-B3Jf3DVX.js";import"./geometry-D964gYQX.js";import{V as tt}from"./Collection-CEdjem1-.js";import{b as K,n as G,r as Lt,m as N,a as Dt}from"./subclass-BZA_h8Db.js";import{S as xt}from"./MultiOriginJSONSupport-B5nfqtQh.js";import{s as _t,d as Ct}from"./Accessor-BLX9ikPh.js";import{watch as Rt,sync as At}from"./reactiveUtils-C5zUhJQJ.js";import Ot from"./Layer-CVt7Hb5J.js";import{o as V}from"./featureConversionUtils-D14h8iad.js";import{s as vt}from"./OptimizedGeometry-BF8iz5FO.js";import{u as Y,E as St,A as Gt,b as Pt,v as Ht,L as Ft,m as $t,h as Ut,a as Bt,f as zt,d as x,s as F,t as X,r as Z,e as jt,n as I,o as Mt,g as Wt,c as bt,i as Qt}from"./KnowledgeGraphSublayer-BsOhlWzV.js";import{l as Vt}from"./BlendLayer-CXM4n_Ge.js";import{b as Yt}from"./OperationalLayer-CVyVfSPu.js";import{t as qt}from"./ScaleRangeLayer-Bb8Ig1Hz.js";import{F as Jt}from"./knowledgeGraphService-9oFvDyoC.js";import{w as wt}from"./Extent-Bf3YTe7m.js";import{j as st}from"./Point-Cg0-ChZE.js";import{d as kt}from"./Polyline-D9YkgmM_.js";import"./jsonMap-0cxwUWs2.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./asyncUtils-CWX51uTe.js";import"./Identifiable-B1UbsKNt.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./TimeExtent-DocT5yPf.js";import"./timeUtils-8fb_2oAt.js";import"./date-DlqISzcw.js";import"./locale-C9TlLpzi.js";import"./writer-DNAwXnhG.js";import"./mathUtils-C4_ghTv4.js";import"./cast-Bjksrh93.js";import"./aaBoundingBox-BE7cC1jD.js";import"./jsonUtils-CEfjT-BK.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./fieldUtils-tmQlKvWo.js";import"./intl-CChhNOV8.js";import"./messages-OmQvZhAg.js";import"./projection-B971H0Re.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./Graphic-DsxsIjhH.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./enumeration-Ba5njXdz.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./screenUtils-_ZIvrt5o.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./Portal-C10FKnaA.js";import"./GraphicsLayer-i3FeUJ_n.js";import"./GraphicsCollection-FfahqxsR.js";import"./ElevationInfo-CA5m_tHv.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";import"./jsonUtils-CSnQD004.js";import"./parser-CTsgEym6.js";import"./utils-93yNk4Xc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./common-DQOJ18NT.js";import"./GraphQueryStreaming-BltM_QD2.js";import"./Query-5Xpquc1r.js";import"./DataLayerSource-BKkswDvG.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./FullTextSearch-Csd1Hktu.js";import"./ClassBreaksRenderer-BuHwSyVK.js";import"./UniqueValueRenderer-BQtAHUSo.js";import"./diffUtils-BP7jmOAy.js";import"./colorRamps-pKd7I5WZ.js";import"./SizeVariable-936USOrb.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DX1kS9Se.js";import"./compilerUtils-Dw3R0f-Z.js";import"./ColorStop-Dk3U5tCk.js";import"./jsonUtils-Ds2Sqto-.js";import"./layerUtils-BrNoooE9.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./RendererLegendOptions-B-4se3aU.js";import"./styleUtils-BYTm14n3.js";import"./jsonUtils-DxpLMo6d.js";import"./LRUCache-B_PHMSGm.js";import"./MemCache-Dx1v3xLC.js";import"./Version-BSlAgupz.js";import"./FieldsIndex-DpwHKAMX.js";import"./UnknownTimeZone-BkowvBs8.js";import"./OverrideHelper-ti072FkP.js";import"./colorUtils-aL8wj-8G.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./utils-D2PLyMFF.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-uj_P09aO.js";import"./HeatmapColorStop-BJc5nbwr.js";import"./heatmapUtils-Dwiv9IEa.js";import"./SimpleRenderer-BV2L9G_n.js";import"./workers-D4HfeYKj.js";import"./Queue-yu3bZ02p.js";import"./FeatureStore-Dr0GQdbp.js";import"./BoundsStore-BhV7QrYA.js";import"./PooledRBush-D7s4d_Fs.js";import"./quickselect-QQC62dOK.js";import"./timeSupport-T1g9-JyG.js";import"./queryUtils-O-WFKoZd.js";import"./normalizeUtils-EVmAQ-ak.js";import"./normalizeUtilsCommon-dT81xWiM.js";import"./utils-6jMaHUrH.js";import"./utils-Bema0iXE.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-BOPMFOve.js";import"./centroid-DdLmOD72.js";import"./QueryEngine-DrzbS-Dm.js";import"./WhereClause-BNiy948d.js";import"./TimeOnly-DOn_Hy89.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-Bh2cHa3t.js";import"./utils-BwQ00KBJ.js";import"./Basemap-DVYOaWHz.js";import"./loadAll-B6mYSptb.js";import"./PortalItem-DzgXrpyc.js";import"./writeUtils-Dz7BsE1e.js";import"./utils-rwwdQ1Ui.js";import"./ClassBreaksDefinition-CS8Z_VNX.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Scheduler-CJu5awNf.js";import"./signal-D4lghLjV.js";import"./debugFlags-BF6Z0j0F.js";import"./clientSideDefaults-BCN5Jkqv.js";import"./capabilities-Y9lFlGVh.js";import"./fieldProperties-Cgxj08ZE.js";import"./FeatureEffectLayer-CpM66wLd.js";import"./FeatureEffect-BEzQmzeC.js";import"./FeatureFilter-BMHRQSxq.js";import"./FeatureReductionLayer-Ddbk727V.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureReductionSelection-7vaL4DYT.js";import"./commonProperties-CPyIG_-u.js";import"./AttributeTableTemplate-BZeVyq-j.js";import"./featureLayerUtils-DBsQMhTm.js";import"./featureQueryAll-DnVoEjkM.js";import"./AttachmentQuery-BUlkjzkx.js";import"./RelationshipQuery-DPPNeuLK.js";import"./labelingInfo-DYPSPZCH.js";import"./labelUtils-B8petyBk.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-C5VLMHgA.js";import"./OrderByInfo-IYmS1EXF.js";import"./RefreshableLayer-D7lXUJRS.js";import"./TemporalLayer-Dpq2hKKV.js";import"./TimeInfo-LUiaSFyX.js";import"./TimeInterval-CNlkea1s.js";import"./FeatureSet-BHEkYP03.js";import"./popupUtils-BBuPGAHd.js";var et;(function(t){t.MULTIPLIER="multiplier",t.ABSOLUTE="absoluteValue"})(et||(et={}));let k=class extends Yt(Vt(qt(xt(Ot)))){constructor(t){if(super(t),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(tt.ofType(Y)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new wt({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(tt.ofType(Y)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=t==null?void 0:t.inclusionModeDefinition,(t==null?void 0:t.dataPreloadedInLocalCache)&&!(t!=null&&t.inclusionModeDefinition))throw new K("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles(Rt(()=>this.layers.concat(this.tables),(e,a)=>this._handleSublayersChange(e,a),At))}normalizeCtorArgs(t){if(!t)return{};const{url:e,title:a,dataPreloadedInLocalCache:i,defaultLinkChartConfig:r}=t;return{url:e,title:a,dataPreloadedInLocalCache:i,defaultLinkChartConfig:r}}_initializeLayerProperties(t){var n,d,c,L,g,f;if(!this.title&&this.url){const s=this.url.split("/");this.title=s[s.length-2]}const e=new Set;let a=[],i=[];if(t.inclusionModeDefinition&&(!t.inclusionModeDefinition.namedTypeDefinitions||t.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new K("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");(n=t.knowledgeGraph.dataModel.entityTypes)==null||n.forEach(s=>{s.name&&this._graphTypeLookup.set(s.name,s)}),(d=t.knowledgeGraph.dataModel.relationshipTypes)==null||d.forEach(s=>{s.name&&this._graphTypeLookup.set(s.name,s)}),(c=t.inclusionModeDefinition)!=null&&c.generateAllSublayers?(a=t.knowledgeGraph.dataModel.entityTypes??[],i=t.knowledgeGraph.dataModel.relationshipTypes??[]):(L=t.inclusionModeDefinition)!=null&&L.namedTypeDefinitions&&((g=t.inclusionModeDefinition)==null?void 0:g.namedTypeDefinitions.size)>0?(f=t.inclusionModeDefinition)==null||f.namedTypeDefinitions.forEach((s,u)=>{var A,E;const C=this._graphTypeLookup.get(u);if(!C)return G.getLogger(this).warn(`A named type, ${u}, was in the inclusion list that wasn't in the data model and will be removed`),void((A=t.inclusionModeDefinition)==null?void 0:A.namedTypeDefinitions.delete(u));C.type==="relationship"?e.has(u)||(e.add(u),i.push(C)):C.type==="entity"?e.has(u)||(e.add(u),a.push(C)):(G.getLogger(this).warn(`A named type, ${u}, was in the inclusion list that wasn't properly modeled and will be removed`),(E=t.inclusionModeDefinition)==null||E.namedTypeDefinitions.delete(u))}):(a=t.knowledgeGraph.dataModel.entityTypes??[],i=t.knowledgeGraph.dataModel.relationshipTypes??[]);const r=new St({knowledgeGraph:t.knowledgeGraph,inclusionModeDefinition:t.inclusionModeDefinition});this.knowledgeGraph=t.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=i,this.dataManager=r}load(t){const e=async()=>{var r;const a=[],i=[];this.loadLayerAssumingLocalCache(),await bt(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),(r=this.dataManager.inclusionModeDefinition)==null||r.namedTypeDefinitions.forEach(n=>{n.useAllData=!1}),await this._initializeDiagram(),this.layers.forEach(n=>{i.push(n.refreshCachedQueryEngine()),a.push(new Promise(d=>{n.on("layerview-create",()=>{d(null)})}))}),this.tables.forEach(n=>{i.push(n.refreshCachedQueryEngine())}),await Promise.all(i)};return this.addResolvingPromise(new Promise(a=>{Jt(this.url).then(async i=>{var r,n,d,c,L,g,f;if(this._initializeLayerProperties({knowledgeGraph:i,inclusionModeDefinition:this._originalInclusionList}),(n=(r=this.dataManager.inclusionModeDefinition)==null?void 0:r.namedTypeDefinitions)!=null&&n.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},(d=this.dataManager.knowledgeGraph.dataModel.entityTypes)==null||d.forEach(s=>{var u;s.name&&((u=this.dataManager.inclusionModeDefinition)==null||u.namedTypeDefinitions.set(s.name,{useAllData:!0}))}),(c=this.dataManager.knowledgeGraph.dataModel.relationshipTypes)==null||c.forEach(s=>{var u;s.name&&((u=this.dataManager.inclusionModeDefinition)==null||u.namedTypeDefinitions.set(s.name,{useAllData:!0}))})),this.dataPreloadedInLocalCache){const s=Qt.getInstance();for(const[u,C]of((L=this.dataManager.inclusionModeDefinition)==null?void 0:L.namedTypeDefinitions)??[])for(const A of((g=C.members)==null?void 0:g.values())??[]){const E=s.readFromStoreById(`${u}__${A.id}`);E&&Lt(this.dataManager.sublayerCaches,u,()=>new Map).set(A.id,E)}await e()}else{const s=((f=this.defaultLinkChartConfig)==null?void 0:f.layoutMode)==="GEOGRAPHIC";this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,s,!0).then(async()=>{_t(t),await e()}))}a(null)})})),Promise.resolve(this)}set inclusionModeDefinition(t){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",t):G.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}async addRecords(t,e){let a=[];e!=null&&e.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await Gt(t,this.dataManager.knowledgeGraph));const i=t.concat(a).filter(r=>{var n;return!((n=this.sublayerIdsCache.get(r.typeName))!=null&&n.has(r.id))});await this._handleNewRecords(i)}async removeRecords(t,{cascadeRemoveRelationships:e=!0,recalculateLayout:a=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1}){var n,d,c,L,g,f,s,u;let i=[];for(const C of t)((c=(d=(n=this.dataManager.inclusionModeDefinition)==null?void 0:n.namedTypeDefinitions)==null?void 0:d.get(C.typeName))==null?void 0:c.useAllData)===!1&&((s=(f=(g=(L=this.dataManager.inclusionModeDefinition)==null?void 0:L.namedTypeDefinitions)==null?void 0:g.get(C.typeName))==null?void 0:f.members)!=null&&s.has(C.id))&&i.push(C);if(e){const C=new Set,A=[];for(const E of i)if(this.dataManager.nodeConnectionsLookup.has(E.id))for(const z of this.dataManager.nodeConnectionsLookup.get(E.id))C.add(z);for(const E of C)if(this.dataManager.memberIdTypeLookup.has(E))for(const z of this.dataManager.memberIdTypeLookup.get(E))this.dataManager.relationshipTypeNames.has(z)&&A.push({id:E,typeName:z});i=i.concat(A)}this.dataManager.removeFromLayer(i);for(const C of i)(u=this.sublayerIdsCache.get(C.typeName))==null||u.delete(C.id),this.dataManager.relationshipTypeNames.has(C.typeName)?this.relationshipLinkChartDiagramLookup.delete(C.id):this.entityLinkChartDiagramLookup.delete(C.id);a&&await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,this._currentLinkChartConfig.layoutOptions);const r=[];return this.layers.forEach(C=>{r.push(C.refreshCachedQueryEngine())}),await Promise.all(r),this._refreshNamedTypes(),i}async expand(t,e){const a=await this.dataManager.getConnectedRecordIds(t,e),i=a.filter(r=>{var n;return!((n=this.sublayerIdsCache.get(r.typeName))!=null&&n.has(r.id))});return await this._handleNewRecords(a),{records:i}}loadLayerAssumingLocalCache(){var e,a;const t=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.originIdOf("layers")===Ct.DEFAULTS?this._createSublayers(t,this.layers,i=>!!i.geometryType):this._updateSublayers(t,this.layers),this.originIdOf("tables")===Ct.DEFAULTS?this._createSublayers(t,this.tables,i=>!i.geometryType):this._updateSublayers(t,this.tables),(a=(e=this.dataManager.inclusionModeDefinition)==null?void 0:e.namedTypeDefinitions)==null||a.forEach((i,r)=>{var d;const n=Lt(this.sublayerIdsCache,r,()=>new Set);(d=i.members)==null||d.forEach(({id:c,linkChartLocation:L})=>{if(n.add(c),L){const g=L instanceof vt?L:V(L);this.dataManager.relationshipTypeNames.has(r)?this.relationshipLinkChartDiagramLookup.set(c,g):this.entityLinkChartDiagramLookup.set(c,g)}})})}async calculateLinkChartLayout(t="RADIAL_TREE",e){var mt,ct,yt,gt;const a=[],i=[],r=[];this.dataManager.sublayerCaches.forEach((o,l)=>{this.dataManager.entityTypeNames.has(l)?o.forEach(p=>{a.push({typeName:l,feature:p})}):this.dataManager.relationshipTypeNames.has(l)&&o.forEach(p=>{i.push({typeName:l,feature:p})})}),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const n=new Map,d=new Map,c=new Map,L=new Map,g=new Uint8Array(a.length),f=new Float64Array(a.length),s=new Float64Array(a.length),u=new Float64Array(a.length),C=new Float64Array(a.length),A=new Uint32Array(i.length),E=new Uint32Array(i.length),z=new Float64Array(i.length),lt=new Float64Array(i.length),M=[],Tt="FORCE_DIRECTED",O=new wt({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let j,ht="FORCE_DIRECTED",y=0,_=0;const Et=Pt.apply;switch(ht=t==="GEOGRAPHIC"?Tt:t,ht){case"FORCE_DIRECTED":j=zt.apply;break;case"COMMUNITY":j=Bt.apply;break;case"HIERARCHICAL":j=Ut.apply;break;case"RADIAL_TREE":j=$t.apply;break;case"SMART_TREE":j=Ft.apply;break;default:j=Ht.apply}let at=!1;a.forEach(({typeName:o,feature:l})=>{var p,$,U,b,R;if(t!=="CHRONOLOGICAL_SINGLE"&&t!=="CHRONOLOGICAL_MULTIPLE"&&((p=e==null?void 0:e.lockedNodeLocations)!=null&&p.has(l.attributes[x]))){t==="GEOGRAPHIC"&&this.dataManager.geographicLookup.has(o)?g[y]=F.IsGeographic:g[y]=F.None;const h=e.lockedNodeLocations.get(l.attributes[x]);f[y]=h.x,s[y]=h.y}else if(t==="GEOGRAPHIC"&&this.dataManager.geographicLookup.has(o)){g[y]=F.IsGeographic;let h=null;const w=l.attributes[this.dataManager.geographicLookup.get(o).name];switch(($=this.dataManager.geographicLookup.get(o))==null?void 0:$.geometryType){case"esriGeometryPoint":f[y]=w==null?void 0:w.x,s[y]=w==null?void 0:w.y;break;case"esriGeometryPolygon":h=w==null?void 0:w.centroid,(h==null?void 0:h.x)!=null&&(h==null?void 0:h.y)!=null?(f[y]=h.x,s[y]=h.y):g[y]=F.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":h=(U=w==null?void 0:w.extent)==null?void 0:U.center,(h==null?void 0:h.x)!=null&&(h==null?void 0:h.y)!=null?(f[y]=h.x,s[y]=h.y):g[y]=F.IsMovable;break;default:g[y]=F.IsMovable}(f[y]==null||s[y]==null||Number.isNaN(f[y])||Number.isNaN(s[y]))&&(g[y]=F.IsMovable,f[y]=0,s[y]=0)}else if(t==="CHRONOLOGICAL_SINGLE"||t==="CHRONOLOGICAL_MULTIPLE"){!at&&((b=e==null?void 0:e.lockedNodeLocations)!=null&&b.has(l.attributes[x]))&&(at=!0);const h=(R=e==null?void 0:e.timeInfoByTypeName)==null?void 0:R.get(o),w=h==null?void 0:h.startField,v=w&&(h!=null&&h.startField)?l.attributes[w]:null;u[y]=v?new Date(v).getTime():NaN;const P=h==null?void 0:h.endField,H=P&&(h!=null&&h.endField)?l.attributes[P]:null;C[y]=H?new Date(H).getTime():NaN,f[y]=0,s[y]=0,g[y]=F.IsMovable}else g[y]=F.IsMovable,f[y]=0,s[y]=0;L.set(l.attributes[x],y),M[y]={feature:l,typeName:o},y++}),at&&G.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let pt=!1;const it=new Map;i.forEach(o=>{var P;const l=o.feature.attributes[X],p=o.feature.attributes[Z],$=L.get(l),U=L.get(p),b=(P=e==null?void 0:e.timeInfoByTypeName)==null?void 0:P.get(o.typeName),R=e!=null&&e.timeInfoByTypeName?b==null?void 0:b.startField:null,h=R?o.feature.attributes[R]:null,w=b==null?void 0:b.endField,v=w?o.feature.attributes[w]:null;if($!==void 0&&U!==void 0){let H=l+"-"+p;t!=="CHRONOLOGICAL_SINGLE"&&t!=="CHRONOLOGICAL_MULTIPLE"||(H=H+"-"+h+"-"+v);const W=it.get(H);(W==null?void 0:W.has(o.typeName))||(A[_]=$,E[_]=U,t!=="CHRONOLOGICAL_SINGLE"&&t!=="CHRONOLOGICAL_MULTIPLE"||(z[_]=h?new Date(h).getTime():NaN,lt[_]=v?new Date(v).getTime():NaN),W===void 0?it.set(H,new Map([[o.typeName,_]])):W.set(o.typeName,_),_++),r.push(o)}else pt=!0,this.relationshipLinkChartDiagramLookup.set(l,null)}),pt&&G.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const dt=this._validateLayoutSettings(t,e),ot=this._convertLayoutSettingsToCalculationSettings(dt);await jt();let q=!1,D=null;if(t==="CHRONOLOGICAL_SINGLE"||t==="CHRONOLOGICAL_MULTIPLE"){let o;({success:q,links:D,graphics:o}=Et(g,f,s,u,C,A.subarray(0,_),E.subarray(0,_),z.subarray(0,_),lt.subarray(0,_),t==="CHRONOLOGICAL_MULTIPLE",(e==null?void 0:e.chronologicalLayoutSettings)??{})),q&&(this.chronologicalAuxiliaryGraphics=o)}else({success:q,links:D}=j(g,f,s,A.subarray(0,_),E.subarray(0,_),ot.computationBudgetTime,ot.idealEdgeLengthMultiplier,ot.repulsionRadiusMultiplier));if(!q)throw new K("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let o=0;o<M.length;o++){if(s[o]>84.9999?s[o]=84.9999:s[o]<-84.9999&&(s[o]=-84.9999),f[o]>179.9999?f[o]=179.9999:f[o]<-179.9999&&(f[o]=-179.9999),M[o].feature.attributes[I]=new st(f[o],s[o]),n.has(M[o].typeName)){const p=n.get(M[o].typeName);p==null||p.set(M[o].feature.attributes[x],M[o].feature)}else{const p=new Map;p.set(M[o].feature.attributes[x],M[o].feature),n.set(M[o].typeName,p)}c.set(M[o].feature.attributes[x],M[o].feature);const l=V(M[o].feature.attributes[I]);this.entityLinkChartDiagramLookup.set(M[o].feature.attributes[x],M[o].feature.attributes[I]?l:null),M[o].feature.attributes[I].x<O.xmin&&(O.xmin=M[o].feature.attributes[I].x),M[o].feature.attributes[I].x>O.xmax&&(O.xmax=M[o].feature.attributes[I].x),M[o].feature.attributes[I].y<O.ymin&&(O.ymin=M[o].feature.attributes[I].y),M[o].feature.attributes[I].y>O.ymax&&(O.ymax=M[o].feature.attributes[I].y)}if(this.linkChartExtent.xmin=O.xmin,this.linkChartExtent.xmax=O.xmax,this.linkChartExtent.ymin=O.ymin,this.linkChartExtent.ymax=O.ymax,!D)throw new K("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const J=new Map,rt=new Map,nt=new Map,ut=new Set;for(let o=0;o<r.length;o++){const l=[],p=r[o],$=p.feature.attributes[X],U=p.feature.attributes[Z];let b=$+"-"+U;if(t==="CHRONOLOGICAL_SINGLE"||t==="CHRONOLOGICAL_MULTIPLE"){const m=(mt=e==null?void 0:e.timeInfoByTypeName)==null?void 0:mt.get(p.typeName),S=e!=null&&e.timeInfoByTypeName?m==null?void 0:m.startField:null,B=S?p.feature.attributes[S]:null,Q=m==null?void 0:m.endField;b+="-"+B+"-"+(Q?p.feature.attributes[Q]:null)}const R=it.get(b).get(p.typeName),h=R===0?0:D==null?void 0:D.vertexEndIndex[R-1];if(!ut.has(R)){if(ut.add(R),D.types[R]===Mt.Recursive){const m=[D.vertices[2*h],D.vertices[2*h+1]],S=[D.vertices[2*(h+1)],D.vertices[2*(h+1)+1]],B=[.5*(m[0]+S[0]),.5*(m[1]+S[1])],Q=[B[0]-m[0],B[1]-m[1]],Nt=[B[0]+Q[1],B[1]-Q[0]],It=[B[0]-Q[1],B[1]+Q[0]];l.push(m),l.push(Nt),l.push(S),l.push(It),l.push(m)}else{if(D.types[R]!==Mt.Regular){G.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let m=h;m<D.vertexEndIndex[R];m++)l.push([D.vertices[2*m],D.vertices[2*m+1]])}if(t!=="CHRONOLOGICAL_SINGLE"&&t!=="CHRONOLOGICAL_MULTIPLE"){const m=(ct=M[L.get($)])==null?void 0:ct.feature.attributes[I],S=(yt=M[L.get(U)])==null?void 0:yt.feature.attributes[I];l[0][0]===m.x&&l[0][1]===m.y||(l[0]=[m.x,m.y]),l[l.length-1][0]===S.x&&l[l.length-1][1]===S.y||(l[l.length-1]=[S.x,S.y])}for(let m=1;m<l.length-1;m++)l[m][1]>85.5?l[m][1]=85.5:l[m][1]<-85.5&&(l[m][1]=-85.5),l[m][0]>179.9999?l[m][0]=179.9999:l[m][0]<-179.9999&&(l[m][0]=-179.9999);J.has(b)?J.get(b).push(l):J.set(b,[l])}const w=J.get(b);rt.has(b)||(rt.set(b,new Map),nt.set(b,new Map));const v=rt.get(b),P=nt.get(b);v.has(p.typeName)||(v.set(p.typeName,w.shift()),P.set(p.typeName,0));const H=v.get(p.typeName);P.set(p.typeName,P.get(p.typeName)+1);const W=new kt({paths:[H]});if(p.feature.attributes[I]=W,d.has(p.typeName)){const m=d.get(p.typeName);m==null||m.set(p.feature.attributes[x],p.feature)}else{const m=new Map;m.set(p.feature.attributes[x],p.feature),d.set(p.typeName,m)}c.set(p.feature.attributes[x],p.feature);const ft=V(p.feature.attributes[I]);this.relationshipLinkChartDiagramLookup.set(p.feature.attributes[x],p.feature.attributes[I]?ft:null)}for(const o of r)o.feature.attributes[Wt]=((gt=nt.get(o.feature.attributes[X]+"-"+o.feature.attributes[Z]))==null?void 0:gt.get(o.typeName))??null;return this._currentLinkChartConfig={layoutMode:t,layoutOptions:dt},{nodes:n,links:d,idMap:c}}async applyNewLinkChartLayout(t="RADIAL_TREE",e){const a=[];await this._calculateLayoutWithSublayerTimeInfo(t,e),this.layers.forEach(i=>{a.push(i.refreshCachedQueryEngine())}),await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){var e,a;const t=new Map;return(a=(e=this.dataManager.inclusionModeDefinition)==null?void 0:e.namedTypeDefinitions)==null||a.forEach(i=>{var r;(r=i==null?void 0:i.members)==null||r.forEach(n=>{const d=n.linkChartLocation;let c;const L=n.id;d&&(c="x"in d?{x:d.x,y:d.y}:{x:d.coords[0],y:d.coords[1]},t.set(L,new st({x:c.x,y:c.y})))})}),t}async synchronizeInclusionListWithCache(){return new Promise(t=>{var e;(e=this.dataManager.inclusionModeDefinition)==null||e.namedTypeDefinitions.forEach((a,i)=>{if(a.useAllData=!1,a.members&&a.members.size>0){if(!this.dataManager.sublayerCaches.get(i))return;const r=new Set(Array.from(this.dataManager.sublayerCaches.get(i).keys()));Array.from(a.members.keys()).filter(n=>!r.has(n)).forEach(n=>{var d;(d=a.members)==null||d.delete(n)})}}),t()})}async refreshLinkChartCache(t){await this.dataManager.refreshCacheContent(t);const e=[];this.layers.forEach(a=>{e.push(a.refreshCachedQueryEngine())}),await Promise.all(e),this._refreshNamedTypes()}async connectBetweenEntities(t){let e=[];for(const i of this.dataManager.relationshipTypeNames){const r=this.sublayerIdsCache.get(i);r&&(e=e.concat(Array.from(r.keys())))}const a=await this.dataManager.getRelationshipsBetweenNodes(t,e);return await this._handleNewRecords(a),{records:a}}async connectFromEntities(t){let e=[];for(const r of this.dataManager.relationshipTypeNames){const n=this.sublayerIdsCache.get(r);n&&(e=e.concat(Array.from(n.keys())))}let a=[];for(const r of this.dataManager.entityTypeNames){const n=this.sublayerIdsCache.get(r);n&&(a=a.concat(Array.from(n)))}const i=await this.dataManager.getRelationshipsFromNodes(t,a,e);return await this._handleNewRecords(i),{records:i}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(t="RADIAL_TREE",e){const a=new Map;this.layers.forEach(i=>{a.set(i.objectType.name,i.timeInfo)}),await this.calculateLinkChartLayout(t,{timeInfoByTypeName:a,...e})}async _handleNewRecords(t){const e=[];this.dataManager.addToLayer(t);for(const i of t)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),e.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of e){const r=this._graphTypeLookup.get(i);if(r){const n=this._createSublayer(r);r.type==="entity"?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),n.geometryType?this.layers.push(n):this.tables.push(n),this.dataManager.sublayerCaches.set(i,new Map)}}await bt(this,e),await this.dataManager.refreshCacheContent(t.map(i=>i.id));const a=Object.assign({},this._currentLinkChartConfig.layoutOptions);a.lockedNodeLocations=new Map;for(const[i,r]of this.entityLinkChartDiagramLookup.entries())r&&a.lockedNodeLocations.set(i,new st(r.coords[0],r.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,a)}_createSublayers(t,e,a){t.forEach(i=>{const r=this._createSublayer(i);a(r)&&e.push(r),this._updateSublayerCaches(i)})}_updateSublayers(t,e){e.forEach(a=>{a.parentCompositeLayer=this;const i=t.find(r=>r.type===a.graphType&&r.name===a.graphTypeName);i&&(a.objectType=i,a.read({title:i.name},{origin:"service"}),this._updateSublayerCaches(i))})}_updateSublayerCaches(t){const e=this.dataManager.sublayerCaches;e.has(t.name)||e.set(t.name,new Map)}async _initializeDiagram(){var t,e;this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?((e=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||e.forEach((a,i)=>{var r;(r=a==null?void 0:a.members)==null||r.forEach(n=>{const d=n.linkChartLocation;let c;const L=n.id;if(!d)return;c="x"in d?{x:d.x,y:d.y}:{x:d.coords[0],y:d.coords[1]};const g=V(c);this.dataManager.relationshipTypeNames.has(i)?this.relationshipLinkChartDiagramLookup.set(L,g):this.entityLinkChartDiagramLookup.set(L,g),this.linkChartExtent.xmin>c.x&&(this.linkChartExtent.xmin=c.x),this.linkChartExtent.xmax<c.x&&(this.linkChartExtent.xmax=c.x),this.linkChartExtent.ymin>c.y&&(this.linkChartExtent.ymin=c.y),this.linkChartExtent.ymax<c.y&&(this.linkChartExtent.ymax=c.y)})}),this.memberRelationshipTypes.forEach(a=>{var i;a.name&&((i=this.dataManager.sublayerCaches.get(a.name))==null||i.forEach(r=>{const n=this.relationshipLinkChartDiagramLookup.get(r.attributes[X]),d=this.relationshipLinkChartDiagramLookup.get(r.attributes[Z]);if(n&&d){const c=V(new kt({paths:[[[n.coords[0],n.coords[1]],[d.coords[0],d.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(r.attributes[x],c)}else this.relationshipLinkChartDiagramLookup.set(r.attributes[x],null)}))})):await this._calculateLayoutWithSublayerTimeInfo(this.defaultLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.defaultLinkChartConfig.layoutOptions||{}}):await this._calculateLayoutWithSublayerTimeInfo("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const t of this.layers)t.emit("refresh",{dataChanged:!0});for(const t of this.tables)t.emit("refresh",{dataChanged:!0})}_validateLayoutSettings(t,e){const a=u=>typeof u=="number"&&!isNaN(u),i=u=>a(u)&&u>=1,r=u=>a(u)&&u>=1,n=u=>Object.values(et).includes(u),d=u=>a(u)&&u>=0,c={organicLayoutSettings:{},chronologicalLayoutSettings:{}};if(!new Set(["FORCE_DIRECTED","COMMUNITY","GEOGRAPHIC","CHRONOLOGICAL_MULTIPLE","CHRONOLOGICAL_SINGLE"]).has(t)||!e)return c;e.organicLayoutSettings??(e.organicLayoutSettings={});const{computationBudgetTime:L,repulsionRadiusMultiplier:g,idealEdgeLength:f,idealEdgeLengthType:s}=e.organicLayoutSettings;if(r(L)?c.organicLayoutSettings.computationBudgetTime=L:L!==void 0&&G.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),i(g)?c.organicLayoutSettings.repulsionRadiusMultiplier=g:g!==void 0&&G.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting"),t==="GEOGRAPHIC"&&(f!==void 0||s!==void 0)&&(n(s)?c.organicLayoutSettings.idealEdgeLengthType=s:s!==void 0&&G.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),d(f)?c.organicLayoutSettings.idealEdgeLength=f:f!==void 0&&G.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),(t==="CHRONOLOGICAL_MULTIPLE"||t==="CHRONOLOGICAL_SINGLE")&&e.chronologicalLayoutSettings){const u=e.chronologicalLayoutSettings;u.durationLineWidth&&u.durationLineWidth<0&&G.getLogger(this).warn("Invalid layout durationLineWidth setting, will revert to default setting")}return c}_convertLayoutSettingsToCalculationSettings(t){t.organicLayoutSettings??(t.organicLayoutSettings={});let e=t.organicLayoutSettings.idealEdgeLength;return t.organicLayoutSettings.idealEdgeLengthType===et.ABSOLUTE&&(e===void 0?e=-1:e*=-1),{computationBudgetTime:t.organicLayoutSettings.computationBudgetTime,repulsionRadiusMultiplier:t.organicLayoutSettings.repulsionRadiusMultiplier,idealEdgeLengthMultiplier:e}}_createSublayer(t){return new Y({objectType:t,parentCompositeLayer:this,graphType:t.type})}_handleSublayersChange(t,e){e&&(e.forEach(a=>{a.parent=null}),this.removeHandles("sublayers-owner")),t&&(t.forEach(a=>{a.parent=this}),this.addHandles([t.on("after-add",({item:a})=>{a.parent=this}),t.on("after-remove",({item:a})=>{a.parent=null})],"sublayers-owner"))}};T([N()],k.prototype,"dataPreloadedInLocalCache",void 0),T([N()],k.prototype,"defaultLinkChartConfig",void 0),T([N()],k.prototype,"dataManager",void 0),T([N()],k.prototype,"inclusionModeDefinition",null),T([N()],k.prototype,"knowledgeGraph",void 0),T([N({type:tt.ofType(Y),json:{write:{ignoreOrigin:!0}}})],k.prototype,"layers",void 0),T([N()],k.prototype,"entityLinkChartDiagramLookup",void 0),T([N()],k.prototype,"relationshipLinkChartDiagramLookup",void 0),T([N()],k.prototype,"linkChartExtent",void 0),T([N()],k.prototype,"memberEntityTypes",void 0),T([N()],k.prototype,"memberRelationshipTypes",void 0),T([N({type:["LinkChartLayer"]})],k.prototype,"operationalLayerType",void 0),T([N()],k.prototype,"sublayerIdsCache",void 0),T([N({type:tt.ofType(Y),json:{write:{ignoreOrigin:!0}}})],k.prototype,"tables",void 0),T([N({json:{read:!1}})],k.prototype,"type",void 0),T([N({json:{read:!1}})],k.prototype,"chronologicalAuxiliaryGraphics",void 0),k=T([Dt("esri.layers.LinkChartLayer")],k);const eo=k;export{eo as default};
