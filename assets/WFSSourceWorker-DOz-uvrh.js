import{d as T}from"./asyncUtils-CWX51uTe.js";import{b as g,n as y,s as f}from"./subclass-BZA_h8Db.js";import{s as c,c as R}from"./Accessor-BLX9ikPh.js";import{s as E}from"./Point-Cg0-ChZE.js";import{o as P,r as q}from"./featureConversionUtils-D14h8iad.js";import{m as I}from"./FeatureStore-Dr0GQdbp.js";import{x as b,j}from"./queryUtils-O-WFKoZd.js";import{V as $}from"./QueryEngine-DrzbS-Dm.js";import{E as N,N as O}from"./geojson-DMG1YeVa.js";import{p as Q}from"./sourceUtils--DUSj3Of.js";import{o as M,e as k,K as _}from"./wfsUtils-DdStB1Ak.js";import{Z as L}from"./FieldsIndex-DpwHKAMX.js";import{i as U}from"./date-DlqISzcw.js";import"./tslib.es6-B3Jf3DVX.js";import"./cast-Bjksrh93.js";import"./writer-DNAwXnhG.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./jsonMap-0cxwUWs2.js";import"./aaBoundingBox-BE7cC1jD.js";import"./Extent-Bf3YTe7m.js";import"./Polyline-D9YkgmM_.js";import"./mathUtils-C4_ghTv4.js";import"./jsonUtils-CEfjT-BK.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./Evented-BHRw9x22.js";import"./BoundsStore-BhV7QrYA.js";import"./PooledRBush-D7s4d_Fs.js";import"./quickselect-QQC62dOK.js";import"./timeSupport-T1g9-JyG.js";import"./optimizedFeatureQueryEngineAdapter-BOPMFOve.js";import"./centroid-DdLmOD72.js";import"./projection-B971H0Re.js";import"./SimpleObservable-KocWTzVy.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./normalizeUtils-EVmAQ-ak.js";import"./normalizeUtilsCommon-dT81xWiM.js";import"./geometry-D964gYQX.js";import"./utils-6jMaHUrH.js";import"./utils-Bema0iXE.js";import"./json-Wa8cmqdu.js";import"./LRUCache-B_PHMSGm.js";import"./MemCache-Dx1v3xLC.js";import"./WhereClause-BNiy948d.js";import"./TimeOnly-DOn_Hy89.js";import"./UnknownTimeZone-BkowvBs8.js";import"./locale-C9TlLpzi.js";import"./fieldType-BuzM0UHS.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./quantizationUtils-uj_P09aO.js";import"./fieldUtils-tmQlKvWo.js";import"./intl-CChhNOV8.js";import"./messages-OmQvZhAg.js";import"./utils-Bh2cHa3t.js";import"./screenUtils-_ZIvrt5o.js";import"./timeUtils-8fb_2oAt.js";import"./heatmapUtils-Dwiv9IEa.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-BwQ00KBJ.js";import"./Basemap-DVYOaWHz.js";import"./Collection-CEdjem1-.js";import"./shared-B3wH2qpO.js";import"./collectionUtils-D_lHIu88.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./loadAll-B6mYSptb.js";import"./Portal-C10FKnaA.js";import"./PortalItem-DzgXrpyc.js";import"./persistableUrlUtils-fa1mAujs.js";import"./writeUtils-Dz7BsE1e.js";import"./layerUtils-BrNoooE9.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./utils-rwwdQ1Ui.js";import"./ClassBreaksDefinition-CS8Z_VNX.js";import"./enumeration-Ba5njXdz.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Scheduler-CJu5awNf.js";import"./reactiveUtils-C5zUhJQJ.js";import"./signal-D4lghLjV.js";import"./debugFlags-BF6Z0j0F.js";import"./date-DLgTylpo.js";import"./xmlUtils-CtUoQO7q.js";import"./arcgisLayerUrl-BX1FE5Hm.js";import"./Field-ybkHhtnK.js";const x="esri.layers.WFSLayer";class Te{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:r,getFeatureOutputFormat:a,fields:s,geometryType:m,featureType:i,maxRecordCount:n,maxTotalRecordCount:h,maxPageCount:C,objectIdField:d,customParameters:F}=t,{spatialReference:u,getFeatureSpatialReference:l}=M(r,i,t.spatialReference);try{await b(l,u)}catch{throw new g("unsupported-projection","Projection not supported",{inSpatialReference:l,outSpatialReference:u})}c(e),this._customParameters=F,this._featureType=i,this._fieldsIndex=L.fromLayerJSON({fields:s,dateFieldsTimeReference:s.some(S=>S.type==="esriFieldTypeDate")?{timeZoneIANA:U}:null}),this._geometryType=m,this._getFeatureUrl=r,this._getFeatureOutputFormat=a,this._getFeatureSpatialReference=l,this._maxRecordCount=n,this._maxTotalRecordCount=h,this._maxPageCount=C,this._objectIdField=d,this._spatialReference=u;let p=await this._snapshotFeatures(e);if(p.errors.length>0&&(this._supportsPagination=!1,p=await this._snapshotFeatures(e),p.errors.length>0))throw p.errors[0];return this._queryEngine=new $({fieldsIndex:this._fieldsIndex,geometryType:m,hasM:!1,hasZ:!1,objectIdField:d,spatialReference:u,timeInfo:null,featureStore:new I({geometryType:m,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(p.features),{warnings:w(p),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new g("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){var e;return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,(e=this._snapshotTask)==null||e.abort(),this._snapshotTask=T(r=>this._snapshotFeatures({signal:r})),this._snapshotTask.promise.then(r=>{var a;this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(r.features);for(const s of w(r))y.getLogger(x).warn(new f("wfs-layer:refresh-warning",s.message,s.details));(a=r.errors)!=null&&a.length&&y.getLogger(x).warn(new f("wfs-layer:refresh-error","Refresh completed with errors",{errors:r.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t==null?void 0:t.signal,r=this._maxTotalRecordCount,a=this._maxPageCount,s=this._supportsPagination?await k(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let m=[];const i=[];if(s==null)try{m=await this._singleQuery(e)}catch(n){R(n)||i.push(n)}else{const n=Math.min(s,r),h=Z(this,Math.max(1,Math.min(Math.ceil(n/this._maxRecordCount),a)),e);await Promise.allSettled(Array.from({length:10}).map(()=>J(h,m,i)))}return c(e),{features:m,totalRecordCount:s,maxTotalRecordCount:r,maxPageCount:a,errors:i}}async _singleQuery(t){const e=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(e,{signal:t})}async _pageQuery(t,e){const r=t*this._maxRecordCount,a=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:r,count:this._maxRecordCount,signal:e});return this._processGeoJSON(a,{startIndex:r,signal:e})}_processGeoJSON(t,e){N(t,this._getFeatureSpatialReference.wkid);const{startIndex:r,signal:a}=e;c(a);const s=O(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!E(this._spatialReference,this._getFeatureSpatialReference))for(const i of s)i.geometry!=null&&(i.geometry=P(j(q(i.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let m=r??1;for(const i of s){const n={};Q(this._fieldsIndex,n,i.attributes,!0),i.attributes=n,n[this._objectIdField]==null&&(i.objectId=n[this._objectIdField]=m++)}return s}}function*Z(o,t,e){for(let r=0;r<t;r++)yield o._pageQuery(r,e)}async function J(o,t,e){let r=o.next();for(;!r.done;){try{const a=await r.value;t.push(...a)}catch(a){R(a)||e.push(a)}r=o.next()}}function w(o){const t=[];return o.totalRecordCount!=null&&(o.features.length<o.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${o.features.length} of ${o.totalRecordCount} in ${o.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:o.features.length,totalRecordCount:o.totalRecordCount}}),o.totalRecordCount>o.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${o.totalRecordCount} features exceeds the maximum allowed of ${o.maxTotalRecordCount}.`,details:{recordCount:o.features.length,totalRecordCount:o.totalRecordCount,maxTotalRecordCount:o.maxTotalRecordCount}})),t}export{Te as default};
