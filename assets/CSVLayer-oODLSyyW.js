import{r as e}from"./tslib.es6-B3Jf3DVX.js";import"./geometry-D964gYQX.js";import{m as r,a as c,j as v,b as h}from"./subclass-BZA_h8Db.js";import{C as w,p as S}from"./Accessor-BLX9ikPh.js";import{I as O}from"./assets-C43MgM-v.js";import{o as F}from"./writer-DNAwXnhG.js";import b from"./FeatureLayer-wa_7EIxE.js";import{m as I}from"./Loadable-BabW5Xcc.js";import{p as q}from"./workers-D4HfeYKj.js";import{d as N}from"./FeatureSet-BHEkYP03.js";import{w as _}from"./Extent-Bf3YTe7m.js";import{y as C}from"./clientSideDefaults-BCN5Jkqv.js";import{b as p}from"./Query-5Xpquc1r.js";import{f as J,h as j}from"./persistableUrlUtils-fa1mAujs.js";import{g as P}from"./Point-Cg0-ChZE.js";import"./Polyline-D9YkgmM_.js";import"./mathUtils-C4_ghTv4.js";import"./jsonMap-0cxwUWs2.js";import"./index-Bh2oEzTI.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./Collection-CEdjem1-.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./cast-Bjksrh93.js";import"./fieldUtils-tmQlKvWo.js";import"./intl-CChhNOV8.js";import"./date-DlqISzcw.js";import"./locale-C9TlLpzi.js";import"./messages-OmQvZhAg.js";import"./enumeration-Ba5njXdz.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./ClassBreaksRenderer-BuHwSyVK.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./screenUtils-_ZIvrt5o.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./vec3f64-BLpZdpfb.js";import"./aaBoundingBox-BE7cC1jD.js";import"./collectionUtils-D_lHIu88.js";import"./Portal-C10FKnaA.js";import"./reactiveUtils-C5zUhJQJ.js";import"./asyncUtils-CWX51uTe.js";import"./UniqueValueRenderer-BQtAHUSo.js";import"./diffUtils-BP7jmOAy.js";import"./colorRamps-pKd7I5WZ.js";import"./SizeVariable-936USOrb.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DX1kS9Se.js";import"./Graphic-DsxsIjhH.js";import"./jsonUtils-CEfjT-BK.js";import"./compilerUtils-Dw3R0f-Z.js";import"./lengthUtils-DL1-FDQQ.js";import"./Promise-B2Hu02L7.js";import"./ColorStop-Dk3U5tCk.js";import"./jsonUtils-Ds2Sqto-.js";import"./layerUtils-BrNoooE9.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./RendererLegendOptions-B-4se3aU.js";import"./styleUtils-BYTm14n3.js";import"./jsonUtils-DxpLMo6d.js";import"./LRUCache-B_PHMSGm.js";import"./MemCache-Dx1v3xLC.js";import"./Version-BSlAgupz.js";import"./FieldsIndex-DpwHKAMX.js";import"./UnknownTimeZone-BkowvBs8.js";import"./OverrideHelper-ti072FkP.js";import"./colorUtils-aL8wj-8G.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-D2PLyMFF.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-uj_P09aO.js";import"./HeatmapColorStop-BJc5nbwr.js";import"./heatmapUtils-Dwiv9IEa.js";import"./SimpleRenderer-BV2L9G_n.js";import"./MultiOriginJSONSupport-B5nfqtQh.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureLayerBase-Ck7-w8TE.js";import"./formUtils-ylzKAM7E.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./HeightModelInfo-9nOoV6LU.js";import"./arcgisLayerUrl-BX1FE5Hm.js";import"./commonProperties-CPyIG_-u.js";import"./ElevationInfo-CA5m_tHv.js";import"./unitConversionUtils-BMfW9yAe.js";import"./AttributeTableTemplate-BZeVyq-j.js";import"./featureLayerUtils-DBsQMhTm.js";import"./featureQueryAll-DnVoEjkM.js";import"./AttachmentQuery-BUlkjzkx.js";import"./RelationshipQuery-DPPNeuLK.js";import"./DataLayerSource-BKkswDvG.js";import"./LayerFloorInfo-CIQjg5Vk.js";import"./Relationship-COPq3qM4.js";import"./serviceCapabilitiesUtils-DAE5z8FP.js";import"./Layer-CVt7Hb5J.js";import"./TimeExtent-DocT5yPf.js";import"./timeUtils-8fb_2oAt.js";import"./editsZScale-Bs7_pSzI.js";import"./queryZScale-w66xFVGx.js";import"./projection-B971H0Re.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./APIKeyMixin-Di9kcRBS.js";import"./ArcGISService-B5qxetOY.js";import"./BlendLayer-CXM4n_Ge.js";import"./jsonUtils-CSnQD004.js";import"./parser-CTsgEym6.js";import"./utils-93yNk4Xc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./CustomParametersMixin-B4u7wiBT.js";import"./EditBusLayer-DoTks2sU.js";import"./uuid-fwrPAdZb.js";import"./FeatureEffectLayer-CpM66wLd.js";import"./FeatureEffect-BEzQmzeC.js";import"./FeatureFilter-BMHRQSxq.js";import"./FeatureReductionLayer-Ddbk727V.js";import"./FeatureReductionSelection-7vaL4DYT.js";import"./labelingInfo-DYPSPZCH.js";import"./labelUtils-B8petyBk.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-CVyVfSPu.js";import"./OrderedLayer-C5VLMHgA.js";import"./OrderByInfo-IYmS1EXF.js";import"./PortalLayer-CKja4bdW.js";import"./PortalItem-DzgXrpyc.js";import"./portalItemUtils-BzVoFAku.js";import"./RefreshableLayer-D7lXUJRS.js";import"./ScaleRangeLayer-Bb8Ig1Hz.js";import"./TemporalLayer-Dpq2hKKV.js";import"./TimeInfo-LUiaSFyX.js";import"./TimeInterval-CNlkea1s.js";import"./FeatureTemplate-CssMa1yk.js";import"./FeatureType-C0q_coeM.js";import"./fieldProperties-Cgxj08ZE.js";import"./versionUtils-CQ_WhYSP.js";import"./styleUtils-KMFBtb6u.js";import"./popupUtils-BBuPGAHd.js";import"./AlphaCutoff-UcccL64p.js";import"./interfaces-CL2NbQte.js";import"./Queue-yu3bZ02p.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./capabilities-Y9lFlGVh.js";import"./FullTextSearch-Csd1Hktu.js";let a=class extends I{constructor(t){super(t),this.type="csv",this.refresh=w(async i=>{await this.load();const{extent:o,timeExtent:n}=await this._connection.invoke("refresh",i);return o&&(this.sourceJSON.extent=o),n&&(this.sourceJSON.timeInfo.timeExtent=[n.start,n.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const i=t!=null?t.signal:null;return this.addResolvingPromise(this._startWorker(i)),Promise.resolve(this)}destroy(){var t;(t=this._connection)==null||t.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,i={}){await this.load(i);const o=await this._connection.invoke("queryFeatures",t?t.toJSON():null,i);return N.fromJSON(o)}async queryFeaturesJSON(t,i={}){return await this.load(i),this._connection.invoke("queryFeatures",t?t.toJSON():null,i)}async queryFeatureCount(t,i={}){return await this.load(i),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,i)}async queryObjectIds(t,i={}){return await this.load(i),this._connection.invoke("queryObjectIds",t?t.toJSON():null,i)}async queryExtent(t,i={}){await this.load(i);const o=await this._connection.invoke("queryExtent",t?t.toJSON():null,i);return{count:o.count,extent:_.fromJSON(o.extent)}}async querySnapping(t,i={}){return await this.load(i),this._connection.invoke("querySnapping",t,i)}async _startWorker(t){this._connection=await q("CSVSourceWorker",{strategy:v("feature-layers-workers")?"dedicated":"local",signal:t,registryTarget:this});const{url:i,delimiter:o,fields:n,latitudeField:y,longitudeField:f,spatialReference:m,timeInfo:l}=this.loadOptions,u=await this._connection.invoke("load",{url:i,customParameters:this.customParameters,parsingOptions:{delimiter:o,fields:n==null?void 0:n.map(g=>g.toJSON()),latitudeField:y,longitudeField:f,spatialReference:m==null?void 0:m.toJSON(),timeInfo:l==null?void 0:l.toJSON()}},{signal:t});this.locationInfo=u.locationInfo,this.sourceJSON=u.layerDefinition,this.delimiter=u.delimiter}};e([r()],a.prototype,"type",void 0),e([r()],a.prototype,"loadOptions",void 0),e([r()],a.prototype,"customParameters",void 0),e([r()],a.prototype,"locationInfo",void 0),e([r()],a.prototype,"sourceJSON",void 0),e([r()],a.prototype,"delimiter",void 0),a=e([c("esri.layers.graphics.sources.CSVSource")],a);function d(t,i){throw new h(i,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let s=class extends b{constructor(...t){super(...t),this.geometryType="point",this.capabilities=C(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=P.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,i){return typeof t=="string"?{url:t,...i}:t}load(t){const i=t!=null?t.signal:null,o=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(S).then(async()=>this.initLayerProperties(await this.createGraphicsSource(i)));return this.addResolvingPromise(o),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,i){var o,n;return i.showLabels!=null?i.showLabels:!!((n=(o=i.layerDefinition)==null?void 0:o.drawingInfo)!=null&&n.labelingInfo)}set url(t){if(!t)return void this._set("url",t);const i=O(t);this._set("url",i.path),i.query&&(this.customParameters={...this.customParameters,...i.query})}async createGraphicsSource(t){const i=new a({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",i),await i.load({signal:t}),this.read({locationInfo:i.locationInfo,columnDelimiter:i.delimiter},{origin:"service",url:this.parsedUrl}),i}queryFeatures(t,i){return this.load().then(()=>this.source.queryFeatures(p.from(t)||this.createQuery())).then(o=>{if(o!=null&&o.features)for(const n of o.features)n.layer=n.sourceLayer=this;return o})}queryObjectIds(t,i){return this.load().then(()=>this.source.queryObjectIds(p.from(t)||this.createQuery()))}queryFeatureCount(t,i){return this.load().then(()=>this.source.queryFeatureCount(p.from(t)||this.createQuery()))}queryExtent(t,i){return this.load().then(()=>this.source.queryExtent(p.from(t)||this.createQuery()))}read(t,i){super.read(t,i),i&&i.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,i){return super.write(t,{...i,writeLayerSchema:!0})}clone(){throw new h("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return d(this,"csv-layer:save")}async saveAs(t,i){return d(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:i}=await this.source.refresh(this.customParameters);return i!=null&&this.read(i,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};e([r({readOnly:!0,json:{read:!1,write:!1}})],s.prototype,"capabilities",void 0),e([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],s.prototype,"delimiter",void 0),e([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],s.prototype,"editingEnabled",void 0),e([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],s.prototype,"fields",void 0),e([r({type:Boolean,readOnly:!0})],s.prototype,"isTable",null),e([F("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],s.prototype,"readWebMapLabelsVisible",null),e([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],s.prototype,"latitudeField",void 0),e([r({type:["show","hide"]})],s.prototype,"listMode",void 0),e([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"locationType",void 0),e([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],s.prototype,"longitudeField",void 0),e([r({type:["CSV"]})],s.prototype,"operationalLayerType",void 0),e([r()],s.prototype,"outFields",void 0),e([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],s.prototype,"path",void 0),e([r({json:{read:!1},cast:null,type:a,readOnly:!0})],s.prototype,"source",void 0),e([r({json:{read:!1},value:"csv",readOnly:!0})],s.prototype,"type",void 0),e([r({json:{read:J,write:{isRequired:!0,ignoreOrigin:!0,writer:j}}})],s.prototype,"url",null),s=e([c("esri.layers.CSVLayer")],s);const be=s;export{be as default};
