import{e as a}from"./Evented-CXIxDjmW.js";import{u as c}from"./Color-DDUWtbqR.js";import{d as S}from"./Graphic-Dc7F67nR.js";import{w as P,p as x,a as L,m as O,z as j}from"./symbols-CsUQ5BxR.js";import{S as A}from"./Accessor-D6mNnsWy.js";import{V as $}from"./reactiveUtils-BFQ0BtrB.js";import{N as z}from"./mathUtils-ClvKsMak.js";import{y as d,b as k}from"./subclass-BR3PhgZG.js";import{S as N,m as T}from"./TextSymbol-gKE-H_J6.js";const E=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let r=class extends A{constructor(t){super(t),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=E.map(t=>new N({color:[t[0],t[1],t[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(t){this._enabled!==t&&(this._enabled=t,this.update())}update(){if(!this._enabled)return void this.clear();const t=e=>{if(e.label!=null)return e.label;let l=e.lij.toString();return e.loadPriority!=null&&(l+=` (${e.loadPriority})`),l},h=this.getTiles(),y=new Array,m=new Set((this._labels.size,this._labels.keys()));h.forEach((e,l)=>{const s=e.lij.toString();m.delete(s);const M=e.lij[0],g=e.geometry;if(this.enablePolygons&&!this._polygons.has(s)){const o=new S({geometry:g,symbol:this._symbols[M%this._symbols.length]});this._polygons.set(s,o),y.push(o)}if(this.enableLabels){const o=t(e),u=l/(h.length-1),b=z(0,200,u),w=z(20,6,u)/.75,_=e.loadPriority!=null&&e.loadPriority>=h.length,f=new c([b,_?0:b,_?0:b]),v=this.view.type==="3d"?()=>new P({verticalOffset:new x({screenLength:40/.75}),callout:new L({color:new c("white"),border:new O({color:new c("black")})}),symbolLayers:new $([new j({text:o,halo:{color:"white",size:1/.75},material:{color:f},size:w})])}):()=>new T({text:o,haloColor:"white",haloSize:1/.75,color:f,size:w}),n=this._labels.get(s);if(n){const i=v();n.symbol!=null&&JSON.stringify(i)===JSON.stringify(n.symbol)||(n.symbol=i)}else{const i=new S({geometry:g.extent.center,symbol:v()});this._labels.set(s,i),y.push(i)}}});const p=new Array;m.forEach(e=>{const l=this._polygons.get(e);l!=null&&(p.push(l),this._polygons.delete(e));const s=this._labels.get(e);s!=null&&(p.push(s),this._labels.delete(e))}),this.view.graphics.removeMany(p),this.view.graphics.addMany(y)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};a([d({constructOnly:!0})],r.prototype,"view",void 0),a([d({readOnly:!0})],r.prototype,"updating",void 0),a([d()],r.prototype,"enabled",null),r=a([k("esri.views.support.TileTreeDebugger")],r);export{r as d};
