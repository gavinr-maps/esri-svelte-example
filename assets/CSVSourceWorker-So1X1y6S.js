import"./geometry-CnaxvJsv.js";import{I as j,U as P,g as R}from"./assets-BNizZMOZ.js";import{c as V}from"./reactiveUtils-BFQ0BtrB.js";import{e as L,n as A}from"./date-M6n_RqpC.js";import{c as I,n as G}from"./subclass-BR3PhgZG.js";import{b as Q}from"./Accessor-D6mNnsWy.js";import{O as M}from"./projection-tSh-0UvX.js";import{t as Z}from"./json-Wa8cmqdu.js";import{G as Y,x as J,af as U,f as B,a5 as H}from"./Point-TlcsOcXV.js";import{e as K}from"./OptimizedFeature-7juV2tZm.js";import{e as W}from"./OptimizedGeometry-vU5jWBvU.js";import{m as z}from"./FeatureStore-GQfqFqRN.js";import{x as X}from"./timeSupport-86-Lo3YD.js";import{$ as ee}from"./QueryEngine-BaqPXEl6.js";import{c as te}from"./number-CrcpkfNb.js";import{c as _,K as ie,H as ne}from"./fieldUtils-C5R42-PY.js";import{i as re,o as oe}from"./clientSideDefaults-DDr2PCsV.js";import{Z as w}from"./FieldsIndex-DHql50vu.js";import{i as T}from"./Promise-CZrWwByK.js";import"./Extent-B4rrMrqp.js";import"./Evented-CXIxDjmW.js";import"./Polyline-BQFeqYXi.js";import"./writer-3zufXUNV.js";import"./mathUtils-ClvKsMak.js";import"./jsonMap-DCC6W5ex.js";import"./index-BVncS3aY.js";import"./shared-B3wH2qpO.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./aaBoundingBox-BGxkJAW0.js";import"./featureConversionUtils-B-SknPj_.js";import"./jsonUtils-DtWlwXHP.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-BYcuS8_t.js";import"./PooledRBush-CGlhTzFe.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./optimizedFeatureQueryEngineAdapter-Buta7wlw.js";import"./centroid-DdLmOD72.js";import"./normalizeUtils-CuTX3yb4.js";import"./normalizeUtilsCommon-DNPu20r0.js";import"./utils-Blh5cXWv.js";import"./utils-Bh7lx_TM.js";import"./MemCache-C6WUx-5V.js";import"./LRUCache-ju6LnIBZ.js";import"./WhereClause-CO6Fm86l.js";import"./TimeOnly-BtK5SiqG.js";import"./UnknownTimeZone-D0GlcniK.js";import"./fieldType-CIG5ey7e.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./quantizationUtils-DFd0XKEL.js";import"./utils-hH5IaWNz.js";import"./screenUtils-PfxkaaMN.js";import"./timeUtils-DQR2jUPL.js";import"./heatmapUtils-C-uT6ZIV.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./utils-HfpQY-3e.js";import"./Basemap-CKBB4cRW.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-DCqdz-K4.js";import"./loadAll-z9YY33Kx.js";import"./PortalItem-CaeKabGc.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./writeUtils-BUKZUL8X.js";import"./layerUtils-BzjQnEdj.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./utils-DUUw13Ab.js";import"./ClassBreaksDefinition-BpZNgsmK.js";import"./enumeration--HlxOQ_N.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Scheduler-CDoWuxMK.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./intl-CArXn1et.js";import"./defaultsJSON-GKolV7NZ.js";const E=/^\s*"([\S\s]*)"\s*$/,O=/""/g,S=`
`,se=[","," ",";","|","	"];function*$(r,t,e){let i=0;for(;i<=r.length;){const n=r.indexOf(t,i),o=r.substring(i,n>-1?n:void 0);i+=o.length+t.length,e&&!o.trim()||(yield o)}}function q(r){const t=r.includes(`\r
`)?`\r
`:S;return $(r,t,!0)}function C(r,t){return $(r,t,!1)}function ae(r,t,e){r=r.trim(),t=t==null?void 0:t.trim();const i=[],n=Array.from(new Set([e==null?void 0:e.delimiter,...se])).filter(s=>s!=null);for(const s of n){const a=N(r,s).length,c=N(t,s).length??a;a>1&&i.push({weight:Math.min(a,c),delimiter:s})}const o=i.sort(({weight:s},{weight:a})=>a-s).map(({delimiter:s})=>s);for(const s of o){const a=le(k(r,s).names,e==null?void 0:e.longitudeField,e==null?void 0:e.latitudeField);if(a.longitudeFieldName&&a.latitudeFieldName)return{delimiter:s,locationInfo:a}}return{delimiter:o[0],locationInfo:null}}function*v(r,t,e,i=()=>Object.create(null)){const n=q(r);n.next();let o="",s="",a=0,c=i(),u=0;e:for(const h of n){const p=C(h,e);for(const y of p)if(o+=s+y,s="",a+=D(y),a%2==0){if(a>0){const g=E.exec(o);if(!g){c=i(),u=0,o="",a=0;continue e}c[t[u]]=g[1].replaceAll(O,'"'),u++}else c[t[u]]=o,u++;o="",a=0}else s=e;a===0?(yield c,c=i(),u=0):s=S}}function k(r,t){const e=N(r,t).filter(n=>n!=null),i=e.map(n=>_(n));for(let n=i.length-1;n>=0;n--)i[n]||(i.splice(n,1),e.splice(n,1));return{names:i,aliases:e}}function N(r,t){if(!(r!=null&&r.length))return[];const e=[];let i="",n="",o=0;const s=C(r,t);for(const a of s)if(i+=n+a,n="",o+=D(a),o%2==0){if(o>0){const c=E.exec(i);c&&e.push(c[1].replaceAll(O,'"'))}else e.push(i);i="",o=0}else n=t;return e}function D(r){let t=0,e=0;for(e=r.indexOf('"',e);e>=0;)t++,e=r.indexOf('"',e+1);return t}function le(r,t,e){var s,a;t=(s=_(t))==null?void 0:s.toLowerCase(),e=(a=_(e))==null?void 0:a.toLowerCase();const i=r.map(c=>c.toLowerCase()),n=t?r[i.indexOf(t)]:null,o=e?r[i.indexOf(e)]:null;return{longitudeFieldName:n||r[i.indexOf(de.find(c=>i.includes(c)))],latitudeFieldName:o||r[i.indexOf(ue.find(c=>i.includes(c)))]}}function me(r,t,e,i,n){const o=[],s=v(r,e,t),a=[];for(const c of s){if(a.length===10)break;a.push(c)}for(let c=0;c<e.length;c++){const u=e[c],h=i[c];if(u===n.longitudeFieldName||u===n.latitudeFieldName)o.push({name:u,type:"esriFieldTypeDouble",alias:h});else{let p;switch(ce(a.map(y=>y[u]))){case"integer":p="esriFieldTypeInteger";break;case"double":p="esriFieldTypeDouble";break;case"date":p="esriFieldTypeDate";break;default:p="esriFieldTypeString"}o.push({name:u,type:p,alias:h,length:ie(p)})}}return o}function ce(r){if(!r.length)return"string";const t=/[^+\-.,0-9]/;return r.map(e=>{if(e!==""){if(!t.test(e)){let i=x(e);if(!isNaN(i))return/[.,]/.test(e)||!Number.isInteger(i)||i>214783647||i<-214783648?"double":"integer";if(e.includes("E")&&(i=Number(e),!Number.isNaN(i)||e.includes(",")&&(e=e.replace(",","."),i=Number(e),!Number.isNaN(i))))return"double"}return L(e)?"date":"string"}}).reduce((e,i)=>e===void 0?i:i===void 0?e:e===i?i:e==="string"||i==="string"?"string":e==="double"||i==="double"?"double":void 0)}const x=function(){const r=te(),t=new RegExp("^"+r.regexp+"$"),e=new RegExp("["+r.group+"\\s\\xa0]","g"),i=r.factor;return n=>{const o=t.exec(n);if(r.factor=i,!o)return NaN;let s=o[1];if(!o[1]){if(!o[2])return NaN;s=o[2],r.factor*=-1}return s=s.replace(e,"").replace(r.decimal,"."),+s*r.factor}}(),ue=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point_y"],de=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point_x"],pe=oe("esriGeometryPoint"),fe=["csv"],he=[0,0];class ye{constructor(t,e){this.x=t,this.y=e}}class Gt{constructor(){this._queryEngine=null,this._snapshotFeatures=async t=>{const e=await this._fetch(t);return this._createFeatures(e)}}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){var c;this._loadOptions=t;const[i]=await Promise.all([this._fetch(e.signal),this._checkProjection((c=t==null?void 0:t.parsingOptions)==null?void 0:c.spatialReference)]),n=ge(i,t);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const o=await this._createFeatures(i);this._queryEngine.featureStore.addMany(o);const{fullExtent:s,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=s,a){const{start:u,end:h}=a;n.layerDefinition.timeInfo.timeExtent=[u,h]}return n}async applyEdits(){throw new I("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){var n;this._loadOptions.customParameters=t,(n=this._snapshotTask)==null||n.abort(),this._snapshotTask=V(this._snapshotFeatures),this._snapshotTask.promise.then(o=>{this._queryEngine.featureStore.clear(),o&&this._queryEngine.featureStore.addMany(o)},o=>{this._queryEngine.featureStore.clear(),Q(o)||G.getLogger("esri.layers.CSVLayer").error(new I("csv-layer:refresh","An error occurred during refresh",{error:o}))}),await this._waitSnapshotComplete();const{fullExtent:e,timeExtent:i}=await this._queryEngine.fetchRecomputedExtents();return{extent:e,timeExtent:i}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:e,customParameters:i}=this._loadOptions;if(!e)throw new I("csv-layer:invalid-source","url not defined");const n=j(e);return(await P(n.path,{query:{...n.query,...i},responseType:"text",signal:t})).data}_createQueryEngine(t){const{objectIdField:e,fields:i,extent:n,timeInfo:o}=t.layerDefinition,s=new z({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new ee({fieldsIndex:w.fromLayerJSON({fields:i,dateFieldsTimeReference:{timeZoneIANA:T}}),geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:o,objectIdField:e,spatialReference:n.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:s})}async _createFeatures(t){const{latitudeFieldName:e,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:o,spatialReference:s}=this._queryEngine;let a=[];const c=[],u=o.fields.filter(l=>l.name!==n).map(l=>l.name);let h=0;const p={};for(const l of o.fields)if(l.type!=="esriFieldTypeOID"&&l.type!=="esriFieldTypeGlobalID"){const f=ne(l);f!==void 0&&(p[l.name]=f)}const y=v(t,u,this._delimiter,re(p,n));for(const l of y){const f=this._parseCoordinateValue(l[e]),F=this._parseCoordinateValue(l[i]);if(F!=null&&f!=null&&!isNaN(f)&&!isNaN(F)){l[e]=f,l[i]=F;for(const m in l)if(m!==e&&m!==i){if(o.isDateField(m))l[m]=A(l[m]);else if(o.isNumericField(m)){const d=x(l[m]);isNaN(d)?l[m]=null:l[m]=d}}l[n]=h,h++,a.push(new ye(F,f)),c.push(l)}}if(!Y({wkid:4326},s))if(J(s))for(const l of a)[l.x,l.y]=U(l.x,l.y,he);else a=M(Z,a,B.WGS84,s,null,null);const g=[];for(let l=0;l<a.length;l++){const{x:f,y:F}=a[l],m=c[l];m[n]=l+1,g.push(new K(new W([],[f,F]),m,null,m[n]))}return g}_parseCoordinateValue(t){if(t==null||t==="")return null;let e=x(t);return(isNaN(e)||Math.abs(e)>181)&&(e=parseFloat(t)),e}async _checkProjection(t){try{await X(H,t)}catch{throw new I("csv-layer:projection-not-supported","Projection not supported")}}}function ge(r,t){var l,f,F;const e=t.parsingOptions||{},i={delimiter:e.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:e.latitudeField,longitudeFieldName:e.longitudeField}},n=i.layerDefinition={name:R(t.url,fe)||"csv",dateFieldsTimeReference:{timeZoneIANA:T},drawingInfo:pe,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:e.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:e.spatialReference||{wkid:4326}}},o=q(r),s=(l=o.next().value)==null?void 0:l.trim(),a=(f=o.next().value)==null?void 0:f.trim();if(!s)throw new I("csv-layer:empty-csv","CSV is empty",{csv:r});const{delimiter:c,locationInfo:u}=ae(s,a,e);if(!c)throw new I("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:s,secondLine:a,parsingOptions:e});if(!u)throw new I("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:s,secondLine:a,parsingOptions:e});i.locationInfo=u,i.delimiter=c;const{names:h,aliases:p}=k(s,c),y=me(r,i.delimiter,h,p,i.locationInfo);if((F=e.fields)!=null&&F.length){const m=new w(e.fields);for(const d of y){const b=m.get(d.name);b&&Object.assign(d,b)}}if(!y.some(m=>m.type==="esriFieldTypeOID"&&(n.objectIdField=m.name,!0))){const m={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};n.objectIdField=m.name,y.unshift(m)}n.fields=y;const g=new w(n.fields);if(i.locationInfo&&(i.locationInfo.latitudeFieldName=g.get(i.locationInfo.latitudeFieldName).name,i.locationInfo.longitudeFieldName=g.get(i.locationInfo.longitudeFieldName).name),n.timeInfo){const m=n.timeInfo;if(m.startTimeField){const d=g.get(m.startTimeField);d?(m.startTimeField=d.name,d.type="esriFieldTypeDate"):m.startTimeField=null}if(m.endTimeField){const d=g.get(m.endTimeField);d?(m.endTimeField=d.name,d.type="esriFieldTypeDate"):m.endTimeField=null}if(m.trackIdField){const d=g.get(m.trackIdField);m.trackIdField=d?d.name:null}m.startTimeField||m.endTimeField||(n.timeInfo=null)}return i}export{Gt as default};
