const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./apiConverter-CBpLPeKU.js","./Transformation2D-BSBl8u-h.js","./ProjectionTransformation-DzMxxvj3.js","./SimpleGeometryCursor-B92kdZ15.js","./Accessor-BHnuXKD2.js","./Extent-CBBGeHb-.js","./Point-XGrwlf63.js","./cast-BA_-jlhc.js","./index-tefRSezt.js","./index-Cx51aysm.css","./JSONSupport-CGdeqxpk.js","./writer-B2bQV2uU.js","./Polyline-BmuD2-ZN.js","./mathUtils-DV9iOXpW.js","./jsonConverter-BddGRRgO.js"])))=>i.map(i=>d[i]);
import{M as y,G as ks,B as _e,q as ie,bV as te,b2 as Ue,N as Rt,D as G,r as B,m as ae,a as Dt,g as Pt,s as P,k as Fs,t as pe,a4 as le,o as Ms,H as Cs,bs as Ts,bp as Os,bn as Et,j as jt,aC as $s,a3 as qs}from"./Accessor-BHnuXKD2.js";import{d as qe}from"./reactiveUtils-BR0C1Kq4.js";import{u as As}from"./screenUtils-_ZIvrt5o.js";import{O as Le,c as Rs}from"./workers-D8Q3pEzK.js";import{z as Ds}from"./TileInfo-CRfZy5zq.js";import{a as T}from"./definitions-LJaw2n5Z.js";import{y as Wt,a as at,s as xe}from"./diffUtils-CMkuJvD2.js";import{g as E,Q as Ps,l as Es,t as nt}from"./Point-XGrwlf63.js";import{h as js}from"./TileStrategy-DlGVvP4C.js";import{e as ze}from"./TileKey-BtGhNUzq.js";import{a as ot,p as fe,c as Ge,i as me,u as $,d as Ws,M as Ne,s as Us,x as Ls,e as zs,f as Gs}from"./FeatureMetadata-_zu3ofPi.js";import{r as V,s as Q,t as Ns,i as Ut}from"./streamLayerUtils-CKwt2uXH.js";import{r as Bs,F as Vs}from"./MeshWriterRegistry-BI4haQA8.js";import{QueueProcessor as Lt}from"./QueueProcessor-BFetastB.js";import{p as Qs,r as zt,M as Xs,w as Ys,N as Hs,d as z,W as Gt,U as Js,u as Nt,X as J,f as Zs,h as Bt}from"./featureConversionUtils-DpmsPUmt.js";import{s as R}from"./OptimizedFeature-DcMLlxvB.js";import{x as Ks,j as ue}from"./queryUtils-DBeaQ3x_.js";import{Z as ge}from"./FieldsIndex-DFdVonga.js";import{i as Be}from"./Evented-DCWccWGU.js";import{u as Ve}from"./aaBoundingBox-CeBivBRq.js";import{e as er}from"./optimizedFeatureQueryEngineAdapter-Dffp2J7r.js";import{L as Vt}from"./QueryEngine-BJMZSAnZ.js";import{aj as tr,A as ct}from"./opacityUtils-CSd4XoR2.js";import{e as M}from"./OptimizedGeometry-7IxBWtHr.js";import{e as Qe,i as sr,r as rr}from"./Tile-CkUxg4dk.js";import{M as ht}from"./mathUtils-DV9iOXpW.js";import{j as ir,k as ar,a2 as nr,b as lt,R as or,H as ut,r as Qt}from"./Polyline-BmuD2-ZN.js";import{s as Xe}from"./memoryEstimations-5gFNwkKK.js";import{u as ke,i as dt,a as _t,s as Xt}from"./quantizationUtils-2Az-xHPA.js";import{_ as pt}from"./index-tefRSezt.js";import{s as cr,i as hr,u as lr}from"./operatorGeodeticDensify-CSc5qqA4.js";import{e as ur}from"./geodeticCurveType-CirnHLSB.js";import{P as dr}from"./normalizeUtils-XRAPXbWa.js";import{a as _r}from"./normalizeUtilsSync-D3hTE8bq.js";import{g as pr,P as fr}from"./cast-BA_-jlhc.js";import{d as mr,c as ft,S as gr}from"./query-BS_L6I0Q.js";import{c as yr}from"./displayFilterUtils-DV_nOx_h.js";import{b as Yt}from"./Query-DCBIeen2.js";import{p as br}from"./TimeExtent-J5qnUFx_.js";import{n as Ir}from"./uuid-Cl5lrJ4c.js";import{$ as mt}from"./ogcFeatureUtils-CRdDyVzN.js";import{a as vr}from"./pbf-CFI-xDDp.js";import{b as wr,h as Sr}from"./pbfQueryUtils-AwPAOS5M.js";import{J as xr}from"./parquet-TxqRNGzn.js";import{d as kr}from"./StreamFeatureManager-DuuRbCxA.js";import{createConnection as Fr}from"./createConnection-BZwhmNrP.js";import{d as Mr}from"./UpdateTracking2D-BJv4lrAz.js";import"./SimpleObservable-7oieNGD8.js";import"./Queue-BOnccek2.js";import"./intl-Do3GEEJ7.js";import"./Promise-CmQqe-ke.js";import"./JSONSupport-CGdeqxpk.js";import"./writer-B2bQV2uU.js";import"./TileKey-DZd6gJy7.js";import"./vec2-maR1OrZI.js";import"./common-DQOJ18NT.js";import"./ScheduledQueueProcessor-DfrR8pp0.js";import"./ReactiveMap-Dwhwbx9R.js";import"./signal-DSa0yokC.js";import"./dataViewUtils-CH0QMRr9.js";import"./enums-D9v74xTE.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./vec2f32-BbH2jxlN.js";import"./timeSupport-Cvj97qZO.js";import"./Extent-CBBGeHb-.js";import"./jsonUtils-Cu7OBRmN.js";import"./TimeOnly-yGYcAQQJ.js";import"./CIMSymbolHelper-Vkq7AVTn.js";import"./BidiEngine-DNnuvc1i.js";import"./TextSymbol-BQ_NW9Xo.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./enumeration-Cr5WIZs4.js";import"./fontUtils-D0SfAiSy.js";import"./GeometryUtils-B5FJlfZD.js";import"./enums-BJSSbDkD.js";import"./utils-B91u8350.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-5QTNbyfl.js";import"./floatRGBA-CR2j2c7-.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./defaults-Dwxdhopq.js";import"./defaultsJSON-GKolV7NZ.js";import"./labelFormatUtils-B--9rEVY.js";import"./labelUtils-Dq8OkaT-.js";import"./TechniqueType-uMFRS8dR.js";import"./PieChartMeshWriter-CYKOJPZo.js";import"./libtess-BP1QYsmS.js";import"./utils-ilH32Koe.js";import"./earcut-Lltz9D9k.js";import"./vec2f64-Dy6m9Nrb.js";import"./grouping-Df5gVU-y.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./projection-B2I9Bzj_.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./json-Wa8cmqdu.js";import"./timeZoneUtils-COos5xIr.js";import"./WhereClauseCache-CrfkeLux.js";import"./LRUCache-DS2O1kTf.js";import"./MemCache-CDoaVBHf.js";import"./WhereClause-diW5rNp6.js";import"./fieldType-L-VlbZqy.js";import"./QueryEngineCapabilities-DZTubngj.js";import"./timeUtils-D2X862bk.js";import"./utils-D8exU0T6.js";import"./heatmapUtils-DA7NmY3d.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./utils-DLmnG8WZ.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./utils-B8VMZhYy.js";import"./ClassBreaksDefinition-DvZJqFCP.js";import"./SnappingCandidate-O5eRSE6e.js";import"./FixedIntervalBinParameters-uigAmvtd.js";import"./NormalizationBinParametersMixin-D6iHLB7I.js";import"./Clonable-DvJsj5LF.js";import"./Scheduler-B_GuBefw.js";import"./debugFlags-ZrDyTcDc.js";import"./quickselect-QQC62dOK.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./normalizeUtilsCommon-D0zPTJCj.js";import"./utils-Cy8wFNQo.js";import"./utils-CkSELPnj.js";import"./queryZScale-DwN6mTru.js";import"./typeUtils-BSg8Y507.js";import"./Field-Cyk7Ur5d.js";import"./FullTextSearch-BWm_kPUE.js";import"./geojson-CxQh_AXs.js";import"./date-DLgTylpo.js";import"./clientSideDefaults-BOCfNRNG.js";import"./sourceUtils-Lw75gUHq.js";import"./CircularArray-CujHzHWW.js";import"./UpdatingHandles-ptqz1ck8.js";let Cr=class{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(e){Le(this._eventLog.onEvent(e))}};const ye=1,Ye=2,be=4,He=8,Je=16,Ie=32,Ze=64,ve=128;function Fe(l){switch(l){case ye:case He:case Ie:return-1;case Ye:case Ze:return 0;case be:case Je:case ve:return 1}}function Me(l){switch(l){case ye:case Ye:case be:return-1;case He:case Je:return 0;case Ie:case Ze:case ve:return 1}}const gt=ye|He|Ie,yt=be|Je|ve,bt=ye|Ye|be,It=Ie|Ze|ve;let Tr=class{constructor(e,t,s,r,i=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=i,this._meshes={self:new ot(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const a=r?1:0;this._copyBufferedDataIntoSelf=s&&this._bufferingEnabled&&e.level===a}get id(){return this.tileKey.id}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey.id,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach((r,i)=>{const a=r.serialize(),n=1<<i,o=Fe(n),c=Me(n),h=new ze(this.tileKey).getNormalizedNeighbor(o,c,e);t.message.push({tileId:h.id,...a.message}),t.transferList.push(...a.transferList)}),t}_addOverlap(e,t,s,r){const i=Math.min(T/2,s),a=Math.min(T/2,r),n=255^((e<0+i?yt:e>=T-i?gt:yt|gt)|(t<0+a?It:t>=T-a?bt:It|bt));this._currentRecordOverlaps|=n}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(this._copyBufferedDataIntoSelf){const a=-Fe(t)*T,n=-Me(t)*T;if(n!==0)continue;this._meshes.self.copyLast(a,n);continue}if(!this._meshes.neighbors[e]){const a=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new ot(t,a)}const s=this._meshes.neighbors[e],r=-Fe(t)*T,i=-Me(t)*T;s.copyLastFrom(this._meshes.self,r,i)}}}},Or=class{},W=class Ht{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new Ht;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}hasArcadeDependency(e){var t;return((t=this._defaultResult)==null?void 0:t.some(s=>s.hasArcadeDependency(e)))??!1}match(e,t,s){const r=this.doMatch(e,t)||this.getDefault();if(r&&r.length>0){const i=this.getBackgroundFill();if(i)return[...i,...r]}return r}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},$r=class Jt extends W{static async fromDictionaryRenderer(e,t){return new Jt(e,t)}constructor(e,t){super(),this._context=e,this._schema=t,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const s=t.getCursor(),r=[];for(;s.next();)r.push(this._updateMeshWriterGroup(e,s));await Promise.all(r)}match(e,t){const s=e.getAttributeHash();return this._hashToGroup.get(s)}async _updateMeshWriterGroup(e,t){const s=t.readLegacyFeatureForDisplay(),r=t.getAttributeHash();if(this._hashToGroup.has(r))return;this._hashToGroup.set(r,null);const i=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:s});if(!i)return;const a=await this._context.createMeshWriters(i.meshes);this._hashToGroup.set(r,a)}},qr=class Zt extends W{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new Zt(s,t.isMaxInclusive);await Promise.all(t.intervals.map(async n=>{const o=await e.createMeshWriters(n.meshes);r.add(n,o)}));const i=await e.createMeshWriters(t.defaultSymbol);r.setDefault(i);const a=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(a),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((s,r)=>s.interval.min-r.interval.min)}size(){return super.size()+this._intervals.length}hasArcadeDependency(e){var t;return((t=this._field)==null?void 0:t.hasArcadeDependency(e))||this._intervals.some(s=>s.result.some(r=>r.hasArcadeDependency(e)))}doMatch(e,t){var r;const s=(r=this._field)==null?void 0:r.read(e,t);if(s==null||isNaN(s)||s===1/0||s===-1/0)return null;for(let i=0;i<this._intervals.length;i++){const{interval:a,result:n}=this._intervals[i],o=s>=a.min,c=this._isMaxInclusive?s<=a.max:s<a.max;if(o&&c)return n}return null}},Ar=class Kt extends W{static async fromLabelSchema(e,t){const s=t.classes.map(async i=>{const a=await e.createMeshWriters(i.meshes);return{minScale:i.minScale,maxScale:i.maxScale,meshes:a,expression:null,where:await e.storage.createWhereClause(i.where)}}),r=await Promise.all(s);return new Kt(r)}constructor(e){super(),this._labels=e}match(e,t,s){if(!this._labels.length)return null;const r=this._getLabels(t.$view.scale),i=[];for(const a of r)a.where&&!a.where(e,s)||i.push(...a.meshes);return i}hasArcadeDependency(e){return this._labels.some(t=>t.meshes.some(s=>s.hasArcadeDependency(e)))}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}},Rr=class es extends W{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter(o=>!!o),i=new es(r,t.fieldDelimiter),a=await e.createMeshWriters(t.defaultSymbol);i.setDefault(a);const n=await e.createMeshWriters(t.backgroundFill);return i.setBackgroundFill(n),await Promise.all(t.map.map(async(o,c)=>{const h=await e.createMeshWriters(o.symbol);o.value==="<Null>"?i.setNullResult(h):i.add(o.value,h,c+1)})),i}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(s==null||s===""||s==="<Null>")return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}hasArcadeDependency(e){var t;return this._fields.some(s=>s.hasArcadeDependency(e))||[...this._resultsMap.values()].some(s=>s.meshWriters.some(r=>r.hasArcadeDependency(e)))||((t=this._nullResult)==null?void 0:t.some(s=>s.hasArcadeDependency(e)))||!1}doMatch(e,t){var i;const s=this._getValueFromFields(e,t);if(this._nullResult!==null&&(s==null||s===""||s==="<Null>"))return this._nullResult;if(s==null)return null;const r=s.toString();return(i=this._resultsMap.get(r))==null?void 0:i.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);i==null||i===""?s.push("<Null>"):s.push(i)}return s.join(this._separator)}};async function j(l,e){switch(e.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return W.from(l,e);case"interval":return qr.fromIntervalSchema(l,e);case"dictionary":return $r.fromDictionaryRenderer(l,e);case"label":return Ar.fromLabelSchema(l,e);case"map":return Rr.fromMatcherSchema(l,e);case"subtype":return Dr.fromSubtypes(l,e);case"cluster":return Pr.fromClusterSchema(l,e);case"track":return Er.fromTrackSchema(l,e);default:throw new Error("Impl")}}let Dr=class ts extends W{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const i in t.renderers){const a=parseInt(i,10),n=j(e,t.renderers[i]).then(o=>s.set(a,o));r.push(n)}return await Promise.all(r),new ts(s,t.subtypeField)}match(e,t,s){const r=e.readAttribute(this._subtypeField),i=this._subMatchers.get(r);return i?i.match(e,t,s):null}hasArcadeDependency(e){for(const t of this._subMatchers.values())if(t.hasArcadeDependency(e))return!0;return!1}},Pr=class ss extends W{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([j(e,t.feature),j(e,t.cluster)]);return new ss(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t,s){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t,s):this._clusterMatcher.match(e,t,s)}hasArcadeDependency(e){return this._featureMatcher.hasArcadeDependency(e)||this._clusterMatcher.hasArcadeDependency(e)}},Er=class rs extends W{static async fromTrackSchema(e,t){const[s,r,i]=await Promise.all([j(e,t.previousObservation),j(e,t.latestObservation),j(e,t.trackLine)]);return new rs(s,r,i)}constructor(e,t,s){super(),this._previousObservationMatcher=e,this._latestObservationMatcher=t,this._trackLineMatcher=s}match(e,t,s){switch(e.readAttribute(V)){case Q.TrackLine:return this._trackLineMatcher.match(e,t,s);case Q.LatestObservation:return this._latestObservationMatcher.match(e,t,s);case Q.PreviousObservation:return this._previousObservationMatcher.match(e,t,s)}return null}hasArcadeDependency(e){return this._trackLineMatcher.hasArcadeDependency(e)||this._latestObservationMatcher.hasArcadeDependency(e)||this._previousObservationMatcher.hasArcadeDependency(e)}},jr=class is extends Or{static async create(e,t){const s=await j(e,t.symbology),r=t.labels?await j(e,t.labels):null;return new is(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){var s;await Promise.all([this._symbology.fetchResources(e,t),(s=this._labels)==null?void 0:s.fetchResources(e,t)])}enqueueWriterRequests(e,t,s,r){const i=this._symbology.match(t,s,r);if(i){for(const a of i)a.enqueueRequest(e,t,s);if(this._labels){const a=this._labels.match(t,s,r);if(!a)return;for(const n of a)n.enqueueRequest(e,t,s)}}}write(e,t,s,r,i,a){const n=this._symbology.match(s,r,i);if(n){for(const o of n)o.write(e,t,s,r,a);if(e.entityRecordCount()>=1&&this._labels){const o=this._labels.match(s,r,i);if(!o)return;for(const c of o)c.setReferences(n),c.write(e,t,s,r,a)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}hasArcadeDependency(e){var t;return!(!this._symbology.hasArcadeDependency(e)&&!((t=this._labels)!=null&&t.hasArcadeDependency(e)))}},Wr=class{constructor(e,t,s,r){this.storage=e,this.proxy=t,this.viewParams=s,this.registry=r}async createMeshWriters(e){const t=e.map(s=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,s));return Promise.all(t)}},Ur=class{constructor(e){this._outstandingMessages=[],this._queue=new Lt({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}},Ke=class Ae{static async create(e,t){var r;if(t.statisticType==="count"){const i=new Bs(1);return new Ae(t.name,t.alias,t.type,t.statisticType,i)}const s=await e.createComputedField({expression:(r=t.onStatisticExpression)==null?void 0:r.expression,field:t.onStatisticField});return new Ae(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}},we=class{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}},as=class{constructor(e,t,s){this._source=e,this._attributeStore=t,this._sqlOptions=s,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}get isAggregate(){return!1}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){var t;(t=this._sendStates.get(e.key.id))==null||t.destroy(),this._sendStates.delete(e.key.id)}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(e){}hasArcadeDependency(e){return!1}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,t=>t,t=>t)}getDisplayAndObjectIds(e){return this.displayMap(e,t=>t,(t,s,r)=>[t,r])}afterUpdateChunks(){}},et=class extends as{constructor(e,t,s,r,i){super(e,t,i),this.spatialReference=s,this.aggregateFields=r,this._arcadeDependencies=new Set,this.events=new Be,this.featureAdapter=er;for(const a of r)tr(this._arcadeDependencies,a.computed)}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new Vt({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}get isAggregate(){return!0}removeChunks(e){}hasArcadeDependency(e){return this._arcadeDependencies.has(e)}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=Ve();for(const r of e){const i=Qs(s,r.geometry,!1,!1);i&&t(i)}}},X=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}},Re=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}},Lr=class extends we{constructor(e,t){super(e),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.done=!1}destroy(){const e=this.subscription.tile.key.level;for(const t of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${t}.${e}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const e of this.featureCache.values()){const t=e.clone();t.geometry&&Xs(t.geometry,t.geometry,!1,!1,this.subscription.tile.transform),yield t}}},zr=class ns extends et{static async create(e,t,s,r,i,a){const n=new fe({spatialReference:t}),o=await Promise.all(e.fields.map(async h=>Ke.create(n,h))),c=e.featureFilter?await Ge.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return e.index.type==="geohash"&&await Ks(t,E.WGS84),new ns(e,c,i,o,t,s,r,a)}constructor(e,t,s,r,i,a,n,o){super(a,n,i,r,o),this._schema=e,this._featureFilter=t,this._arcadeContextInfo=s,this._metadata=me.createFeature({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fieldsIndex:new ge(e.fields).toJSON(),globalIdField:null,spatialReference:a.metadata.spatialReference,outSpatialReference:a.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}createState(e){return new Lr(e,this._attributeStore)}async*applyOverrideUpdate(e){for(const t of this._sendStates.values())t.reset(),yield new X(t.subscription,$.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,s){const r=new Map(e.map(a=>[t(a),a])),i=[];for(const a of this._sendStates.values())for(const n of a.featuresWorldSpace()){const{objectId:o,displayId:c}=n,h=r.get(o);if(h!=null){const u=s(c,h,o);i.push(u),r.delete(o)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._sendStates.values())for(const a of i.featuresWorldSpace())t.has(a.displayId)&&!s.has(a.objectId)&&(a.geometry&&r.push({...zt(a,this._metadata.geometryType,!1,!1),displayId:a.displayId}),s.add(a.objectId));return{features:[],aggregates:r,tracks:[]}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){const t=new Set;for(const s of this._sendStates.values())for(const r of s.featuresWorldSpace())t.has(r.objectId)||(e(r),t.add(r.objectId))}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:e.scale,sqlOptions:this._sqlOptions};case"grid":{const t=this._schema.index.fixedBinLevel,s=t!=null?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:s,sqlOptions:this._sqlOptions}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:i,featureCache:a}=e,n=r.tile;if(e.done)return;for(const m of t.chunks()){if(s.has(m.chunkId))continue;s.add(m.chunkId);const f=m.queryInfo;if("tileId"in f){const g=new ze(f.tileId);if(g.level!==n.level||g.world!==n.key.world)continue}m.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(i,e.tile.extent,e.tile.resolution)}const o=[],c=r.tile.transform,h=r.tile.key.level;for(const m of i.values()){let f=a.get(m.id);if(f)f.attributes=m.getAttributes();else{const g=m.getGeometry(this.spatialReference,c);f=new R(g,m.getAttributes(),null,m.id),g||(f.centroid=m.getGeometricCentroid(this.spatialReference,c)),f.displayId=this._attributeStore.createDisplayIdForObjectId(`${f.objectId}.${h}`),a.set(m.id,f)}o.push(f)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const u=$.fromOptimizedFeatures(o,this._metadata,c),d=u.getCursor(),p=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo);for(;d.next();)this._attributeStore.setAttributeData(d.getDisplayId(),d,p,this._sqlOptions);yield new Re(e.subscription,u,[],e.done,{})}},os=class{constructor(e){this._statistics=e}get statistics(){return this._statistics}};const vt=Math.PI/180;let tt=class De{static create(e){return new De(e.map(t=>Gr(t)))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field.name!==r.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new De(this._statistics.map(e=>e.clone()))}};function Gr(l){switch(l.statisticType){case"min":return new Nr(l);case"max":return new Br(l);case"avg":return new Qr(l);case"avg_angle":return new Xr(l);case"sum":case"count":return new Vr(l);case"mode":return new Yr(l)}}let Y=class{constructor(e){this.field=e}insert(e,t){if(!this.field.computed)return;const s=this.field.computed.read(e,t);Ws(s)||this._insertValue(s)}},Nr=class cs extends Y{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new cs(this.field);return e.value=this.value,e}},Br=class hs extends Y{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new hs(this.field);return e.value=this.value,e}},Vr=class ls extends Y{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new ls(this.field);return e.value=this.value,e}},Qr=class us extends Y{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new us(this.field);return e._total=this._total,e._count=this._count,e}},Xr=class ds extends Y{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*vt),this._y=this._y+Math.sin(e*vt),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new ds(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}},Yr=class _s extends Y{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);t!=null?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const r=this._frequencies.get(t);r!=null?this._frequencies.set(t,r+s):this._frequencies.set(t,s)}}clone(){const e=new _s(this.field);return e._frequencies=new Map(this._frequencies),e}},Pe=class ne extends os{static createId(e,t){return`${e}.${t}`}static create(e,t,s,r){return new ne(e,t,tt.create(s),r)}constructor(e,t,s,r){super(s),this.gridX=e,this.gridY=t,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return ne.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new ne(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r){this._count===0?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=r,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return e==null?this.centroidXWorld:Ys(e,this.centroidXWorld)}getCentroidY(e){return e==null?this.centroidYWorld:Hs(e,this.centroidYWorld)}getGeometry(e,t){const s=this.gridX*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell,i=new M([4],[s,r,s+this._worldUnitsPerCell,r,s+this._worldUnitsPerCell,r+this._worldUnitsPerCell,s,r+this._worldUnitsPerCell]);if(t!=null){const a=new M;return z(a,i,!1,!1,"esriGeometryPolygon",t)}return i}getCentroid(e){const t=new M([],[this.centroidXWorld,this.centroidYWorld]);if(e!=null){const s=new M;return z(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e,t){const s=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,i=new M([],[s,r]);if(t!=null){const a=new M;return z(a,i,!1,!1,"esriGeometryPoint",t)}return i}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return this._firstFeatureAttributes!=null?{...e,...this._firstFeatureAttributes}:e}},ps=class{constructor(e){this._options=e}insert(e,t){const s=e.getCursor(),{arcadeContextInfo:r,scale:i}=this._options,a=Qe(i,r);for(;s.next();)this._insertFeature(s,a,this._options.sqlOptions,t)}_insertFeature(e,t,s,r){const{featureFilter:i}=this._options;if(i!==null&&!i.check(e,s))return;let a=0,n=0;if(e.geometryType==="esriGeometryPoint")a=e.readXWorldSpace(),n=e.readYWorldSpace();else{if(r){const c=e.readCentroidForDisplay();if(c==null)return;const[h,u]=c.coords;if(h<0||h>T||u<0||u>T)return}const o=e.readCentroidWorldSpace();if(o==null)return;a=o.coords[0],n=o.coords[1]}this._insert(e,a,n,t)}};const Hr=96;function Ee(l,e){return Ps(l)*Es*Hr/e}let Jr=class extends ps{constructor(e){super(e),this._cells=new Map,this._pixelsPerMapUnit=Ee(e.spatialReference,e.scale)}put(e){for(const t of this._cells.values()){const s=e.get(t.id);s?s.merge(t):e.set(t.id,t.clone())}}putBounded(e,t,s){const r=[t.xmin,t.ymin,t.xmax,t.ymax],[i,a,n,o]=r,c=Math.floor(i*this._pixelsPerMapUnit/this._options.cellSize),h=Math.floor(a*this._pixelsPerMapUnit/this._options.cellSize),u=Math.ceil(n*this._pixelsPerMapUnit/this._options.cellSize),d=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize);for(let p=h;p<=d;p++)for(let _=c;_<=u;_++){const m=`${_}.${p}`,f=this._cells.get(m);if(!f)continue;const g=e.get(f.id);g?f&&!e.has(f.id)&&g.merge(f):e.set(f.id,f.clone())}}_insert(e,t,s,r){const i=t*this._pixelsPerMapUnit,a=s*this._pixelsPerMapUnit,n=Math.floor(i/this._options.cellSize),o=Math.floor(a/this._options.cellSize);this._getCellOrCreate(n,o).insert(e,r,t,s)}_getCellOrCreate(e,t){const s=Pe.createId(e,t);let r=this._cells.get(s);if(!r){const i=1*this._options.cellSize/this._pixelsPerMapUnit;r=Pe.create(e,t,this._options.fields,i),this._cells.set(s,r)}return r}},Zr=class{constructor(e,t){this.inner=e,this.displayId=t}};const wt=128;let Kr=class extends we{constructor(e){super(e),this.didSend=!1,this.done=!1}},ei=class{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null);yield new R(t,e.inner.getAttributes(),null,e.inner.id,e.displayId)}}clusters(){return this._clusters.values()}updateChunks(e,t){let s=!1;for(const n of e){const o=n.queryInfo;"tileId"in o&&new ze(o.tileId).level!==this._level||this._handledChunks.has(n.normalizedChunkId)||(this._handledChunks.add(n.normalizedChunkId),s=!0,n.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=Ee(this._indexOptions.spatialReference,this._scale),a=this._indexOptions.cellSize;for(const{subscription:n}of t){const o=n.tile.bounds,c=Math.floor(o[0]*i/a),h=Math.floor(o[1]*i/a),u=Math.ceil(o[2]*i/a),d=Math.ceil(o[3]*i/a);r.xMin=Math.min(r.xMin,c),r.yMin=Math.min(r.yMin,h),r.xMax=Math.max(r.xMax,u),r.yMax=Math.max(r.yMax,d)}return this._lastCellBounds!=null&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(s=!0,this._lastCellBounds=r),s&&this._clusterCells(r),s}async updateStatistics(e){let t=!1;for(const s of this._clusters.values())s.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,s.inner)||t);if(t){const s=Array.from(this._statistics.entries()).map(([r,i])=>({fieldName:r,minValue:i.minValue,maxValue:i.maxValue}));await e.container.updateStatistics(this._level,s)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const a of this._clusters.values()){let n=a.inner.getCentroidX(i);const o=a.inner.getCentroidY(i),c=s.tile.lod,h=c.wrap?c.worldSize[0]:null,u=a.inner.count===1?a.inner.firstObjectId:a.inner.id,d=a.displayId;if(h!=null)if(h===1){const p=new M([],[n,o]),_=new R(p,a.inner.getAttributes(),null,u,d);_.geometry.coords[0]-=T,r.push(_);const m=new M([],[n,o]),f=new R(m,a.inner.getAttributes(),null,u,d);f.geometry.coords[0]+=T,r.push(f)}else n>T+T/2?n-=h*T:n<-256&&(n+=h*T);if(n<T+wt&&n>=-128&&o<T+wt&&o>=-128){const p=new M([],[n,o]),_=new R(p,a.inner.getAttributes(),null,u,d);r.push(_)}}return $.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort((n,o)=>o.count-n.count);const s=[];for(const n of this._clusters.values())s.push(n.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/Ee(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,a=new Set;for(const n of t){if(a.has(n.id)||n.gridX<e.xMin||n.gridX>e.xMax||n.gridY<e.yMin||n.gridY>e.yMax)continue;const o=this._store.createDisplayIdForObjectId(n.id),c=new Zr(n.clone(),o);a.add(n.id),this._clusters.set(n.id,c);const h=n.centroidXWorld,u=n.centroidYWorld;for(let d=n.gridY-i;d<=n.gridY+i;d++)for(let p=n.gridX-i;p<=n.gridX+i;p++){if(d===n.gridY&&p===n.gridX)continue;const _=this._cells.get(Pe.createId(p,d));if(!_||a.has(_.id))continue;const m=Math.abs(_.centroidXWorld-h),f=Math.abs(_.centroidYWorld-u);m<r&&f<r&&(c.inner.merge(_),a.add(_.id))}}for(const n of s)this._store.releaseDisplayIdForObjectId(n)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if(r.field.type==="esriFieldTypeString")continue;const i=r.value,a=r.field,n=e.get(a.name);if(n){const{minValue:o,maxValue:c}=n,h=Math.min(n.minValue,i),u=Math.max(n.maxValue,i);o===h&&c===u||(n.minValue=h,n.maxValue=u,s=!0)}else e.set(a.name,{minValue:i,maxValue:i}),s=!0}return s}},ti=class fs extends et{static async create(e,t,s,r,i,a,n){const o=new fe({spatialReference:s}),c={type:"grid",fields:await Promise.all(t.fields.map(async h=>Ke.create(o,h))),spatialReference:s,featureFilter:t.featureFilter?await Ge.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,arcadeContextInfo:a,sqlOptions:n};return new fs(e,t.clusterRadius,c,t.fields,r,i,n)}constructor(e,t,s,r,i,a,n){super(i,a,s.spatialReference,s.fields,n),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=me.createFeature({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fieldsIndex:new ge([...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:i.metadata.spatialReference,outSpatialReference:i.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new Kr(e)}async*applyOverrideUpdate(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),i=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const n of a.clusters()){const o=r.get(n.inner.id);if(o==null){if(n.inner.count===1){const{firstObjectId:c}=n.inner,h=c?r.get(c):null;if(h!=null){const u=s(n.displayId,h,c);i.push(u),r.delete(c)}}}else{const c=s(n.displayId,o,n.inner.id);i.push(c),r.delete(n.inner.id)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const n of a.aggregatesWorldSpace())if(t.has(n.displayId)&&!s.has(n.displayId)){const o=zt(n,this._metadata.geometryType,!1,!1);if(s.add(n.displayId),o.attributes.cluster_count===1){r.push({...o,displayId:n.displayId});continue}i.push({...o,displayId:n.displayId})}return{features:r,aggregates:i,tracks:[]}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(a=>a.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const a of s)a.subscription.tile.level===this._requiredLevel&&(a.didSend=!1,a.done=!1);const r=Array.from(this._sendStates.values()).filter(a=>a.done).map(a=>a.subscription.tile.key),i=new Set(r);for(const a of this._sendStates.values())this._source.updateTracking.updating&&(r.some(n=>n.containsChild(a.subscription.tile.key))||a.subscription.tile.key.getChildKeys().every(n=>i.has(n)))||a.didSend||a.subscription.tile.level!==this._requiredLevel||(a.didSend=!0,yield*this._update(a,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new ei(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const i=r.getCursor(),a=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.arcadeContextInfo);for(;i.next();)this._attributeStore.setAttributeData(i.getDisplayId(),i,a,this._sqlOptions);yield new X(e.subscription,r,!0,e.done,{})}},si=class ms{static fromReader(e){const t=[],s=e.copy(),r=Ve();for(;s.next();)s.getBounds(r)&&t.push(s.getIndex());const i=sr(9,a=>(s.setIndex(a),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()}));return i.load(t),new ms(i)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}};const ri=64;function ii(l,e,t,s){const r=[l.xmin,l.ymin,l.xmax,l.ymax],i=ir.fromExtent(ar(r,s)),a=ue(i,s,E.WGS84,{densificationStep:e*ri});if(!a)return null;const n=Gt(new M,a,!1,!1),o=n.coords.filter((f,g)=>!(g%2)),c=n.coords.filter((f,g)=>g%2),h=Math.min(...o),u=Math.min(...c),d=Math.max(...o),p=Math.max(...c),_=je(h,u,t,E.WGS84),m=je(d,p,t,E.WGS84);return _&&m?{bounds:r,geohashBounds:{xLL:_[0],yLL:_[1],xTR:m[0],yTR:m[1]},level:t}:null}function je(l,e,t,s){if(s.isWebMercator){const a=ht(l/nt.radius),n=a-360*Math.floor((a+180)/360),o=[0,0];return St(o,0,ht(Math.PI/2-2*Math.atan(Math.exp(-e/nt.radius))),n,t),o}const r=ue({x:l,y:e},s,E.WGS84);if(!r)return null;const i=[0,0];return St(i,0,r.y,r.x,t),i}function ai(l,e){let t=-90,s=90,r=-180,i=180;for(let a=0;a<e;a++){const n=Math.ceil((a+1)/2),o=Math.floor((a+1)/2),c=1-a%2,h=30-(3*n+2*o),u=30-(2*n+3*o),d=3*c+2*(1-c),p=2*c+3*(1-c),_=3*c+7*(1-c)<<u,m=(7*c+3*(1-c)<<h&l.geohashX)>>h,f=(_&l.geohashY)>>u;for(let g=d-1;g>=0;g--){const b=(r+i)/2,I=m&1<<g?1:0;r=(1-I)*r+I*b,i=(1-I)*b+I*i}for(let g=p-1;g>=0;g--){const b=(t+s)/2,I=f&1<<g?1:0;t=(1-I)*t+I*b,s=(1-I)*b+I*s}}return[r,t,i,s]}function St(l,e,t,s,r){r%2&&(r+=1);let i=0,a=0,n=-90,o=90,c=-180,h=180;for(let u=0;u<r/2;u++){for(let d=0;d<5;d++){const p=(c+h)/2,_=s>p?1:0;i|=_<<29-(d+5*u),c=(1-_)*c+_*p,h=(1-_)*p+_*h}for(let d=0;d<5;d++){const p=(n+o)/2,_=t>p?1:0;a|=_<<29-(d+5*u),n=(1-_)*n+_*p,o=(1-_)*p+_*o}}l[2*e]=i,l[2*e+1]=a}let xt=class We extends os{static create(e,t,s,r){const i=tt.create(e),a=new Array(32);for(let n=0;n<a.length;n++)a[n]=null;return new We(i,t,s,r,a)}constructor(e,t,s,r,i){super(e),this.xNode=t,this.yNode=s,this.depth=r,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const e=new We(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r,i,a){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=i,this._statistics.insert(e,a),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(e,t){const s=this._getLngLatBounds(),[r,i,a,n]=s,o=ue({rings:[[[r,i],[r,n],[a,n],[a,i],[r,i]]]},E.WGS84,e),c=Gt(new M,o,!1,!1);return t!=null?z(new M,c,!1,!1,"esriGeometryPolygon",t,!1,!1):c}getGeometricCentroid(e,t){const s=this._getLngLatBounds(),[r,i,a,n]=s,o=ue({x:(r+a)/2,y:(i+n)/2},E.WGS84,e),c=Js(new M,o);return t!=null?z(new M,c,!1,!1,"esriGeometryPoint",t,!1,!1):c}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}find(e,t,s,r,i,a){if(r>=s)return this;const n=1-r%2,o=3*n+2*(1-n),c=2*n+3*(1-n),h=30-i-o,u=30-a-c,d=((e&7*n+3*(1-n)<<h)>>h)+((t&3*n+7*(1-n)<<u)>>u)*(8*n+4*(1-n)),p=this.children[d];return p==null?null:p.find(e,t,s,r+1,i+o,a+c)}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s),a=this.xNode<<r,n=this.yNode<<i;return ai({geohashX:a,geohashY:n},this.depth)}};class ni{constructor(e){this._fields=e,this._size=0,this._depth=0,this._root=xt.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(e,t,s){return this._root.find(e,t,s,0,0,0)}insert(e,t,s,r,i,a,n){let o=this._root,c=0,h=0,u=0;for(;o!==null;){if(o.insert(e,t,s,r,i,n),c>=a)return;const d=Math.ceil((c+1)/2),p=Math.floor((c+1)/2),_=1-c%2,m=30-(3*d+2*p),f=30-(2*d+3*p),g=(r&7*_+3*(1-_)<<m)>>m,b=(i&3*_+7*(1-_)<<f)>>f,I=g+b*(8*_+4*(1-_));h=h<<3*_+2*(1-_)|g,u=u<<2*_+3*(1-_)|b,o.children[I]==null&&(o.children[I]=xt.create(this._fields,h,u,c+1),this._depth=Math.max(this._depth,c+1),this._size+=1),c+=1,o=o.children[I]}}putBins(e,t){for(const s of this.getNodes(t)){const r=e.get(s.id);r?r.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let i=this._root;for(;i!==null;){const a=i.depth,n=i.xNode,o=i.yNode;if(a>=r){t.push(i),i=i.next;continue}const c=Math.ceil((a+1)/2),h=Math.floor((a+1)/2),u=1-a%2,d=30-(3*c+2*h),p=30-(2*c+3*h),_=~((1<<d)-1),m=~((1<<p)-1),f=(s.xLL&_)>>d,g=(s.yLL&m)>>p,b=(s.xTR&_)>>d,I=(s.yTR&m)>>p,F=n<<3*u+2*(1-u),O=o<<2*u+3*(1-u),S=F+8*u+4*(1-u),x=O+4*u+8*(1-u),k=Math.max(F,f),v=Math.max(O,g),q=Math.min(S,b),D=Math.min(x,I);let w=null,C=null;for(let U=v;U<=D;U++)for(let L=k;L<=q;L++){const xs=L-F+(U-O)*(8*u+4*(1-u)),H=i.children[xs];H&&(w||(w=H,w.next=i.next),C&&(C.next=H),C=H,H.next=i.next)}i=w||i.next}return t}}let oi=class extends ps{constructor(e){super(e),this._tree=new ni(this._options.fields)}put(e){throw new Error("Geohash tree does not support put")}putBounded(e,t,s){const{geohashLevel:r,spatialReference:i}=this._options,a=ii(t,s,r,i);a!=null&&this._tree.putBins(e,a)}_insert(e,t,s,r){const{geohashLevel:i,spatialReference:a}=this._options,n=je(t,s,i,a);n&&this._tree.insert(e,t,s,n[0],n[1],i,r)}},gs=class oe extends Ne{static from(e,t){if(e instanceof this){const s=new Set(t),r=e._indices.filter(i=>s.has(i));return new oe(e._reader,r)}return new oe(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTransform=null,this._reader=e,this._indices=t}setTransformForDisplay(e){const t=this._reader.getInTransform();if(t==null)return void(this._displayTransform=ke(e));const s=ke(t),r=ke(e),[i,a]=s.scale,[n,o]=s.translate,[c,h]=r.scale,[u,d]=r.translate,p=i/c,_=a/h,m=(n-u)/c,f=(o-d)/h;this._displayTransform={originPosition:"lowerLeft",scale:[1/p,1/_,1,1],translate:[-m/p,-f/_,0,0]}}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new oe(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._processorAttributes=this._processorAttributes,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}get usedMemory(){return Xe+this._reader.usedMemory}setProcessorAttributes(e){this._processorAttributes=Object.assign(this._processorAttributes??{},e)}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._displayTransform?dt(this._displayTransform,this._reader.readXForDisplay()):this._reader.readXForDisplay()}readYForDisplay(){return this._displayTransform?_t(this._displayTransform,this._reader.readYForDisplay()):this._reader.readYForDisplay()}readGeometryForDisplay(){return this._displayTransform?this._reader.readGeometryForDisplayTransformed(this._displayTransform):this._reader.readGeometryForDisplay()}readCentroidForDisplay(){var t;const e=(t=this._reader.readCentroidForDisplay())==null?void 0:t.clone();if(e){const[s,r]=e.coords;this._displayTransform?(e.coords[0]=dt(this._displayTransform,s),e.coords[1]=_t(this._displayTransform,r)):(e.coords[0]=s,e.coords[1]=r)}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){var s;return this._reader.readAttribute(e,t)??((s=this._processorAttributes)==null?void 0:s[e])}readAttributes(){return{...this._processorAttributes??{},...this._reader.readAttributes()}}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return Nt(e,this.geometryType,!1,!1)}readGeometryArea(){var e;return this._displayTransform?((e=this._reader.readGeometryForDisplayTransformed(this._displayTransform))==null?void 0:e.area())??0:this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this._reader.field(e)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},ee=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}registerOverrides(e){this.reader.registerOverrides(e),this.invalidate()}queryFeaturesInBounds(e){const t=this._getSpatialIndex().search(e);return gs.from(this.reader,t)}getAggregateIndex(e){const t=JSON.stringify(e);if(t!==this._aggregateIndexHash){switch(this._aggregateIndexHash=t,e.type){case"grid":this._aggregateIndex=new Jr(e);break;case"geohash":this._aggregateIndex=new oi(e)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=si.fromReader(this.reader)),this._spatialIndex}};const kt=1e4,ci=1e3;let Ft=class{constructor(){this.modified=[],this.removed=[]}modify(e){this.modified.push(e)}remove(e){this.removed.push(e)}get isEmpty(){return this.modified.length===0&&this.removed.length===0}},ys=class bs extends ee{constructor(e){super(),this._reader=e,this.chunkId="override",this.normalizedChunkId="override"}static fromFeatures(e,t){const s=$.fromOptimizedFeatures(e,t);return new bs(s)}get reader(){return this._reader}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}getTileReader(e){if(!this._reader.getSize())return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}},se=class{constructor(e,t){this.inner=e,this.isWeak=t,this.lastWeak=null}get isStrong(){return!this.isWeak}},hi=class{constructor(){this._overrides=new Map,this._update=new Ft,this._lastCleanup=0}hasOverride(e){return this._overrides.has(e)}onChunkInsert(e){if(this._overrides.size){const t=e.reader.getCursor();for(;t.next();){const s=t.getObjectId(),r=this._overrides.get(s);if(r!=null&&r.lastWeak&&(r.lastWeak=null),r==null?void 0:r.isWeak){const i=t.readOptimizedFeatureWorldSpace();r.inner=i,this._update.modify(i),this.invalidate()}}}e.registerOverrides(this)}apply(e,t){const{updateWeak:s,removeWeak:r,update:i,remove:a,release:n}=e.commands;this.invalidate();for(const o of s){const c=new se(o,!0),h=this._overrides.get(o.objectId);h!=null&&h.isStrong?h.lastWeak=c:(this._overrides.set(o.objectId,c),this._update.modify(o))}for(const o of i){const c=new se(o,!1),h=this._overrides.get(o.objectId);c.lastWeak=h!=null&&h.isWeak?h:(h==null?void 0:h.lastWeak)??null,this._overrides.set(o.objectId,c),this._update.modify(o)}for(const o of r){const c=new se(null,!0),h=this._overrides.get(o);h!=null&&h.isStrong?h.lastWeak=c:(this._overrides.set(o,c),this._update.remove(o))}for(const o of a){const c=new se(null,!1),h=this._overrides.get(o);c.lastWeak=h!=null&&h.isWeak?h:(h==null?void 0:h.lastWeak)??null,this._overrides.set(o,c),this._update.remove(o)}if(n.length){const o=new Set;for(const c of n){const h=this._overrides.get(c);h!=null&&h.lastWeak?(this._overrides.set(c,h.lastWeak),h.lastWeak.inner==null?this._update.remove(c):this._update.modify(h.lastWeak.inner)):h&&!h.isWeak&&(this._overrides.delete(c),o.add(c))}t.forEachUnsafe(c=>{const h=c.getObjectId();o.has(h)&&(this._update.modify(c.readOptimizedFeatureWorldSpace()),o.delete(h))});for(const c of o.values())this._update.remove(c)}}clearWeakOverrides(){for(const[e,t]of this._overrides.entries())t.isWeak&&this._overrides.delete(e);this.invalidate()}cleanup(e){if(this._overrides.size<kt)return;const t=performance.now();if(t-this._lastCleanup<ci)return;this._lastCleanup=t;const s=this._getWeakDeletions();if(!(s.size<kt)){for(const r of e){const i=r.reader.withoutOverrides().getCursor();for(;i.next();){const a=i.getObjectId();s.delete(a)}}for(const r of s)this._overrides.delete(r);s.size&&this.invalidate()}}takeOverrideUpdate(){const e=this._update;return e.isEmpty?null:(this._update=new Ft,e)}asChunk(e){if(!this._chunk){const t=[];for(const s of this._overrides.values())s.inner!=null&&t.push(s.inner);this._chunk=ys.fromFeatures(t,e)}return this._chunk}invalidate(){this._chunk=null}putWeakObjectIdsFromGlobalIds(e,t,s){for(const[r,i]of this._overrides.entries())if(i.isWeak&&i.inner!=null){const a=i.inner.attributes[s];a&&t.has(a)&&!e.has(a)&&e.set(a,r)}else if(i.lastWeak!=null&&i.lastWeak.inner!=null){const a=i.lastWeak.inner.attributes[s];a&&t.has(a)&&!e.has(a)&&e.set(a,r)}}_getWeakDeletions(){const e=new Set;for(const[t,s]of this._overrides.entries())s.isWeak&&s.inner==null&&e.add(t);return e}},li=class extends we{},ui=class extends as{constructor(e,t,s,r){super(e,t,r),this._arcadeContextInfo=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(e){this.handledChunksForAttributeData.clear(),this._arcadeContextInfo=e,this._evalOptions!=null&&(this._evalOptions=Qe(this._evalOptions.$view.scale,e))}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._arcadeContextInfo)}createState(e){return new li(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map(a=>[t(a),a])),i=[];for(const a of this._source.chunks()){const n=a.reader.getCursor();for(;n.next();){const o=n.getObjectId(),c=n.getDisplayId(),h=r.get(o);if(h!=null){const u=s(c,h,o);i.push(u),r.delete(o)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._source.chunks()){const a=i.reader.getCursor();for(;a.next();){const n=a.getObjectId(),o=a.getDisplayId();t.has(o)&&!s.has(n)&&(r.push({...a.readLegacyFeatureWorldSpace(),displayId:o}),s.add(n))}}return{features:r,aggregates:[],tracks:[]}}async*applyOverrideUpdate(e){const t=[];for(const a of e.modified){const n=this._attributeStore.createDisplayIdForObjectId(a.objectId);a.displayId=n,t.push(n)}const s=$.fromOptimizedFeatures(e.modified,this._source.metadata).getCursor();for(;s.next();)this._attributeStore.setAttributeData(s.getDisplayId(),s,this._evalOptions,this._sqlOptions);const r=[];for(const a of e.removed){const n=this._attributeStore.getDisplayIdForObjectId(a);n!=null&&r.push(n)}y("esri-2d-update-debug")&&console.debug("FeatureUpdateStrategy.applyLocalEdit",{message:e,modifiedDisplayIds:t,removedDisplayIds:r});const i=ys.fromFeatures(e.modified,this._source.metadata);this.handledChunks.add(i.chunkId),this.handledChunksForAttributeData.add(i.chunkId),this.handledChunksForIdCreation.add(i.chunkId);for(const a of this._sendStates.values())a.handledChunks.add(i.chunkId),yield new Re(a.subscription,null,t,!1,i.queryInfo);for(const a of this._sendStates.values()){const n=i.getTileReader(a.subscription.tile);yield new Re(a.subscription,n,r,!1,i.queryInfo)}for(const a of e.removed)this._attributeStore.releaseDisplayIdForObjectId(a)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const s=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(s):this._attributeStore.releaseDisplayIdForObjectId(s)}this.handledChunksForIdCreation.delete(e.chunkId)}}async _updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const r=s.getCursor();for(;r.next();){const i=this._attributeStore.createDisplayIdForObjectId(r.getObjectId());r.setDisplayId(i)}}}for(const e of this._source.chunks())if(!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const s=t.getDisplayId();this._attributeStore.setAttributeData(s,t,this._evalOptions,this._sqlOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i))continue;s.add(i);const a=r.getTileReader(t.tile);a&&(yield new X(e.subscription,a,!1,r.end,r.queryInfo))}}},ce;const di=()=>_e.getLogger("esri.views.2d.layers.features.processor.TrackStrategy"),_i=32;class pi{constructor(e,t,s,r,i){this.chunkIndex=e,this.featureIndex=t,this.objectId=s,this.displayId=r,this.time=i}}class Mt{static getOid(e){return Ns+e}constructor(e,t,s,r,i,a,n,o){this._schema=e,this.trackId=t,this.objectId=s,this.displayId=r,this._fields=i,this._spatialReference=a,this._metadata=n,this._isStream=o,this._maxDisplayDuration=this._schema.maxDisplayDuration>0?this._schema.maxDisplayDuration:1/0,this._maxDisplayObservationsPerTrack=this._schema.maxDisplayObservationsPerTrack>=1?this._schema.maxDisplayObservationsPerTrack:1/0,this._observationRecords=[],this._nextObservationRecords=[],this._trackLinePath=[],this._bounds=[],this._trackLineGeometry=new M}get _trackLineAttributes(){var t;const e={...((t=this._latestObservationFeature)==null?void 0:t.attributes)??{},aggregateId:this.objectId,[V]:Q.TrackLine};if(this._statistics!=null)for(const s of this._statistics.values())e[s.field.name]=s.value;return e}get _startTimeField(){var e;return(e=this._metadata.timeInfo)==null?void 0:e.startTimeField}get length(){return this._observationRecords.length}*observations(){yield*this._observationRecords}*previousObservations(){for(let e=0;e<this._observationRecords.length-1;e++)yield this._observationRecords[e]}stageObservation(e,t){this._nextObservationRecords.push(new pi(e,t.getIndex(),t.getObjectId(),t.getDisplayId(),this._startTimeField!=null?t.readAttributeAsTimestamp(this._startTimeField):null))}commitObservations(e,t){var c,h;const s=new Set(this._nextObservationRecords.map(u=>u.objectId)),r=this._observationRecords.filter(u=>!s.has(u.objectId)).map(u=>u.objectId);let i,a;switch(this._observationRecords=[],this._trackLinePath=[],this._isStream||this._startTimeField==null||this._nextObservationRecords.sort((u,d)=>{const p=u.time,_=d.time;return p!=null&&_!=null?p-_:0}),this._schema.timeField){case"startTimeField":i=(c=this._metadata.timeInfo)==null?void 0:c.startTimeField;break;case"endTimeField":i=(h=this._metadata.timeInfo)==null?void 0:h.endTimeField;break;case"timeReceived":i=this._isStream?Ut:null}a=this._isStream?(t==null?void 0:t.end)??Date.now():(t==null?void 0:t.end)??-1/0;const n=e.map(u=>u.reader.getCursor());let o;for(let u=this._nextObservationRecords.length-1;u>=0&&!(this._observationRecords.length>=this._maxDisplayObservationsPerTrack);u--){const d=this._nextObservationRecords[u],p=n[d.chunkIndex];ie(p),p.setIndex(d.featureIndex);const _=i!=null?p.readAttributeAsTimestamp(i):null;(_!=null?a-_:0)>=this._maxDisplayDuration||(this._commitObservation(d,p),o??(o=d))}if(o!=null){const{chunkIndex:u,featureIndex:d,objectId:p,displayId:_}=o,m=n[u];ie(m),m.setIndex(d);const f=new R(m.readGeometryWorldSpace(),{...m.readAttributes(),[V]:Q.LatestObservation},null,p,_);this._latestObservationFeature=f}else this._latestObservationFeature=null;return this._trackLineGeometry=mi(this._trackLineGeometry,this._trackLinePath,this._spatialReference),this._bounds=yi(this._trackLineGeometry),this._nextObservationRecords=[],r}updateStatistics(e,t){this._statistics=tt.create(this._fields);const s=e.map(r=>r.reader.getCursor());for(const{chunkIndex:r,featureIndex:i}of this._observationRecords){const a=s[r];ie(a),a.setIndex(i),this._statistics.insert(a,t)}}overlapsTile(e){for(const t of this._bounds)if(nr(t,e.bounds,_i))return!0;return!1}getLatestObservationFeatureForTile(e){if(this._latestObservationFeature==null)return null;const{objectId:t,displayId:s,geometry:r,attributes:i}=this._latestObservationFeature,a=new M;z(a,r,!1,!1,this._metadata.geometryType,e.subscription.tile.transform);const n=lt(1/0,1/0,-1/0,-1/0);return gi(a,(o,c)=>Qt(n,[o,c])),or(n,lt(0,0,T,T))?new R(a,i,null,t,s):null}getTrackLineFeatureForTile(e){const t=new M;return z(t,this._trackLineGeometry,!1,!1,"esriGeometryPolyline",e.subscription.tile.transform),new R(t,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineOptimizedFeature(){return new R(this._trackLineGeometry,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineDisplayFeature(){const{_trackLineGeometry:e,_trackLineAttributes:t,displayId:s}=this;return{geometry:Nt(e,"esriGeometryPolyline",!1,!1),attributes:t,displayId:s}}_commitObservation(e,t){const s=t.readCentroidWorldSpace();let r=s==null?void 0:s.coords[0],i=s==null?void 0:s.coords[1];s==null&&(r=t.readXWorldSpace(),i=t.readYWorldSpace()),r!=null&&i!=null&&(this._observationRecords.unshift(e),this._trackLinePath.unshift([r,i]))}}class fi extends we{constructor(e){super(e),this.done=!1}}class st extends et{static async create(e,t,s,r,i,a){const n=new fe({spatialReference:t}),o=await Promise.all(e.fields.map(async h=>Ke.create(n,h))),c=e.featureFilter?await Ge.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return t.isWrappable||cr()||await Promise.all([pt(()=>import("./apiConverter-CBpLPeKU.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]),import.meta.url),pt(()=>import("./jsonConverter-BddGRRgO.js"),__vite__mapDeps([14,1,2,3,4,6,7,8,9,10,11]),import.meta.url),hr()]).then(([h,u,d])=>{ce={fromGeometryToGXGeometry:u.fromGeometryToGXGeometry,toGeometry:u.toGeometry,fromSpatialReference:h.fromSpatialReference}}),new st(e,s,r,t,o,c,i,a)}constructor(e,t,s,r,i,a,n,o){super(t,s,r,i,o),this._schema=e,this._featureFilter=a,this._arcadeContextInfo=n,this._tracks=new Map,this._metadata=t.metadata.weakCloneWithAdditionalFields([{name:V,alias:"trackPart",type:"esriFieldTypeSmallInteger"}]),this._trackLineMetadata=me.createFeature({geometryType:"esriGeometryPolyline",objectIdField:"aggregateId",fieldsIndex:{fields:[...this._source.metadata.fieldsIndex.fields,...this.aggregateFields,{name:V,alias:"trackPart",type:"esriFieldTypeSmallInteger"},{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],timeZoneByFieldName:null},globalIdField:null,spatialReference:t.metadata.spatialReference,outSpatialReference:t.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:t.metadata.timeInfo,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}get _isStream(){return this._source.isStream}get enablePixelBuffering(){return!0}get isAggregate(){return!1}createState(e){return new fi(e)}async*applyOverrideUpdate(e){di().error("Applying override to tracks is not supported")}displayMap(e,t,s){const r=new Map(e.map(a=>[t(a),a])),i=[];for(const a of this._tracks.values()){const n=r.get(a.objectId);if(n==null)for(const o of a.observations()){const c=r.get(o.objectId);if(c!=null){const h=s(o.displayId,c,o.objectId);i.push(h),r.delete(o.objectId)}}else{const o=s(a.displayId,n,a.objectId);i.push(o),r.delete(a.objectId)}}return i}getDisplayFeatures(e){const t=new Set(e),s=[],r=[],i=this._source.chunks().map(a=>a.reader.getCursor());for(const a of this._tracks.values()){t.has(a.displayId)&&r.push(a.getTrackLineDisplayFeature());for(const{displayId:n,chunkIndex:o,featureIndex:c}of a.observations())if(t.has(n)){const h=i[o];h.setIndex(c),s.push({displayId:n,attributes:{},...h.readLegacyFeatureWorldSpace()})}}return{features:s,aggregates:[],tracks:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._tracks.values())if(t.objectId===e)return Array.from(t.observations(),s=>s.objectId);return[]}async*updateChunks(){var r,i;const e=this._source.chunks();if(!e.length)return;const t=(r=this._metadata.timeInfo)==null?void 0:r.trackIdField;if(t==null)return;const s=new Set;for(let a=0;a<e.length;a++){const n=e[a].reader.getCursor();for(;n.next();){const o=n.readAttribute(t),c=n.getObjectId();if(o!=null&&c!=null&&(this._featureFilter===null||this._featureFilter.check(n,this._sqlOptions))){if(n.getDisplayId()||n.setDisplayId(this._attributeStore.createDisplayIdForObjectId(c)),!this._tracks.has(o)){const h=Mt.getOid(o),u=this._attributeStore.createDisplayIdForObjectId(h),d=new Mt(this._schema,o,h,u,this.aggregateFields,this.spatialReference,this._source.metadata,this._isStream);this._tracks.set(o,d)}this._tracks.get(o).stageObservation(a,n),s.add(o)}}}for(const a of this._tracks.values())if(s.has(a.trackId)){const n=a.commitObservations(e,(i=this._featureFilter)==null?void 0:i.timeExtent);for(const o of n)this._attributeStore.releaseDisplayIdForObjectId(o);a.updateStatistics(e,Qe(1,this._arcadeContextInfo))}else this._removeTrack(a);for(const a of this._sendStates.values())yield*this._update(a)}forEachAggregateWorldSpace(e){for(const t of this._tracks.values())e(t.getTrackLineOptimizedFeature())}_removeTrack(e){this._tracks.delete(e.trackId),this._attributeStore.releaseDisplayIdForObjectId(e.objectId);for(const{objectId:t}of e.observations())this._attributeStore.releaseDisplayIdForObjectId(t)}*_update(e){if(e.done)return;e.done=!this._source.updateTracking.updating;const t=[],s=[];for(const h of this._tracks.values())if(h.length>0){if(this._schema.showLatestObservation){const u=h.getLatestObservationFeatureForTile(e);u!=null&&t.push(u)}this._schema.showTrackLine&&h.overlapsTile(e.subscription.tile)&&s.push(h.getTrackLineFeatureForTile(e))}const r=$.fromOptimizedFeatures(t,this._metadata,e.subscription.tile.transform),i=$.fromOptimizedFeatures(s,this._trackLineMetadata,e.subscription.tile.transform);let a=[];if(this._schema.showPreviousObservations){const h=this._source.chunks().map(()=>[]);for(const u of this._tracks.values())for(const{chunkIndex:d,featureIndex:p}of u.previousObservations())h[d].push(p);a=this._source.chunks().map((u,d)=>{const p=u.getTileReader(e.subscription.tile);if(p==null)return null;const _=gs.from(p,h[d]);return _.setProcessorAttributes({[V]:Q.PreviousObservation}),_.geometryType!=="esriGeometryPoint"&&_.getInTransform()!=null||_.setTransformForDisplay(e.subscription.tile.transform),_}).filter(ks)}this.events.emit("changed");const n=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo),o=i.getCursor();for(;o.next();)this._attributeStore.setAttributeData(o.getDisplayId(),o,n,this._sqlOptions);for(const h of a){const u=h.getCursor();for(;u.next();)this._attributeStore.setAttributeData(u.getDisplayId(),u,n,this._sqlOptions)}const c=r.getCursor();for(;c.next();)this._attributeStore.setAttributeData(c.getDisplayId(),c,n,this._sqlOptions);yield new X(e.subscription,i,!0,!1,{});for(const h of a)yield new X(e.subscription,h,!1,!1,{});yield new X(e.subscription,r,!1,e.done,{})}}function mi(l,e,t){if(e.length<2)return J(l,[e],!1,!1);if(t.isWrappable){let i=!1;for(let a=1;a<e.length;a++){const n=e[a][0],o=dr(n,e[a-1][0],t);n!==o&&(e[a][0]=o,i=!0)}if(i){const a=_r({paths:[e],spatialReference:t});if(a!=null)return J(l,a.paths,!1,!1)}return J(l,[e],!1,!1)}const s=ce.fromGeometryToGXGeometry({hasM:!1,hasZ:!1,paths:[e]}),r=ce.fromSpatialReference(t);if(r!=null){const i=lr(s,1e6,r,ur.geodesic);if(i!=null){const a=ce.toGeometry(i,r);if(a!=null&&"paths"in a)return J(l,a.paths,!1,!1)}}return J(l,[e],!1,!1)}function gi(l,e){const{coords:s,lengths:r}=l;if(!r.length)return void e(s[0],s[1]);let i=0;for(let a=0;a<r.length;a++){const n=r[a];let o=0,c=0;for(let h=0;h<n;h++)o+=s[2*(h+i)],c+=s[2*(h+i)+1],e(o,c);i+=n}}function yi(l){const{lengths:e,coords:t}=l,s=2;if(!e.length)return[ut()];const r=[];let i=0;for(let a=0;a<e.length;a++){const n=e[a],o=ut();r.push(o);for(let c=0;c<n;c++){const h=t[s*(c+i)],u=t[s*(c+i)+1];Qt(o,[h,u])}i+=n}return r}class bi{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new Vs,this._proxy=new Us({fetch:(s,r)=>this._connection.layerView.fetch(s,r),fetchDictionary:(s,r)=>this._connection.layerView.fetchDictionary(s,r)}),this._attributeStore=new Ls({isLocal:!1,update:s=>Le(this._connection.container.updateAttributeView(s))})}destroy(){var e;this._proxy.destroy(),(e=this._strategy)==null||e.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){var e;return(e=this._strategy)==null?void 0:e.aggregateQueryEngine}get version(){return this._version}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[],tracks:[]}}getDisplayIds(e){const t={};return this._strategy&&this._strategy.displayMap(e,s=>s,(s,r,i)=>{t[i]=s}),t}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){var t;(t=this._strategy)==null||t.onSubscribe(e)}onUnsubscribe(e){var t;(t=this._strategy)==null||t.onUnsubscribe(e)}async update(e,t,s,r,i){var O,S,x,k,v,q,D;const a=e.processor,n=te((O=this._schema)==null?void 0:O.storage,a.storage),o=te((S=this._schema)==null?void 0:S.mesh.properties,a.mesh.properties),c=te((x=this._schema)==null?void 0:x.mesh.factory,a.mesh.factory),h=te((k=this._schema)==null?void 0:k.mesh.strategy,a.mesh.strategy),u=Ii((v=this._schema)==null?void 0:v.expressionProperties,a.expressionProperties),d=u.some(w=>this._attributeStore.hasArcadeDependency(w)),p=u.some(w=>{var C;return((C=this._factory)==null?void 0:C.hasArcadeDependency(w))??!1}),_=u.some(w=>{var C;return(C=this._strategy)==null?void 0:C.hasArcadeDependency(w)})||((q=this._strategy)==null?void 0:q.isAggregate)&&d,m=p||_,f=o||c||h;if(!(n||f||p||d||_)&&!r)return!1;y("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:Wt(this._schema,a),schema:a}),this._schema=a;const g=E.fromJSON(this._source.service.outSpatialReference),b=new fe({fields:this._source.metadata.fieldsIndex,spatialReference:g}),I={currentUser:a.mesh.properties.currentUser};if((n||f||d)&&(await this._attributeStore.update(a.storage,b,this._source.metadata,t),(D=this._strategy)==null||D.invalidateAttributeData(Z(a))),!r&&!f&&!m)return!1;(h||o||m)&&await this._updateStrategy(a.mesh.strategy,g,i,Z(a),I),this._updateSortKey(b,"sortKey"in a.mesh.properties?a.mesh.properties.sortKey:null);const F=new Wr(b,this._proxy,s,this._registry);return(c||a.mesh.factory.symbology.type==="dictionary")&&(this._factory=await jr.create(F,a.mesh.factory)),this._version=t,!0}async applyOverrideUpdate(e){if(!this._strategy)return;const t=this._strategy.applyOverrideUpdate(e);for await(const s of t)try{await this._process(s)}catch{}}async updateChunks(){var e;await this._doUpdateChunks(),(e=this._strategy)==null||e.afterUpdateChunks()}async removeChunks(e){var t;(t=this._strategy)==null||t.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy)return void this._attributeStore.setHighlight(e.map(({objectId:s,highlightFlags:r})=>({objectId:s,highlightFlags:r,displayId:-1})),e);const t=this._strategy.displayMap(e,({objectId:s})=>s,(s,{highlightFlags:r},i)=>({objectId:i,displayId:s,highlightFlags:r}));this._attributeStore.setHighlight(t,e)}invalidate(){this._strategy&&this._strategy.invalidate()}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const r of e){let i=s.get(r.id);i==null&&(i=new Ur({concurrency:16,process:n=>this._process(n)}),s.set(r.id,i));const a=i.push(r).catch(n=>Ue(n));t.push(a)}try{await Promise.all(t)}catch{}y("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),y("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r,i){var a;switch((a=this._strategy)==null||a.destroy(),e.type){case"feature":this._strategy=new ui(this._source,this._attributeStore,r,i);break;case"binning":this._strategy=await zr.create(e,t,this._source,this._attributeStore,r,i);break;case"cluster":this._strategy=await ti.create(this._connection,e,t,this._source,this._attributeStore,r,i);break;case"track":this._strategy=await st.create(e,t,this._source,this._attributeStore,r,i)}for(const n of s)this._strategy.onSubscribe(n)}async _updateSortKey(e,t){var s;if(this._sortInfo=Rt((s=this._sortInfo)==null?void 0:s.computed),t!=null){const r=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:r}}}async _process(e){var c,h,u;const t=e.subscription;if(y("esri-2d-update-debug")){const d=t.tile;console.debug(`Version[${this._version}] Tile[${d.key.id}, end=${e.end}] Processor._process`)}const s={currentUser:(c=this._schema)==null?void 0:c.mesh.properties.currentUser};await this._fetchResources(e,s),G(t.signal);const r=await this._write(e,t.tile.createArcadeEvaluationOptions(Z(this._schema)),s),i=t.tile.tileInfoView.getLODInfoAt(t.tile.key),{message:a,transferList:n}=r.serialize(i),o={objectIdMap:null,inner:e.createMessage(a,this._version,this._attributeStore.epoch)};if((h=this._schema)!=null&&h.mesh.properties.returnMeshObjectId){o.objectIdMap={};const d=(u=e.reader)==null?void 0:u.getCursor();if(d)for(;d.next();)o.objectIdMap[d.getDisplayId()]=d.getObjectId()}if(G(t.signal),await this._connection.container.onMessage(o,{signal:t.signal,transferList:n}),this._attributeStore.sendUpdates(),y("esri-2d-update-debug")){const d=t.tile;console.debug(`Version[${this._version}] Tile[${d.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e,t){await this._fetchMatcherResources(e),await this._fetchWriterResources(e,t)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e,t){if(!e.reader)return;const s=e.reader.getCursor(),r=e.subscription.tile.createArcadeEvaluationOptions(Z(this._schema));for(;s.next();)this._factory.enqueueWriterRequests(this._proxy,s,r,t);await this._proxy.fetchEnqueuedResources()}async _write(e,t,s){var u;const r=e.subscription.tile,i=(u=e.reader)==null?void 0:u.getCursor(),a=(i==null?void 0:i.getSize())??0,n=r.tileInfoView.tileInfo.isWrappable,o=r.tileInfoView.tileInfo.spatialReference.isWGS84,c=new Tr(r.key,this._strategy.enablePixelBuffering,n,o,a);if(!i)return c;const h=r.createArcadeEvaluationOptions(Z(this._schema));for(;i.next();){const d=this._getSortKeyValue(i,t);c.entityStart(i.getDisplayId(),d),this._factory.write(c,this._proxy,i,h,s,r.level),c.entityEnd()}return c}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,a=i?this._factory.getSortKey(e,t):s==null?void 0:s.read(e,t);return a==null||isNaN(a)?0:a*(r==="asc"?-1:1)}}function Ii(l,e){var s,r,i,a;const t=[];return((s=l==null?void 0:l.timeExtent)==null?void 0:s.start)===((r=e.timeExtent)==null?void 0:r.start)&&((i=l==null?void 0:l.timeExtent)==null?void 0:i.end)===((a=e.timeExtent)==null?void 0:a.end)||t.push("timeProperties"),t}function Z(l){const{timeZone:e}=(l==null?void 0:l.mesh.properties)??{},{timeExtent:t}=(l==null?void 0:l.expressionProperties)??{};return{timeZone:e,timeExtent:t}}let vi=class Is{static from(e){let t=0,s=0,r=0;return e.forEach(i=>{const a=i._readGeometry();a&&(s+=a.isPoint?1:a.lengths.reduce((n,o)=>n+o,0),r+=a.isPoint?1:a.lengths.length,t+=1)}),new Is(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const Ce=4;function wi(l,e,t){const s=l.orderByFields??t.objectIdField+" ASC",r=l.source,i={returnCentroid:!(r!==null&&typeof r=="object"&&"path"in r&&pr(r.path))&&t.serviceGeometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:t.timeReferenceUnknownClient??void 0,outSpatialReference:E.fromJSON(l.outSpatialReference),orderByFields:l.type==="memory"?[]:[s],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields,multipatchOption:t.serviceGeometryType==="esriGeometryMultiPatch"?"xyFootprint":null};if(e.type==="feature"){const{gdbVersion:a,historicMoment:n,timeExtent:o}=e.mutable.dataFilter;return{...i,gdbVersion:a,historicMoment:n?new Date(n):null,timeExtent:o?br.fromJSON(o):null,outFields:e.mutable.availableFields}}return i}let Si=class vs{static fromSchema(e,t,s){const r=t.type==="feature"?t.mutable.dataFilter.queryScaleRanges:[],i=t.mutable.displayFilterInfo;return new vs(wi(e,t,s),i,r,s.subtypeField,t.mutable.dataFilter.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,r,i,a,n){this._queryParams=e,this._displayFilter=t,this._queryScaleRanges=s,this._subtypeField=r,this._customParameters=i,this._geometryType=a,this._queryMetadata=n}get pageSize(){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?Ce:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}get objectIdsQueryPageSize(){var e;return((e=this._queryMetadata)==null?void 0:e.maxRecordCount)??2e3}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t,s){if(!t.getSize())return null;const r=e.clone();if(this._queryParams.outFields[0]==="*"){if((r.outFields??[])[0]==="*")return null;r.outFields=this._queryParams.outFields}else{const a=new Set(this._queryParams.outFields),n=[];for(const o of a)t.hasField(o)||n.push(o);if(n.length===0)return null;r.outFields=n}r.returnGeometry=!1,r.returnCentroid=!1,r.quantizationParameters=null,r.cacheHint=!0;const i={inner:r,customParameters:this._customParameters};if(y("esri-tiles-debug")&&s!=null){const a=s.chunkId.toString().replaceAll("/",".");i.customParameters=i.customParameters?{...i.customParameters,chunkId:a}:{chunkId:a}}return i}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new Yt({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),r=s.inner;if(this._queryScaleRanges.length){const i=this._queryScaleRanges.filter(a=>(!a.minScale||a.minScale>=e.maxScale)&&(!a.maxScale||a.maxScale<=e.minScale)).map(a=>a.subtypeCode);if(i.length){const a=`${this._subtypeField} IN (${i})`;r.where=ct(r.where,a)}}if(this._displayFilter&&(r.where=ct(r.where,yr(this._displayFilter,e.minScale,e.maxScale))),r.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset=e.resolution*y("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(r.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset*=y("feature-polyline-generalization-factor"))),r.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,r.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(r.maxRecordCountFactor=Ce),y("esri-tiles-debug")){const i=e.id.replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,tileId:i}:{tileId:i}}return s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:Ce,cacheHint:!0})}createObjectIdsQuery(e){return this.createQuery({objectIds:e,outFields:["*"]})}};const xi=2500;let he=class extends Pt{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([qe(()=>{var t;return((t=this._strategy)==null?void 0:t.connectionStatus)??"disconnected"},t=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:t})},{initial:!0}),qe(()=>{var t;return((t=this._strategy)==null?void 0:t.errorString)||null},t=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:t}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){this._strategy==null&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),e!=null&&(this.addHandles([e.events.on("data-received",s=>this._onFeature(s)),e.events.on("message-received",s=>this._onWebSocketMessage(s)),e.events.on("features-updated",s=>this._onUpdate(s)),e.events.on("tick",()=>this._onTick())],t),this._queuedCommands.forEach(s=>s(e)),this._queuedCommands=[]),this._strategy=e}updateCustomParameters(e){e!=null&&this._callOrEnqueue(t=>t.updateCustomParameters(e))}sendMessageToSocket(e){this._callOrEnqueue(t=>t.sendMessageToSocket(e))}sendMessageToClient(e){this._callOrEnqueue(t=>t.sendMessageToClient(e))}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){var e;(e=this._strategy)==null||e.disconnect()}connect(){var e;(e=this._strategy)==null||e.connect()}clear(){var e;(e=this._strategy)==null||e.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>xi){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(e){this._strategy!=null?e(this._strategy):this._queuedCommands.push(e)}};B([ae()],he.prototype,"_strategy",void 0),he=B([Dt("esri.views.2d.layers.features.sources.StreamMessenger")],he);let K=class extends ee{constructor(e,t,s,r){super(),this._reader=e,this._queryJSON=t,this._page=s,this._end=r,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}};async function ki(l,e,t,s={}){const r=(await Promise.allSettled(t.map(i=>Fi(l,e,i,s)))).filter(i=>i.status==="rejected").map(i=>i.reason);if(r.length)throw new P("featurelayer-query","Encountered errors when downloading data",{errors:r})}async function Fi(l,e,t,s={}){const r=`${l.chunkPrefix??""}${t.num}`,i=await l.fetch(t.query,s,{chunkId:r}),a=new K(i,t.query.inner.toJSON(),t.num,!1);a.chunkId=a.normalizedChunkId=r,G(s),e.insert(a)}const Te=8e3;let Mi=class{constructor(e,t,s,r){this.store=e,this.queryInfo=t,this._options=s,this._fetch=r,this._nextBatch=new Set,this._fetchFeatures=Fs(async()=>{var h;if(this._nextBatch.size===0||(h=this._options.signal)!=null&&h.aborted)return;const i=Array.from(this._nextBatch);this._nextBatch.clear(),i.length>Te&&_e.getLogger("esri.views.2d.layers.FeatureLayerView2D").warn(new P("highlight-too-many-features",`highlight is limited to ${Te} features on large layers configured with a display filter to avoid performance issues`));const a=this.queryInfo.objectIdsQueryPageSize,n=Math.ceil(Te/a),o=Math.min(n,Math.ceil(i.length/a)),c=Array.from({length:o},(u,d)=>{const p=d*a,_=Math.min(p+a,i.length);return{num:d,query:this.queryInfo.createObjectIdsQuery(i.slice(p,_))}});try{await ki({chunkPrefix:"cache."+Ir(),fetch:this._fetch},this.store,c,this._options)}catch{}})}prepareCacheUpdate(e,t){if(t)for(const s of t)this._nextBatch.delete(s);for(const s of e)this._nextBatch.add(s)}applyCacheUpdate(){var e;return this._nextBatch.size===0||(e=this._options.signal)!=null&&e.aborted?null:this._fetchFeatures().catch(()=>{})}},rt=class{constructor(e){this._store=e,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(e){throw new Error("InternalError: LoadStrategy does not support query info")}async queryByObjectId(e){throw new Error("InternalError: LoadStrategy does not support fetching")}async addParquetFile(e){throw new Error("InternalError: LoadStrategy does not support loading blobs")}prepareCacheUpdate(e,t){}applyCacheUpdate(){return null}};const Oe=268435455;let Ci=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};function Ti(l,e,t=!1){var k;const c=l.asUnsafe(),h=c.pos(),u=new Ci;let d=0,p=0;const _=1,m=2,f=4,g=3;let b=null,I=null,F=null,O=!1;const S=[];for(;c.next();)switch(c.tag()){case 1:b=c.getString();break;case 3:I=c.getString();break;case 12:F=c.processMessage(Sr);break;case 9:if(u.exceededTransferLimit=c.getBool(),u.exceededTransferLimit){u.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),u.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let v=0;v<u.centroid.length;v++)u.centroid[v]=Oe}break;case 13:{const v=c.processMessage(wr);v.index=d++,S.push(v);break}case 15:{const v=c.getLength(),q=c.pos()+v;if(!u.exceededTransferLimit){const w=u.offsets.geometry,C=u.centroid;w.push(0),C.push(Oe),C.push(Oe)}!O&&u.exceededTransferLimit&&(O=!0,u.offsets.attributes=t?new Float64Array(8e3*d):new Uint32Array(8e3*d));let D=p*d;for(;c.pos()<q&&c.next();)switch(c.tag()){case _:{O?u.offsets.attributes[D++]=c.pos():u.offsets.attributes.push(c.pos());const w=c.getLength();c.skipLen(w);break}case m:if(e){const w=c.getLength(),C=c.pos()+w;for(;c.pos()<C&&c.next();)switch(c.tag()){case g:{c.getUInt32();const U=c.getSInt64(),L=c.getSInt64();u.centroid[2*p]=U,u.centroid[2*p+1]=L;break}default:c.skip()}}else{u.offsets.geometry[p]=c.pos();const w=c.getLength();u.vertexCount+=w,c.skipLen(w)}break;case f:{const w=c.getLength(),C=c.pos()+w;for(;c.pos()<C&&c.next();)switch(c.tag()){case g:{c.getUInt32();const U=c.getSInt64(),L=c.getSInt64();u.centroid[2*p]=U,u.centroid[2*p+1]=L;break}default:c.skip()}break}default:c.skip()}p++,u.hasFeatures=!0;break}default:c.skip()}const x=b||I;if(!x)throw new P("FeatureSet has no objectId or globalId field name");return u.fields=new ge(S),u.featureCount=p,u.fieldCount=d,u.objectIdFieldIndex=(k=u.fields.get(x))==null?void 0:k.index,u.transform=F,u.displayIds=new Uint32Array(u.featureCount),u.groupIds=new Uint16Array(u.featureCount),c.move(h),u}const Oi=!0,Ct=268435455,Tt=128,Ot=128e3,A={small:{delta:new Int32Array(Tt),decoded:new Int32Array(Tt)},small64:{delta:new Float64Array(0),decoded:new Float64Array(0)},large:{delta:new Int32Array(Ot),decoded:new Int32Array(Ot)},large64:{delta:new Float64Array(0),decoded:new Float64Array(0)}};function $t(l,e){return e?l<=A.small64.delta.length?A.small64:(l<=A.large64.delta.length||(A.large64.delta=new Float64Array(Math.round(1.25*l)),A.large64.decoded=new Float64Array(Math.round(1.25*l))),A.large64):l<=A.small.delta.length?A.small:(l<=A.large.delta.length||(A.large.delta=new Int32Array(Math.round(1.25*l)),A.large.decoded=new Int32Array(Math.round(1.25*l))),A.large)}function $i(l){try{const t=new vr(new Uint8Array(l),new DataView(l));for(;t.next();){if(t.tag()===2)return qi(t.getMessage());t.skip()}}catch(e){const t=new P("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});_e.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function qi(l){for(;l.next();){if(l.tag()===1)return l.getMessage();l.skip()}return null}function Ai(l){const h=l.getLength(),u=l.pos()+h;for(;l.pos()<u&&l.next();)switch(l.tag()){case 1:return l.getString();case 2:return l.getFloat();case 3:return l.getDouble();case 4:return l.getSInt32();case 5:return l.getUInt32();case 6:return l.getInt64();case 7:return l.getUInt64();case 8:return l.getSInt64();case 9:return l.getBool();default:return l.skip(),null}return null}function Ri(l,e,t,s,r,i){return .5*Math.abs(l*s+t*i+r*e-l*i-t*e-r*s)}function $e(l,e,t,s,r){return l?e*r-s*t===0&&e*s+t*r>0:!1}class de extends Ne{static fromBuffer(e,t,s=!1){const r=t.geometryType,i=$i(e),a=Ti(i,r==="esriGeometryPoint",s);return new de(i,a,t,s)}constructor(e,t,s,r){super(s),this._use64Bit=r,this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=s.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new de(e,this._header,this.metadata,this._use64Bit);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}get usedMemory(){var e;return Xe+(((e=this._cache.geometry)==null?void 0:e.usedMemory)??0)}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===Ct?null:new M([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===Ct)return null;const s=this._header.centroid[2*this._featureIndex],r=this._header.centroid[2*this._featureIndex+1];t=new M([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch{return null}}return(t==null?void 0:t.coords.length)===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(s==null)return;const r=this._readAttributeAtIndex(s.index),i=this._header.fields.isDateField(s.name);return t?r==null?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new zs(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const i=Ai(r);return t.set(this._featureIndex,i),i}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=$t(t.coords.length,this._use64Bit).decoded,r=t.clone(s),i=r.coords;let a=0;for(const n of r.lengths){for(let o=1;o<n;o++){const c=2*(a+o),h=2*(a+o-1);i[c]+=i[h],i[c+1]+=i[h+1]}a+=n}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const r=e.asUnsafe(),i=r.getLength(),a=r.pos()+i,n=[],o=[];for(;r.pos()<a&&r.next();)switch(r.tag()){case 2:{const c=r.getUInt32(),h=r.pos()+c;for(;r.pos()<h;)o.push(r.getUInt32());break}case 3:{const c=r.getUInt32(),h=r.pos()+c;for(n.push(r.getSInt64()),n.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();r.pos()<h;)n.push(r.getSInt64()),n.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();break}default:r.skip()}return new M(o,n)}_parseGeometryForDisplay(e){const r=e.asUnsafe(),i=r.getLength(),a=r.pos()+i,n=[],o=[];let c=0,h=0,u=null,d=0;const p=this.geometryType==="esriGeometryPolygon",_=this.geometryType==="esriGeometryPolyline",m=p||_;for(;r.pos()<a&&r.next();)switch(r.tag()){case 2:{const f=r.getUInt32(),g=r.pos()+f;for(;r.pos()<g;){const b=r.getUInt32();n.push(b),c+=b}u=$t(2*c,this._use64Bit).delta;break}case 3:{r.getUInt32();const f=2+(this.hasZ?1:0)+(this.hasM?1:0);ie(u);for(const g of n)if(h+f*g>u.length)for(let b=0;b<g;b++)r.getSInt64(),r.getSInt64(),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();else if(p&&Oi){const b=this.getAreaSimplificationThreshold(g,this._header.vertexCount);let I=2,F=1;const O=!1;let S=r.getSInt64(),x=r.getSInt64();u[h++]=S,u[h++]=x,this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();let k=r.getSInt64(),v=r.getSInt64();for(this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();I<g;){let q=r.getSInt64(),D=r.getSInt64();this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();const w=S+k,C=x+v;Ri(S,x,w,C,w+q,C+D)>=b?(d+=-.5*(w-S)*(C+x),F>1&&$e(m,u[h-2],u[h-1],k,v)?(u[h-2]+=k,u[h-1]+=v):(u[h++]=k,u[h++]=v,F++),S=w,x=C):(q+=k,D+=v),k=q,v=D,I++}F<3||O?h-=2*F:(d+=-.5*(S+k-S)*(x+v+x),$e(m,u[h-2],u[h-1],k,v)?(u[h-2]+=k,u[h-1]+=v,o.push(F)):(u[h++]=k,u[h++]=v,o.push(++F)))}else{let b=0,I=r.getSInt64(),F=r.getSInt64();this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64(),u[h++]=I,u[h++]=F,b+=1;for(let O=1;O<g;O++){const S=r.getSInt64(),x=r.getSInt64(),k=I+S,v=F+x;d+=-.5*(k-I)*(v+F),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64(),O>2&&$e(m,u[h-2],u[h-1],S,x)?(u[h-2]+=S,u[h-1]+=x):(u[h++]=S,u[h++]=x,b+=1),I=k,F=v}o.push(b)}break}default:r.skip()}return this._cache.area=d,o.length?new M(o,u):u!=null?this._createDeltaQuantizedExtrudedGeometry(u[0],u[1]):null}}class Se{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}function Di(l,e){switch(l.type){case"memory":return new Ei(l,e);case"ogc":return new Ui(l,e);case"feature-service":return l.queryMetadata.supportsFormatPBF&&y("featurelayer-pbf")?new ji(l,e):new Wi(l,e)}}async function Pi(l){const e=new Rs;return await e.open(l,{}),e}let Ei=class extends Se{constructor(e,t){super(e,t),this._portsOpen=Pi(e.source).then(s=>this.client=s)}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return $.fromFeatureSet(s,this._metadata)}};class ji extends Se{async executeQuery(e,t){const{data:s}=await mr(this.service.source,e,t),r=!e.quantizationParameters;return de.fromBuffer(s,this._metadata,r)}}class Wi extends Se{async executeQuery(e,t){var a;const{source:s,queryMetadata:r}=this.service;if(e.quantizationParameters!=null&&!r.supportsQuantization){const n=e.clone(),o=Xt(n.quantizationParameters);n.quantizationParameters=null;const{data:c}=await ft(s,n,this._metadata.spatialReference,t),h=Zs(c,this._metadata.objectIdField);return Bt(o,h),$.fromOptimizedFeatureSet(h,this._metadata)}const{data:i}=await ft(s,e,this._metadata.spatialReference,t);return this._metadata.geometryType==="esriGeometryPoint"&&(i.features=(a=i.features)==null?void 0:a.filter(n=>{if(n.geometry!=null){const o=n.geometry;return Number.isFinite(o.x)&&Number.isFinite(o.y)}return!0})),$.fromFeatureSet(i,this._metadata)}}let Ui=class extends Se{async executeQuery(e,t){if(e.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const r=e.clone(),i=Xt(r.quantizationParameters);r.quantizationParameters=null;const a=await mt(this.service.source,e,t);return Bt(i,a),$.fromOptimizedFeatureSet(a,this._metadata)}const s=await mt(this.service.source,e,t);return $.fromOptimizedFeatureSet(s,this._metadata)}},ws=class extends rt{constructor(e,t,s,r,i){super(s),this._serviceInfo=e,this._queryInfo=t,this._metadata=r,this._connection=i,this._queue=new Lt({concurrency:32,process:async a=>{var o;const n={signal:(o=a.options)==null?void 0:o.signal,query:a.query.customParameters,useRequestQueue:!0};return this._adapter.executeQuery(a.query.inner,n)}}),this._adapter=Di(e,r)}unsafeSetQueryHistoricMoment(e){this._queryInfo.updateHistoricMoment(e)}async updateFields(e){this._queryInfo.updateFields(e);const t=Array.from(this._store.chunks()).map(async r=>{const i=Yt.fromJSON(r.queryInfo.queryJSON);if(i)try{return await this._tryUpdateFields(r.reader,i,{chunkId:r.chunkId}),null}catch(a){return a}}),s=(await Promise.all(t)).filter(r=>r);if(s.length)throw new P("featurelayer-query","Encountered errors when downloading fields",{errors:s})}async queryByObjectId(e){if(e.length===0)return $.empty(this._metadata);const t=this._queryInfo.createQuery({objectIds:e});return this._fetch(t,null,null)}async _fetch(e,t,s){const r=await this._enqueue(e,t);return await this._tryUpdateFields(r,e.inner,s),r}async _tryUpdateFields(e,t,s){const r=this._queryInfo.createPatchFieldsQuery(t,e,s);if(!r)return;const i=await this._enqueue(r,this._options);i.getSize()===e.getSize()?e.joinAttributes(i):_e.getLogger("esri.views.2d.layers.features.sources.strategies.AFetchLoadStrategy").error(new P("featurelayer-query",`Failed to join features. Expected a count of ${e.getSize()} features, but got ${i.getSize()}`,{query:r.inner.toJSON(),debugInfo:s}))}async _enqueue(e,t){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:this._queue.length===0})})}},Ss=class extends ws{constructor(e,t,s,r,i){super(e,t,s,r,i),this._chunksById=new Map,this._featureCache=new Mi(s,t,this._options,this._fetch.bind(this))}prepareCacheUpdate(e,t){return this._featureCache.prepareCacheUpdate(e,t)}applyCacheUpdate(){return this._featureCache.applyCacheUpdate()}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const s=e.size();(s||e.first||e.end)&&(y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${s}]`),this._chunksById.get(t).push(e),this._store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const s of t)y("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${s.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(s);this._chunksById.delete(e.key.id)}};class qt extends ee{constructor(e,t,s,r,i,a){var n,o;super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=a,this.chunkId=`${this._tile.key.id}.${(n=this._sourceTile)==null?void 0:n.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${(o=this._sourceTile)==null?void 0:o.key.normalizedId}${this._end?"e":""}`}get queryInfo(){var e;return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:(e=this._sourceTile)==null?void 0:e.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}let Li=class{constructor(e,t){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=pe([le(e.signal,()=>this._controller.abort()),le(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}},zi=class extends Ss{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{supportsDisplayFilter:!0,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Li(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const i of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:a,reader:n,sourceTile:o,sourceTileDepth:c,tile:h}=i,u=new qt(n,a,h,o,c,!1);G(t.options),this._addChunk(u)}}catch(i){s=i}const r=new qt($.empty(this._metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){var t;super.unload(e),(t=this._loadStates.get(e.key.id))==null||t.destroy(),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,s){let r=e.get(t.id);const i=!!r;if(r||(r=await this._fetchChunkInfo(e,t,s),e.set(t.id,r)),r.reader.exceededTransferLimit&&s<y("featurelayer-query-max-depth"))for(const a of t.createChildTiles())yield*this._fetchChunkInfos(e,a,s+1);else i||(yield r)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,e.options,{chunkId:t.id}),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}},At=class extends ee{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}};class Gi{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=pe([le(e.signal,()=>this._controller.abort()),le(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}}class Ni extends Ss{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{supportsDisplayFilter:!0,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){const t=Ms(this._loadStates,e.key.id,()=>new Gi(e,this._options));let s;try{await this._fetchPages(t)}catch(i){s=i}const r=new At($.empty(this._metadata),null,e.tile,-1,!0);if(Cs(t.options)||this._addChunk(r),s)throw s}unload(e){var t;super.unload(e),(t=this._loadStates.get(e.key.id))==null||t.destroy(),this._loadStates.delete(e.key.id)}async _fetchPages(e){let r=0,i=e.pageStart,a=1;for(;r<20&&!e.done;){const n=[];for(let c=0;c<a;c++)n.push(this._fetchChunk(e,i++));const o=await Promise.all(n);for(const c of o)(c.size()!==0||c.first)&&(e.add(c.page,!c.reader.exceededTransferLimit),G(e.options),this._addChunk(c));r++,a=Math.min(a+1,4)}}async _fetchChunk(e,t){const s=e.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,t),i=await this._fetch(r,e.options,{chunkId:`${s.id}-${t}`});return new At(i,r.inner.toJSON(),s,t,!1)}}class it extends Ne{constructor(e,t,s,r,i,a=new Uint32Array(r.size())){var n;super(e),this._fields=t,this._geometryInfo=s,this._inner=r,this._chunkId=i,this._displayIds=a,this._index=-1,this.usedMemory=Xe,this._size=this._inner.size(),e.objectIdField!=null&&(this._objectIdFieldIndex=(n=this._fields.get(e.objectIdField))==null?void 0:n.index),this._chunkId>65535&&console.error("Exceeded max allowed parquet reader size")}destroy(){super.destroy(),this._inner.free()}get fields(){return this._fields}get geometryType(){return this._geometryInfo.geometryType}get hasFeatures(){return!0}get hasNext(){throw new Error("Method not implemented.")}get exceededTransferLimit(){return!1}get hasZ(){return!1}get hasM(){return!1}getInTransform(){return null}getSize(){return this._size}getCursor(){return this.copy()}getAttributeHash(){let e="";for(const t of this.fields.fields)e+=this._readAttribute(t.name,!1)+".";return e}getObjectId(){return this._objectIdFieldIndex!=null?this._inner.readAttribute(this._index,this._objectIdFieldIndex):this._index<<16|this._chunkId}getDisplayId(){return this._displayIds[this._index]}setDisplayId(e){this._displayIds[this._index]=e}setIndex(e){this._index=e}getBoundsXMin(){return this._inner.boundsXMin(this._index)}getBoundsYMin(){return this._inner.boundsYMin(this._index)}getBoundsXMax(){return this._inner.boundsXMax(this._index)}getBoundsYMax(){return this._inner.boundsYMax(this._index)}setBoundsXMin(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsYMin(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsXMax(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsYMax(e){throw new Error("InternalError: Setting bounds is unsupported")}getIndex(){return this._index}next(){for(;++this._index<this._size&&!this._getExists(););return this._index<this._size}readGeometryArea(){var e;return((e=this.readGeometryForDisplay())==null?void 0:e.area())??0}copy(){const e=new it(this.metadata,this._fields,this._geometryInfo,this._inner,this._chunkId,this._displayIds);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._index=this._index}readGeometryForDisplayTransformed(e){const[t,s]=e.translate,[r,i]=e.scale,a=this._inner.readGeometryTransformed(this._index,t,s,r,i);return a?new M(a.readLengthsUnsafe(),a.readCoordsUnsafe()):null}_readGeometry(e){const t=this._inner.readCoords(this._index),s=this._inner.readLengths(this._index);return t&&s?new M(s,t):null}_readX(){var e;return(e=this._readGeometry())==null?void 0:e.coords[0]}_readY(){var e;return(e=this._readGeometry())==null?void 0:e.coords[1]}_readServerCentroid(){return null}_readAttribute(e,t){const s=this.fields.get(e);if(!s)return;if(s.index==null)return this.getObjectId();const r=this._inner.readAttribute(this._index,s.index);if(r==null)return r;const i=this.fields.isDateField(s.name);return t?r==null?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._fields.fields)t.index!=null?this._inner.hasField(t.index)&&(e[t.name]=this._readAttribute(t.name,!1)):e.__OBJECTID=this.getObjectId();return e}}let Bi=class extends rt{constructor(e,t,s,r){super(r),this._service=e,this._metadata=t,this._schema=s,this._chunkId=0,this._files=[],this._availableFields=new Set(s.mutable.availableFields);const{geometryInfo:i}=this._service;if(i.type==="location")this._availableFields.add(i.latitudeFieldName),this._availableFields.add(i.longitudeFieldName);else if(i.multiscale!=null&&i.multiscale.levels.length>=1){const a=i.multiscale.levels[0];this._availableFields.add(a.column)}else this._availableFields.add(i.primaryFieldName)}destroy(){for(const e of this._files)e.destroy()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async updateFields(e){await this._promise;const t=new Set(e),s=Ts(t,this._availableFields);this._availableFields=Os(s,this._availableFields),s.size&&await Promise.all(this._files.map(r=>{const i=Array.from(s).map(a=>r.metadata.getFieldIndex(a));return r.inner.updateChunks(new Uint16Array(i))}))}async load(e){return this._promise==null&&(this._promise=this._download().then(()=>{this._loadHigherResGeometry()})),this._promise}unload(e){}async addParquetFile(e){this._insert(e)}async _loadHigherResGeometry(){const{geometryInfo:e}=this._service;if(e.type==="geometry"){if(!(e.multiscale!=null&&e.multiscale.levels.length>=1))return;await this.updateFields([e.primaryFieldName])}const t=Array.from(this._store.chunks());this._store.clear();for(const s of t)this._store.insert(s);this._store.refresh()}async _insert(e){const t=await xr.create(e,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.mutable.dataFilter.customParameters}),{geometryInfo:s}=this._service;G(this._options);const{fields:r,timeZoneByFieldName:i}=this._service.metadata.fieldsIndex,a=r.map(c=>({...c,index:t.metadata.getFieldIndex(c.name)})),n=ge.fromJSON({fields:a,timeZoneByFieldName:i}),o=new Uint16Array(Array.from(this._availableFields.values()).map(c=>{var h;return(h=n.get(c))==null?void 0:h.index}).filter(c=>c!=null));await t.inner.readChunksWithCallback(o,c=>{const h=this._chunkId++,u=new it(this._metadata,n,s,c,h),d=new K(u,null,h,!1);this._store.insert(d)}),this._files.push(t)}async _download(){try{await Promise.all(this._service.source.urls.map(t=>this._insert(t)));const e=new K($.empty(this._metadata),null,-1,!0);this._store.insert(e)}catch(e){throw console.error(e),e}}};class Vi extends ws{constructor(e,t,s,r,i,a){super(e,t,s,i,a),this._random=new Et(1e3),this._featureCount=r}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(e){}async _downloadPages(e){const t=Math.ceil(e/this._queryInfo.pageSize),s=Array.from({length:t},(n,o)=>o).sort((n,o)=>this._random.getInt()-this._random.getInt()),r=await Promise.all(s.map(n=>this._downloadPage(n))),i=new K($.empty(this._metadata),null,-1,!0);this._store.insert(i);const a=r.filter(n=>n);if(a.length)throw new P("featurelayer-query","Encountered errors when downloading data",{errors:a})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),s=await this._fetch(t,this._options,{chunkId:e.toString()}),r=new K(s,t.inner.toJSON(),e,!1);return G(this._options),this._store.insert(r),null}catch(t){return t}}}let N=class extends Pt{constructor(l){super(l)}get connectionStatus(){var l;return(l=this.connection)==null?void 0:l.connectionStatus}get errorString(){var l;return(l=this.connection)==null?void 0:l.errorString}};B([ae()],N.prototype,"connection",void 0),B([ae()],N.prototype,"connectionStatus",null),B([ae()],N.prototype,"errorString",null),N=B([Dt("esri.views.2d.layers.features.sources.StreamConnectionState")],N);let Qi=class{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return $.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate((e==null?void 0:e.length)??0)}};class Xi extends ee{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}let Yi=class extends rt{constructor(e,t,s,r,i){super(s),this._service=e,this._dataFilter=t,this._streamOptions=r,this._metadata=i,this._connectionState=new N,this._forceRefresh=!1,this.events=new Be;const{objectIdField:a,timeInfo:n}=this._metadata,{purgeOptions:o}=t;this._stagingStore=new Qi(this._metadata.weakCloneWithAdditionalFields([{name:Ut,alias:"timeReceived",type:"esriFieldTypeDate"}]),c=>this.events.emit("features-updated",c)),this._manager=new kr(this._stagingStore,a,n,o),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){var e;return(e=this._connectionState)==null?void 0:e.errorString}async refresh(){const e=this._chunk!=null;this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new Xi(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){var e;this._connection=Rt(this._connection),this._connectionState.connection=null,(e=this._handlesGroup)==null||e.remove()}connect(){if(this._connection!=null)return;const{geometryType:e,spatialReference:t}=this._metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:r,geometryDefinition:i,definitionExpression:a,customParameters:n}=this._dataFilter;this._connection=Fr(this._service.source,t,this._streamOptions.outSR,e,a,i,s,r,n),this._handlesGroup=pe([this._connection.on("data-received",o=>this._onFeature(o)),this._connection.on("message-received",o=>this._onWebSocketMessage(o))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){var t;(t=this._connection)==null||t.updateCustomParameters(e)}sendMessageToSocket(e){var t;(t=this._connection)==null||t.sendMessageToSocket(e)}sendMessageToClient(e){var t;(t=this._connection)==null||t.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch{}}};class Hi{constructor(e){this._metadata=e,this._chunks=new Map,this._chunksToRemove=[],this._overrides=new hi,this.events=new Be,this.featureAdapter=new Gs}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),this._overrides.clearWeakOverrides()}*chunks(){this._overrides&&(yield this._overrides.asChunk(this._metadata)),yield*this._chunks.values()}insert(e){y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._overrides.onChunkInsert(e),this._chunks.set(e.chunkId,e),this.events.emit("changed")}remove(e){y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanup(){const e=this._chunksToRemove;return this._chunksToRemove=[],this._overrides.cleanup(this._chunks.values()),e}applyOverride(e){this._overrides.apply(e,this),this.events.emit("changed");for(const t of this._chunks.values())t.invalidate()}takeOverrideUpdate(){return this._overrides.takeOverrideUpdate()}refresh(){this.events.emit("refresh")}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r.copy()),t.add(i))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r),t.add(i))}}}mapObjectIdsFromGlobalIds(e,t){const s=new Map,r=new Set(e);return this._overrides.putWeakObjectIdsFromGlobalIds(s,r,t),this._forEachUnsafeIgnoreOverrides(i=>{const a=i.readAttribute(t);if(a&&r.has(a)&&!s.has(a)){const n=i.getObjectId();s.set(a,n)}}),s}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const i=r.queryFeaturesInBounds(e);for(;i.next();){const a=i.getObjectId();s.has(a)||(t(i.copy()),s.add(a))}}}forEachBounds(e,t){const s=Ve();for(const r of e)r.getBounds(s)&&t(s)}_forEachUnsafeIgnoreOverrides(e){const t=new Set;for(const s of this._chunks.values()){const r=s.reader.withoutOverrides().getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r),t.add(i))}}}}class Ji{constructor(e,t,s,r,i){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._connection=r,this._cachedObjectIds=i,this._updateTracking=new Mr({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._metadata=me.createFeature(e.metadata),this._store=new Hi(this._metadata)}destroy(){var e,t;(e=this._strategy)==null||e.destroy(),this._store.destroy(),(t=this._streamMessenger)==null||t.destroy(),this.service.type==="memory"&&this.service.source.map(s=>s.close())}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return vi.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new Vt({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,objectIdField:s.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}get hasDisplayFilter(){return!!this._schema&&"displayFilterInfo"in this._schema.mutable&&this._schema.mutable.displayFilterInfo!=null}chunks(){return Array.from(this._store.chunks())}prepareCacheUpdate(e,t){const s=new Set,r=new Set;for(const i of e)this._cachedObjectIds.has(i)||(this._cachedObjectIds.add(i),s.add(i));for(const i of t)this._cachedObjectIds.delete(i),r.add(i);this.hasDisplayFilter&&this._strategy.prepareCacheUpdate(s,r)}async applyCacheUpdate(){this.hasDisplayFilter&&await this._updateTracking.addPromise(this._strategy.applyCacheUpdate())}cleanup(){return this._store.cleanup()}onSubscribe(e){var s;this._connection.onEvent({type:"subscribe",tile:e.tile.id});const t=(s=this._strategy)==null?void 0:s.load(e);t&&(t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(r=>this._connection.onEvent({type:"error",tile:e.tile.id,error:r})),this._updateTracking.addPromise(t))}onResume(e){var t;this._updateTracking.addPromise(jt((t=this._strategy)==null?void 0:t.load(e)))}onUnsubscribe(e){var t;this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),(t=this._strategy)==null||t.unload(e)}applyOverride(e){this._didInvalidateData=!0,this._store.applyOverride(e)}takeOverrideUpdate(){return this._store.takeOverrideUpdate()}async update(e,t){var i,a,n;const s=e.source,r=Wt((i=this._schema)==null?void 0:i.mutable,s.mutable);if(!r)return!1;if(y("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:r}),this._schema=s,(a=this._queryEngine)==null||a.destroy(),this._queryEngine=null,this.service.type==="feature-service"&&this.service.queryMetadata.lastEditDate!=null&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),this._streamMessenger==null&&this._schema.type==="stream"&&this._initStreamMessenger(),at(r,"sourceRefreshVersion")&&((n=this._strategy)==null?void 0:n.refresh))return await this._strategy.refresh(),!0;if((s.type==="feature"||s.type==="parquet")&&at(r,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(s.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(o){this._connection.onEvent({type:"updateFieldsError",error:o})}}return!1}return!!(xe(r,"dataFilter")||xe(r,"sourceRefreshVersion")||this._strategy.about.supportsDisplayFilter&&xe(r,"displayFilterInfo"))&&(await this._updateStrategy(t),!0)}async addParquetFile(e){this._strategy.addParquetFile(e)}unsafeSetQueryHistoricMoment(e){this._schema.type==="feature"&&(this._schema.mutable.dataFilter.historicMoment=e,this._strategy.unsafeSetQueryHistoricMoment(new Date(e)))}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new he(this._connection))}async normalizeOverrides(e){const t={historicMoment:e.historicMoment,commands:{updateWeak:e.commands.updateWeak.map(R.fromJSON),removeWeak:e.commands.removeWeak,update:e.commands.update.map(R.fromJSON),remove:e.commands.remove,release:e.commands.release}},s=e.commands.updateByIdWeak,r=await this._queryOptimizedFeatures(s);return t.commands.updateWeak.push(...r),t}async _queryOptimizedFeatures(e){if(e.length===0)return[];const t=[],s=(await this._strategy.queryByObjectId(e)).getCursor();for(;s.next();)t.push(s.readOptimizedFeatureWorldSpace());return t}getObjectIdsFromGlobalIds(e){const t=this.metadata.globalIdField;if(t==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const s=this._store.mapObjectIdsFromGlobalIds(e,t).values();return Array.from(s)}async _queryLastEditDateChanged(){if(this._lastEditDate==null)return!1;const e=this.service.source,t={...e.query,f:"json"},s=(await fr(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&"collection"in this.service.source,r=e||t||s;if(this._schema.type==="stream"){const o=new Yi(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=o,o}if(this._schema.type==="parquet"){const o=this.service;return new Bi(o,this._metadata,this._schema,this._store)}const i=this.service,a=Si.fromSchema(i,this._schema,this._metadata),n=await this._supportSnapshotMode(i,a);return n?new Vi(i,a,this._store,n.featureCount,this.metadata,this._connection):r?new Ni(i,a,this._store,this.metadata,this._connection):new zi(i,a,this._store,this.metadata,this._connection)}async _updateStrategy(e){var a;const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const s=!!this._strategy;this._store.clear(),(a=this._strategy)==null||a.destroy(),this._strategy=t,y("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const r=Array.from(this._subscriptions.values());if(!r.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const i=Promise.all(r.map(n=>this._strategy.load(n).then(()=>this._connection.onEvent({type:"loaded",tile:n.tile.id})).catch(o=>this._connection.onEvent({type:"error",tile:n.tile.id,error:o}))));this._updateTracking.addPromise(i),this._strategy.prepareCacheUpdate(this._cachedObjectIds);try{s&&await i}catch(n){Ue(n)}this._connection.onEvent({type:"updateStrategyEnd"}),y("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,r=s.snapshotInfo;if(!r||!r.supportsSnapshotMinThreshold||!r.snapshotCountThresholds)return null;const i=e.source,a=t.createQuery();a.inner.orderByFields=[],a.inner.returnGeometry=!1;const n=(await gr(i,a.inner,{query:a.customParameters})).data.count,{min:o,max:c}=r.snapshotCountThresholds;return n<=o||r.supportsSnapshotMaxThreshold&&n<c?{featureCount:n}:null}}class Zi{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class re{constructor(e){this.inner=e,this.resolver=qs()}}class bc{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._cachedObjectIds=new Set,this._updateRequested=!1,this._didSourceRefresh=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){var e,t,s;this._subscriptions.clear(),(e=this._processor)==null||e.destroy(),(t=this._source)==null||t.destroy(),(s=this._handles)==null||s.remove(),this._updateOverridesRequest=null,this._tileInfoView=null}onAttach(e){y("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,s=Ds.fromJSON(e.tileInfoJSON);this._tileInfoView=new js(s),this._source=new Ji(e.service,this._aggregateAdapter,this._subscriptions,t,this._cachedObjectIds),this._processor=new bi(t,this._source),this._handles=pe([this._source.store.events.on("changed",()=>this._requestUpdate()),this._source.store.events.on("refresh",()=>this._requestRefresh()),qe(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),jt(this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){y("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new Cr(e)}get features(){var t;const e=(t=this._source)==null?void 0:t.queryEngine;if(!e)throw new P("no-queryEngine","No query engine defined");return e}get aggregates(){var t;const e=(t=this._processor)==null?void 0:t.aggregateQueryEngine;if(!e)throw new P("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}getObjectIdsFromGlobalIds(e){return this._source.getObjectIdsFromGlobalIds(e)}async updateSchema(e,t){return y("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new re({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new re(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new re(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async addParquetFile(e){return this._source.addParquetFile(e)}async onOverride(e){if(this._updateOverridesRequest!=null)throw new P("InternalError - Already processing an edit");this._updateOverridesRequest=new re(e);const t=this._updateOverridesRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(As(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i=typeof e.fieldOffset=="string",a=e.fieldOffset??0,n=Array.from(this._subscriptions.values()),o=this._source.chunks(),c=t**2,h=3/(Math.PI*c),u=2*t,d=Math.ceil(T/u);for(const p of n){const _=p.tile,m=new Float64Array(d*d);for(const f of o){const g=f.getTileReader(_);if(!g)continue;const b=g.getCursor();for(;b.next();){let I=1;if(e.field!=null){const q=b.readAttribute(e.field);I=i?-1*+q:+q+a}const F=b.readXForDisplay()/u,O=b.readYForDisplay()/u,S=Math.floor(F),x=Math.floor(O);if(S<0||x<0||S>=d||x>=d)continue;const k=((.5+S-F)*u)**2+((.5+x-O)*u)**2;if(k>c)continue;const v=I*(h*(1-k/c)**2);m[x+S*d]+=v}}for(let f=0;f<m.length;f++)s=Math.min(s,m[f]),r=Math.max(r,m[f])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((o,c)=>o+c.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const o=[];return this._source.store.forEachUnsafe(c=>o.push(c.readLegacyFeatureWorldSpace())),o}return null}const s=new Set,r=[],i=t.map(o=>o.reader.getCursor()),a=new Et,n=3*e.sampleSize;for(let o=0;o<n&&r.length<e.sampleSize;o++){const c=i[a.getIntRange(0,t.length-1)];if(c.getSize()===0)continue;const h=a.getIntRange(0,c.getSize()-1);c.setIndex(h);const u=c.getObjectId();s.has(u)||(s.add(u),r.push(c.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,$s(()=>this._scheduleNextUpdate()))}_requestRefresh(){this._didSourceRefresh=!0,this._requestUpdate()}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=Le(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;y("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new rr(this._tileInfoView,t),r=new Zi(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(y("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const i=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const a of i)this._doUpdateSubscriptions(a.inner),a.resolver.resolve()}if(this._updateHighlightRequests.length){const i=this._updateHighlightRequests,a=new Set,n=new Set;for(const o of i)for(const{objectId:c,highlightFlags:h}of o.inner.highlights)h?(a.add(c),n.delete(c)):(n.add(c),a.delete(c));this._source.prepareCacheUpdate(a,n)}const e=this._updateSchemaRequest;this._updateSchemaRequest=null;let t=!1;if(e!=null){const{schema:i,version:a}=e.inner;t=await this._doUpdateSchema(i,a)}this._didSourceRefresh&&(t=!0,this._didSourceRefresh=!1),t&&(this._processor.invalidate(),await this._connection.container.updateRenderState(this._processor.version));const s=this._updateOverridesRequest;if(this._updateOverridesRequest=null,s!=null){y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverride",s.inner),s.inner.historicMoment!=null&&this._source.unsafeSetQueryHistoricMoment(s.inner.historicMoment);const i=await this._source.normalizeOverrides(s.inner);this._source.applyOverride(i),y("esri-2d-update-debug")&&console.debug("Pipeline.endOverride",s.inner)}if(await this._source.applyCacheUpdate(),this._updateHighlightRequests.length){const i=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const a of i)this._processor.updateHighlight(a.inner),a.resolver.resolve()}const r=this._source.cleanup();this._processor.removeChunks(r);try{const i=this._source.takeOverrideUpdate();if(i!=null&&this._subscriptions.size){y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesStart"),await this._connection.container.lockForOverrides();try{await this._processor.applyOverrideUpdate(i)}catch(a){y("esri-2d-update-debug")&&console.debug("InternalError",a)}await this._connection.container.unlockForOverrides(),y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesEnd")}this._subscriptions.size&&(y("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),y("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(i){Ue(i)}s!=null&&s.resolver.resolve(),e!=null&&e.resolver.resolve(),e==null&&t&&await this._connection.container.trySwapRenderState(),this._updateRequested?(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0})):(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){var n;y("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:(n=this._tileInfoView)==null?void 0:n.tileInfo},r=await this._source.update(e,t),i=Array.from(this._subscriptions.values()),a=this._processor.update(e,t,s,r,i);return y("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`),a}_doUpdateSubscriptions(e){y("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{bc as default};
