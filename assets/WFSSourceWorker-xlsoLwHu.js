import{a as T}from"./reactiveUtils-BR0C1Kq4.js";import{s as f,D as c,B as g,U as y,E as C}from"./Accessor-BHnuXKD2.js";import{c as E}from"./Point-XGrwlf63.js";import{s as q,u as P}from"./featureConversionUtils-DpmsPUmt.js";import{u as I}from"./executeQueryForSnapping-DNwXF6kY.js";import{f as $}from"./FeatureStore-CozDnyvc.js";import{x as b,j}from"./queryUtils-DBeaQ3x_.js";import{L as N}from"./QueryEngine-BJMZSAnZ.js";import{E as O,N as Q}from"./geojson-CxQh_AXs.js";import{g as M}from"./sourceUtils-Lw75gUHq.js";import{o as k,e as L,K as _}from"./wfsUtils-DriyxBq4.js";import{Z as U}from"./FieldsIndex-DFdVonga.js";import{n as A}from"./opacityUtils-CSd4XoR2.js";import{n as Z}from"./Promise-CmQqe-ke.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./writer-B2bQV2uU.js";import"./aaBoundingBox-CeBivBRq.js";import"./Extent-CBBGeHb-.js";import"./Polyline-BmuD2-ZN.js";import"./mathUtils-DV9iOXpW.js";import"./jsonUtils-Cu7OBRmN.js";import"./OptimizedFeature-DcMLlxvB.js";import"./memoryEstimations-5gFNwkKK.js";import"./OptimizedGeometry-7IxBWtHr.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./normalizeUtils-XRAPXbWa.js";import"./normalizeUtilsCommon-D0zPTJCj.js";import"./utils-Cy8wFNQo.js";import"./utils-CkSELPnj.js";import"./timeSupport-Cvj97qZO.js";import"./BoundsStore-Cf415lwW.js";import"./PooledRBush-BHbZLwLz.js";import"./quickselect-QQC62dOK.js";import"./optimizedFeatureQueryEngineAdapter-Dffp2J7r.js";import"./projection-B2I9Bzj_.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./json-Wa8cmqdu.js";import"./WhereClauseCache-CrfkeLux.js";import"./LRUCache-DS2O1kTf.js";import"./MemCache-CDoaVBHf.js";import"./WhereClause-diW5rNp6.js";import"./TimeOnly-yGYcAQQJ.js";import"./fieldType-L-VlbZqy.js";import"./QueryEngineCapabilities-DZTubngj.js";import"./timeUtils-D2X862bk.js";import"./quantizationUtils-2Az-xHPA.js";import"./utils-D8exU0T6.js";import"./screenUtils-_ZIvrt5o.js";import"./heatmapUtils-DA7NmY3d.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-DLmnG8WZ.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./intl-Do3GEEJ7.js";import"./timeZoneUtils-COos5xIr.js";import"./utils-B8VMZhYy.js";import"./ClassBreaksDefinition-DvZJqFCP.js";import"./enumeration-Cr5WIZs4.js";import"./SnappingCandidate-O5eRSE6e.js";import"./FixedIntervalBinParameters-uigAmvtd.js";import"./NormalizationBinParametersMixin-D6iHLB7I.js";import"./Clonable-DvJsj5LF.js";import"./Scheduler-B_GuBefw.js";import"./signal-DSa0yokC.js";import"./debugFlags-ZrDyTcDc.js";import"./date-DLgTylpo.js";import"./typeUtils-BSg8Y507.js";import"./xmlUtils-CtUoQO7q.js";import"./Field-Cyk7Ur5d.js";const x="esri.layers.WFSLayer";class ce{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:r,getFeatureOutputFormat:a,fields:i,geometryType:u,featureType:s,maxRecordCount:n,maxTotalRecordCount:l,maxPageCount:R,objectIdField:d,customParameters:F}=t,{spatialReference:p,getFeatureSpatialReference:h}=k(r,s,t.spatialReference);try{await b(h,p)}catch{throw new f("unsupported-projection","Projection not supported",{inSpatialReference:h,outSpatialReference:p})}c(e),this._customParameters=F,this._featureType=s,this._fieldsIndex=U.fromLayerJSON({fields:i,dateFieldsTimeReference:i.some(S=>S.type==="esriFieldTypeDate")?{timeZoneIANA:Z}:null}),this._geometryType=u,this._getFeatureUrl=r,this._getFeatureOutputFormat=a,this._getFeatureSpatialReference=h,this._maxRecordCount=n,this._maxTotalRecordCount=l,this._maxPageCount=R,this._objectIdField=d,this._spatialReference=p;let m=await this._snapshotFeatures(e);if(m.errors.length>0&&(this._supportsPagination=!1,m=await this._snapshotFeatures(e),m.errors.length>0))throw m.errors[0];return this._queryEngine=new N({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,objectIdField:d,spatialReference:p,timeInfo:null,featureStore:new $({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(m.features),{warnings:w(m),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new f("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(A)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),I(this._queryEngine,t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(t){var e;return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,(e=this._snapshotTask)==null||e.abort(),this._snapshotTask=T(r=>this._snapshotFeatures({signal:r})),this._snapshotTask.promise.then(r=>{var a;this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(r.features);for(const i of w(r))g.getLogger(x).warn(new y("wfs-layer:refresh-warning",i.message,i.details));(a=r.errors)!=null&&a.length&&g.getLogger(x).warn(new y("wfs-layer:refresh-error","Refresh completed with errors",{errors:r.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t==null?void 0:t.signal,r=this._maxTotalRecordCount,a=this._maxPageCount,i=this._supportsPagination?await L(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let u=[];const s=[];if(i==null)try{u=await this._singleQuery(e)}catch(n){C(n)||s.push(n)}else{const n=Math.min(i,r),l=J(this,Math.max(1,Math.min(Math.ceil(n/this._maxRecordCount),a)),e);await Promise.allSettled(Array.from({length:10}).map(()=>v(l,u,s)))}return c(e),{features:u,totalRecordCount:i,maxTotalRecordCount:r,maxPageCount:a,errors:s}}async _singleQuery(t){const e=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(e,{signal:t})}async _pageQuery(t,e){const r=t*this._maxRecordCount,a=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:r,count:this._maxRecordCount,signal:e});return this._processGeoJSON(a,{startIndex:r,signal:e})}_processGeoJSON(t,e){O(t,this._getFeatureSpatialReference.wkid);const{startIndex:r,signal:a}=e;c(a);const i=Q(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!E(this._spatialReference,this._getFeatureSpatialReference))for(const s of i)s.geometry!=null&&(s.geometry=q(j(P(s.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=r??1;for(const s of i){const n={};M(this._fieldsIndex,n,s.attributes,!0),s.attributes=n,n[this._objectIdField]==null&&(s.objectId=n[this._objectIdField]=u++)}return i}}function*J(o,t,e){for(let r=0;r<t;r++)yield o._pageQuery(r,e)}async function v(o,t,e){let r=o.next();for(;!r.done;){try{const a=await r.value;t.push(...a)}catch(a){C(a)||e.push(a)}r=o.next()}}function w(o){const t=[];return o.totalRecordCount!=null&&(o.features.length<o.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${o.features.length} of ${o.totalRecordCount} in ${o.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:o.features.length,totalRecordCount:o.totalRecordCount}}),o.totalRecordCount>o.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${o.totalRecordCount} features exceeds the maximum allowed of ${o.maxTotalRecordCount}.`,details:{recordCount:o.features.length,totalRecordCount:o.totalRecordCount,maxTotalRecordCount:o.maxTotalRecordCount}})),t}export{ce as default};
