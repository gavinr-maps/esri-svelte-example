import{y as _e}from"./colorUtils-46-ov8wK.js";import{d as c,y as m,f as A,aU as $e,dC as rs,aY as jt,c7 as Y,aV as L,a$ as vs,b0 as ws,aZ as Ct,aS as _t,jF as kt,F as Bt,aB as Be,aF as bs}from"./index-B1qcMJFy.js";import{u as w,r as nt,i as vt,o as As,t as Ts,n as Fe,v as os,d as Xt,w as is,x as Ps,y as K,z as $s,A as Fs,B as Ns,C as Is}from"./dataUtils-DD7W-erV.js";import{a as Rs,s as ks,v as Vt,C as Cs,w as as,e as je,x as _s,y as Bs,z as Kt,E as js,H as Ss,I as Jt,J as Ms,M as Os,K as Ds}from"./RasterSymbolizer-CJrQgRYk.js";import{m as Gs,p as zs}from"./colorRamps-DdzVD7Op.js";let Ut=class extends $e{constructor(){super(...arguments),this.raster=void 0}};c([m({json:{write:!0}})],Ut.prototype,"raster",void 0),Ut=c([A("esri.layers.support.rasterFunctions.AspectFunctionArguments")],Ut);const D=Ut;var Yt;let wt=Yt=class extends D{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new Yt({raster:this.raster,raster2:this.raster2,operation:this.operation})}};c([m({json:{write:!0}})],wt.prototype,"operation",void 0),c([m({json:{write:!0}})],wt.prototype,"raster2",void 0),c([m({readOnly:!0})],wt.prototype,"rasters",null),wt=Yt=c([A("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],wt);const Es=wt,Vs=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let S=class extends $e{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){var u;const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let o=s.rasters||s.raster&&[s.raster];for(;o!=null&&o.length;){e.unshift(...o);const l=[];for(let p=0;p<o.length;p++){const{parameters:h}=o[p],f=h.rasters||h.raster&&[h.raster];f!=null&&f.length&&l.push(...f)}o=l}for(let l=e.length-1;l>=0;l--)e[l].isNoopProcess&&e.splice(l,1);let r=!1;for(let l=0;l<e.length;l++){const p=e[l];p.id=e.length-l-1;const{rasters:h}=p.parameters;r=r||h!=null&&h.length>1}const a=e.some(({name:l})=>Vs.has(l.toLowerCase())),{rawSourceRasterInfos:n}=this;return{functions:e,hasBranches:r,hasFocalFunction:a,isSourceSingleBand:((u=n==null?void 0:n[0])==null?void 0:u.bandCount)===1}}bind(t,e=!1,s=-1){this.id=s+1;const o=this._getRasterValues();let r=!0;for(let a=0;a<o.length;a++){const n=o[a];if(n!=null&&this._isRasterFunctionValue(n)){const u=n.bind(t,e,this.id+a);if(!u.success)return this._bindingResult=u,u;r=r&&u.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(o=>this._readRasterValue(o,t));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const r=t.map(n=>n.processInputBandIds()[0]);this.rawInputBandIds=r,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((n,u)=>n!==u);const a=t.filter(n=>n.functionName==="ExtractBand");return a.length&&a.forEach((n,u)=>{n.isInputBandIdsSwizzled=!0,n.swizzledBandSelection=[u,u,u]}),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:r}=this.sourceRasterInfos[0];for(let a=0;a<r;a++)e.push(a)}const o=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=o.some((r,a)=>r!==a),this.rawInputBandIds=o,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map(o=>this._isRasterFunctionValue(o)?o.getWebGLProcessorDefinition():typeof o=="number"?{name:"Constant",parameters:{value:o},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:o},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(o=>o!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];this.functionName==="Clip"&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach(o=>{if(this._isRasterFunctionValue(o)){const r=o.getClippingGeometries();t.push(...r)}});else if(this._isRasterFunctionValue(e)){const o=e.getClippingGeometries();t.push(...o)}return t}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:o}=t;if(e.length===0)return s;const r=e.map(n=>n&&typeof n=="object"&&"bind"in n&&n.rasterInfo?n.rasterInfo:typeof n=="string"&&o.includes(n)?s[o.indexOf(n)]:typeof n!="number"?s[0]:void 0),a=r.find(n=>n)??s[0];return r.forEach((n,u)=>{n===void 0&&(r[u]=a)}),r}_getPrimaryRasterId(t){return t==null?void 0:t.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let o=0;o<t.sourceRasters.length;o++){const r=t.sourceRasters[o];if(typeof r!="number")if("bind"in r)this._getPrimaryRasters(r,e,s);else{const a=r,n=this._getPrimaryRasterId(a);if(n==null)continue;s.includes(n)||(this.mainPrimaryRasterId===n?(e.unshift(a),s.unshift(n)):(e.push(a),s.push(n)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(t==null||t==="$$"){const o=s[0];return o==null?null:o.clone()}if(typeof t=="string"){const o=e.primaryRasterIds.indexOf(t);return o===-1?null:s[o]}if(typeof t=="number"){const o=s[0];if(o==null)return null;const{width:r,height:a,pixelType:n}=o,u=new Float32Array(r*a);u.fill(t);const l=this.sourceRasterInfos[0].bandCount,p=new Array(l).fill(u);return new w({width:r,height:a,pixelType:n,pixels:p})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!(t!=null&&t.keyProperties))return;const{bandCount:e,keyProperties:s,statistics:o,histograms:r}=t,a=s.BandProperties;a&&a.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),o&&o.length!==e&&(t.statistics=o.length>e?o.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:typeof s.BAND_COUNT=="string"?String(e):e})}};c([m({json:{write:!0}})],S.prototype,"functionName",void 0),c([m({json:{write:!0}})],S.prototype,"functionArguments",void 0),c([m()],S.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}}),rs(i=>i==null?void 0:i.toLowerCase())],S.prototype,"outputPixelType",void 0),c([m({json:{write:!0}})],S.prototype,"mainPrimaryRasterId",void 0),c([m()],S.prototype,"sourceRasters",void 0),c([m({type:[Rs],json:{write:!0}})],S.prototype,"sourceRasterInfos",void 0),c([m({json:{write:!0}})],S.prototype,"rasterInfo",void 0),c([m({json:{write:!0}})],S.prototype,"readingBufferSize",void 0),c([m({json:{write:!0}})],S.prototype,"id",void 0),c([m()],S.prototype,"isNoopProcess",void 0),c([m()],S.prototype,"supportsGPU",null),c([m()],S.prototype,"rawInputBandIds",void 0),c([m()],S.prototype,"rawSourceRasterInfos",void 0),c([m()],S.prototype,"isInputBandIdsSwizzled",void 0),c([m()],S.prototype,"swizzledBandSelection",void 0),c([m()],S.prototype,"isBranch",void 0),c([m({readOnly:!0})],S.prototype,"flatWebGLFunctionChain",null),c([m()],S.prototype,"_bindingResult",void 0),S=c([A("esri.layers.support.rasterFunctions.BaseRasterFunction")],S);const G=S,$={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},Us={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},U={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},H={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},Ls={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},us={setNull:50,conditional:78},Se={...Us,...U,...H,...Ls,...us},ls=new Map([[H.acos,{domain:[0,Math.PI],isInteger:!1}],[H.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[H.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[H.cos,{domain:[-1,1],isInteger:!1}],[H.sin,{domain:[-1,1],isInteger:!1}],[U.booleanAnd,{domain:[0,1],isInteger:!0}],[U.booleanNot,{domain:[0,1],isInteger:!0}],[U.booleanOr,{domain:[0,1],isInteger:!0}],[U.booleanXOr,{domain:[0,1],isInteger:!0}],[U.equalTo,{domain:[0,1],isInteger:!0}],[U.notEqual,{domain:[0,1],isInteger:!0}],[U.greaterThan,{domain:[0,1],isInteger:!0}],[U.greaterThanEqual,{domain:[0,1],isInteger:!0}],[U.lessThan,{domain:[0,1],isInteger:!0}],[U.lessThanEqual,{domain:[0,1],isInteger:!0}],[U.isNull,{domain:[0,1],isInteger:!0}]]);function Me(i){return ls.get(i)}const Oe=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function Ws(i,t=!1){const e=i.map(n=>n.mask),s=e.filter(n=>n!=null),o=i[0].pixels[0].length;if(s.length===0||t&&s.length!==e.length)return new Uint8Array(o).fill(255);const r=s[0],a=new Uint8Array(r);if(s.length===1)return a;if(!t){for(let n=1;n<s.length;n++){const u=s[n];for(let l=0;l<a.length;l++)a[l]&&(a[l]=u[l]?255:0)}return a}for(let n=1;n<s.length;n++){const u=s[n];for(let l=0;l<a.length;l++)a[l]===0&&(a[l]=u[l]?255:0)}return a}function qs(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]+o[n]);return a}function Hs(i,t,e){const[s]=i,o=s.length,r=w.createEmptyBand("f32",o);return r.set(s),r}function Xs(i,t,e){const[s]=i,o=s.length,r=w.createEmptyBand(e,o);for(let a=0;a<o;a++)t&&!t[a]||(r[a]=s[a]*s[a]);return r}function Js(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]-o[n]);return a}function Ks(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]*o[n]);return a}function Ys(i,t,e){const[s]=i,o=s.length,r=w.createEmptyBand(e,o);for(let a=0;a<o;a++)t&&!t[a]||(r[a]=Math.sign(s[a])*Math.floor(Math.abs(s[a])));return r}function cs(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]/o[n]);return a}function Zs(i,t,e){return cs(i,t,"f32")}function Qs(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=Math.floor(s[n]/o[n]));return a}function tn(i,t,e,s){const o=i[0],r=o.length,a=w.createEmptyBand(e,r);if(s===H.atanh){for(let u=0;u<r;u++)if(t[u]){const l=o[u];Math.abs(l)>=1?t[u]=0:a[u]=Math.atanh(l)}return a}const n=s===H.asin?Math.asin:Math.acos;for(let u=0;u<r;u++)if(t[u]){const l=o[u];Math.abs(l)>1?t[u]=0:a[u]=n(l)}return a}function en(i,t,e,s){const[o]=i,r=o.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s(o[n]));return a}function sn(i,t,e,s){const[o,r]=i,a=o.length,n=w.createEmptyBand(e,a);for(let u=0;u<a;u++)t&&!t[u]||(n[u]=s(o[u],r[u]));return n}function nn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]&o[n]);return a}function rn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]<<o[n]);return a}function on(i,t,e){const[s]=i,o=s.length,r=w.createEmptyBand(e,o);for(let a=0;a<o;a++)t&&!t[a]||(r[a]=~s[a]);return r}function an(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]|o[n]);return a}function un(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]>>o[n]);return a}function ln(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]^o[n]);return a}function cn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]&&o[n]?1:0);return a}function pn(i,t,e){const[s]=i,o=s.length,r=w.createEmptyBand(e,o);for(let a=0;a<o;a++)t&&!t[a]||(r[a]=s[a]?0:1);return r}function hn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]||o[n]?1:0);return a}function mn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=(s[n]?1:0)^(o[n]?1:0));return a}function fn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]===o[n]?1:0);return a}function Ne(i,t,e,s){const[o]=i,r=o.length,a=w.createEmptyBand(e,r),n=s===Math.E;for(let u=0;u<r;u++)t&&!t[u]||(a[u]=n?Math.exp(o[u]):s**o[u]);return a}function dn(i,t,e){return Ne(i,t,e,10)}function gn(i,t,e){return Ne(i,t,e,2)}function yn(i,t,e){return Ne(i,t,e,Math.E)}function Ie(i,t,e,s){const[o]=i,r=o.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(o[n]<=0?t[n]=0:a[n]=s(o[n]));return a}function xn(i,t,e){return Ie(i,t,e,Math.log10)}function vn(i,t,e){return Ie(i,t,e,Math.log2)}function wn(i,t,e){return Ie(i,t,e,Math.log)}function bn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]>o[n]?1:0);return a}function An(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]>=o[n]?1:0);return a}function Tn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]<o[n]?1:0);return a}function Pn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]<=o[n]?1:0);return a}function $n(i,t,e){const[s]=i,o=s.length,r=w.createEmptyBand(e,o);if(!t)return r;for(let a=0;a<o;a++)r[a]=t[a]?0:1;return r}function Fn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]%o[n]);return a}function Nn(i,t,e){const[s]=i,o=s.length,r=w.createEmptyBand(e,o);for(let a=0;a<o;a++)t&&!t[a]||(r[a]=-s[a]);return r}function In(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t&&!t[n]||(a[n]=s[n]===o[n]?0:1);return a}function Rn(i,t,e){const[s,o]=i,r=s.length,a=w.createEmptyBand(e,r),n=new Uint8Array(r);for(let u=0;u<r;u++)t!=null&&!t[u]||s[u]!==0||(a[u]=o[u],n[u]=255);return{band:a,mask:n}}function De(i,t,e){const[s,o,r]=i,a=s.length,n=w.createEmptyBand(e,a);for(let u=0;u<a;u++)t&&!t[u]||(n[u]=s[u]?o[u]:r[u]);return n}function Ge(i,t,e){const s=i.length;if(s<2)return i[0];const[o]=i,r=o.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)if(!t||t[n]){let u=o[n];for(let l=1;l<s;l++){const p=i[l][n];u<p&&(u=p)}a[n]=u}return a}function ze(i,t,e){const s=i.length;if(s<2)return i[0];const[o]=i,r=o.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)if(!t||t[n]){let u=o[n];for(let l=1;l<s;l++){const p=i[l][n];u>p&&(u=p)}a[n]=u}return a}function Ee(i,t,e){const s=i.length;if(s<2)return i[0];const[o]=i,r=o.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)if(!t||t[n]){let u=o[n],l=u;for(let p=1;p<s;p++){const h=i[p][n];l<h?l=h:u>h&&(u=h)}a[n]=l-u}return a}function Ve(i,t,e){const s=i.length;if(s<2)return i[0];const[o]=i,r=o.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)if(!t||t[n]){let u=0;for(let l=0;l<s;l++)u+=i[l][n];a[n]=u/s}return a}function Ue(i,t,e){const s=i.length;if(s<2)return i[0];const[o]=i,r=o.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)if(!t||t[n])for(let u=0;u<s;u++){const l=i[u];a[n]+=l[n]}return a}function Le(i,t,e){const s=i.length;if(s<2)return i[0];const[o]=i,r=o.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)if(!t||t[n]){const u=new Float32Array(s);let l=0;for(let h=0;h<s;h++){const f=i[h];l+=f[n],u[h]=f[n]}l/=s;let p=0;for(let h=0;h<s;h++)p+=(u[h]-l)**2;a[n]=Math.sqrt(p/s)}return a}function We(i,t,e){const s=i.length;if(s<2)return i[0];const o=Math.floor(s/2),[r]=i,a=r.length,n=w.createEmptyBand(e,a),u=new Float32Array(s),l=s%2==1;for(let p=0;p<a;p++)if(!t||t[p]){for(let h=0;h<s;h++)u[h]=i[h][p];u.sort(),n[p]=l?u[o]:(u[o]+u[o-1])/2}return n}function ps(i,t,e){const[s,o]=i;if(o==null)return s;const r=s.length,a=w.createEmptyBand(e,r);for(let n=0;n<r;n++)t[n]&&(s[n]===o[n]?a[n]=s[n]:t[n]=0);return a}function qe(i,t,e){const s=i.length;if(s<=2)return ps(i,t,e);const o=i[0].length,r=w.createEmptyBand(e,o),a=new Map;for(let n=0;n<o;n++)if(!t||t[n]){let u;a.clear();for(let h=0;h<s;h++)u=i[h][n],a.set(u,a.has(u)?a.get(u)+1:1);let l=0,p=0;for(const h of a.keys())l=a.get(h),l>p&&(p=l,u=h);r[n]=u}return r}function He(i,t,e){const s=i.length;if(s<=2)return ps(i,t,e);const o=i[0].length,r=w.createEmptyBand(e,o),a=new Map;for(let n=0;n<o;n++)if(!t||t[n]){let u;a.clear();for(let h=0;h<s;h++)u=i[h][n],a.set(u,a.has(u)?a.get(u)+1:1);let l=0,p=i.length;for(const h of a.keys())l=a.get(h),l<p&&(p=l,u=h);r[n]=u}return r}function Xe(i,t,e){const s=i.length;if(s<2)return i[0];const[o]=i,r=o.length,a=w.createEmptyBand(e,r),n=new Set;for(let u=0;u<r;u++)if(!t||t[u]){let l;n.clear();for(let p=0;p<s;p++)l=i[p][u],n.add(l);a[u]=n.size}return a}const O=new Map,Ht=new Map,T=new Map,j=new Map;function kn(){O.size||(O.set(4,Math.sqrt),O.set(6,Math.acos),O.set(7,Math.asin),O.set(8,Math.atan),O.set(9,Math.atanh),O.set(10,Math.abs),O.set(21,Math.cos),O.set(22,Math.cosh),O.set(48,Math.floor),O.set(49,Math.ceil),O.set(51,Math.sin),O.set(52,Math.sinh),O.set(56,Math.tan),O.set(57,Math.tanh),O.set(59,Math.acosh),O.set(60,Math.asinh),O.set(65,Math.floor),Ht.set(5,Math.pow),Ht.set(61,Math.atan2),T.set(1,qs),T.set(2,Js),T.set(3,Ks),T.set(11,nn),T.set(12,rn),T.set(13,on),T.set(14,an),T.set(15,un),T.set(16,ln),T.set(17,cn),T.set(18,pn),T.set(19,hn),T.set(20,mn),T.set(23,cs),T.set(24,fn),T.set(25,yn),T.set(26,dn),T.set(27,gn),T.set(28,bn),T.set(29,An),T.set(30,Ys),T.set(31,$n),T.set(32,Hs),T.set(33,Tn),T.set(34,Pn),T.set(35,wn),T.set(36,xn),T.set(37,vn),T.set(44,Fn),T.set(45,Nn),T.set(46,In),T.set(53,Xs),T.set(64,Zs),T.set(65,Qs),T.set(76,De),T.set(78,De),j.set(38,qe),j.set(39,Ge),j.set(40,Ve),j.set(41,We),j.set(42,ze),j.set(43,He),j.set(47,Ee),j.set(54,Le),j.set(55,Ue),j.set(58,Xe),j.set(66,qe),j.set(67,Ge),j.set(68,Ve),j.set(69,We),j.set(70,ze),j.set(71,He),j.set(72,Ee),j.set(73,Le),j.set(74,Ue),j.set(75,Xe))}function Cn(i,t,e,s){let[o,r]=vt(e);const a=nt(e);a&&(o-=1e-5,r+=1e-5);for(let n=0;n<t.length;n++)if(t[n]){const u=i[n];isNaN(u)||u<o||u>r?t[n]=0:s[n]=a?Math.round(u):u}}function hs(i,t,e={}){kn();let s=Ws(i,t>=66&&t<=75);const{outputPixelType:o="f32"}=e,r=!j.has(t)||e.processAsMultiband,a=r?i[0].pixels.length:1,n=[];for(let l=0;l<a;l++){const p=j.has(t)&&!r?i.flatMap(g=>g.pixels):i.map(g=>g.pixels[l]);let h,f=!0;if(t===us.setNull){const g=Rn(p,s,o);h=g.band,s=g.mask,f=!1}else T.has(t)?h=T.get(t)(p,s,"f64"):O.has(t)?h=t===H.asin||t===H.acos||t===H.atanh?tn(p,s,"f64",t):en(p,s,"f64",O.get(t)):Ht.has(t)?h=sn(p,s,"f64",Ht.get(t)):j.has(t)?h=j.get(t)(p,s,"f64"):(h=p[0],f=!1);if(f&&t!==U.isNull&&!ls.has(t)){const g=w.createEmptyBand(o,h.length);s||(s=new Uint8Array(h.length).fill(255)),Cn(h,s,o,g),h=g}n.push(h)}const u=i[0];return new w({width:u.width,height:u.height,pixelType:o,mask:t===U.isNull?null:s,pixels:n})}function _n(i,t,e){return hs(i,t=[null,1,2,3,23,5,44][t]??1,{outputPixelType:e})}let bt=class extends G{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return(e==null?void 0:e[0])==null||(e==null?void 0:e[1])==null?null:_n(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[o,r]=vt(s);const a=nt(s);return a&&(o-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[o,r],isOutputRounded:a}}};c([m({json:{write:!0,name:"rasterFunction"}})],bt.prototype,"functionName",void 0),c([m({type:Es,json:{write:!0,name:"rasterFunctionArguments"}})],bt.prototype,"functionArguments",void 0),c([m()],bt.prototype,"rasterArgumentNames",void 0),bt=c([A("esri.layers.support.rasterFunctions.ArithmeticFunction")],bt);const Bn=bt;var Zt;let Qt=Zt=class extends D{clone(){return new Zt({raster:this.raster})}};Qt=Zt=c([A("esri.layers.support.rasterFunctions.AspectFunctionArguments")],Qt);const jn=Qt;let rt=class extends G{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var s;const t=this.sourceRasterInfos[0];this.isGCS=((s=t.spatialReference)==null?void 0:s.isGeographic)??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var n;const e=(n=t.pixelBlocks)==null?void 0:n[0];if(e==null)return null;const{extent:s,primaryPixelSizes:o}=t,r=o==null?void 0:o[0],a=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return ks(e,{resolution:a})}};c([m({json:{write:!0,name:"rasterFunction"}})],rt.prototype,"functionName",void 0),c([m({type:jn,json:{write:!0,name:"rasterFunctionArguments"}})],rt.prototype,"functionArguments",void 0),c([m()],rt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],rt.prototype,"isGCS",void 0),rt=c([A("esri.layers.support.rasterFunctions.AspectFunction")],rt);const Sn=rt,Mn=new Set(["+","-","*","/","(",")"]);function On(i,t){(i=i.replaceAll(" ","")).startsWith("-")&&(i="0"+i),i.startsWith("+")&&(i=i.slice(1,i.length));const e=i.split(""),s=[],o=[];let r="";for(let a=0;a<e.length;a++){const n=e[a];Mn.has(n)?(r.length&&o.push(Je(r,t)),s.push(n),r=""):r=r.concat(n)}return r.length&&o.push(Je(r,t)),{ops:s,nums:o}}function Je(i,t){return i.toLowerCase().startsWith("b")?t[parseInt(i.slice(1),10)-1]:parseFloat(i)}function Dn(i,t,e,s){if(typeof e=="number"&&typeof s=="number")return e+s;let o,r,a;typeof e=="number"?(a=s,o=a.length,r=new Float32Array(o),r.fill(e)):(o=e.length,r=e,s.constructor===Number?(a=new Float32Array(o),a.fill(s)):a=s);const n=new Float32Array(o);switch(t){case"+":for(let u=0;u<o;u++)(i==null||i[u])&&(n[u]=r[u]+a[u]);break;case"-":for(let u=0;u<o;u++)(i==null||i[u])&&(n[u]=r[u]-a[u]);break;case"*":for(let u=0;u<o;u++)(i==null||i[u])&&(n[u]=r[u]*a[u]);break;case"/":for(let u=0;u<o;u++)(i==null||i[u])&&a[u]&&(n[u]=r[u]/a[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return n}function Gn(i,t){i.splice(t,1);let e=0,s=0;do{e=0,s=0;for(let o=0;o<i.length;o++)if(i[o]==="(")e=o;else if(i[o]===")"){s=o;break}s===e+1&&i.splice(e,2)}while(s===e+1);return i}function zn(i){if(i.length===1)return{opIndex:0,numIndex:0};let t=0,e=0;for(let a=0;a<i.length;a++)if(i[a]==="(")t=a;else if(i[a]===")"){e=a;break}const s=e===0?i:i.slice(t+1,e);let o=-1;for(let a=0;a<s.length;a++)if(s[a]==="*"||s[a]==="/"){o=a;break}if(o>-1)e>0&&(o+=t+1);else{for(let a=0;a<s.length;a++)if(s[a]==="+"||s[a]==="-"){o=a;break}e>0&&(o+=t+1)}let r=0;for(let a=0;a<o;a++)i[a]==="("&&r++;return{opIndex:o,numIndex:o-r}}function En(i,t,e){let s,{ops:o,nums:r}=On(e,t);if(o.length===0){const a=r.length===1?r[0]:t[0];if(a instanceof Float32Array)return[a];const n=new Float32Array(t[0].length);return typeof a=="number"?n.fill(a):n.set(a),[n]}for(;o.length>0;){const{numIndex:a,opIndex:n}=zn(o);if(s=Dn(i,o[n],r[a],r[a+1]),o.length===1)break;o=Gn(o,n),r.splice(a,2,s)}return[s]}const Vn=new jt({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Un(i,t){if(!As(i))return i;const{equation:e,method:s}=t,o=t.bandIndexes.map(p=>p-1),{pixels:r,mask:a}=i;let n;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=Ke(a,r[o[0]],r[o[1]]);break;case"ndwi":n=Ke(a,r[o[1]],r[o[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=Wn(a,r[o[0]],r[o[1]]);break;case"ci-g":case"ci-re":n=qn(a,r[o[0]],r[o[1]]);break;case"savi":n=Hn(a,r[o[0]],r[o[1]],o[2]+1);break;case"tsavi":n=Xn(a,r[o[0]],r[o[1]],o[2]+1,o[3]+1,o[4]+1);break;case"msavi":n=Jn(a,r[o[0]],r[o[1]]);break;case"gemi":n=Kn(a,r[o[0]],r[o[1]]);break;case"pvi":n=Yn(a,r[o[0]],r[o[1]],o[2]+1,o[3]+1);break;case"gvitm":n=Zn(a,[r[o[0]],r[o[1]],r[o[2]],r[o[3]],r[o[4]],r[o[5]]]);break;case"sultan":n=Qn(a,[r[o[0]],r[o[1]],r[o[2]],r[o[3]],r[o[4]]]);break;case"vari":n=tr(a,[r[o[0]],r[o[1]],r[o[2]]]);break;case"mtvi2":n=er(a,[r[o[0]],r[o[1]],r[o[2]]]);break;case"rtvi-core":n=sr(a,[r[o[0]],r[o[1]],r[o[2]]]);break;case"evi":n=nr(a,[r[o[0]],r[o[1]],r[o[2]]]);break;case"wndwi":n=rr(a,[r[o[0]],r[o[1]],r[o[2]]],o[3]?o[3]+1:.5);break;case"bai":n=or(a,r[o[0]],r[o[1]]);break;case"custom":n=En(a,r,e);break;default:return i}const u=a!=null?new Uint8Array(a.length):null;a!=null&&u!=null&&u.set(a);const l=new w({width:i.width,height:i.height,pixelType:"f32",pixels:n,mask:u});return l.updateStatistics(),l}function Ln(i,t,e,s){const{mask:o,pixels:r,width:a,height:n}=i,u=r[e],l=r[t],p=l.length,h=s?new Uint8Array(p):new Float32Array(p),f=s?100:1,g=s?100.5:0;for(let y=0;y<p;y++)if(o==null||o[y]){const d=u[y],b=l[y],v=d+b;v&&(h[y]=(d-b)/v*f+g)}const x=new w({width:a,height:n,mask:o,pixelType:s?"u8":"f32",pixels:[h]});return x.updateStatistics(),x}function E(i){const t=new Float32Array(9);return t[3*i[0]]=1,t[3*i[1]+1]=1,t[3*i[2]+2]=1,t}function Ke(i,t,e){const s=e.length,o=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r]){const a=t[r],n=e[r],u=a+n;u&&(o[r]=(a-n)/u)}return[o]}function Wn(i,t,e){const s=e.length,o=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r]){const a=t[r],n=e[r];n&&(o[r]=a/n)}return[o]}function qn(i,t,e){const s=t.length,o=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r]){const a=t[r],n=e[r];n&&(o[r]=a/n-1)}return[o]}function Hn(i,t,e,s){const o=e.length,r=new Float32Array(o);for(let a=0;a<o;a++)if(i==null||i[a]){const n=e[a],u=t[a],l=u+n+s;l&&(r[a]=(u-n)/l*(1+s))}return[r]}function Xn(i,t,e,s,o,r){const a=e.length,n=new Float32Array(a),u=-o*s+r*(1+s*s);for(let l=0;l<a;l++)if(i==null||i[l]){const p=e[l],h=t[l],f=o*h+p+u;f&&(n[l]=s*(h-s*p-o)/f)}return[n]}function Jn(i,t,e){const s=e.length,o=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r]){const a=e[r],n=t[r],u=2*n+1;o[r]=.5*(u-Math.sqrt(u*u-8*(n-a)))}return[o]}function Kn(i,t,e){const s=e.length,o=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r]){const a=e[r],n=t[r];if(a!==1&&n+a+.5!==0){const u=(2*(n*n-a*a)+1.5*n+.5*a)/(n+a+.5);o[r]=u*(1-.25*u)-(a-.125)/(1-a)}}return[o]}function Yn(i,t,e,s,o){const r=e.length,a=new Float32Array(r),n=1/Math.sqrt(1+s*s);for(let u=0;u<r;u++)if(i==null||i[u]){const l=e[u],p=t[u];a[u]=(p-s*l-o)*n}return[a]}function Zn(i,t){const[e,s,o,r,a,n]=t,u=e.length,l=new Float32Array(u);for(let p=0;p<u;p++)(i==null||i[p])&&(l[p]=-.2848*e[p]-.2435*s[p]-.5436*o[p]+.7243*r[p]+.084*a[p]-.18*n[p]);return[l]}function Qn(i,t){const[e,s,o,r,a]=t,n=e.length,u=new Float32Array(n),l=new Float32Array(n),p=new Float32Array(n);for(let h=0;h<n;h++)(i==null||i[h])&&(u[h]=a[h]?r[h]/a[h]*100:0,l[h]=e[h]?r[h]/e[h]*100:0,p[h]=o[h]?s[h]/o[h]*(r[h]/o[h])*100:0);return[u,l,p]}function tr(i,t){const[e,s,o]=t,r=e.length,a=new Float32Array(r);for(let n=0;n<r;n++)if(i==null||i[n])for(n=0;n<r;n++){const u=e[n],l=s[n],p=l+u-o[n];p&&(a[n]=(l-u)/p)}return[a]}function er(i,t){const[e,s,o]=t,r=e.length,a=new Float32Array(r);for(let n=0;n<r;n++)if(i==null||i[n])for(n=0;n<r;n++){const u=e[n],l=s[n],p=o[n],h=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(l))-.5);if(h){const f=1.5*(1.2*(u-p)-2.5*(l-p));a[n]=f/h}}return[a]}function sr(i,t){const[e,s,o]=t,r=e.length,a=new Float32Array(r);for(let n=0;n<r;n++)if(i==null||i[n])for(n=0;n<r;n++){const u=e[n],l=s[n],p=o[n];a[n]=100*(u-l)-10*(u-p)}return[a]}function nr(i,t){const[e,s,o]=t,r=e.length,a=new Float32Array(r);for(let n=0;n<r;n++)if(i==null||i[n])for(n=0;n<r;n++){const u=e[n],l=s[n],p=u+6*l-7.5*o[n]+1;p&&(a[n]=2.5*(u-l)/p)}return[a]}function rr(i,t,e=.5){const[s,o,r]=t,a=o.length,n=new Float32Array(a);for(let u=0;u<a;u++)if(i==null||i[u])for(u=0;u<a;u++){const l=s[u],p=o[u],h=r[u],f=l+e*p+(1-e)*h;f&&(n[u]=(l-e*p-(1-e)*h)/f)}return[n]}function or(i,t,e){const s=e.length,o=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r])for(r=0;r<s;r++){const a=(.1-t[r])**2+(.06-e[r])**2;a&&(o[r]=1/a)}return[o]}var te;let Mt=te=class extends D{constructor(){super(...arguments),this.method="custom"}clone(){return new te({method:this.method,bandIndexes:this.bandIndexes,raster:L(this.raster)})}};c([m({json:{type:String,write:!0}})],Mt.prototype,"bandIndexes",void 0),c([Y(Vn)],Mt.prototype,"method",void 0),Mt=te=c([A("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Mt);const ir=Mt,ar=new Set(["vari","mtvi2","rtvi-core","evi"]);let At=class extends G{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){var a;const e=(a=t.pixelBlocks)==null?void 0:a[0];if(e==null)return e;const{method:s,bandIndexes:o}=this.functionArguments,r=o.split(" ").map(n=>parseFloat(n));return Un(e,{method:s,bandIndexes:r,equation:o})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(n=>parseFloat(n)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,o;const r=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=E([e[0],e[1],0]),o="ndxi";break;case"ndwi":s=E([e[1],e[0],0]),o="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=E([e[0],e[1],0]),o="sr";break;case"ci-g":case"ci-re":s=E([e[0],e[1],0]),o="ci";break;case"savi":s=E([e[0],e[1],0]),o="savi",r[0]=t[2]+1;break;case"tsavi":s=E([e[0],e[1],0]),o="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":s=E([e[0],e[1],0]),o="msavi";break;case"gemi":s=E([e[0],e[1],0]),o="gemi";break;case"pvi":s=E([e[0],e[1],0]),o="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":s=E([e[0],e[1],e[2]]),o="vari";break;case"mtvi2":s=E([e[0],e[1],e[2]]),o="mtvi";break;case"rtvi-core":s=E([e[0],e[1],e[2]]),o="rtvicore";break;case"evi":s=E([e[0],e[1],e[2]]),o="evi";break;case"wndwi":s=E([e[0],e[1],0]),o="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":s=E([e[1],e[0],0]),o="bai";break;default:s=E([0,1,2]),o="custom"}return{bandIndexMat3:s,indexType:o,adjustments:r}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(n=>parseFloat(n)-1),s=t.length,o=e.map(n=>n>=s?s-1:n),r=ar.has(this.functionArguments.method)?3:2,a=o.slice(0,r).map(n=>t[n]);return a.length===2&&a.push(0),a}};c([m({json:{write:!0,name:"rasterFunction"}})],At.prototype,"functionName",void 0),c([m({type:ir,json:{write:!0,name:"rasterFunctionArguments"}})],At.prototype,"functionArguments",void 0),c([m()],At.prototype,"rasterArgumentNames",void 0),At=c([A("esri.layers.support.rasterFunctions.BandArithmeticFunction")],At);const ur=At;var ee;const Ye=new jt({1:"outside",2:"inside"},{useNumericKeys:!0});let Ot=ee=class extends D{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ee({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};c([m({types:vs,json:{read:ws,write:!0}})],Ot.prototype,"clippingGeometry",void 0),c([m({json:{read:Ye.read,write:Ye.write}})],Ot.prototype,"clippingType",void 0),Ot=ee=c([A("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Ot);const lr=Ot;let ot=class extends G{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};c([m({json:{write:!0,name:"rasterFunction"}})],ot.prototype,"functionName",void 0),c([m({type:lr,json:{write:!0,name:"rasterFunctionArguments"}})],ot.prototype,"functionArguments",void 0),c([m()],ot.prototype,"rasterArgumentNames",void 0),c([m()],ot.prototype,"isNoopProcess",void 0),ot=c([A("esri.layers.support.rasterFunctions.ClipFunction")],ot);const cr=ot;var se;let X=se=class extends D{castColormapName(i){if(!i)return null;const t=i.toLowerCase();return Cs.includes(t)?t:null}readColorRamp(i){return zs(i)}readColorRampName(i,t){if(!i)return null;const e=Vt.jsonValues.find(s=>s.toLowerCase()===i.toLowerCase());return e?Vt.fromJSON(e):null}clone(){var i;return new se({colormap:L(this.colormap),colormapName:this.colormapName,colorRamp:(i=this.colorRamp)==null?void 0:i.clone(),colorRampName:this.colorRampName})}};c([m({type:[[Number]],json:{write:!0}})],X.prototype,"colormap",void 0),c([m({type:String,json:{write:!0}})],X.prototype,"colormapName",void 0),c([rs("colormapName")],X.prototype,"castColormapName",null),c([m({types:Gs,json:{write:!0}})],X.prototype,"colorRamp",void 0),c([Ct("colorRamp")],X.prototype,"readColorRamp",null),c([m({type:Vt.apiValues,json:{type:Vt.jsonValues,write:Vt.write}})],X.prototype,"colorRampName",void 0),c([Ct("colorRampName")],X.prototype,"readColorRampName",null),X=se=c([A("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],X);const pr=X,hr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],mr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Re(i,t){const e=[],s=[];for(let r=0;r<i.length-1;r++)e.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:i[r].slice(1),toColor:i[r+1].slice(1)}),s.push(i[r+1][0]-i[r][0]);const o=i[i.length-1][0];return as({type:"multipart",colorRamps:e},{numColors:o,weights:t=t??s})}function fr(){return Re([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function dr(){const i=Re([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let t=i.length;t<256;t++)i.push([6,27,7]);return i}function gr(){return as({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function yr(){const i=[];for(let t=0;t<256;t++){const e=[];for(let s=0;s<3;s++)e.push(Math.round(255*Math.random()));i.push(e)}return i}function xr(){return Re([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function vr(i){let t;switch(i){case"elevation":t=fr();break;case"gray":t=gr();break;case"hillshade":t=xr();break;case"ndvi":t=hr;break;case"ndvi2":t=dr();break;case"ndvi3":t=mr;break;case"random":t=yr()}return t?(t=t.map((e,s)=>[s,...e]),t):null}let Z=class extends G{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:o,colorRampName:r}=this.functionArguments;if(!(e!=null&&e.length))if(o)e=je(o,{interpolateAlpha:!0});else if(r){const u=_s(r);u&&(e=je(u))}else s&&(e=vr(s));if(!(e!=null&&e.length))return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const a=this._getOutputPixelType(t.pixelType);this.outputPixelType=a.startsWith("f")?"s32":a;const n=t.clone();return n.pixelType=this.outputPixelType,n.colormap=e,n.bandCount=1,this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){var s;let e=(s=t.pixelBlocks)==null?void 0:s[0];return!e||nt(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};c([m({json:{write:!0,name:"rasterFunction"}})],Z.prototype,"functionName",void 0),c([m({type:pr,json:{write:!0,name:"rasterFunctionArguments"}})],Z.prototype,"functionArguments",void 0),c([m()],Z.prototype,"rasterArgumentNames",void 0),c([m()],Z.prototype,"isNoopProcess",void 0),c([m({json:{write:!0}})],Z.prototype,"indexedColormap",void 0),Z=c([A("esri.layers.support.rasterFunctions.ColormapFunction")],Z);const wr=Z;var ne;let Dt=ne=class extends D{constructor(){super(...arguments),this.rasters=[]}writeRasters(i,t){t.rasters=i.map(e=>typeof e=="number"||typeof e=="string"?e:e.toJSON())}clone(){return new ne({rasters:L(this.rasters)})}};c([m({json:{write:!0}})],Dt.prototype,"rasters",void 0),c([_t("rasters")],Dt.prototype,"writeRasters",null),Dt=ne=c([A("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Dt);const br=Dt;let Tt=class extends G{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map(({bandCount:r})=>r).reduce((r,a)=>r+a),t.every(({statistics:r})=>r!=null&&r.length)){const r=[];t.forEach(({statistics:a})=>a!=null&&r.push(...a)),s.statistics=r}if(t.every(({histograms:r})=>r!=null&&r.length)){const r=[];t.forEach(({histograms:a})=>a!=null&&r.push(...a)),s.histograms=r}s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const o=t.every(r=>{var a;return(a=r.keyProperties.BandProperties)==null?void 0:a.length})?t.flatMap(r=>r.keyProperties.BandProperties):void 0;return s.keyProperties={...s.keyProperties,BandProperties:o},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?(e==null?void 0:e[0])==null?null:Ts(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};c([m({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),c([m({type:br,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),c([m()],Tt.prototype,"rasterArgumentNames",void 0),Tt=c([A("esri.layers.support.rasterFunctions.CompositeBandFunction")],Tt);const Ar=Tt;var re;let Gt=re=class extends D{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new re({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};c([m({json:{write:!0}})],Gt.prototype,"contrastOffset",void 0),c([m({json:{write:!0}})],Gt.prototype,"brightnessOffset",void 0),Gt=re=c([A("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Gt);const Tr=Gt;let it=class extends G{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if(e.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:o,brightnessOffset:r}=this.functionArguments;return this.lookup=Bs(o,r),{success:!0,supportsGPU:!0}}_processPixels(t){var s;const e=(s=t.pixelBlocks)==null?void 0:s[0];return e==null?null:Fe(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};c([m({json:{write:!0,name:"rasterFunction"}})],it.prototype,"functionName",void 0),c([m({type:Tr,json:{write:!0,name:"rasterFunctionArguments"}})],it.prototype,"functionArguments",void 0),c([m()],it.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],it.prototype,"lookup",void 0),it=c([A("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],it);const Pr=it;function ke(i,t,e,s,o){const r=Math.floor(s/2);for(let n=0;n<r;n++)for(let u=0;u<t;u++)i[n*t+u]=i[(o-1-n)*t+u],i[(e-1-n)*t+u]=i[(e-o+n)*t+u];const a=Math.floor(o/2);for(let n=0;n<e;n++){const u=n*t;for(let l=0;l<a;l++)i[u+l]=i[u+o-1-l],i[u+t-l-1]=i[u+t+l-o]}}const B=new Map;function $r(i){const t=Math.sqrt(i.length),e=i.slice(0,t),s=[1];for(let o=1;o<t;o++){let r=null;for(let a=0;a<t;a++){const n=i[a+o*t],u=i[a];if(r==null)if(u===0){if(n)return{separable:!1,row:null,col:null}}else r=n/u;else if(n/u!==r)return{separable:!1,row:null,col:null}}if(r==null)return{separable:!1,row:null,col:null};s.push(r)}return{separable:!0,row:e,col:s}}function Ze(i,t,e,s,o,r,a){const n=new Float32Array(t*e),u=r.length,l=a?0:s,p=a?s:0,h=a?1:t;for(let f=l;f<e-l;f++){const g=f*t;for(let x=p;x<t-p;x++){if(o&&!o[g+x])continue;let y=0;for(let d=0;d<u;d++)y+=i[g+x+(d-s)*h]*r[d];n[g+x]=y}}return n}function Fr(i,t,e,s,o,r,a){const n=new Float32Array(t*e),u=Math.floor(s/2),l=Math.floor(o/2);for(let p=u;p<e-u;p++){const h=p*t;for(let f=l;f<t-l;f++){if(r&&!r[h+f])continue;let g=0;for(let x=0;x<s;x++)for(let y=0;y<o;y++)g+=i[h+f+(x-u)*t+y-l]*a[x*o+y];n[h+f]=g}}return n}function Nr(i,t,e=!0){const{pixels:s,width:o,height:r,pixelType:a,mask:n}=i,u=s.length,l=[],{kernel:p,rows:h,cols:f}=t;for(let g=0;g<u;g++){const x=Fr(s[g],o,r,h,f,n,p);e&&ke(x,o,r,h,f),l.push(x)}return new w({width:o,height:r,pixelType:a,pixels:l,mask:n})}function Ir(i,t,e,s=!0){const{pixels:o,width:r,height:a,pixelType:n,mask:u}=i,l=o.length,p=[],h=t.length,f=e.length,g=Math.floor(h/2),x=Math.floor(f/2);for(let y=0;y<l;y++){let d=Ze(o[y],r,a,g,u,t,!0);d=Ze(d,r,a,x,u,e,!1),s&&ke(d,r,a,h,f),p.push(d)}return new w({width:r,height:a,pixelType:n,pixels:p,mask:u})}function Rr(i,t){const e=$r(t.kernel),s=t.mirrorEdges!==!1,o=e.separable?Ir(i,e.row,e.col,s):Nr(i,t,s),{outputPixelType:r}=t;return r&&o.clamp(r),o}B.set($.none,[0,0,0,0,1,0,0,0,0]),B.set($.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),B.set($.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),B.set($.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),B.set($.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),B.set($.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),B.set($.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),B.set($.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),B.set($.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),B.set($.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),B.set($.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),B.set($.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),B.set($.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),B.set($.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),B.set($.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),B.set($.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),B.set($.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),B.set($.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),B.set($.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),B.set($.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),B.set($.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),B.set($.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),B.set($.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var oe;let at=oe=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(i){this._set("convolutionType",i);const t=B.get(i);if(!t||i===$.userDefined||i===$.none)return;const e=Math.sqrt(t.length);this._set("kernel",t),this._set("cols",e),this._set("rows",e)}clone(){return new oe({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:L(this.raster)})}};c([m({json:{type:Number,write:!0}})],at.prototype,"rows",void 0),c([m({json:{type:Number,write:!0}})],at.prototype,"cols",void 0),c([m({json:{name:"type",type:Number,write:!0}})],at.prototype,"convolutionType",null),c([m({json:{type:[Number],write:!0}})],at.prototype,"kernel",void 0),at=oe=c([A("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],at);const kr=at,Qe=25;let ut=class extends G{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce((o,r)=>o+r);return e===-1||s===0||s===1?t:t.map(o=>o/s)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:o}=this.functionArguments;if(!Object.values($).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==$.none&&e*s!==o.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const a=r.clone();a.pixelType=this.outputPixelType;const n=[$.none,$.sharpen,$.sharpen2,$.sharpening3x3,$.sharpening5x5];return(t===-1||this.outputPixelType!=="u8"&&!n.includes(t))&&(a.statistics=null,a.histograms=null),a.colormap=null,a.attributeTable=null,this.rasterInfo=a,{success:!0,supportsGPU:o.length<=Qe}}_processPixels(t){var a;const e=(a=t.pixelBlocks)==null?void 0:a[0];if(e==null||this.functionArguments.convolutionType===$.none)return e;const{rows:s,cols:o}=this.functionArguments,{_normalizedKernel:r}=this;return Rr(e,{kernel:r,rows:s,cols:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(Qe);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:vt(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],ut.prototype,"functionName",void 0),c([m({type:kr,json:{write:!0,name:"rasterFunctionArguments"}})],ut.prototype,"functionArguments",void 0),c([m()],ut.prototype,"rasterArgumentNames",void 0),c([m()],ut.prototype,"_normalizedKernel",null),ut=c([A("esri.layers.support.rasterFunctions.ConvolutionFunction")],ut);const Cr=ut;var ie;const ms=new jt({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let Pt=ie=class extends D{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(i,t){return ms.fromJSON(t.type??t.curvatureType??0)}clone(){return new ie({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};c([m({json:{write:{target:"type"}}}),Y(ms)],Pt.prototype,"curvatureType",void 0),c([Ct("curvatureType",["type","curvatureType"])],Pt.prototype,"readCurvatureType",null),c([m({type:Number,json:{write:!0}})],Pt.prototype,"zFactor",void 0),Pt=ie=c([A("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Pt);const _r=Pt;let lt=class extends G{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var p;const e=(p=t.pixelBlocks)==null?void 0:p[0];if(e==null)return null;const{zFactor:s,curvatureType:o}=this.functionArguments,{extent:r,primaryPixelSizes:a}=t,n=a==null?void 0:a[0],u=n??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),l=this.isGCS&&s>=1?s*Kt:s;return js(e,{zFactor:l,curvatureType:o,resolution:u})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Kt:t}}};c([m({json:{write:!0,name:"rasterFunction"}})],lt.prototype,"functionName",void 0),c([m({type:_r,json:{write:!0,name:"rasterFunctionArguments"}})],lt.prototype,"functionArguments",void 0),c([m()],lt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],lt.prototype,"isGCS",void 0),lt=c([A("esri.layers.support.rasterFunctions.CurvatureFunction")],lt);const Br=lt;var ae;let J=ae=class extends D{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=os.bestMatch}clone(){var i,t,e;return new ae({bandIds:(i=this.bandIds)==null?void 0:i.slice(),bandNames:(t=this.bandNames)==null?void 0:t.slice(),bandWavelengths:(e=this.bandWavelengths)==null?void 0:e.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};c([m({json:{write:!0}})],J.prototype,"bandIds",void 0),c([m({json:{write:!0}})],J.prototype,"bandNames",void 0),c([m({json:{write:!0}})],J.prototype,"bandWavelengths",void 0),c([Y({0:"name",1:"wavelength",2:"id"})],J.prototype,"method",void 0),c([m({json:{write:!0}})],J.prototype,"missingBandAction",void 0),c([m({json:{write:!0}})],J.prototype,"wavelengthMatchTolerance",void 0),J=ae=c([A("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],J);const jr=J;let $t=class extends G{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){var b;const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:o,bandNames:r,bandWavelengths:a,bandIds:n,missingBandAction:u}=t,l=(r==null?void 0:r.length)&&(o==="name"||o!=="id"&&!(n!=null&&n.length)),p=(a==null?void 0:a.length)&&(o==="wavelength"||o!=="id"&&!(n!=null&&n.length)),h=u===os.fail,f=l?this._matchBandNames(s,r):p?this._matchBandWavelengths(s,a,h):this._matchBandIds(s,n,h);if(f==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${l?"band names":p?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=f,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const g=s.clone();g.pixelType=this.outputPixelType,g.bandCount=f.length;const{statistics:x,histograms:y}=g;x!=null&&x.length&&(g.statistics=f.map(v=>x[v]||x[x.length-1])),y!=null&&y.length&&(g.histograms=f.map(v=>y[v]||y[y.length-1]));let d=(b=g.keyProperties)==null?void 0:b.BandProperties;return d!=null&&d.length&&(d=f.map(v=>v>=d.length?d[d.length-1]:d[v]),g.keyProperties={...g.keyProperties,BandProperties:d}),this.rasterInfo=g,{success:!0,supportsGPU:g.bandCount<=3}}_processPixels(t){var r;const e=(r=t.pixelBlocks)==null?void 0:r[0];if(e==null)return null;const s=e.pixels.length,o=this.functionArguments.bandIds.map(a=>a>=s?s-1:a);return e.extractBands(o)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:E(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(s=>s>=e?e-1:s).map(s=>t[s])}_matchBandNames(t,e){const s=t.bandInfos.map(({name:r})=>r.toLowerCase()),o=[];for(let r=0;r<e.length;r++){const a=e[r].toLowerCase();let n=s.indexOf(a);if(n===-1&&a==="nearinfrared"&&(n=s.findIndex(u=>u.startsWith("nearinfrared_1")),n===-1&&(n=s.findIndex(u=>u.startsWith("nearinfrared")))),n===-1)return null;o.push(n)}return o}_matchBandIds(t,e,s){const{bandCount:o}=t;return!(e!=null&&e.length)||s&&e.some(r=>r<0||r>=o)?null:e}_matchBandWavelengths(t,e,s){const{bandInfos:o}=t,r=[];for(let u=0;u<o.length;u++){const{minWavelength:l,maxWavelength:p}=o[u];if(!l||!p)return null;r.push({minWavelength:l,maxWavelength:p})}const{wavelengthMatchTolerance:a}=this.functionArguments,n=[];for(let u=0;u<e.length;u++){const l=e[u];let p=!1,h=-1,f=Number.MAX_VALUE;for(let g=0;g<r.length;g++){const x=r[g],y=l>=x.minWavelength&&l<=x.maxWavelength,d=Math.abs(l-(x.minWavelength+x.maxWavelength)/2);y?d<f&&(p=!0,h=g,f=d):!p&&d<f&&(h=g,f=d)}if(!p&&a&&f<a&&(p=!0),!p&&s)return null;n.push(h)}return n}};c([m({json:{write:!0,name:"rasterFunction"}})],$t.prototype,"functionName",void 0),c([m({type:jr,json:{write:!0,name:"rasterFunctionArguments"}})],$t.prototype,"functionArguments",void 0),c([m()],$t.prototype,"rasterArgumentNames",void 0),$t=c([A("esri.layers.support.rasterFunctions.ExtractBandFunction")],$t);const Sr=$t;function Mr(i,t,e){const{pixels:s,width:o,height:r,mask:a,bandMasks:n}=i,u=o*r,l=n!=null&&n.length?w.combineBandMasks(n):a,p=Math.min(t.length,s.length),h=e.startsWith("f"),f=!h&&e!==i.pixelType,[g,x]=vt(e),y=w.createEmptyBand(e,u);for(let b=0;b<r;b++){let v=b*o;for(let R=0;R<o;R++,v++)if(!l||l[v]){let N=0;for(let z=0;z<p;z++)N+=t[z]*s[z][v];h||(N=Math.round(N),f&&(N=N>x?x:N<g?g:N)),y[v]=N}}const d=new w({width:o,height:r,pixels:[y],pixelType:e,mask:l});return d.updateStatistics(),d}var ue;let Lt=ue=class extends D{clone(){return new ue({conversionParameters:[...this.conversionParameters],raster:this.raster})}};c([m({type:[Number],json:{write:!0}})],Lt.prototype,"conversionParameters",void 0),Lt=ue=c([A("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Lt);const Or=Lt;let ct=class extends G{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((s,o)=>s+o);return t.map(s=>s/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!(t!=null&&t.length))return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=t.length===3||e.bandCount===3&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){var s;const e=(s=t.pixelBlocks)==null?void 0:s[0];return e==null?null:Mr(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};c([m({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0),c([m({type:Or,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0),c([m()],ct.prototype,"rasterArgumentNames",void 0),c([m()],ct.prototype,"_normalizedWeights",null),ct=c([A("esri.layers.support.rasterFunctions.GrayscaleFunction")],ct);const Dr=ct;var le;let pt=le=class extends D{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(i,t){t.rasters=i.map(e=>typeof e=="number"||typeof e=="string"?e:e.toJSON())}clone(){return new le({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:L(this.rasters)})}};c([m({json:{write:!0}})],pt.prototype,"operation",void 0),c([m({json:{write:!0}})],pt.prototype,"rasters",void 0),c([_t("rasters")],pt.prototype,"writeRasters",null),c([m({json:{write:!0}})],pt.prototype,"processAsMultiband",void 0),pt=le=c([A("esri.layers.support.rasterFunctions.LocalFunctionArguments")],pt);const Gr=pt;let Ft=class extends G{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:o}=this.functionArguments;if(t.some(l=>l.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:a}=this.functionArguments,n=Oe[r];if(!(n===999||a.length===n||a.length<=1&&n===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${n}`};const u=e.clone();return u.bandCount=n!==999||o?s:1,this._removeStatsHistColormapVAT(u),this._updateStatistics(u),this._updatePixelType(u),this.rasterInfo=u,{success:!0,supportsGPU:u.bandCount===1&&n<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(s=>s==null)?null:hs(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){var u;const{operation:t}=this.functionArguments,e=Oe[t],s=((u=Object.keys(Se).find(l=>Se[l]===t))==null?void 0:u.toLowerCase())??"undefined",o=this.outputPixelType??"f32";let[r,a]=vt(o);const n=nt(o);return n&&(r-=1e-4,a+=1e-4),{imageCount:e,operationName:s,domainRange:[r,a],isOutputRounded:n}}_updateStatistics(t){var r,a;const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,o=(r=Me(s))==null?void 0:r.domain;if(o){t.statistics=[];for(let n=0;n<t.bandCount;n++)t.statistics[n]={min:o[0],max:o[1],avg:(o[0]+o[1])/2,stddev:(o[0]+o[1])/10}}else s===45&&((a=e.statistics)!=null&&a.length)&&(t.statistics=e.statistics.map(n=>({min:-n.max,max:-n.min,avg:n.avg!=null?-n.avg:void 0,stddev:n.stddev!=null?-n.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:o}=this.functionArguments,{domain:r,isInteger:a}=Me(o)??{domain:null,isInteger:!1};let n="f32";if(r&&a)n=Xt(r[0],r[1]);else if(o===30){const u=e==null?void 0:e[0];n=u?Xt(u.min,u.max):nt(s)?s:"s32"}else if(o===45&&nt(s)){const u=e==null?void 0:e.map(({max:f})=>-f),l=e==null?void 0:e.map(({min:f})=>-f),p=u!=null&&u.length?Math.min(...u):null,h=l!=null&&l.length?Math.min(...l):null;n=p!=null&&h!=null?Xt(p,h):s.startsWith("s")?s.replace("s","u"):s==="u1"||s==="u2"||s==="u4"?"s8":s==="u8"?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(n)}};c([m({json:{write:!0,name:"rasterFunction"}})],Ft.prototype,"functionName",void 0),c([m({type:Gr,json:{write:!0,name:"rasterFunctionArguments"}})],Ft.prototype,"functionArguments",void 0),c([m()],Ft.prototype,"rasterArgumentNames",void 0),Ft=c([A("esri.layers.support.rasterFunctions.LocalFunction")],Ft);const zr=Ft;var ce;let ht=ce=class extends D{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=is.matchAny}get normalizedNoDataValues(){const{noDataValues:i}=this;if(!(i!=null&&i.length))return null;let t=!1;const e=i.map(s=>{if(typeof s=="number")return t=!0,[s];if(typeof s=="string"){const o=s.trim().split(" ").filter(r=>r.trim()!=="").map(r=>Number(r));return t=t||o.length>0,o.length===0?null:o}return null});return t?e:null}clone(){var i,t;return new ce({includedRanges:((i=this.includedRanges)==null?void 0:i.slice())??[],noDataValues:((t=this.noDataValues)==null?void 0:t.slice())??[],noDataInterpretation:this.noDataInterpretation})}};c([m({json:{write:!0}})],ht.prototype,"includedRanges",void 0),c([m({json:{write:!0}})],ht.prototype,"noDataValues",void 0),c([m()],ht.prototype,"normalizedNoDataValues",null),c([m({json:{write:!0}})],ht.prototype,"noDataInterpretation",void 0),ht=ce=c([A("esri.layers.support.rasterFunctions.MaskFunctionArguments")],ht);const Er=ht;let mt=class extends G{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:o}=this.functionArguments;if(!(s!=null&&s.length)&&!(o!=null&&o.length))return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let n=0;n<t.bandCount;n++){const u=Ps(e,s==null?void 0:s.slice(2*n,2*n+2),o==null?void 0:o[n]);if(u==null){r=null;break}r.push(u)}this.lookups=r;const a=o!=null&&o.every(n=>{var u;return(n==null?void 0:n.length)===((u=o[0])==null?void 0:u.length)});return{success:!0,supportsGPU:(!s||s.length<=2*K)&&(!o||a&&o[0].length<=K)}}_processPixels(t){var l;const e=(l=t.pixelBlocks)==null?void 0:l[0];if(e==null)return null;const{outputPixelType:s,lookups:o}=this,{includedRanges:r,noDataInterpretation:a,normalizedNoDataValues:n}=this.functionArguments,u=a===is.matchAll;return $s(e,{includedRanges:r,noDataValues:n,outputPixelType:s,matchAll:u,lookups:o})}_getWebGLParameters(){var r;const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(K);s.fill(kt),(r=e==null?void 0:e[0])!=null&&r.length&&s.set(e[0]);const o=new Float32Array(K);for(let a=0;a<o.length;a+=2)o[a]=(t==null?void 0:t[a])??-kt,o[a+1]=(t==null?void 0:t[a+1])??kt;return t&&t.length&&o.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:o}}};c([m({json:{write:!0,name:"rasterFunction"}})],mt.prototype,"functionName",void 0),c([m({type:Er,json:{write:!0,name:"rasterFunctionArguments"}})],mt.prototype,"functionArguments",void 0),c([m()],mt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],mt.prototype,"lookups",void 0),mt=c([A("esri.layers.support.rasterFunctions.MaskFunction")],mt);const Vr=mt;var pe;let Nt=pe=class extends D{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:i,infraredBandID:t,scientificOutput:e}=this;return new pe({visibleBandID:i,infraredBandID:t,scientificOutput:e})}};c([m({json:{write:!0}})],Nt.prototype,"visibleBandID",void 0),c([m({json:{write:!0}})],Nt.prototype,"infraredBandID",void 0),c([m({json:{write:!0}})],Nt.prototype,"scientificOutput",void 0),Nt=pe=c([A("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Nt);const Ur=Nt;let It=class extends G{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const o=this.sourceRasterInfos[0],r=Math.max(e,s);if(o.bandCount<2||r>=o.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const a=o.clone();a.pixelType=this.outputPixelType,a.colormap=null,a.histograms=null,a.bandCount=1,a.keyProperties={...a.keyProperties,BandProperties:void 0};const[n,u,l,p]=t?[-1,1,0,.1]:[0,200,100,10];return a.statistics=[{min:n,max:u,avg:l,stddev:p}],this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){var a;const e=(a=t.pixelBlocks)==null?void 0:a[0];if(e==null)return null;const{visibleBandID:s,infraredBandID:o,scientificOutput:r}=this.functionArguments;return Ln(e,s,o,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments,o=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:E(o),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map(o=>t[o])}};c([m({json:{write:!0,name:"rasterFunction"}})],It.prototype,"functionName",void 0),c([m({type:Ur,json:{write:!0,name:"rasterFunctionArguments"}})],It.prototype,"functionArguments",void 0),c([m()],It.prototype,"rasterArgumentNames",void 0),It=c([A("esri.layers.support.rasterFunctions.NDVIFunction")],It);const Lr=It;var he;let Q=he=class extends D{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new he({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};c([m({json:{write:!0}})],Q.prototype,"inputRanges",void 0),c([m({json:{write:!0}})],Q.prototype,"outputValues",void 0),c([m({json:{write:!0}})],Q.prototype,"noDataRanges",void 0),c([m({json:{write:!0}})],Q.prototype,"allowUnmatched",void 0),c([m({json:{write:!0}})],Q.prototype,"isLastInputRangeInclusive",void 0),Q=he=c([A("esri.layers.support.rasterFunctions.RemapFunctionArguments")],Q);const Wr=Q;let ft=class extends G{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:s}=t,{allowUnmatched:o,outputValues:r,inputRanges:a,noDataRanges:n,isLastInputRangeInclusive:u}=this.functionArguments;if(s!=null&&s.length&&(r!=null&&r.length))if(o){const l=Math.min.apply(null,[...r,s[0].min]),p=Math.max.apply(null,[...r,s[0].max]);t.statistics=[{...s[0],min:l,max:p}]}else{let l=r[0],p=l;for(let h=0;h<r.length;h++)l=l>r[h]?r[h]:l,p=p>r[h]?p:r[h];t.statistics=[{...s[0],min:l,max:p}]}return this.rasterInfo=t,this.lookup=o?null:Fs({srcPixelType:e,inputRanges:a,outputValues:r,noDataRanges:n,allowUnmatched:o,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=K)&&(!n||n.length<=K)}}_processPixels(t){var p;const e=(p=t.pixelBlocks)==null?void 0:p[0];if(e==null)return null;const{lookup:s,outputPixelType:o}=this;if(s){const h=Fe(e,{lut:[s.lut],offset:s.offset,outputPixelType:o});return h!=null&&s.mask&&(h.mask=Ns(e.pixels[0],e.mask,s.mask,s.offset,"u8")),h}const{inputRanges:r,outputValues:a,noDataRanges:n,allowUnmatched:u,isLastInputRangeInclusive:l}=this.functionArguments;return Is(e,{inputRanges:r,outputValues:a,noDataRanges:n,outputPixelType:o,allowUnmatched:u,isLastInputRangeInclusive:l})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,o=new Float32Array(3*K),r=1e-5,a=this.functionArguments.inputRanges??[],n=this.functionArguments.outputValues??[],u=n.length;for(let p=0;p<K;p++)o[3*p]=a[2*p]??kt-1,o[3*p+1]=a[2*p+1]??kt,o[3*p+2]=n[p]??0,p<u&&(p>0&&(o[3*p]-=r),(p<u-1||!s)&&(o[3*p+1]-=r));const l=new Float32Array(2*K);return l.fill(kt),e!=null&&e.length&&l.set(e),{allowUnmatched:t,rangeMaps:o,noDataRanges:l,clampRange:vt(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],ft.prototype,"functionName",void 0),c([m({type:Wr,json:{write:!0,name:"rasterFunctionArguments"}})],ft.prototype,"functionArguments",void 0),c([m()],ft.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],ft.prototype,"lookup",void 0),ft=c([A("esri.layers.support.rasterFunctions.RemapFunction")],ft);const qr=ft;var me;const Hr=new jt({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let tt=me=class extends D{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new me({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([Y(Hr)],tt.prototype,"slopeType",void 0),c([m({type:Number,json:{write:!0}})],tt.prototype,"zFactor",void 0),c([m({type:Number,json:{name:"psPower",write:!0}})],tt.prototype,"pixelSizePower",void 0),c([m({type:Number,json:{name:"psZFactor",write:!0}})],tt.prototype,"pixelSizeFactor",void 0),c([m({type:Boolean,json:{write:!0}})],tt.prototype,"removeEdgeEffect",void 0),tt=me=c([A("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],tt);const Xr=tt;let dt=class extends G{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var f;const e=(f=t.pixelBlocks)==null?void 0:f[0];if(e==null)return null;const{zFactor:s,slopeType:o,pixelSizePower:r,pixelSizeFactor:a}=this.functionArguments,{isGCS:n}=this,{extent:u,primaryPixelSizes:l}=t,p=l==null?void 0:l[0],h=p??(u?{x:u.width/e.width,y:u.height/e.height}:{x:1,y:1});return Ss(e,{zFactor:s,slopeType:o,pixelSizePower:r,pixelSizeFactor:a,isGCS:n,resolution:h})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:o}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Kt:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:o??0}}};c([m({json:{write:!0,name:"rasterFunction"}})],dt.prototype,"functionName",void 0),c([m({type:Xr,json:{write:!0,name:"rasterFunctionArguments"}})],dt.prototype,"functionArguments",void 0),c([m()],dt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],dt.prototype,"isGCS",void 0),dt=c([A("esri.layers.support.rasterFunctions.SlopeFunction")],dt);const Jr=dt,ts=new jt({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function Kr(i,t){const{fillNoDataOnly:e}=t,{band:s,width:o,height:r,mask:a,outBand:n}=i;if(e&&!a)return void n.set(s);const{statisticsType:u,kernelRows:l,kernelCols:p}=t,h=u==="stddev",f=o*r,g=new Float64Array(f),x=new Float64Array(f),y=new Uint32Array(f);for(let F=0;F<r;F++){const P=F*o;let I=0,k=0,C=0;for(let _=0;_<p;_++)a&&!a[P+_]||(I+=s[P+_],h&&(k+=s[P+_]**2),C++);g[P]=I,x[P]=k,y[P]=C;for(let _=1;_<=o-p;_++){const W=P+_-1,St=W+p;a?(a[W]&&(C--,I-=s[W],h&&(k-=s[W]**2)),a[St]&&(C++,I+=s[St],h&&(k+=s[St]**2))):(I-=s[W],I+=s[St],h&&(k-=s[W]**2,k+=s[St]**2)),g[P+_]=I,y[P+_]=C,h&&(x[P+_]=k)}}const d=new Float64Array(f),b=new Float64Array(f),v=new Uint32Array(f),R=l*o;for(let F=0;F<=o-p;F++){let P=0,I=0,k=0;for(let C=0;C<l;C++){const _=C*o+F;P+=g[_],k+=y[_],h&&(I+=x[_])}d[F]=P,b[F]=I,v[F]=k;for(let C=1;C<=r-l;C++){const _=(C-1)*o+F,W=_+R;P-=g[_],P+=g[W],k-=y[_],k+=y[W],h&&(I-=x[_],I+=x[W]),d[C*o+F]=P,b[C*o+F]=I,v[C*o+F]=k}}const N=Math.floor(l/2),z=Math.floor(p/2);for(let F=N;F<r-N;F++){const P=F*o;for(let I=z;I<o-z;I++){const k=(F-N)*o+I-z,C=v[k];if(C===0||e&&(!a||a[P+I]))continue;const _=d[k]/C,W=h?Math.sqrt((b[k]-d[k]*_)/C):_;n[P+I]=W,a&&(a[P+I]=255)}}}function Yr(i,t){const{fillNoDataOnly:e}=t,{band:s,width:o,height:r,mask:a,outBand:n}=i;if(e&&!a)return void n.set(s);const{kernelRows:u,kernelCols:l,statisticsType:p}=t,h=Math.floor(u/2),f=Math.floor(l/2),g=p==="min",x=n.slice(),y=new Uint32Array(o*r);for(let d=h;d<r-h;d++){const b=d*o;for(let v=f;v<o-f;v++){let R=g?Number.MAX_VALUE:-Number.MAX_VALUE,N=0;for(let z=0;z<u;z++)for(let F=0;F<l;F++){const P=b+v+(z-h)*o+F-f;a&&!a[P]||(R=g?Math.min(R,s[P]):Math.max(R,s[P]),N++)}a?(x[b+v]=N===0?0:R,y[b+v]=N):n[b+v]=N===0?0:R}}if(a)for(let d=h;d<r-h;d++){const b=d*o;for(let v=f;v<o-f;v++)if(y[b+v]){if(e&&a[b+v])continue;n[b+v]=x[b+v],a[b+v]=255}}}function Zr(i,t){const{fillNoDataOnly:e}=t,{band:s,width:o,height:r,mask:a,outBand:n}=i;if(e&&!a)return void n.set(s);const{kernelRows:u,kernelCols:l}=t,p=Math.floor(u/2),h=Math.floor(l/2),f=n.slice(),g=new Uint32Array(o*r);for(let x=p;x<r-p;x++){const y=x*o;for(let d=h;d<o-h;d++){if(e&&a&&a[y+d])continue;const b=[];for(let v=0;v<u;v++)for(let R=0;R<l;R++){const N=y+d+(v-p)*o+R-h;a&&!a[N]||b.push(s[N])}b.length&&(b.sort((v,R)=>v-R),a?(f[y+d]=b[Math.floor((b.length-1)/2)],g[y+d]=b.length):n[y+d]=b[Math.floor((b.length-1)/2)])}}if(a)for(let x=p;x<r-p;x++){const y=x*o;for(let d=h;d<o-h;d++)if(g[y+d]){if(e&&a[y+d])continue;n[y+d]=f[y+d],a[y+d]=255}}}function Qr(i,t){const{fillNoDataOnly:e}=t,{band:s,width:o,height:r,mask:a,outBand:n}=i;if(e&&!a)return void n.set(s);const{kernelRows:u,kernelCols:l}=t,p=Math.floor(u/2),h=Math.floor(l/2),f=t.statisticsType==="majority",g=u*l,x=n.slice(),y=new Uint32Array(o*r);for(let d=p;d<r-p;d++){const b=d*o;for(let v=h;v<o-h;v++){if(e&&a&&a[b+v])continue;const R=new Map;for(let P=0;P<u;P++)for(let I=0;I<l;I++){const k=b+v+(P-p)*o+I-h;if(a&&!a[k])continue;const C=s[k];R.set(C,R.has(C)?R.get(C)+1:1)}if(R.size===0)continue;let N=0,z=0,F=f?0:g+1;for(const P of R.keys())z=R.get(P),f===z>F&&(F=z,N=P);a?(x[b+v]=N,y[b+v]=R.size):n[b+v]=N}}if(a)for(let d=p;d<r-p;d++){const b=d*o;for(let v=h;v<o-h;v++)if(y[b+v]){if(e&&a[b+v])continue;n[b+v]=x[b+v],a[b+v]=255}}}function to(i,t){const{mask:e}=i,{fillNoDataOnly:s}=t;if(s&&!e)return i;const{pixels:o,width:r,height:a,bandMasks:n,pixelType:u}=i,l=o.length,p=r*a,h=[],{kernelRows:f,kernelCols:g,statisticsType:x,mirrorEdges:y}=t;if(s&&!e)return i;const d=t.outputPixelType??u,b=[];for(let N=0;N<l;N++){const z=o[N],F=w.createEmptyBand(d,p);s&&F.set(z);const P=(n==null?void 0:n[N])??e,I=(P==null?void 0:P.slice())??null,k={band:z,width:r,height:a,mask:I,outBand:F};switch(x){case"min":case"max":Yr(k,t);break;case"mean":case"stddev":Kr(k,t);break;case"median":Zr(k,t);break;case"majority":case"minority":Qr(k,t)}y&&!s&&ke(F,r,a,f,g),h.push(F),I&&b.push(I)}let v=b[0]??e;b.length!==l&&(b.length=0),l>1&&(n!=null&&n.length)&&(v=w.combineBandMasks(n));const R=new w({pixelType:d,width:r,height:a,pixels:h,bandMasks:n&&b.length?b:null,mask:v});return R.updateStatistics(),R}var fe;let gt=fe=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new fe({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:L(this.raster)})}};c([m({json:{write:!0,read:{source:["kernelRows","rows"],reader:(i,t)=>Number(i??(t==null?void 0:t.kernelRows)??3)}}})],gt.prototype,"rows",void 0),c([m({json:{write:!0,read:{source:["kernelCols","cols"],reader:(i,t)=>Number(i??(t==null?void 0:t.kernelCols)??3)}}})],gt.prototype,"cols",void 0),c([m({json:{write:!0}})],gt.prototype,"fillNoDataOnly",void 0),c([m({json:{read:{source:["statisticsType","type"],reader:(i,t)=>ts.fromJSON((t==null?void 0:t.statisticsType)??(t==null?void 0:t.type))??"min"},write:{target:"type"}}}),Y(ts)],gt.prototype,"statisticsType",void 0),gt=fe=c([A("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],gt);const eo=gt;let Rt=class extends G{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:o}=this.functionArguments;return o==="stddev"&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){var n;const e=(n=t.pixelBlocks)==null?void 0:n[0];if(e==null)return e;const{statisticsType:s,rows:o,cols:r,fillNoDataOnly:a}=this.functionArguments;return to(e,{kernelRows:o,kernelCols:r,fillNoDataOnly:a,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:o}=this.functionArguments;return{fillNoDataOnly:o,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:vt(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],Rt.prototype,"functionName",void 0),c([m({type:eo,json:{write:!0,name:"rasterFunctionArguments"}})],Rt.prototype,"functionArguments",void 0),c([m()],Rt.prototype,"rasterArgumentNames",void 0),Rt=c([A("esri.layers.support.rasterFunctions.StatisticsFunction")],Rt);const so=Rt;var de;let yt=de=class extends D{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(i,t){if(!(i!=null&&i.length))return null;const e=[];return i.forEach(s=>{const o={min:s.min,max:s.max,avg:s.avg??s.mean,stddev:s.stddev??s.standardDeviation};e.push(o)}),e}writeStatistics(i,t,e){if(!(i!=null&&i.length))return;const s=[];i.forEach(o=>{const r={...o,mean:o.avg,standardDeviation:o.stddev};delete r.avg,delete r.stddev,s.push(r)}),t[e]=s}clone(){return new de({statistics:L(this.statistics),histograms:L(this.histograms)})}};c([m({json:{write:!0}})],yt.prototype,"statistics",void 0),c([Ct("statistics")],yt.prototype,"readStatistics",null),c([_t("statistics")],yt.prototype,"writeStatistics",null),c([m({json:{write:!0}})],yt.prototype,"histograms",void 0),yt=de=c([A("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],yt);const no=yt;let et=class extends G{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:o}=this.functionArguments;return o&&(e.histograms=o),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}};c([m({json:{write:!0,name:"rasterFunction"}})],et.prototype,"functionName",void 0),c([m({type:no,json:{write:!0,name:"rasterFunctionArguments"}})],et.prototype,"functionArguments",void 0),c([m()],et.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],et.prototype,"indexedColormap",void 0),c([m()],et.prototype,"isNoopProcess",void 0),et=c([A("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],et);const ro=et;var ge;const oo=new jt({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let V=ge=class extends D{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(i,t,e){i!=null&&i.length&&(Array.isArray(i[0])||(i=i.map(s=>[s.min,s.max,s.avg,s.stddev])),t[e]=i)}clone(){return new ge({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:L(this.statistics),gamma:L(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:L(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};c([m({type:Boolean,json:{write:!0}})],V.prototype,"computeGamma",void 0),c([m({type:Boolean,json:{name:"dra",write:!0}})],V.prototype,"dynamicRangeAdjustment",void 0),c([m({type:[Number],json:{write:!0}})],V.prototype,"gamma",void 0),c([m()],V.prototype,"histograms",void 0),c([m({type:Number,json:{write:!0}})],V.prototype,"maxPercent",void 0),c([m({type:Number,json:{write:!0}})],V.prototype,"minPercent",void 0),c([m({type:Number,json:{write:!0}})],V.prototype,"numberOfStandardDeviations",void 0),c([m({type:Number,json:{name:"max",write:!0}})],V.prototype,"outputMax",void 0),c([m({type:Number,json:{name:"min",write:!0}})],V.prototype,"outputMin",void 0),c([m({type:Number,json:{write:!0}})],V.prototype,"sigmoidStrengthLevel",void 0),c([m({json:{type:[[Number]],write:!0}})],V.prototype,"statistics",void 0),c([_t("statistics")],V.prototype,"writeStatistics",null),c([Y(oo)],V.prototype,"stretchType",void 0),c([m({type:Boolean,json:{write:!0}})],V.prototype,"useGamma",void 0),V=ge=c([A("esri.layers.support.rasterFunctions.StretchFunctionArguments")],V);const io=V;let st=class extends G{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:o,gamma:r,useGamma:a}=s;if(!o&&["u8","u16","s8","s16"].includes(e)){const u=Jt(s.toJSON(),{rasterInfo:t}),l=nt(this.outputPixelType)?"round":"float";this.lookup=Ms({pixelType:e,...u,gamma:a?r:null,rounding:l}),this.cutOffs=u}else o||(this.cutOffs=Jt(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const n=t.clone();return n.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(n),this.outputPixelType==="u8"&&(n.keyProperties.DataType="processed"),this.rasterInfo=n,{success:!0,supportsGPU:!o}}_processPixels(t){var n;const e=(n=t.pixelBlocks)==null?void 0:n[0];if(e==null)return e;const{lookup:s}=this;if(s)return Fe(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:o}=this,r=this.cutOffs||Jt(o.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),a=o.useGamma?o.gamma:null;return Os(e,{...r,gamma:a,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:o}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,a=o&&(s!=null&&s.length)?Ds(r,s):[1,1,1],{minCutOff:n,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};n.length===1&&(n[1]=n[2]=n[0],u[1]=u[2]=u[0]);const l=new Float32Array(r);let p;for(p=0;p<r;p++)l[p]=(e-t)/(u[p]-n[p]);const h=nt(this.outputPixelType);return{bandCount:r,outMin:t,outMax:e,minCutOff:n,maxCutOff:u,factor:l,useGamma:o,gamma:o&&s?s:[1,1,1],gammaCorrection:o&&a?a:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:h,type:"stretch"}}};c([m({json:{write:!0,name:"rasterFunction"}})],st.prototype,"functionName",void 0),c([m({type:io,json:{write:!0,name:"rasterFunctionArguments"}})],st.prototype,"functionArguments",void 0),c([m()],st.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],st.prototype,"lookup",void 0),c([m({json:{write:!0}})],st.prototype,"cutOffs",void 0),st=c([A("esri.layers.support.rasterFunctions.StretchFunction")],st);const ao=st;var ye;let Wt=ye=class extends D{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new ye({attributeTableAsRecordSet:L(this.attributeTableAsRecordSet)})}};c([m({json:{write:!0}})],Wt.prototype,"attributeTableAsRecordSet",void 0),Wt=ye=c([A("esri.layers.support.rasterFunctions.TableFunctionArguments")],Wt);const uo=Wt;let xt=class extends G{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,s.dataType!=="thematic"&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}};c([m({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),c([m({type:uo,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),c([m()],xt.prototype,"rasterArgumentNames",void 0),c([m()],xt.prototype,"isNoopProcess",void 0),xt=c([A("esri.layers.support.rasterFunctions.TableFunction")],xt);const lo=xt,M=new Map;function co(i,t){const{rasterFunctionArguments:e}=i;e&&(e.rasters||[e.raster]).forEach(s=>{s&&typeof s!="number"&&(typeof s=="string"?s.startsWith("http")&&(t.includes(s)||t.push(s)):"rasterFunctionArguments"in s&&co(s,t))})}function Jo(i,t){if(t=t??{},"function"in(i=L(i))&&"arguments"in i&&i.arguments){const e=gs(i,new Map,t);if(we(e),!e.renderingRule)throw new Bt("raster-function-helper","Unsupported raster function json.");i=e.renderingRule}if("rasterFunction"in i)return fs(i=xe(i),t);throw new Bt("raster-function-helper","unsupported raster function json.")}function po(i,t){return t[0]==="rasters"&&Array.isArray(i.rasters)?i.rasters:t.map(e=>i[e])}function es(i){return!!(i&&typeof i=="object"&&i.rasterFunction&&i.rasterFunctionArguments)}function xe(i){var o;const{rasterFunction:t,rasterFunctionArguments:e}=i,s={};for(const r in e){let a=e[r];const n=r.toLowerCase();if(n==="rasters"&&Array.isArray(a))s.rasters=a.map(u=>es(u)?xe(u):u);else switch(es(a)&&(a=xe(a)),n){case"dra":s.dra=a;break;case"pspower":s.psPower=a;break;case"pszfactor":s.psZFactor=a;break;case"bandids":s.bandIds=a;break;default:s[r[0].toLowerCase()+r.slice(1)]=a}}return t!=="Local"||(o=s.rasters)!=null&&o.length||(s.rasters=["$$"]),{...i,rasterFunctionArguments:s}}function fs(i,t){var f,g;const{rasterFunction:e,rasterFunctionArguments:s}=i,o=(f=i.outputPixelType)==null?void 0:f.toLowerCase();if(e==null||!M.has(e))throw new Bt("raster-function-helper",`unsupported raster function: ${e}`);const r=M.get(e),a=(typeof r.ctor=="function"?r.ctor:r.ctor.default).fromJSON({...i,outputPixelType:o}),{rasterArgumentNames:n}=a,u=[],l=po(s,n),p=n[0]==="rasters",h=[];for(let x=0;x<l.length;x++){const y=l[x];let d;y==null||typeof y=="string"&&y.startsWith("$")?u.push(t==null?void 0:t.raster):typeof y=="string"?t[y]&&u.push(t[y]):typeof y!="number"&&"rasterFunction"in y&&(d=fs(y,t),p||(a.functionArguments[n[x]]=d),u.push(d)),p&&h.push(d??y)}if(p&&(a.functionArguments.rasters=h),t){a.sourceRasters=u;const x=(g=t.raster)==null?void 0:g.url;x&&(a.mainPrimaryRasterId=x)}return a}function ds(i,t){if(i&&t)for(const e in i){const s=i[e];s&&typeof s=="object"&&"type"in s&&(s.type==="RasterFunctionTemplate"?ds(s.arguments,t):s.type==="RasterFunctionVariable"&&t[s.name]!=null&&(s.value=t[s.name]))}}function ve(i,t){var o;if(!i||typeof i!="object")return i;const{value:e}=i;if(!e||typeof e!="object")return i.isDataset?"$$":e;if(Array.isArray(e))return e.length===0?[]:e.map(r=>typeof r=="object"&&r.type==="RasterFunctionVariable"?ve(r,t):r);if("value"in e&&["number","string","boolean"].includes(typeof e.value))return e.value;if(i.isDataset&&e.type!=="Scalar")return"$$";if(!("type"in e))return e;let s=e;switch(e.type){case"Scalar":s=e.value;break;case"AlgorithmicColorRamp":s=ss(e);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:e.ArrayOfColorRamp.map(ss)};break;case"ArgumentArray":if((o=e.elements)!=null&&o.length&&e.elements[0].type!=="RasterStatistics"){const r=[];for(let a=0;a<e.elements.length;a++){const n=e.elements[a],{type:u}=n;if(u)if(u==="RasterFunctionTemplate"){const{renderingRule:l}=gs(n,t);r.push(l),n._object_id!=null&&t.set(n._object_id,l)}else{if(u!=="RasterFunctionVariable")throw new Bt("raster-function-helper","unsupported raster function json.");{const l=ve(n,t);r.push(l),n._object_id!=null&&t.set(n._object_id,l)}}else r.push(n)}s=r}else s=e.elements}return e._object_id!=null&&t.set(e._object_id,s),s}function ss(i){const t=i.algorithm??"esriHSVAlgorithm";let{FromColor:e,ToColor:s}=i;if(!Array.isArray(e)){const{r:o,g:r,b:a}=_e({h:e.Hue,s:e.Saturation,v:e.Value});e=[o,r,a,e.AlphaValue]}if(!Array.isArray(s)){const{r:o,g:r,b:a}=_e({h:s.Hue,s:s.Saturation,v:s.Value});s=[o,r,a,s.AlphaValue]}return{type:"algorithmic",algorithm:t,fromColor:e,toColor:s}}function gs(i,t,e){e&&ds(i,e);const s={renderingRule:{},templates:t};return ys(i,s),s}function ys(i,t){if(!i||!t.renderingRule)return;const{renderingRule:e,templates:s}=t,{function:o,arguments:r,_object_id:a}=i;if(!o||!r)return;a!=null&&s.set(a,e),e.rasterFunction=o.type.replace("Function",""),e.outputPixelType=o.pixelType;const n={};e.rasterFunctionArguments=n;for(const u in r){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const l=r[u];l&&typeof l=="object"&&"type"in l&&(l.type==="RasterFunctionTemplate"||l.type==="RasterFunctionVariable")?(l.type==="RasterFunctionVariable"?n[u]=ve(l,s):(e.rasterFunctionArguments[u]={},ys(l,{renderingRule:e.rasterFunctionArguments[u],templates:s})),l._object_id!=null&&s.set(l._object_id,n[u])):n[u]=l}switch(n.DEM&&!n.Raster&&(n.Raster=n.DEM,delete n.DEM),e.rasterFunction){case"Stretch":ho(n);break;case"Colormap":mo(n);break;case"Convolution":fo(n);break;case"Mask":go(n)}}function we(i){const{renderingRule:t,templates:e}=i;if(typeof t!="object"||!(t!=null&&t.rasterFunctionArguments)||!e.size)return;const{rasterFunctionArguments:s}=t;for(const o in s){const r=s[o],a=o==="_object_ref_id"?r:r&&typeof r=="object"&&"_object_ref_id"in r?r._object_ref_id:null;if(a==null)r&&typeof r=="object"&&(r.rasterFunctionArguments&&we({renderingRule:r,templates:e}),Array.isArray(r)&&r.forEach((n,u)=>{if(typeof n=="object")if(n._object_ref_id!=null){if(!e.has(n._object_ref_id))throw new Bt("raster-function-helper",`unsupported raster function json. _object_ref_id: ${r} does not exist`);const l=e.get(a);l&&typeof l=="object"?Object.assign(n,l):r[u]=l}else we({renderingRule:n,templates:e})}));else{if(!e.has(a))throw new Bt("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const n=e.get(a);o!=="_object_ref_id"?s[o]=n:n&&typeof n=="object"&&Object.assign(s,n)}}}function ho(i){var t;(t=i.Statistics)!=null&&t.length&&typeof i.Statistics=="object"&&(i.Statistics=i.Statistics.map(e=>[e.min,e.max,e.mean,e.standardDeviation])),i.NumberOfStandardDeviation!=null&&(i.NumberOfStandardDeviations=i.NumberOfStandardDeviation,delete i.NumberOfStandardDeviation)}function mo(i){var t,e;((e=(t=i.ColorRamp)==null?void 0:t.type)==null?void 0:e.toLowerCase())==="randomcolorramp"&&(delete i.ColorRamp,i.ColormapName="Random"),i.ColorSchemeType===0&&delete i.ColorRamp}function fo(i){i.ConvolutionType!=null&&(i.Type=i.ConvolutionType,delete i.ConvolutionType)}function go(i){var t;(t=i.NoDataValues)!=null&&t.length&&typeof i.NoDataValues[0]=="string"&&(i.NoDataValues=i.NoDataValues.filter(e=>e!=="").map(e=>Number(e)))}M.set("Arithmetic",{desc:"Arithmetic Function",ctor:Bn,rasterArgumentNames:["rasters"]}),M.set("Aspect",{desc:"Aspect Function",ctor:Sn,rasterArgumentNames:["raster"]}),M.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:ur,rasterArgumentNames:["raster"]}),M.set("Colormap",{desc:"Colormap Function",ctor:wr,rasterArgumentNames:["raster"]}),M.set("CompositeBand",{desc:"CompositeBand Function",ctor:Ar,rasterArgumentNames:["rasters"]}),M.set("Convolution",{desc:"Convolution Function",ctor:Cr,rasterArgumentNames:["raster"]}),M.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Pr,rasterArgumentNames:["raster"]}),M.set("ExtractBand",{desc:"ExtractBand Function",ctor:Sr,rasterArgumentNames:["raster"]}),M.set("Curvature",{desc:"Curvature Function",ctor:Br,rasterArgumentNames:["raster"]}),M.set("Grayscale",{desc:"Grayscale Function",ctor:Dr,rasterArgumentNames:["raster"]}),M.set("Clip",{desc:"Clip Function",ctor:cr,rasterArgumentNames:["raster"]}),M.set("Local",{desc:"Local Function",ctor:zr,rasterArgumentNames:["rasters"]}),M.set("Mask",{desc:"Mask Function",ctor:Vr,rasterArgumentNames:["raster"]}),M.set("NDVI",{desc:"NDVI Function",ctor:Lr,rasterArgumentNames:["raster"]}),M.set("Remap",{desc:"Remap Function",ctor:qr,rasterArgumentNames:["raster"]}),M.set("Slope",{desc:"Slope Function",ctor:Jr,rasterArgumentNames:["raster"]}),M.set("Statistics",{desc:"Focal Statistics Function",ctor:so,rasterArgumentNames:["raster"]}),M.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:ro,rasterArgumentNames:["raster"]}),M.set("Stretch",{desc:"Stretch Function",ctor:ao,rasterArgumentNames:["raster"]}),M.set("Table",{desc:"Attribute Table Function",ctor:lo,rasterArgumentNames:["raster"]});let zt=class extends $e{get affectsPixelSize(){return!1}forwardTransform(i){return i}inverseTransform(i){return i}};c([m()],zt.prototype,"affectsPixelSize",null),c([m({json:{write:!0}})],zt.prototype,"spatialReference",void 0),zt=c([A("esri.layers.support.rasterTransforms.BaseRasterTransform")],zt);const Ce=zt;var be;let Et=be=class extends Ce{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(i){return(i=i.clone()).type==="point"?(i.x>180+this.tolerance&&(i.x-=360),i):(i.xmin>=180-this.tolerance?(i.xmax-=360,i.xmin-=360):i.xmax>180+this.tolerance&&(i.xmin=-180,i.xmax=180),i)}inverseTransform(i){return(i=i.clone()).type==="point"?(i.x<-this.tolerance&&(i.x+=360),i):(i.xmin<-this.tolerance&&(i.xmin+=360,i.xmax+=360),i)}clone(){return new be({tolerance:this.tolerance})}};c([Y({GCSShiftXform:"gcs-shift"})],Et.prototype,"type",void 0),c([m()],Et.prototype,"tolerance",void 0),Et=be=c([A("esri.layers.support.rasterTransforms.GCSShiftTransform")],Et);const yo=Et;var Ae;let qt=Ae=class extends Ce{constructor(){super(...arguments),this.type="identity"}clone(){return new Ae}};c([Y({IdentityXform:"identity"})],qt.prototype,"type",void 0),qt=Ae=c([A("esri.layers.support.rasterTransforms.IdentityTransform")],qt);const xo=qt;var Te;function Pe(i,t,e){const{x:s,y:o}=t;if(e<2)return{x:i[0]+s*i[2]+o*i[4],y:i[1]+s*i[3]+o*i[5]};if(e===2){const f=s*s,g=o*o,x=s*o;return{x:i[0]+s*i[2]+o*i[4]+f*i[6]+x*i[8]+g*i[10],y:i[1]+s*i[3]+o*i[5]+f*i[7]+x*i[9]+g*i[11]}}const r=s*s,a=o*o,n=s*o,u=r*s,l=r*o,p=s*a,h=o*a;return{x:i[0]+s*i[2]+o*i[4]+r*i[6]+n*i[8]+a*i[10]+u*i[12]+l*i[14]+p*i[16]+h*i[18],y:i[1]+s*i[3]+o*i[5]+r*i[7]+n*i[9]+a*i[11]+u*i[13]+l*i[15]+p*i[17]+h*i[19]}}function ns(i,t,e){const{xmin:s,ymin:o,xmax:r,ymax:a,spatialReference:n}=t;let u=[];if(e<2)u.push({x:s,y:a}),u.push({x:r,y:a}),u.push({x:s,y:o}),u.push({x:r,y:o});else{let h=10;for(let f=0;f<h;f++)u.push({x:s,y:o+(a-o)*f/(h-1)}),u.push({x:r,y:o+(a-o)*f/(h-1)});h=8;for(let f=1;f<=h;f++)u.push({x:s+(r-s)*f/h,y:o}),u.push({x:s+(r-s)*f/h,y:a})}u=u.map(h=>Pe(i,h,e));const l=u.map(h=>h.x),p=u.map(h=>h.y);return new bs({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:n})}function vo(i){const[t,e,s,o,r,a]=i,n=s*a-r*o,u=r*o-s*a;return[(r*e-t*a)/n,(s*e-t*o)/u,a/n,o/u,-r/n,-s/u]}let q=Te=class extends Ce{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(i,t){const{coeffX:e,coeffY:s}=t;if(!(e!=null&&e.length)||!(s!=null&&s.length)||e.length!==s.length)return null;const o=[];for(let r=0;r<e.length;r++)o.push(e[r]),o.push(s[r]);return o}writeForwardCoefficients(i,t,e){const s=[],o=[];for(let r=0;r<(i==null?void 0:i.length);r++)r%2==0?s.push(i[r]):o.push(i[r]);t.coeffX=s,t.coeffY=o}get inverseCoefficients(){let i=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!i&&t&&this.polynomialOrder<2&&(i=vo(t)),i}set inverseCoefficients(i){this._set("inverseCoefficients",i)}readInverseCoefficients(i,t){const{inverseCoeffX:e,inverseCoeffY:s}=t;if(!(e!=null&&e.length)||!(s!=null&&s.length)||e.length!==s.length)return null;const o=[];for(let r=0;r<e.length;r++)o.push(e[r]),o.push(s[r]);return o}writeInverseCoefficients(i,t,e){const s=[],o=[];for(let r=0;r<(i==null?void 0:i.length);r++)r%2==0?s.push(i[r]):o.push(i[r]);t.inverseCoeffX=s,t.inverseCoeffY=o}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(i){if(i.type==="point"){const t=Pe(this.forwardCoefficients,i,this.polynomialOrder);return new Be({x:t.x,y:t.y,spatialReference:i.spatialReference})}return ns(this.forwardCoefficients,i,this.polynomialOrder)}inverseTransform(i){if(i.type==="point"){const t=Pe(this.inverseCoefficients,i,this.polynomialOrder);return new Be({x:t.x,y:t.y,spatialReference:i.spatialReference})}return ns(this.inverseCoefficients,i,this.polynomialOrder)}clone(){return new Te({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};c([m({json:{write:!0}})],q.prototype,"polynomialOrder",void 0),c([m()],q.prototype,"forwardCoefficients",void 0),c([Ct("forwardCoefficients",["coeffX","coeffY"])],q.prototype,"readForwardCoefficients",null),c([_t("forwardCoefficients")],q.prototype,"writeForwardCoefficients",null),c([m({json:{write:!0}})],q.prototype,"inverseCoefficients",null),c([Ct("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],q.prototype,"readInverseCoefficients",null),c([_t("inverseCoefficients")],q.prototype,"writeInverseCoefficients",null),c([m()],q.prototype,"affectsPixelSize",null),c([Y({PolynomialXform:"polynomial"})],q.prototype,"type",void 0),q=Te=c([A("esri.layers.support.rasterTransforms.PolynomialTransform")],q);const wo=q,xs={GCSShiftXform:yo,IdentityXform:xo,PolynomialXform:wo},bo=Object.keys(xs);function Ko(i){const t=i==null?void 0:i.type;return!i||bo.includes(t)}function Yo(i){if(!(i==null?void 0:i.type))return null;const e=xs[i==null?void 0:i.type];if(e){const s=new e;return s.read(i),s}return null}export{co as N,Jo as R,yo as c,Ko as f,Yo as i,wo as y};
