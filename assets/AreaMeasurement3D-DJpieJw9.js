import{r as a}from"./tslib.es6-B3Jf3DVX.js";import{q as w,W as J,j as P}from"./Accessor-BLX9ikPh.js";import{m as o,a as M,n as Q,S as X}from"./subclass-BZA_h8Db.js";import{e as b,B as Y,n as O}from"./jsxFactory-CJa39Fro.js";import{c as Z}from"./Analysis-605EM8LG.js";import{aa as f,j as D}from"./Point-Cg0-ChZE.js";import{v as tt}from"./Polyline-D9YkgmM_.js";import{watch as _,sync as it,syncAndInitial as S}from"./reactiveUtils-C5zUhJQJ.js";import{e as et}from"./defaultUnit-_T4IY-sW.js";import{t as st}from"./memoize-DsJmrG76.js";import{h as at}from"./UpdatingHandles-GfwcIh5z.js";import{x as v}from"./hydratedFeatures-DBKLr8hT.js";import{M as $}from"./measurementUtils-r7d11TSK.js";import{R as nt}from"./SnappingVisualizer3D-BL4wyEeI.js";import{B as ot,z as rt}from"./dragEventPipeline3D-BzC_kbE1.js";import{l as A}from"./Color-BCS62Hs5.js";import{N as H,F as lt,R as pt}from"./colorUtils-aL8wj-8G.js";import{g as mt}from"./screenUtils-_ZIvrt5o.js";import{n as U}from"./vec3f64-BLpZdpfb.js";import{f as C,a as L,e as k}from"./RenderObject-CuwfmXYe.js";import{c as ht}from"./LaserlineVisualElement-CUgS0u0n.js";import{o as T}from"./sdfPrimitives-CUWZbMRe.js";import{i as j,p as ut}from"./InteractiveToolBase-vg6J8uyT.js";import{t as dt}from"./ToolIntersector-LAq5Sd_3.js";import{o as gt}from"./ShadedColorMaterial.glsl-BhqCcqcp.js";import{E as ct,p as _t,P as yt}from"./EditGeometryOperations-Cl8Sbfxr.js";import{e as wt}from"./SnappingContext-lR2hMWGP.js";import{f as vt}from"./SnappingDragPipelineStep-rzVcndp8.js";import{a as ft}from"./SnappingManagerPool-CewNAGGP.js";import{p as Mt}from"./SnappingOperation-CaI4DIP4.js";import{G as Vt}from"./SnappingManager-BJPyuu7J.js";import{n as I}from"./screenUtils-WcqhHU65.js";import{u as bt}from"./InteractiveAnalysisViewModel-p1Kf187q.js";import{e as R}from"./globalCss-CZa70j6i.js";import{u as Pt}from"./MeasurementWidgetContent-DYwVXn7I.js";import"./intl-CChhNOV8.js";import"./date-DlqISzcw.js";import"./jsonMap-0cxwUWs2.js";import"./locale-C9TlLpzi.js";import"./messages-OmQvZhAg.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./Evented-BHRw9x22.js";import"./Promise-B2Hu02L7.js";import"./uuid-fwrPAdZb.js";import"./cast-Bjksrh93.js";import"./Clonable-D3rtuBWg.js";import"./Identifiable-B1UbsKNt.js";import"./writer-DNAwXnhG.js";import"./Extent-Bf3YTe7m.js";import"./mathUtils-C4_ghTv4.js";import"./asyncUtils-CWX51uTe.js";import"./Collection-CEdjem1-.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./getDefaultUnitForView-Ce2vZZap.js";import"./Portal-C10FKnaA.js";import"./Loadable-BabW5Xcc.js";import"./geometry-D964gYQX.js";import"./Graphic-DsxsIjhH.js";import"./PopupTemplate-BHMhS05j.js";import"./fieldUtils-tmQlKvWo.js";import"./enumeration-Ba5njXdz.js";import"./ActionToggle-iT4slXc7.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./aaBoundingBox-BE7cC1jD.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./jsonUtils-CEfjT-BK.js";import"./projectVectorToVector-G2uWGoIb.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./projectPointToVector-GINIbYMz.js";import"./projection-B971H0Re.js";import"./vec32-Dvg_eL9J.js";import"./common-DQOJ18NT.js";import"./sphere-C77djCO6.js";import"./mat4-GpOFENPA.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./mat3-BRl2i9Bz.js";import"./mat3f64-BBpwCtoL.js";import"./plane-IENfwZlB.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./vec2f64-miziP1SN.js";import"./mathUtils-BG-eq9fO.js";import"./geodesicAreaMeasurementUtils-BILXFcc4.js";import"./quantityUtils-D0GB2dMc.js";import"./geometryEngine-DGiYLHJy.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-C9rxSL4a.js";import"./geodesicUtils-FCYOaNwu.js";import"./geodesicMeasurementUtils-Bt9h4589.js";import"./elevationInfoUtils-BC_66_Fg.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";import"./viewUtils-DrPohWV3.js";import"./vec2-maR1OrZI.js";import"./ExtendedLineVisualElement-BaVIzd5h.js";import"./frustum-CQrOepbv.js";import"./lineSegment-D7sKPPYf.js";import"./EngineVisualElement-DAbK0X3b.js";import"./RibbonLine.glsl-BZu1FDpE.js";import"./computeTranslationToOriginAndRotation-Q27G6TBL.js";import"./dehydratedFeatureUtils-B--Sgpdi.js";import"./ViewingMode-Dodu7ZZk.js";import"./intersectorUtils-BK9EUwUf.js";import"./boundedPlane-EV1sS2Ke.js";import"./verticalOffsetUtils-BDQLpfho.js";import"./orientedBoundingBox-DOAJUK5g.js";import"./quat-4pa1e6ds.js";import"./spatialReferenceEllipsoidUtils-DBE_OFra.js";import"./ElevationProvider-C95wyCKc.js";import"./VertexAttribute-Cq4MnHjR.js";import"./Material-_xx7OZxD.js";import"./interfaces-DDtDqZYj.js";import"./Texture-Fac_8AOC.js";import"./BindType-BmZEZMMh.js";import"./Util-BIfApRF5.js";import"./Texture-Begq2x5n.js";import"./enums-D9v74xTE.js";import"./renderState-DQLu6AJX.js";import"./Matrix3DrawUniform-CiBFaSz6.js";import"./compilerUtils-Dw3R0f-Z.js";import"./ShaderTechniqueConfiguration-CBbn2DCi.js";import"./Indices-DflDlU4Z.js";import"./triangle-PTGDC_xJ.js";import"./AlphaCutoff-UcccL64p.js";import"./requestImageUtils-DgMiQwsm.js";import"./Octree-C8d4sqjv.js";import"./InterleavedLayout-e-di2fxs.js";import"./BufferView-_QDXRCew.js";import"./Float4DrawUniform-N58YDhuZ.js";import"./floatRGBA-CfH_2xsy.js";import"./MergedRenderer-Dli9s1X5.js";import"./VertexArrayObject-lPxPk5E-.js";import"./NestedMap-GuqgquCN.js";import"./glUtil-D0YUa0ow.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VisualElement-Bz1W-x8t.js";import"./OverlayCompositing.glsl-CiE3Tt8y.js";import"./signal-D4lghLjV.js";import"./axisAngleDegrees-Ci2HA7Jo.js";import"./weather-eV4wTXCK.js";import"./HighlightDefaults-D4ckYWWJ.js";import"./BufferObject-BVi1lwBq.js";import"./Intersector-wXoCuQ8W.js";import"./Scheduler-CJu5awNf.js";import"./debugFlags-BF6Z0j0F.js";import"./LaserlinePath.glsl-CV6hrJ4l.js";import"./Object3DVisualElement-BVfa8i_P.js";import"./HUDMaterial.glsl-D6WRipwF.js";import"./graphicUtils-CWEFaVJb.js";import"./VertexColor.glsl-_ARMpsAT.js";import"./meshVertexSpaceUtils-CXzOFlTI.js";import"./MeshLocalVertexSpace-LEHwMUnu.js";import"./RightAngleQuadVisualElement-9e1qCkJI.js";import"./ColorMaterial.glsl-BF1fDRqL.js";import"./TriangleMaterial-BiHR3MKx.js";import"./SnappingVisualizer-BtjTdiTG.js";import"./PointSnappingHint-D7X20mlb.js";import"./Compositing.glsl-DMM7CJmu.js";import"./Blit-B-VutIER.js";import"./colorUtils-0bJDPow9.js";import"./interfaces-D6pIddIh.js";import"./vec3f32-nZdmKIgz.js";import"./doublePrecisionUtils-B0owpBza.js";import"./geometry2dUtils-DdyQE7AQ.js";import"./dehydratedFeatureComparison-06VFTqH5.js";import"./timeUtils-8fb_2oAt.js";import"./Query-5Xpquc1r.js";import"./DataLayerSource-BKkswDvG.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./FullTextSearch-Csd1Hktu.js";import"./TimeExtent-DocT5yPf.js";import"./InputManager-Ba9xzDpe.js";import"./Queue-yu3bZ02p.js";import"./keybindings-DoOdil3D.js";import"./utils-BpB3MnW1.js";import"./Version-BSlAgupz.js";import"./UnitSelect-Bx5aDsPO.js";let c=class extends Z{constructor(i){super(i),this.type="area-measurement",this.unit=null}set geometry(i){i!=null?(i.rings.length>1&&Q.getLogger(this).warn("Measuring polygons with multiple rings is not supported."),this._set("geometry",i.clone())):this._set("geometry",null)}get requiredPropertiesForEditing(){if(this.geometry!=null&&this.geometry.rings.length===1){const i=this.geometry.rings[0];if(i.length<=2||!X(i[0],i[i.length-1]))return[null]}return[this.geometry]}clear(){this.geometry=null}};a([o({type:["area-measurement"]})],c.prototype,"type",void 0),a([o({value:null,type:tt})],c.prototype,"geometry",null),a([o({type:f,value:null})],c.prototype,"unit",void 0),a([o({readOnly:!0})],c.prototype,"requiredPropertiesForEditing",null),c=a([M("esri.analysis.AreaMeasurementAnalysis")],c);const q=c;class Dt{constructor(i,e=null){this.screenPoint=i,this.result=e}}class St{constructor(i,e){this.scenePoint=i,this.mapPoint=e}}class xt{constructor(i){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._listenerHandles=null,this._tempHandlePosition=U();const{analysisViewData:e,manipulators:s,toolState:r,view:n,visible:l}=i;this._analysisViewData=e,this._toolState=r,s!=null?(this._manipulators=s,this._isManipulatorsOwner=!1):this._manipulators=new j,this._view=n,this._intersector=dt(n.state.viewingMode);const m=C(this._handleColor),u=[new L(T(m,1,32,32))],g=new k({view:n,renderObjects:u});g.available=!1,g.radius=E,g.interactive=!1,this._manipulators.add(g),this._cursorManipulator=g,this._cursorManipulatorMaterial=m,this._laserLine=new ht({view:n,attached:!0,style:{glowWidth:$t,glowFalloff:At,innerWidth:Ht},isDecoration:!0}),this._updateVisibility(l??!0)}destroy(){this._listenerHandles=w(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=w(this._manipulators):this._manipulators=null,this._laserLine=w(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(i){i?this.show():this.hide()}get testData(){}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(i){this._destroyed||this._visible===i||this._updateVisibility(i)}_updateVisibility(i){this._visible=i,this._laserLine.visible=i,i?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach(({manipulator:e})=>this._removeVertexManipulator(e)),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(i,e){const s=this._manipulators.intersect(i,e);return s==null?void 0:s.metadata}pick(i){const e=this._view.spatialReference,s=mt(i.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const r=this._intersector.results.min,n=U();if(!r.getIntersectionPoint(n))return null;const l=this._view.renderCoordsHelper.fromRenderCoords(n,new D({spatialReference:e}));return l==null?null:new St(n,l)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const i=C(this._handleColor),e=[new L(T(i,1,32,32))],s=new k({view:this._view,renderObjects:e});return s.radius=E,this._manipulators.add(s),{manipulator:s,material:i}}_removeVertexManipulator(i){this._manipulators.remove(i)}_updateVertexManipulators(){const{viewData:i}=this._analysisViewData,e=this._analysisViewData.path?this._analysisViewData.path.vertices:[],s=this.vertexManipulators;Ot(s,e.length,()=>this._createVertexManipulator(),({manipulator:r})=>this._removeVertexManipulator(r)),s.forEach(({manipulator:r},n)=>{r.metadata=e[n],r.renderLocation=i.positionsRender[n],r.cursor=n===0&&this._toolState.polygonState==="drawing"?"crosshair":null}),this._toolState.polygonState==="drawing"&&this._analysisViewData.stagedPoint!=null?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.stagedPoint):this._cursorManipulator.available=!1}get _handleColor(){return H(this._view.effectiveTheme.accentColor,.5)}_getFocusPoint(){const{lastDraggedVertex:i}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return this._analysisViewData.stagedPoint!=null?this._analysisViewData.stagedPoint:i!=null?this._analysisViewData.path.getVertexPositionAsPoint(i):this._analysisViewData.path.lastPoint;case"editing":return i!=null?this._analysisViewData.path.getVertexPositionAsPoint(i):null;default:return this._analysisViewData.stagedPoint}}_updateLaserLine(){const i=this._toolState.polygonState!=="measured"&&this._toolState.active,e=this._getFocusPoint();if(i&&e!=null){const s=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(e,s),this._laserLine.heightManifoldTarget=s}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new J,this._listenerHandles.add([_(()=>this._toolState.polygonState,()=>this._updateLaserLine()),_(()=>this._analysisViewData.viewData,()=>this._updateAll(),it),_(()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.stagedPoint}),()=>this._updateLaserLine()),_(()=>this._toolState.active,()=>this._updateAll()),_(()=>this._view.effectiveTheme.accentColor,i=>{const e=H(i,.5);for(const{material:u}of this.vertexManipulators)u.setParameters({color:e});this._cursorManipulatorMaterial.setParameters({color:e});const s=A.toUnitRGB(i),r=A.toUnitRGB(pt(i)),n=.75*i.a,l=this._laserLine,m=l.style;l.style={...m,glowColor:s,innerColor:r,globalAlpha:n}},{initial:!0,equals:lt})])}_destroyListeners(){this._listenerHandles=w(this._listenerHandles)}}function Ot(t,i,e,s){for(;t.length<i;)t.push(e());if(s)for(;t.length>i;)s(t.pop());else t.length=i}const $t=8,At=8,Ht=1,E=5;let h=class extends gt{constructor(t){super(t),this._updatingHandles=new at,this.polygonState="initial",this.manipulators=new j,this._getSnappingContext=st(i=>new wt({elevationInfo:{mode:"absolute-height",offset:0},pointer:i,editGeometryOperations:new ct(new _t("point",yt(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new nt}))}initialize(){const{view:t,analysisViewData:i,manipulators:e,visible:s}=this;this.measurementView=new xt({view:t,analysisViewData:i,toolState:this,manipulators:e,visible:s});const r=ft(t);this._snappingManagerResult=r,this.addHandles(r),this._snappingOperation=new Mt({view:t}),this._updatingHandles.add(()=>this.stagedPoint,n=>{this.analysisViewData.stagedPoint=n!=null?v(n,new D):null},S),Vt(this,()=>{const n=this.view.inputManager.latestPointerType??"mouse",l=this._getSnappingContext(n);this._updatingHandles.addPromise(P(this._snappingOperation.snapAgainNearPreviousMapPoint(this._snappingManager,l)))}),this._setupManipulators(),this.addHandles([_(()=>this.state,n=>{n==="measured"&&this.finishToolCreation()},S),this.analysisViewData.path.on("change",()=>{const n=this.analysisViewData.path;this.polygonState!=="initial"||n.isEmptyPolygon||(n.isValidPolygon?this.polygonState="measured":this.polygonState="drawing")})])}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._updatingHandles=w(this._updatingHandles)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){return this.analysisViewData.path.numVertices===0?"ready":this.analysisViewData.path.isValidPolygon&&this.polygonState!=="editing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.polygonState==="drawing"?"crosshair":null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get stagedPoint(){return this._snappingOperation.stagedPoint}set stagedPoint(t){this._snappingOperation.stagedPoint=t}get snappingOptions(){return this._snappingManager.options}finishMeasurement(){const{path:t}=this.analysisViewData;t.numVertices<3?(t.clear(),this.polygonState="initial"):(t.close(),this.polygonState="measured"),this._resetSnappingState()}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._resetSnappingState()}onInputEvent(t){switch(t.type){case"immediate-double-click":this._handleImmediateDoubleClick(t);break;case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"drag":this._handleDrag(t);break;case"key-down":this._handleKeyDown(t)}}_setupManipulators(){const t=e=>e.events.on("grab-changed",()=>{if(this.analysisViewData.path.isValidPolygon){const s=this.manipulators.some(r=>r.manipulator.grabbing);this.polygonState=s?"editing":"measured"}}),i=e=>{this.addHandles([ut(e,(s,r,n,l)=>{const m=rt(s),u=s.metadata,g=this._snappingManager,V=this._getSnappingContext(l),N=this._updatingHandles,{snappingStep:W,cancelSnapping:K}=vt({snappingManager:g,snappingContext:V,updatingHandles:N});n=n.next(m).next(y=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(u,x),s.location=x,y)).next(K),r.next(m).next(ot(this.view)).next(...W).next(y=>{s.location=y.mapEnd,this.analysisViewData.lastDraggedVertex=y.action==="end"?null:u,this.analysisViewData.path.setVertexPosition(u,v(y.mapEnd))});const x=v(this.analysisViewData.path.getVertexPositionAsPoint(u))}),t(e)],e)};this.manipulators.forEach(({manipulator:e})=>{i(e)}),this.addHandles([this.manipulators.on("after-add",({item:{manipulator:e}})=>{i(e)}),this.manipulators.on("after-remove",({item:{manipulator:e}})=>this.removeHandles(e))])}_handleImmediateDoubleClick(t){$(t)&&(this.polygonState==="drawing"&&this.finishMeasurement(),t.stopPropagation())}_handleDrag(t){this.polygonState==="editing"&&t.stopPropagation()}_handleImmediateClick(t){if(!$(t))return;const i=I(t),{pointerType:e}=t;if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(i,e))return this.stagedPoint=null,this.polygonState="drawing",void t.stopPropagation();break;case"drawing":{const s=this.measurementView.vertexHandleAt(i,e);if(s==null){if(this._addVertexAt(i,e))return this.stagedPoint=null,void t.stopPropagation()}else s.index===0&&(this.finishMeasurement(),t.stopPropagation());break}}t.pointerType==="mouse"&&this._hoverAt(i)}_handlePointerMove(t){if(t.pointerType==="mouse"){const i=I(t);this._hoverAt(i)}}_handleKeyDown(t){const{path:i}=this.analysisViewData;t.key==="Enter"&&this.polygonState==="drawing"&&i.numVertices>=3&&(this.stagedPoint=null,this.finishMeasurement(),t.stopPropagation())}_hoverAt(t){const{polygonState:i}=this;if(this.active&&(i==="initial"||i==="drawing")){const e=this._pick(t);if((e==null?void 0:e.mapPoint)!=null){const s=this._getSnappingContext("mouse");this._updatingHandles.addPromise(P(this._snappingOperation.snap({point:e.mapPoint},this._snappingManager,s)))}}else this.stagedPoint=null}_addVertexAt(t,i){const e=this._pick(t);if((e==null?void 0:e.mapPoint)!=null){const{mapPoint:s}=e,r=this._getSnappingContext(i),n=this._snappingOperation.update({point:s},this._snappingManager,r),l=v(n,new D);return this.analysisViewData.path.add(l),!0}return!1}_pick(t){const i=new Dt(t);return this.measurementView.pick(i)}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}get test(){}};a([o({readOnly:!0})],h.prototype,"state",null),a([o()],h.prototype,"polygonState",void 0),a([o({readOnly:!0})],h.prototype,"cursor",null),a([o()],h.prototype,"measurementView",void 0),a([o({constructOnly:!0})],h.prototype,"view",void 0),a([o({constructOnly:!0})],h.prototype,"analysis",void 0),a([o({constructOnly:!0})],h.prototype,"analysisViewData",void 0),a([o({readOnly:!0})],h.prototype,"manipulators",void 0),a([o()],h.prototype,"updating",null),a([o()],h.prototype,"stagedPoint",null),a([o()],h.prototype,"snappingOptions",null),h=a([M("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],h);const Ut=h;let d=class extends bt{constructor(t){super(t),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="AreaMeasurement3DViewModel is only supported in 3D views.",this._userUnitOptions=null,this._userUnit=null}initialize(){this.addHandles(_(()=>({analysis:this.analysis,unit:this.unit}),({analysis:t,unit:i})=>{t!=null&&(t.unit=i)},S))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){if(this.tool==null||this.disabled||this.tool.destroyed)return null;const{analysisView:t}=this;if(t==null)return null;const i=t.analysisVisualization,e=i.viewData,s=e.validMeasurement,r=e.mode==="euclidean",n=e.intersectingSegments.size===0,l=n?s?"available":"unavailable":"invalid";return{mode:r?"euclidean":"geodesic",area:{text:n&&s?i.areaLabel:null,state:l},perimeterLength:{text:n&&s?i.perimeterLengthLabel:null,state:l}}}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null}get unit(){return this._userUnit!=null?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new q}constructTool(){return new Ut({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(t,i){const{unitOptions:e}=this;return e.includes(t)?t:i!=null?this._findSelectableUnit(i):e[0]}_filteredOrAllUnits(t){if(t==null)return f.slice();const i=t.filter(e=>f.includes(e));return i.length===0?f.slice():i}};a([o({type:q})],d.prototype,"analysis",void 0),a([o({readOnly:!0})],d.prototype,"state",null),a([o({readOnly:!0})],d.prototype,"measurement",null),a([o()],d.prototype,"unitOptions",null),a([o()],d.prototype,"unit",null),a([o(et)],d.prototype,"defaultUnit",void 0),a([o()],d.prototype,"_userUnit",void 0),d=a([M("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],d);const G=d,z="esri-area-measurement-3d",B={base:z,newMeasurementButton:`${z}__clear-button`};let p=class extends Y{constructor(t,i){super(t,i),this.messages=null,this.messagesCommon=null,this.messagesUnits=null,this.viewModel=new G}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get icon(){return"measure-area"}set icon(t){this._overrideIfSome("icon",t)}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesCommon:i,messagesUnits:e,unit:s,unitOptions:r,viewModel:n}=this,{active:l,measurement:m,state:u,supported:g}=n;return O("div",{"aria-label":this.messages.widgetLabel,class:this.classes(B.base,R.widget,R.panel),key:this,role:"presentation"},this.visible?O(Pt,{active:l,measurementItems:[{key:"direct",title:e.measures.area,value:F(m==null?void 0:m.area)},{key:"perimeter",title:t.perimeterLength,value:F(m==null?void 0:m.perimeterLength)}],messages:{...t,notApplicable:i.notApplicable},newMeasurementButtonClass:B.newMeasurementButton,state:u,supported:g,unit:s,unitOptions:r,onNewMeasurementClick:()=>{P(this.viewModel.start())},onUnitChange:V=>{this.unit=V}}):null)}};function F(t){return(t==null?void 0:t.state)==="available"?t.text:null}a([o()],p.prototype,"view",null),a([o()],p.prototype,"visible",null),a([o()],p.prototype,"active",null),a([o({constructOnly:!0,nonNullable:!0})],p.prototype,"analysis",null),a([o()],p.prototype,"icon",null),a([o()],p.prototype,"label",null),a([o(),b("esri/widgets/AreaMeasurement3D/t9n/AreaMeasurement3D")],p.prototype,"messages",void 0),a([o(),b("esri/t9n/common")],p.prototype,"messagesCommon",void 0),a([o(),b("esri/core/t9n/Units")],p.prototype,"messagesUnits",void 0),a([o()],p.prototype,"uiStrings",void 0),a([o({type:G})],p.prototype,"viewModel",void 0),a([o()],p.prototype,"unitOptions",null),a([o()],p.prototype,"unit",null),p=a([M("esri.widgets.AreaMeasurement3D")],p);const na=p;export{na as default};
