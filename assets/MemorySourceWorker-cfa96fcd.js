import{T as I,W as v,cc as b,ca as w,F as D}from"./index-e8c6bcc0.js";import{e as R,n as S,t as M}from"./featureConversionUtils-096a49d9.js";import{t as Q,n as Z}from"./objectIdUtils-789e911a.js";import{m as A}from"./FeatureStore-69342fcb.js";import{f as _,g as E}from"./projectionSupport-380694fd.js";import{e as k}from"./QueryEngine-fe077530.js";import{i as C,o as P,a as G}from"./clientSideDefaults-f0d03b7e.js";import{y as $,u as g,d as x,c as T,h as q}from"./sourceUtils-a83e6bbe.js";import{r as W}from"./FieldsIndex-888b8bd2.js";import{i as z}from"./fieldType-a79b2e2e.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./BoundsStore-dc194457.js";import"./PooledRBush-4ae7c2cc.js";import"./timeSupport-d59847c8.js";import"./normalizeUtils-f64efc29.js";import"./normalizeUtilsCommon-123fc71f.js";import"./utils-c9a76eea.js";import"./json-48e3ea08.js";import"./LRUCache-3922d825.js";import"./WhereClause-0a306758.js";import"./executionError-c92d3b85.js";import"./QueryEngineCapabilities-42e44ded.js";import"./quantizationUtils-4ff178e4.js";import"./utils-68382e8f.js";import"./generateRendererUtils-5874bc54.js";import"./defaultsJSON-b087dd4d.js";const B=w,L={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:w},U={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function H(y){return D(y)?y.z!=null:!!y.hasZ}function V(y){return D(y)?y.m!=null:!!y.hasM}class Ee{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e){const t=[],{features:a}=e,i=this._inferLayerProperties(a,e.fields),d=e.fields||[],p=e.hasM!=null?e.hasM:!!i.hasM,c=e.hasZ!=null?e.hasZ:!!i.hasZ,f=!e.spatialReference&&!i.spatialReference,u=f?B:e.spatialReference||i.spatialReference,m=f?L:null,r=e.geometryType||i.geometryType,o=!r;let l=e.objectIdField||i.objectIdField,s=e.timeInfo;if(!o&&(f&&t.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!r))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!l)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(i.objectIdField&&l!==i.objectIdField&&(t.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${l}" doesn't match the field name "${i.objectIdField}", found in the provided fields`}),l=i.objectIdField),l&&!i.objectIdField){let n=null;d.some(h=>h.name===l&&(n=h,!0))?(n.type="esriFieldTypeOID",n.editable=!1,n.nullable=!1):d.unshift({alias:l,name:l,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const n of d){if(n.name==null&&(n.name=n.alias),n.alias==null&&(n.alias=n.name),!n.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:n});if(n.name===l&&(n.type="esriFieldTypeOID"),!z.jsonValues.includes(n.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${n.name}"`,{field:n})}const F={};for(const n of d)if(n.type!=="esriFieldTypeOID"&&n.type!=="esriFieldTypeGlobalID"){const h=v(n);h!==void 0&&(F[n.name]=h)}if(this._fieldsIndex=new W(d),this._createDefaultAttributes=C(F,l),s){if(s.startTimeField){const n=this._fieldsIndex.get(s.startTimeField);n?(s.startTimeField=n.name,n.type="esriFieldTypeDate"):s.startTimeField=null}if(s.endTimeField){const n=this._fieldsIndex.get(s.endTimeField);n?(s.endTimeField=n.name,n.type="esriFieldTypeDate"):s.endTimeField=null}if(s.trackIdField){const n=this._fieldsIndex.get(s.trackIdField);n?s.trackIdField=n.name:(s.trackIdField=null,t.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:s}}))}s.startTimeField||s.endTimeField||(t.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:s}}),s=null)}const j={warnings:t,featureErrors:[],layerDefinition:{...U,drawingInfo:P(r),templates:G(F),extent:m,geometryType:r,objectIdField:l,fields:d,hasZ:c,hasM:p,timeInfo:s},assignedObjectIds:{}};if(this._queryEngine=new k({fields:d,geometryType:r,hasM:p,hasZ:c,objectIdField:l,spatialReference:u,featureStore:new A({geometryType:r,hasM:p,hasZ:c}),timeInfo:s,cacheSpatialQueries:!0}),!a||!a.length)return this._nextObjectId=Q,j;const O=Z(l,a);return this._nextObjectId=O+1,await _(a,u),this._loadInitialFeatures(j,a)}async applyEdits(e){const{spatialReference:t,geometryType:a}=this._queryEngine;return await Promise.all([$(t,a),_(e.adds,t),_(e.updates,t)]),this._applyEdits(e)}queryFeatures(e,t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_inferLayerProperties(e,t){let a,i,d=null,p=null,c=null;for(const f of e){const u=f.geometry;if(u!=null&&(d||(d=b(u)),p||(p=u.spatialReference),a==null&&(a=H(u)),i==null&&(i=V(u)),d&&p&&a!=null&&i!=null))break}if(t&&t.length){let f=null;t.some(u=>{const m=u.type==="esriFieldTypeOID",r=!u.type&&u.name&&u.name.toLowerCase()==="objectid";return f=u,m||r})&&(c=f.name)}return{geometryType:d,spatialReference:p,objectIdField:c,hasM:i,hasZ:a}}async _loadInitialFeatures(e,t){const{geometryType:a,hasM:i,hasZ:d,objectIdField:p,spatialReference:c,featureStore:f}=this._queryEngine,u=[];for(const o of t){if(o.uid!=null&&(e.assignedObjectIds[o.uid]=-1),o.geometry&&a!==b(o.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const l=this._createDefaultAttributes(),s=x(this._fieldsIndex,l,o.attributes,!0,e.warnings);s?e.featureErrors.push(s):(this._assignObjectId(l,o.attributes,!0),o.attributes=l,o.uid!=null&&(e.assignedObjectIds[o.uid]=o.attributes[p]),o.geometry!=null&&(o.geometry=E(o.geometry,o.geometry.spatialReference,c)),u.push(o))}f.addMany(R([],u,a,d,i,p));const{fullExtent:m,timeExtent:r}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=m,r){const{start:o,end:l}=r;e.layerDefinition.timeInfo.timeExtent=[o,l]}return e}async _applyEdits(e){const{adds:t,updates:a,deletes:i}=e,d={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(d,t),a&&a.length&&this._applyUpdateEdits(d,a),i&&i.length){for(const f of i)d.deleteResults.push(T(f));this._queryEngine.featureStore.removeManyById(i)}const{fullExtent:p,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:p,timeExtent:c,featureEditResults:d}}_applyAddEdits(e,t){const{addResults:a}=e,{geometryType:i,hasM:d,hasZ:p,objectIdField:c,spatialReference:f,featureStore:u}=this._queryEngine,m=[];for(const r of t){if(r.geometry&&i!==b(r.geometry)){a.push(g("Incorrect geometry type."));continue}const o=this._createDefaultAttributes(),l=x(this._fieldsIndex,o,r.attributes);if(l)a.push(l);else{if(this._assignObjectId(o,r.attributes),r.attributes=o,r.uid!=null){const s=r.attributes[c];e.uidToObjectId[r.uid]=s}if(r.geometry!=null){const s=r.geometry.spatialReference??f;r.geometry=E(q(r.geometry,s),s,f)}m.push(r),a.push(T(r.attributes[c]))}}u.addMany(R([],m,i,p,d,c))}_applyUpdateEdits({updateResults:e},t){const{geometryType:a,hasM:i,hasZ:d,objectIdField:p,spatialReference:c,featureStore:f}=this._queryEngine;for(const u of t){const{attributes:m,geometry:r}=u,o=m&&m[p];if(o==null){e.push(g(`Identifier field ${p} missing`));continue}if(!f.has(o)){e.push(g(`Feature with object id ${o} missing`));continue}const l=S(f.getFeature(o),a,d,i);if(r!=null){if(a!==b(r)){e.push(g("Incorrect geometry type."));continue}const s=r.spatialReference??c;l.geometry=E(q(r,s),s,c)}if(m){const s=x(this._fieldsIndex,l.attributes,m);if(s){e.push(s);continue}}f.add(M(l,a,d,i,p)),e.push(T(o))}}_assignObjectId(e,t,a=!1){const i=this._queryEngine.objectIdField;a&&t&&isFinite(t[i])?e[i]=t[i]:e[i]=this._nextObjectId++}}export{Ee as default};
