import{r as i,m as p,a as C,c as w,s as G,_ as B,U as v}from"./Accessor-BHnuXKD2.js";import{b as F}from"./Graphic-CFXUQZlS.js";import{V as N}from"./reactiveUtils-BR0C1Kq4.js";import{S as k}from"./MultiOriginJSONSupport-nGLpCFeg.js";import{o as c,r as z}from"./writer-B2bQV2uU.js";import{w as A}from"./Extent-CBBGeHb-.js";import{X as S,L as H,k as K,K as W,O as U}from"./projection-B2I9Bzj_.js";import{g as h,c as V}from"./Point-XGrwlf63.js";import{H as M,i as J,K as I,N as $,k as R}from"./Polyline-BmuD2-ZN.js";import{R as q}from"./normalizeUtils-XRAPXbWa.js";import X from"./FeatureLayer-9fyQxXYm.js";import{h as Y}from"./GraphicsLayer-Acqd2VFm.js";import{f as Q}from"./Layer-C9uQlTBT.js";import{n as Z}from"./objectIdUtils-4dd1rf9p.js";import{p as ee,t as te}from"./ScaleRangeLayer-C59zG_yk.js";import{b as re}from"./OperationalLayer-Bts9W3HA.js";import{j as oe}from"./PortalLayer-jhi5QQgB.js";import{y as E}from"./Field-Cyk7Ur5d.js";import{S as ie,d as le,y as T,m as ae}from"./TextSymbol-BQ_NW9Xo.js";import"./Clonable-DvJsj5LF.js";import"./JSONSupport-CGdeqxpk.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./opacityUtils-CSd4XoR2.js";import"./Promise-CmQqe-ke.js";import"./enumeration-Cr5WIZs4.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./mathUtils-DV9iOXpW.js";import"./ActionToggle-__-l4AdQ.js";import"./Identifiable-BrT7zvUW.js";import"./jsonUtils-Cu7OBRmN.js";import"./typeUtils-BSg8Y507.js";import"./collectionUtils-CbaToa73.js";import"./Portal-CTRRujjZ.js";import"./screenUtils-_ZIvrt5o.js";import"./vec3f64-BLpZdpfb.js";import"./aaBoundingBox-CeBivBRq.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./normalizeUtilsCommon-D0zPTJCj.js";import"./utils-Cy8wFNQo.js";import"./utils-CkSELPnj.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureLayerBase-DsahGowz.js";import"./formUtils-DXUHP5lI.js";import"./HeightModelInfo-B3GZyQFz.js";import"./commonProperties-C0eC30J9.js";import"./ElevationInfo-Di4W6v5U.js";import"./unitConversionUtils-C4AR5obr.js";import"./lengthUtils-DjJgJFRg.js";import"./AttributeTableTemplate-B7rH2qLr.js";import"./timeZoneUtils-COos5xIr.js";import"./featureLayerUtils-BzWCGee1.js";import"./uuid-Cl5lrJ4c.js";import"./featureQueryAll-xezK3WCp.js";import"./Query-DCBIeen2.js";import"./FullTextSearch-BWm_kPUE.js";import"./TimeExtent-J5qnUFx_.js";import"./timeUtils-D2X862bk.js";import"./layerUtils-dJgsXxkC.js";import"./SimpleRenderer-gSw1WaJS.js";import"./commonProperties-bGHL1a5M.js";import"./colorRamps-Dkx8zIVn.js";import"./SizeVariable-IzD1bP2e.js";import"./visualVariableUtils-Bp9QCb8E.js";import"./ColorStop-CDpeFWOz.js";import"./jsonUtils-Dzgxk9pw.js";import"./defaults-Dwxdhopq.js";import"./defaultsJSON-GKolV7NZ.js";import"./UniqueValueRenderer-Cri3tgP5.js";import"./diffUtils-CMkuJvD2.js";import"./RendererLegendOptions-mgfHoilI.js";import"./styleUtils-BB-zx7mT.js";import"./AttachmentQuery-BceVlzuF.js";import"./NormalizationBinParametersMixin-D6iHLB7I.js";import"./RelationshipQuery-W-4bfgaH.js";import"./fieldType-L-VlbZqy.js";import"./LayerFloorInfo-BXAHB-yQ.js";import"./Relationship-BBBusoKs.js";import"./serviceCapabilitiesUtils-BuKg0yWx.js";import"./infoFor3D-CsJzgCF0.js";import"./workers-D8Q3pEzK.js";import"./Queue-BOnccek2.js";import"./intl-Do3GEEJ7.js";import"./editsZScale-BKYnJc2O.js";import"./queryZScale-DwN6mTru.js";import"./FeatureSet-DpCN730g.js";import"./APIKeyMixin-Btq102Nx.js";import"./ArcGISService-BHkTabnw.js";import"./CustomParametersMixin-uo3x70vd.js";import"./DisplayFilteredLayer-BFGyM6i5.js";import"./scaleUtils-CfLu-sg1.js";import"./displayFilterUtils-DV_nOx_h.js";import"./EditBusLayer-Cx9SJosU.js";import"./FeatureEffectLayer-D3Dl2pXD.js";import"./FeatureEffect-xxsfLT-y.js";import"./jsonUtils-TjZmCq6l.js";import"./utils-DYurMneM.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./common-DQOJ18NT.js";import"./FeatureFilter-DEE1jTWq.js";import"./FeatureReductionLayer-x8j38_gH.js";import"./FeatureReductionSelection-BpUGF9oj.js";import"./labelingInfo-BvMdv93l.js";import"./labelUtils-Dq8OkaT-.js";import"./jsonUtils-DD1NMzWj.js";import"./typeUtils-CfF4cYo5.js";import"./ClassBreaksRenderer-BBSNkSFx.js";import"./LRUCache-DS2O1kTf.js";import"./MemCache-CDoaVBHf.js";import"./Version-9k2AOv05.js";import"./FieldsIndex-DFdVonga.js";import"./utils-B91u8350.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./HeatmapColorStop-c4wClnpW.js";import"./heatmapUtils-DA7NmY3d.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-BP2hvfL_.js";import"./OrderByInfo-E-O9nvtm.js";import"./RefreshableLayer-Cn2UpWQD.js";import"./TemporalLayer-CYEvmdjr.js";import"./TimeInfo-LjqhhubF.js";import"./TimeInterval-BDTTJ9Uw.js";import"./TrackableLayer-D6paP6wl.js";import"./FeatureTemplate-DqbLvkbZ.js";import"./FeatureType-DjGGrg1i.js";import"./fieldProperties-B9JP3-ue.js";import"./TitleCreator-Zm6TQ_ec.js";import"./versionUtils-DSsYFI36.js";import"./styleUtils-BQ_uVsZf.js";import"./popupUtils-pQ0CVidQ.js";import"./interfaces-CL2NbQte.js";import"./GraphicsCollection-CkliHSk1.js";import"./PortalItem-CXk7DqVv.js";import"./portalItemUtils-rm7sAgcm.js";function b(t){return t.featureCollectionType==="markup"||t.layers.some(e=>e.layerDefinition.visibilityField!=null||!D(e))}function D({layerDefinition:t,featureSet:e}){const r=t.geometryType??e.geometryType;return L.find(o=>{var l,n,s;return r===o.geometryTypeJSON&&((s=(n=(l=t.drawingInfo)==null?void 0:l.renderer)==null?void 0:n.symbol)==null?void 0:s.type)===o.identifyingSymbol.type})}function _(){return new A({xmin:-180,ymin:-90,xmax:180,ymax:90})}const x=new E({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),ne=new E({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0,length:255});let y=class extends Y{constructor(t){super(t),this.visibilityMode="inherited"}initialize(){for(const t of this.graphics)t.sourceLayer=this.layer;this.graphics.on("after-add",t=>{t.item.sourceLayer=this.layer}),this.graphics.on("after-remove",t=>{t.item.sourceLayer=null})}get fullExtent(){var r;const t=(r=this.layer)==null?void 0:r.spatialReference,e=this.fullBounds;return t?e==null?S(_(),t).geometry:R(e,t):null}get fullBounds(){var r;const t=(r=this.layer)==null?void 0:r.spatialReference;if(!t)return null;const e=M();return this.graphics.forEach(o=>{const l=o.geometry!=null?S(o.geometry,t).geometry:null;l!=null&&J(e,l.type==="point"?l:l.extent,e)}),I(e,$)?null:e}get sublayers(){return this.graphics}};i([p({readOnly:!0})],y.prototype,"fullExtent",null),i([p({readOnly:!0})],y.prototype,"fullBounds",null),i([p({readOnly:!0})],y.prototype,"sublayers",null),i([p()],y.prototype,"layer",void 0),i([p()],y.prototype,"layerId",void 0),i([p({readOnly:!0})],y.prototype,"visibilityMode",void 0),y=i([C("esri.layers.MapNotesLayer.MapNotesSublayer")],y);const L=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:new ie().toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:new le().toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:new T().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:new T().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:new ae().toJSON()}];let a=class extends ee(te(re(oe(k(Q))))){constructor(t){super(t),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=h.WGS84,this.sublayers=new N(L.map(e=>new y({id:e.id,layerId:e.layerId,title:e.title,layer:this}))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(t,e,r){return{operations:{supportsMapNotesEditing:!b(e)&&(r==null?void 0:r.origin)!=="portal-item"}}}readFeatureCollections(t,e,r){if(!b(e))return null;const o=e.layers.map(l=>{const n=new X;return n.read(l,r),n});return new N({items:o})}readLegacyfeatureCollectionJSON(t,e){return b(e)?w(e.featureCollection):null}get fullExtent(){var r;const t=this.spatialReference,e=M();return this.sublayers!=null?this.sublayers.forEach(({fullBounds:o})=>o!=null?J(e,o,e):e,e):(r=this.featureCollectionJSON)!=null&&r.layers.some(o=>o.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(o=>{const l=S(o.layerDefinition.extent,t).geometry;l!=null&&J(e,l,e)}),I(e,$)?S(_(),t).geometry:R(e,t)}readMinScale(t,e){for(const r of e.layers)if(r.layerDefinition.minScale!=null)return r.layerDefinition.minScale;return 0}readMaxScale(t,e){for(const r of e.layers)if(r.layerDefinition.maxScale!=null)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(t,e){return e.layers.length?h.fromJSON(e.layers[0].layerDefinition.spatialReference):h.WGS84}readSublayers(t,e,r){if(b(e))return null;const o=[];let l=e.layers.reduce((n,s)=>Math.max(n,s.layerDefinition.id??-1),-1)+1;for(const n of e.layers){const{layerDefinition:s,featureSet:m}=n,u=s.id??l++,d=D(n);if(d!=null){const f=new y({id:d.id,title:s.name,layerId:u,layer:this,graphics:m.features.map(({geometry:g,symbol:O,attributes:j,popupInfo:P})=>F.fromJSON({attributes:j,geometry:g,symbol:O,popupTemplate:P}))});o.push(f)}}return new N(o)}writeSublayers(t,e,r,o){var d;const{minScale:l,maxScale:n}=this;if(t==null)return;const s=t.some(f=>f.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing)return void(s&&((d=o==null?void 0:o.messages)==null?void 0:d.push(new G("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"))));const m=[];let u=this.spatialReference.toJSON();e:for(const f of t)for(const g of f.graphics)if(g.geometry!=null){u=g.geometry.spatialReference.toJSON();break e}for(const f of L){const g=t.find(O=>f.id===O.id);this._writeMapNoteSublayer(m,g,f,l,n,u,o)}B("featureCollection.layers",m,e)}get textLayer(){return this._findSublayer("textLayer")}load(t){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},t)),Promise.resolve(this)}read(t,e){"featureCollection"in t&&(t=w(t),Object.assign(t,t.featureCollection)),super.read(t,e)}async beforeSave(){if(this.sublayers==null)return;let t=null;const e=[];for(const o of this.sublayers)for(const l of o.graphics)if(l.geometry!=null){const n=l.geometry;t?V(n.spatialReference,t)||(H(n.spatialReference,t)||K()||await W(),l.geometry=U(n,t)):t=n.spatialReference,e.push(l)}const r=await q(e.map(o=>o.geometry));e.forEach((o,l)=>o.geometry=r[l])}_findSublayer(t){var e;return this.sublayers==null?null:((e=this.sublayers)==null?void 0:e.find(r=>r.id===t))??null}_writeMapNoteSublayer(t,e,r,o,l,n,s){const m=[];if(e!=null){for(const u of e.graphics)this._writeMapNote(m,u,r.geometryType,s);this._normalizeObjectIds(m,x),t.push({layerDefinition:{name:e.title,drawingInfo:{renderer:{type:"simple",symbol:w(r.identifyingSymbol)}},id:e.layerId,geometryType:r.geometryTypeJSON,minScale:o,maxScale:l,objectIdField:"OBJECTID",fields:[x.toJSON(),ne.toJSON()],spatialReference:n},featureSet:{features:m,geometryType:r.geometryTypeJSON}})}}_writeMapNote(t,e,r,o){var u,d;if(e==null)return;const{geometry:l,symbol:n,popupTemplate:s}=e;if(l==null)return;if(l.type!==r)return void((u=o==null?void 0:o.messages)==null?void 0:u.push(new v("map-notes-layer:invalid-geometry-type",`Geometry "${l.type}" cannot be saved in "${r}" layer`,{graphic:e})));if(n==null)return void((d=o==null?void 0:o.messages)==null?void 0:d.push(new v("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:e})));const m={attributes:{...e.attributes},geometry:l.toJSON(),symbol:n.toJSON()};s!=null&&(m.popupInfo=s.toJSON()),t.push(m)}_normalizeObjectIds(t,e){const r=e.name;let o=Z(r,t)+1;const l=new Set;for(const n of t){n.attributes||(n.attributes={});const{attributes:s}=n;(s[r]==null||l.has(s[r]))&&(s[r]=o++),l.add(s[r])}}};i([p({readOnly:!0})],a.prototype,"capabilities",void 0),i([c(["portal-item","web-map"],"capabilities",["layers"])],a.prototype,"readCapabilities",null),i([p({readOnly:!0})],a.prototype,"featureCollections",void 0),i([c(["web-map","portal-item"],"featureCollections",["layers"])],a.prototype,"readFeatureCollections",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],a.prototype,"featureCollectionJSON",void 0),i([c(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],a.prototype,"readLegacyfeatureCollectionJSON",null),i([p({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],a.prototype,"featureCollectionType",void 0),i([p({readOnly:!0})],a.prototype,"fullExtent",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],a.prototype,"legendEnabled",void 0),i([p({type:["show","hide","hide-children"]})],a.prototype,"listMode",void 0),i([p({type:Number,nonNullable:!0,json:{write:!1}})],a.prototype,"minScale",void 0),i([c(["web-map","portal-item"],"minScale",["layers"])],a.prototype,"readMinScale",null),i([p({type:Number,nonNullable:!0,json:{write:!1}})],a.prototype,"maxScale",void 0),i([c(["web-map","portal-item"],"maxScale",["layers"])],a.prototype,"readMaxScale",null),i([p({readOnly:!0})],a.prototype,"multipointLayer",null),i([p({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],a.prototype,"operationalLayerType",void 0),i([p({readOnly:!0})],a.prototype,"pointLayer",null),i([p({readOnly:!0})],a.prototype,"polygonLayer",null),i([p({readOnly:!0})],a.prototype,"polylineLayer",null),i([p({type:h})],a.prototype,"spatialReference",void 0),i([c(["web-map","portal-item"],"spatialReference",["layers"])],a.prototype,"readSpatialReference",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],a.prototype,"sublayers",void 0),i([c("web-map","sublayers",["layers"])],a.prototype,"readSublayers",null),i([z("web-map","sublayers")],a.prototype,"writeSublayers",null),i([p({readOnly:!0})],a.prototype,"textLayer",null),i([p()],a.prototype,"title",void 0),i([p({readOnly:!0,json:{read:!1}})],a.prototype,"type",void 0),a=i([C("esri.layers.MapNotesLayer")],a);const zr=a;export{zr as default};
