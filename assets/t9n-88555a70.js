import{fM as x,fN as E,c_ as R}from"./index-e8c6bcc0.js";import{c as k}from"./observers-029cb9ef.js";/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.4.2
 */const N=new WeakMap,I=new WeakMap;function se(e){I.set(e,new Promise(t=>N.set(e,t)))}function ne(e){N.get(e)()}function re(e){return I.get(e)}/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.4.2
 */function ae(e){return e==="Enter"||e===" "}const F=["0","1","2","3","4","5","6","7","8","9"];/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.4.2
 */const T=new RegExp("\\.(0+)?$"),D=new RegExp("0+$");class a{constructor(t){if(t instanceof a)return t;const[s,n]=U(t).split(".").concat("");this.value=BigInt(s+n.padEnd(a.DECIMALS,"0").slice(0,a.DECIMALS))+BigInt(a.ROUNDED&&n[a.DECIMALS]>="5"),this.isNegative=t.charAt(0)==="-"}getIntegersAndDecimals(){const t=this.value.toString().replace("-","").padStart(a.DECIMALS+1,"0"),s=t.slice(0,-a.DECIMALS),n=t.slice(-a.DECIMALS).replace(D,"");return{integers:s,decimals:n}}toString(){const{integers:t,decimals:s}=this.getIntegersAndDecimals();return`${this.isNegative?"-":""}${t}${s.length?"."+s:""}`}formatToParts(t){const{integers:s,decimals:n}=this.getIntegersAndDecimals(),r=t.numberFormatter.formatToParts(BigInt(s));return this.isNegative&&r.unshift({type:"minusSign",value:t.minusSign}),n.length&&(r.push({type:"decimal",value:t.decimal}),n.split("").forEach(i=>r.push({type:"fraction",value:i}))),r}format(t){const{integers:s,decimals:n}=this.getIntegersAndDecimals(),r=`${this.isNegative?t.minusSign:""}${t.numberFormatter.format(BigInt(s))}`,i=n.length?`${t.decimal}${n.split("").map(l=>t.numberFormatter.format(Number(l))).join("")}`:"";return`${r}${i}`}add(t){return a.fromBigInt(this.value+new a(t).value)}subtract(t){return a.fromBigInt(this.value-new a(t).value)}multiply(t){return a._divRound(this.value*new a(t).value,a.SHIFT)}divide(t){return a._divRound(this.value*a.SHIFT,new a(t).value)}}a.DECIMALS=100;a.ROUNDED=!0;a.SHIFT=BigInt("1"+"0".repeat(a.DECIMALS));a._divRound=(e,t)=>a.fromBigInt(e/t+(a.ROUNDED?e*BigInt(2)/t%BigInt(2):BigInt(0)));a.fromBigInt=e=>Object.assign(Object.create(a.prototype),{value:e,isNegative:e<BigInt(0)});function $(e){return!(!e||isNaN(Number(e)))}function ie(e){return!e||!G(e)?"":f(e,t=>{let s=!1;const n=t.split("").filter((r,i)=>r.match(/\./g)&&!s?(s=!0,!0):r.match(/\-/g)&&i===0?!0:F.includes(r)).reduce((r,i)=>r+i);return $(n)?new a(n).toString():""})}const L=/^([-0])0+(?=\d)/,j=/(?!^\.)\.$/,P=/(?!^-)-/g,H=/^-\b0\b\.?0*$/,ce=e=>f(e,t=>{const s=t.replace(P,"").replace(j,"").replace(L,"$1");return $(s)?H.test(s)?s:new a(s).toString():t});function f(e,t){if(!e)return e;const s=e.toLowerCase().indexOf("e")+1;return s?e.replace(/[eE]*$/g,"").substring(0,s).concat(e.slice(s).replace(/[eE]/g,"")).split(/[eE]/).map((n,r)=>t(r===1?n.replace(/\./g,""):n)).join("e").replace(/^e/,"1e"):t(e)}function U(e){const t=e.split(/[eE]/);if(t.length===1)return e;const s=+e;if(Number.isSafeInteger(s))return`${s}`;const n=e.charAt(0)==="-",r=+t[1],i=t[0].split("."),l=(n?i[0].substring(1):i[0])||"",w=i[1]||"",_=(c,o)=>{const g=Math.abs(o)-c.length,p=g>0?`${"0".repeat(g)}${c}`:c;return`${p.slice(0,o)}.${p.slice(o)}`},z=(c,o)=>{const g=o>c.length?`${c}${"0".repeat(o-c.length)}`:c;return`${g.slice(0,o)}.${g.slice(o)}`},S=r>0?`${l}${z(w,r)}`:`${_(l,r)}${w}`;return`${n?"-":""}${S.charAt(0)==="."?"0":""}${S.replace(T,"").replace(L,"")}`}function G(e){return F.some(t=>e.includes(t))}const u="en",Z=["ar","bg","bs","ca","cs","da","de","el",u,"es","et","fi","fr","he","hr","hu","id","it","ja","ko","lt","lv","no","nl","pl","pt-BR","pt-PT","ro","ru","sk","sl","sr","sv","th","tr","uk","vi","zh-CN","zh-HK","zh-TW"],B=["ar","bg","bs","ca","cs","da","de","de-AT","de-CH","el",u,"en-AU","en-CA","en-GB","es","es-MX","et","fi","fr","fr-CH","he","hi","hr","hu","id","it","it-CH","ja","ko","lt","lv","mk","no","nl","pl","pt","pt-PT","ro","ru","sk","sl","sr","sv","th","tr","uk","vi","zh-CN","zh-HK","zh-TW"],K=["arab","arabext","bali","beng","deva","fullwide","gujr","guru","hanidec","khmr","knda","laoo","latn","limb","mlym","mong","mymr","orya","tamldec","telu","thai","tibt"],M=e=>K.includes(e),b=new Intl.NumberFormat().resolvedOptions().numberingSystem,C=b==="arab"||!M(b)?"latn":b,W=e=>M(e)?e:C;function O(e,t="cldr"){const s=t==="cldr"?B:Z;return e?s.includes(e)?e:(e=e.toLowerCase(),e==="nb"?"no":t==="t9n"&&e==="pt"?"pt-BR":(e.includes("-")&&(e=e.replace(/(\w+)-(\w+)/,(n,r,i)=>`${r}-${i.toUpperCase()}`),s.includes(e)||(e=e.split("-")[0])),e==="zh"?"zh-CN":s.includes(e)?e:(console.warn(`Translations for the "${e}" locale are not available and will fall back to the default, English (en).`),u))):u}const d=new Set;function oe(e){J(e),d.size===0&&(m==null||m.observe(document.documentElement,{attributes:!0,attributeFilter:["lang"],subtree:!0})),d.add(e)}function J(e){e.effectiveLocale=V(e)}function ue(e){d.delete(e),d.size===0&&m.disconnect()}const m=k("mutation",e=>{e.forEach(t=>{const s=t.target;d.forEach(n=>{if(!x(s,n.el))return;const i=E(n.el,"[lang]");if(!i){n.effectiveLocale=u;return}const l=i.lang;n.effectiveLocale=i.hasAttribute("lang")&&l===""?u:l})})});function V(e){var t;return e.el.lang||((t=E(e.el,"[lang]"))==null?void 0:t.lang)||document.documentElement.lang||u}class X{constructor(){this.delocalize=t=>this._numberFormatOptions?f(t,s=>s.replace(new RegExp(`[${this._minusSign}]`,"g"),"-").replace(new RegExp(`[${this._group}]`,"g"),"").replace(new RegExp(`[${this._decimal}]`,"g"),".").replace(new RegExp(`[${this._digits.join("")}]`,"g"),this._getDigitIndex)):t,this.localize=t=>this._numberFormatOptions?f(t,s=>$(s.trim())?new a(s.trim()).format(this).replace(new RegExp(`[${this._actualGroup}]`,"g"),this._group):s):t}get group(){return this._group}get decimal(){return this._decimal}get minusSign(){return this._minusSign}get digits(){return this._digits}get numberFormatter(){return this._numberFormatter}get numberFormatOptions(){return this._numberFormatOptions}set numberFormatOptions(t){if(t.locale=O(t==null?void 0:t.locale),t.numberingSystem=W(t==null?void 0:t.numberingSystem),!this._numberFormatOptions&&t.locale===u&&t.numberingSystem===C&&Object.keys(t).length===2||JSON.stringify(this._numberFormatOptions)===JSON.stringify(t))return;this._numberFormatOptions=t,this._numberFormatter=new Intl.NumberFormat(this._numberFormatOptions.locale,this._numberFormatOptions),this._digits=[...new Intl.NumberFormat(this._numberFormatOptions.locale,{useGrouping:!1,numberingSystem:this._numberFormatOptions.numberingSystem}).format(9876543210)].reverse();const s=new Map(this._digits.map((r,i)=>[r,i])),n=new Intl.NumberFormat(this._numberFormatOptions.locale).formatToParts(-123456789e-1);this._actualGroup=n.find(r=>r.type==="group").value,this._group=this._actualGroup.trim().length===0?" ":this._actualGroup,this._decimal=n.find(r=>r.type==="decimal").value,this._minusSign=n.find(r=>r.type==="minusSign").value,this._getDigitIndex=r=>s.get(r)}}const le=new X;/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.4.2
 */const h={};async function q(e,t){const s=`${t}_${e}`;return h[s]||(h[s]=fetch(R(`./assets/${t}/t9n/messages_${e}.json`)).then(n=>(n.ok||y(),n.json())).catch(()=>y())),h[s]}function y(){throw new Error("could not fetch component message bundle")}function v(e){e.messages={...e.defaultMessages,...e.messageOverrides}}async function ge(e){e.defaultMessages=await A(e,e.effectiveLocale),v(e)}async function A(e,t){const{el:s}=e,r=s.tagName.toLowerCase().replace("calcite-","");return q(O(t,"t9n"),r)}async function de(e,t){e.defaultMessages=await A(e,t),v(e)}function he(e){e.onMessagesChange=Q}function me(e){e.onMessagesChange=void 0}function Q(){v(this)}export{a as B,he as a,ge as b,oe as c,ne as d,ue as e,me as f,re as g,$ as h,ae as i,ce as j,C as k,F as l,le as n,ie as p,se as s,de as u};
