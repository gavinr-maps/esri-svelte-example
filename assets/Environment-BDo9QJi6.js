import{r as t}from"./tslib.es6-B3Jf3DVX.js";import{f as c}from"./assets-C43MgM-v.js";import{m as r,a as d,n as P,g as j}from"./subclass-BZA_h8Db.js";import{e as k,n as D,s as T}from"./weather-eV4wTXCK.js";import{o as v,r as u}from"./writer-DNAwXnhG.js";import{l as U}from"./Color-BCS62Hs5.js";import{r as B}from"./enumeration-Ba5njXdz.js";import{p as N}from"./materialUtils-DarhapKC.js";var h;let n=h=class extends c{constructor(e){super(e),this.type="sun",this.date=null,this.directShadowsEnabled=!1,this.displayUTCOffset=null}readDate(e,o){return o.datetime!=null&&new Date(o.datetime)||null}writeDate(e,o,s){o[s]=e.getTime()}readDirectShadowsEnabled(e,o){return!!o.directShadows}writedirectShadowsEnabled(e,o,s){e&&(o[s]=e)}writeDisplayUTCOffset(e,o){e!=null&&(o.displayUTCOffset=e)}clone(){return new h(this.cloneConstructProperties())}cloneConstructProperties(){const e={directShadowsEnabled:this.directShadowsEnabled,displayUTCOffset:this.displayUTCOffset!=null?this.displayUTCOffset:null};return this.date!=null&&(e.date=new Date(this.date.getTime())),e}};t([r({readOnly:!0,type:["sun"],json:{write:!0}})],n.prototype,"type",void 0),t([r({type:Date,json:{type:Number,write:{target:"datetime"}}})],n.prototype,"date",void 0),t([v("date",["datetime"])],n.prototype,"readDate",null),t([u("date")],n.prototype,"writeDate",null),t([r({type:Boolean,json:{default:!1,write:{target:"directShadows"}}})],n.prototype,"directShadowsEnabled",void 0),t([v("directShadowsEnabled",["directShadows"])],n.prototype,"readDirectShadowsEnabled",null),t([u("directShadowsEnabled")],n.prototype,"writedirectShadowsEnabled",null),t([r({type:Number,json:{write:!0}})],n.prototype,"displayUTCOffset",void 0),t([u("displayUTCOffset")],n.prototype,"writeDisplayUTCOffset",null),n=h=t([d("esri.webscene.SunLighting")],n);const y=n;var w;let i=w=class extends c{constructor(e){super(e),this.type="virtual",this.directShadowsEnabled=!1}clone(){return new w(this.cloneConstructProperties())}cloneConstructProperties(){return{directShadowsEnabled:this.directShadowsEnabled}}};t([r({readOnly:!0,type:["virtual"],json:{write:!0}})],i.prototype,"type",void 0),t([r({type:Boolean,json:{default:!1,name:"directShadows",write:!0}})],i.prototype,"directShadowsEnabled",void 0),i=w=t([d("esri.webscene.VirtualLighting")],i);const $=i,x={key:"type",defaultKeyValue:"sun",base:null,typeMap:{sun:y,virtual:$}};let p=class extends c{constructor(o){super(o)}clone(){throw new Error("Subclasses of Background should implement their own clone method.")}};t([r({readOnly:!0,json:{read:!1}})],p.prototype,"type",void 0),p=t([d("esri.webscene.background.Background")],p);const C=p;var b;const M={...N,nonNullable:!0};let l=b=class extends C{constructor(e){super(e),this.type="color",this.color=new U([0,0,0,1])}clone(){return new b(this.cloneProperties())}cloneProperties(){return{color:this.color.clone()}}};t([B({color:"color"},{readOnly:!0})],l.prototype,"type",void 0),t([r(M)],l.prototype,"color",void 0),l=b=t([d("esri.webscene.background.ColorBackground")],l);const L=l,E={base:C,key:"type",typeMap:{color:L}};function V(e){return(o,s,O)=>{if(!o)return o;for(const g in e.typeMap)if(o.type===g){const m=new e.typeMap[g];return m.read(o,O),m}}}const K={types:E,json:{read:V(E),write:{overridePolicy:(e,o,s)=>({enabled:!(s!=null&&s.isPresentation)})}}};var f;const S=(e,o,s)=>({enabled:!(s!=null&&s.isPresentation)});let a=f=class extends c{constructor(e){super(e),this.lighting=new y,this.background=null,this.atmosphereEnabled=!0,this.starsEnabled=!0}set weather(e){T(e==null?void 0:e.type,P.getLogger(this))&&this._set("weather",e)}clone(){return new f(this.cloneConstructProperties())}cloneConstructProperties(){return{lighting:this.lighting&&this.lighting.type==="virtual"?$.prototype.clone.call(this.lighting):y.prototype.clone.call(this.lighting),background:j(this.background),atmosphereEnabled:this.atmosphereEnabled,starsEnabled:this.starsEnabled,weather:this.weather.clone()}}};t([r({types:x,nonNullable:!0,json:{write:!0}})],a.prototype,"lighting",void 0),t([r(K)],a.prototype,"background",void 0),t([r({type:Boolean,nonNullable:!0,json:{write:{overridePolicy:S}}})],a.prototype,"atmosphereEnabled",void 0),t([r({type:Boolean,nonNullable:!0,json:{write:{overridePolicy:S}}})],a.prototype,"starsEnabled",void 0),t([r({types:k,nonNullable:!0,json:{write:!0},value:new D})],a.prototype,"weather",null),a=f=t([d("esri.webscene.Environment")],a);const Q=a;export{$ as a,Q as b,L as c,x as i,y as p};
