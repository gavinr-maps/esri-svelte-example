import{e as c}from"./Evented-CXIxDjmW.js";import{n as vs}from"./geometry-CnaxvJsv.js";import{y as h,b as P,a as L,c as St}from"./subclass-BR3PhgZG.js";import{o as J}from"./enumeration--HlxOQ_N.js";import{o as Mt,r as Ot}from"./writer-3zufXUNV.js";import{_ as Be}from"./Point-TlcsOcXV.js";import{w as As}from"./Extent-B4rrMrqp.js";import{f as $e}from"./assets-BNizZMOZ.js";import{y as je}from"./colorUtils-D5nOabzP.js";import{s as ot,i as H,u as Jt}from"./pixelRangeUtils-DR2RxTkt.js";import{s as os,n as it}from"./jsonMap-DCC6W5ex.js";import{g as b,o as Ts,r as Ps,j as Ie,n as is,q as as,w as Fs,t as Q,v as Ns,y as $s,x as Is,z as Cs}from"./dataUtils-BTw6iaAi.js";import{a as Rs,v as ks,w as Wt,C as _s,x as us,e as Se,y as Bs,z as js,E as Zt,H as Ss,I as Ms,J as Yt,K as Os,M as Ds,O as Gs}from"./RasterSymbolizer-BzK6A2vQ.js";import{y as Es}from"./jsonUtils-DtWlwXHP.js";import{m as zs,p as ls}from"./colorRamps-BBM5Timv.js";import{y as tt}from"./Field-poIiHWUc.js";import{a4 as jt}from"./mathUtils-ClvKsMak.js";let Gt=class extends $e{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};c([h()],Gt.prototype,"affectsPixelSize",null),c([h({json:{write:!0}})],Gt.prototype,"spatialReference",void 0),Gt=c([P("esri.layers.support.rasterTransforms.BaseRasterTransform")],Gt);const cs=Gt;var Qt;function te(i,t,e){const{x:s,y:r}=t;if(e<2)return{x:i[0]+s*i[2]+r*i[4],y:i[1]+s*i[3]+r*i[5]};if(e===2){const f=s*s,d=r*r,g=s*r;return{x:i[0]+s*i[2]+r*i[4]+f*i[6]+g*i[8]+d*i[10],y:i[1]+s*i[3]+r*i[5]+f*i[7]+g*i[9]+d*i[11]}}const o=s*s,a=r*r,n=s*r,u=o*s,l=o*r,p=s*a,m=r*a;return{x:i[0]+s*i[2]+r*i[4]+o*i[6]+n*i[8]+a*i[10]+u*i[12]+l*i[14]+p*i[16]+m*i[18],y:i[1]+s*i[3]+r*i[5]+o*i[7]+n*i[9]+a*i[11]+u*i[13]+l*i[15]+p*i[17]+m*i[19]}}function Me(i,t,e){const{xmin:s,ymin:r,xmax:o,ymax:a,spatialReference:n}=t;let u=[];if(e<2)u.push({x:s,y:a}),u.push({x:o,y:a}),u.push({x:s,y:r}),u.push({x:o,y:r});else{let m=10;for(let f=0;f<m;f++)u.push({x:s,y:r+(a-r)*f/(m-1)}),u.push({x:o,y:r+(a-r)*f/(m-1)});m=8;for(let f=1;f<=m;f++)u.push({x:s+(o-s)*f/m,y:r}),u.push({x:s+(o-s)*f/m,y:a})}u=u.map(m=>te(i,m,e));const l=u.map(m=>m.x),p=u.map(m=>m.y);return new As({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:n})}function Vs(i){const[t,e,s,r,o,a]=i,n=s*a-o*r,u=o*r-s*a;return[(o*e-t*a)/n,(s*e-t*r)/u,a/n,r/u,-o/n,-s/u]}let q=Qt=class extends cs{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(i,t){const{coeffX:e,coeffY:s}=t;if(!(e!=null&&e.length)||!(s!=null&&s.length)||e.length!==s.length)return null;const r=[];for(let o=0;o<e.length;o++)r.push(e[o]),r.push(s[o]);return r}writeForwardCoefficients(i,t,e){const s=[],r=[];for(let o=0;o<(i==null?void 0:i.length);o++)o%2==0?s.push(i[o]):r.push(i[o]);t.coeffX=s,t.coeffY=r}get inverseCoefficients(){let i=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!i&&t&&this.polynomialOrder<2&&(i=Vs(t)),i}set inverseCoefficients(i){this._set("inverseCoefficients",i)}readInverseCoefficients(i,t){const{inverseCoeffX:e,inverseCoeffY:s}=t;if(!(e!=null&&e.length)||!(s!=null&&s.length)||e.length!==s.length)return null;const r=[];for(let o=0;o<e.length;o++)r.push(e[o]),r.push(s[o]);return r}writeInverseCoefficients(i,t,e){const s=[],r=[];for(let o=0;o<(i==null?void 0:i.length);o++)o%2==0?s.push(i[o]):r.push(i[o]);t.inverseCoeffX=s,t.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(i){if(i.type==="point"){const t=te(this.forwardCoefficients,i,this.polynomialOrder);return new Be({x:t.x,y:t.y,spatialReference:i.spatialReference})}return Me(this.forwardCoefficients,i,this.polynomialOrder)}inverseTransform(i){if(i.type==="point"){const t=te(this.inverseCoefficients,i,this.polynomialOrder);return new Be({x:t.x,y:t.y,spatialReference:i.spatialReference})}return Me(this.inverseCoefficients,i,this.polynomialOrder)}clone(){return new Qt({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};c([h({json:{write:!0}})],q.prototype,"polynomialOrder",void 0),c([h()],q.prototype,"forwardCoefficients",void 0),c([Mt("forwardCoefficients",["coeffX","coeffY"])],q.prototype,"readForwardCoefficients",null),c([Ot("forwardCoefficients")],q.prototype,"writeForwardCoefficients",null),c([h({json:{write:!0}})],q.prototype,"inverseCoefficients",null),c([Mt("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],q.prototype,"readInverseCoefficients",null),c([Ot("inverseCoefficients")],q.prototype,"writeInverseCoefficients",null),c([h()],q.prototype,"affectsPixelSize",null),c([J({PolynomialXform:"polynomial"})],q.prototype,"type",void 0),q=Qt=c([P("esri.layers.support.rasterTransforms.PolynomialTransform")],q);const Jo=q;var ee;let Et=ee=class extends cs{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(i){return(i=i.clone()).type==="point"?(i.x>180+this.tolerance&&(i.x-=360),i):(i.xmin>=180-this.tolerance?(i.xmax-=360,i.xmin-=360):i.xmax>180+this.tolerance&&(i.xmin=-180,i.xmax=180),i)}inverseTransform(i){return(i=i.clone()).type==="point"?(i.x<-this.tolerance&&(i.x+=360),i):(i.xmin<-this.tolerance&&(i.xmin+=360,i.xmax+=360),i)}clone(){return new ee({tolerance:this.tolerance})}};c([J({GCSShiftXform:"gcs-shift"})],Et.prototype,"type",void 0),c([h()],Et.prototype,"tolerance",void 0),Et=ee=c([P("esri.layers.support.rasterTransforms.GCSShiftTransform")],Et);const Yo=Et;let qt=class extends $e{constructor(){super(...arguments),this.raster=void 0}};c([h({json:{write:!0}})],qt.prototype,"raster",void 0),qt=c([P("esri.layers.support.rasterFunctions.BaseFunctionArguments")],qt);const D=qt;var se;let Pt=se=class extends D{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new se({raster:this.raster,raster2:this.raster2,operation:this.operation})}};c([h({json:{write:!0}})],Pt.prototype,"operation",void 0),c([h({json:{write:!0}})],Pt.prototype,"raster2",void 0),c([h({readOnly:!0})],Pt.prototype,"rasters",null),Pt=se=c([P("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],Pt);const Us=Pt,Ls=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let O=class extends $e{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){var u;const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let r=s.rasters||s.raster&&[s.raster];for(;r!=null&&r.length;){e.unshift(...r);const l=[];for(let p=0;p<r.length;p++){const{parameters:m}=r[p],f=m.rasters||m.raster&&[m.raster];f!=null&&f.length&&l.push(...f)}r=l}for(let l=e.length-1;l>=0;l--)e[l].isNoopProcess&&e.splice(l,1);let o=!1;for(let l=0;l<e.length;l++){const p=e[l];p.id=e.length-l-1;const{rasters:m}=p.parameters;o=o||m!=null&&m.length>1}const a=e.some(({name:l})=>Ls.has(l.toLowerCase())),{rawSourceRasterInfos:n}=this;return{functions:e,hasBranches:o,hasFocalFunction:a,isSourceSingleBand:((u=n==null?void 0:n[0])==null?void 0:u.bandCount)===1}}bind(t,e=!1,s=-1){this.id=s+1;const r=this._getRasterValues();let o=!0;for(let a=0;a<r.length;a++){const n=r[a];if(n!=null&&this._isRasterFunctionValue(n)){const u=n.bind(t,e,this.id+a);if(!u.success)return this._bindingResult=u,u;o=o&&u.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=o&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(r=>this._readRasterValue(r,t));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const o=t.map(n=>n.processInputBandIds()[0]);this.rawInputBandIds=o,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((n,u)=>n!==u);const a=t.filter(n=>n.functionName==="ExtractBand");return a.length&&a.forEach((n,u)=>{n.isInputBandIdsSwizzled=!0,n.swizzledBandSelection=[u,u,u]}),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:o}=this.sourceRasterInfos[0];for(let a=0;a<o;a++)e.push(a)}const r=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=r.some((o,a)=>o!==a),this.rawInputBandIds=r,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map(r=>this._isRasterFunctionValue(r)?r.getWebGLProcessorDefinition():typeof r=="number"?{name:"Constant",parameters:{value:r},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:r},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(r=>r!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];this.functionName==="Clip"&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach(r=>{if(this._isRasterFunctionValue(r)){const o=r.getClippingGeometries();t.push(...o)}});else if(this._isRasterFunctionValue(e)){const r=e.getClippingGeometries();t.push(...r)}return t}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:r}=t;if(e.length===0)return s;const o=e.map(n=>n&&typeof n=="object"&&"bind"in n&&n.rasterInfo?n.rasterInfo:typeof n=="string"&&r.includes(n)?s[r.indexOf(n)]:typeof n!="number"?s[0]:void 0),a=o.find(n=>n)??s[0];return o.forEach((n,u)=>{n===void 0&&(o[u]=a)}),o}_getPrimaryRasterId(t){return t==null?void 0:t.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let r=0;r<t.sourceRasters.length;r++){const o=t.sourceRasters[r];if(typeof o!="number")if("bind"in o)this._getPrimaryRasters(o,e,s);else{const a=o,n=this._getPrimaryRasterId(a);if(n==null)continue;s.includes(n)||(this.mainPrimaryRasterId===n?(e.unshift(a),s.unshift(n)):(e.push(a),s.push(n)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(t==null||t==="$$"){const r=s[0];return r==null?null:r.clone()}if(typeof t=="string"){const r=e.primaryRasterIds.indexOf(t);return r===-1?null:s[r]}if(typeof t=="number"){const r=s[0];if(r==null)return null;const{width:o,height:a,pixelType:n}=r,u=new Float32Array(o*a);u.fill(t);const l=this.sourceRasterInfos[0].bandCount,p=new Array(l).fill(u);return new b({width:o,height:a,pixelType:n,pixels:p})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!(t!=null&&t.keyProperties))return;const{bandCount:e,keyProperties:s,statistics:r,histograms:o}=t,a=s.BandProperties;a&&a.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),r&&r.length!==e&&(t.statistics=r.length>e?r.slice(0,e):null),o&&o.length!==e&&(t.histograms=o.length>e?o.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:typeof s.BAND_COUNT=="string"?String(e):e})}};c([h({json:{write:!0}})],O.prototype,"functionName",void 0),c([h({json:{write:!0}})],O.prototype,"functionArguments",void 0),c([h()],O.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}}),os(i=>i==null?void 0:i.toLowerCase())],O.prototype,"outputPixelType",void 0),c([h({json:{write:!0}})],O.prototype,"mainPrimaryRasterId",void 0),c([h()],O.prototype,"sourceRasters",void 0),c([h({type:[Rs],json:{write:!0}})],O.prototype,"sourceRasterInfos",void 0),c([h({json:{write:!0}})],O.prototype,"rasterInfo",void 0),c([h({json:{write:!0}})],O.prototype,"readingBufferSize",void 0),c([h({json:{write:!0}})],O.prototype,"id",void 0),c([h()],O.prototype,"isNoopProcess",void 0),c([h()],O.prototype,"supportsGPU",null),c([h()],O.prototype,"rawInputBandIds",void 0),c([h()],O.prototype,"rawSourceRasterInfos",void 0),c([h()],O.prototype,"isInputBandIdsSwizzled",void 0),c([h()],O.prototype,"swizzledBandSelection",void 0),c([h()],O.prototype,"isBranch",void 0),c([h({readOnly:!0})],O.prototype,"flatWebGLFunctionChain",null),c([h()],O.prototype,"_bindingResult",void 0),O=c([P("esri.layers.support.rasterFunctions.BaseRasterFunction")],O);const G=O,R={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},Ws={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},U={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},X={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},qs={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},ps={setNull:50,conditional:78},Oe={...Ws,...U,...X,...qs,...ps},ms=new Map([[X.acos,{domain:[0,Math.PI],isInteger:!1}],[X.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[X.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[X.cos,{domain:[-1,1],isInteger:!1}],[X.sin,{domain:[-1,1],isInteger:!1}],[U.booleanAnd,{domain:[0,1],isInteger:!0}],[U.booleanNot,{domain:[0,1],isInteger:!0}],[U.booleanOr,{domain:[0,1],isInteger:!0}],[U.booleanXOr,{domain:[0,1],isInteger:!0}],[U.equalTo,{domain:[0,1],isInteger:!0}],[U.notEqual,{domain:[0,1],isInteger:!0}],[U.greaterThan,{domain:[0,1],isInteger:!0}],[U.greaterThanEqual,{domain:[0,1],isInteger:!0}],[U.lessThan,{domain:[0,1],isInteger:!0}],[U.lessThanEqual,{domain:[0,1],isInteger:!0}],[U.isNull,{domain:[0,1],isInteger:!0}]]);function De(i){return ms.get(i)}const Ge=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function Hs(i,t=!1){const e=i.map(n=>n.mask),s=e.filter(n=>n!=null),r=i[0].pixels[0].length;if(s.length===0||t&&s.length!==e.length)return new Uint8Array(r).fill(255);const o=s[0],a=new Uint8Array(o);if(s.length===1)return a;if(!t){for(let n=1;n<s.length;n++){const u=s[n];for(let l=0;l<a.length;l++)a[l]&&(a[l]=u[l]?255:0)}return a}for(let n=1;n<s.length;n++){const u=s[n];for(let l=0;l<a.length;l++)a[l]===0&&(a[l]=u[l]?255:0)}return a}function Xs(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]+r[n]);return a}function Ks(i,t,e){const[s]=i,r=s.length,o=b.createEmptyBand("f32",r);return o.set(s),o}function Js(i,t,e){const[s]=i,r=s.length,o=b.createEmptyBand(e,r);for(let a=0;a<r;a++)t&&!t[a]||(o[a]=s[a]*s[a]);return o}function Ys(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]-r[n]);return a}function Zs(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]*r[n]);return a}function Qs(i,t,e){const[s]=i,r=s.length,o=b.createEmptyBand(e,r);for(let a=0;a<r;a++)t&&!t[a]||(o[a]=Math.sign(s[a])*Math.floor(Math.abs(s[a])));return o}function hs(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]/r[n]);return a}function tn(i,t,e){return hs(i,t,"f32")}function en(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=Math.floor(s[n]/r[n]));return a}function sn(i,t,e,s){const r=i[0],o=r.length,a=b.createEmptyBand(e,o);if(s===X.atanh){for(let u=0;u<o;u++)if(t[u]){const l=r[u];Math.abs(l)>=1?t[u]=0:a[u]=Math.atanh(l)}return a}const n=s===X.asin?Math.asin:Math.acos;for(let u=0;u<o;u++)if(t[u]){const l=r[u];Math.abs(l)>1?t[u]=0:a[u]=n(l)}return a}function nn(i,t,e,s){const[r]=i,o=r.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s(r[n]));return a}function rn(i,t,e,s){const[r,o]=i,a=r.length,n=b.createEmptyBand(e,a);for(let u=0;u<a;u++)t&&!t[u]||(n[u]=s(r[u],o[u]));return n}function on(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]&r[n]);return a}function an(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]<<r[n]);return a}function un(i,t,e){const[s]=i,r=s.length,o=b.createEmptyBand(e,r);for(let a=0;a<r;a++)t&&!t[a]||(o[a]=~s[a]);return o}function ln(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]|r[n]);return a}function cn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]>>r[n]);return a}function pn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]^r[n]);return a}function mn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]&&r[n]?1:0);return a}function hn(i,t,e){const[s]=i,r=s.length,o=b.createEmptyBand(e,r);for(let a=0;a<r;a++)t&&!t[a]||(o[a]=s[a]?0:1);return o}function fn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]||r[n]?1:0);return a}function dn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=(s[n]?1:0)^(r[n]?1:0));return a}function gn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]===r[n]?1:0);return a}function Ce(i,t,e,s){const[r]=i,o=r.length,a=b.createEmptyBand(e,o),n=s===Math.E;for(let u=0;u<o;u++)t&&!t[u]||(a[u]=n?Math.exp(r[u]):s**r[u]);return a}function yn(i,t,e){return Ce(i,t,e,10)}function xn(i,t,e){return Ce(i,t,e,2)}function wn(i,t,e){return Ce(i,t,e,Math.E)}function Re(i,t,e,s){const[r]=i,o=r.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(r[n]<=0?t[n]=0:a[n]=s(r[n]));return a}function bn(i,t,e){return Re(i,t,e,Math.log10)}function vn(i,t,e){return Re(i,t,e,Math.log2)}function An(i,t,e){return Re(i,t,e,Math.log)}function Tn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]>r[n]?1:0);return a}function Pn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]>=r[n]?1:0);return a}function Fn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]<r[n]?1:0);return a}function Nn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]<=r[n]?1:0);return a}function $n(i,t,e){const[s]=i,r=s.length,o=b.createEmptyBand(e,r);if(!t)return o;for(let a=0;a<r;a++)o[a]=t[a]?0:1;return o}function In(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]%r[n]);return a}function Cn(i,t,e){const[s]=i,r=s.length,o=b.createEmptyBand(e,r);for(let a=0;a<r;a++)t&&!t[a]||(o[a]=-s[a]);return o}function Rn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(a[n]=s[n]===r[n]?0:1);return a}function kn(i,t,e){const[s,r]=i,o=s.length,a=b.createEmptyBand(e,o),n=new Uint8Array(o);for(let u=0;u<o;u++)t!=null&&!t[u]||s[u]!==0||(a[u]=r[u],n[u]=255);return{band:a,mask:n}}function Ee(i,t,e){const[s,r,o]=i,a=s.length,n=b.createEmptyBand(e,a);for(let u=0;u<a;u++)t&&!t[u]||(n[u]=s[u]?r[u]:o[u]);return n}function ze(i,t,e){const s=i.length;if(s<2)return i[0];const[r]=i,o=r.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n]){let u=r[n];for(let l=1;l<s;l++){const p=i[l][n];u<p&&(u=p)}a[n]=u}return a}function Ve(i,t,e){const s=i.length;if(s<2)return i[0];const[r]=i,o=r.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n]){let u=r[n];for(let l=1;l<s;l++){const p=i[l][n];u>p&&(u=p)}a[n]=u}return a}function Ue(i,t,e){const s=i.length;if(s<2)return i[0];const[r]=i,o=r.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n]){let u=r[n],l=u;for(let p=1;p<s;p++){const m=i[p][n];l<m?l=m:u>m&&(u=m)}a[n]=l-u}return a}function Le(i,t,e){const s=i.length;if(s<2)return i[0];const[r]=i,o=r.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n]){let u=0;for(let l=0;l<s;l++)u+=i[l][n];a[n]=u/s}return a}function We(i,t,e){const s=i.length;if(s<2)return i[0];const[r]=i,o=r.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n])for(let u=0;u<s;u++){const l=i[u];a[n]+=l[n]}return a}function qe(i,t,e){const s=i.length;if(s<2)return i[0];const[r]=i,o=r.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n]){const u=new Float32Array(s);let l=0;for(let m=0;m<s;m++){const f=i[m];l+=f[n],u[m]=f[n]}l/=s;let p=0;for(let m=0;m<s;m++)p+=(u[m]-l)**2;a[n]=Math.sqrt(p/s)}return a}function He(i,t,e){const s=i.length;if(s<2)return i[0];const r=Math.floor(s/2),[o]=i,a=o.length,n=b.createEmptyBand(e,a),u=new Float32Array(s),l=s%2==1;for(let p=0;p<a;p++)if(!t||t[p]){for(let m=0;m<s;m++)u[m]=i[m][p];u.sort(),n[p]=l?u[r]:(u[r]+u[r-1])/2}return n}function fs(i,t,e){const[s,r]=i;if(r==null)return s;const o=s.length,a=b.createEmptyBand(e,o);for(let n=0;n<o;n++)t[n]&&(s[n]===r[n]?a[n]=s[n]:t[n]=0);return a}function Xe(i,t,e){const s=i.length;if(s<=2)return fs(i,t,e);const r=i[0].length,o=b.createEmptyBand(e,r),a=new Map;for(let n=0;n<r;n++)if(!t||t[n]){let u;a.clear();for(let m=0;m<s;m++)u=i[m][n],a.set(u,a.has(u)?a.get(u)+1:1);let l=0,p=0;for(const m of a.keys())l=a.get(m),l>p&&(p=l,u=m);o[n]=u}return o}function Ke(i,t,e){const s=i.length;if(s<=2)return fs(i,t,e);const r=i[0].length,o=b.createEmptyBand(e,r),a=new Map;for(let n=0;n<r;n++)if(!t||t[n]){let u;a.clear();for(let m=0;m<s;m++)u=i[m][n],a.set(u,a.has(u)?a.get(u)+1:1);let l=0,p=i.length;for(const m of a.keys())l=a.get(m),l<p&&(p=l,u=m);o[n]=u}return o}function Je(i,t,e){const s=i.length;if(s<2)return i[0];const[r]=i,o=r.length,a=b.createEmptyBand(e,o),n=new Set;for(let u=0;u<o;u++)if(!t||t[u]){let l;n.clear();for(let p=0;p<s;p++)l=i[p][u],n.add(l);a[u]=n.size}return a}const E=new Map,Kt=new Map,$=new Map,S=new Map;function _n(){E.size||(E.set(4,Math.sqrt),E.set(6,Math.acos),E.set(7,Math.asin),E.set(8,Math.atan),E.set(9,Math.atanh),E.set(10,Math.abs),E.set(21,Math.cos),E.set(22,Math.cosh),E.set(48,Math.floor),E.set(49,Math.ceil),E.set(51,Math.sin),E.set(52,Math.sinh),E.set(56,Math.tan),E.set(57,Math.tanh),E.set(59,Math.acosh),E.set(60,Math.asinh),E.set(65,Math.floor),Kt.set(5,Math.pow),Kt.set(61,Math.atan2),$.set(1,Xs),$.set(2,Ys),$.set(3,Zs),$.set(11,on),$.set(12,an),$.set(13,un),$.set(14,ln),$.set(15,cn),$.set(16,pn),$.set(17,mn),$.set(18,hn),$.set(19,fn),$.set(20,dn),$.set(23,hs),$.set(24,gn),$.set(25,wn),$.set(26,yn),$.set(27,xn),$.set(28,Tn),$.set(29,Pn),$.set(30,Qs),$.set(31,$n),$.set(32,Ks),$.set(33,Fn),$.set(34,Nn),$.set(35,An),$.set(36,bn),$.set(37,vn),$.set(44,In),$.set(45,Cn),$.set(46,Rn),$.set(53,Js),$.set(64,tn),$.set(65,en),$.set(76,Ee),$.set(78,Ee),S.set(38,Xe),S.set(39,ze),S.set(40,Le),S.set(41,He),S.set(42,Ve),S.set(43,Ke),S.set(47,Ue),S.set(54,qe),S.set(55,We),S.set(58,Je),S.set(66,Xe),S.set(67,ze),S.set(68,Le),S.set(69,He),S.set(70,Ve),S.set(71,Ke),S.set(72,Ue),S.set(73,qe),S.set(74,We),S.set(75,Je))}function Bn(i,t,e,s){let[r,o]=ot(e);const a=H(e);a&&(r-=1e-5,o+=1e-5);for(let n=0;n<t.length;n++)if(t[n]){const u=i[n];isNaN(u)||u<r||u>o?t[n]=0:s[n]=a?Math.round(u):u}}function ds(i,t,e={}){_n();let s=Hs(i,t>=66&&t<=75);const{outputPixelType:r="f32"}=e,o=!S.has(t)||e.processAsMultiband,a=o?i[0].pixels.length:1,n=[];for(let l=0;l<a;l++){const p=S.has(t)&&!o?i.flatMap(d=>d.pixels):i.map(d=>d.pixels[l]);let m,f=!0;if(t===ps.setNull){const d=kn(p,s,r);m=d.band,s=d.mask,f=!1}else $.has(t)?m=$.get(t)(p,s,"f64"):E.has(t)?m=t===X.asin||t===X.acos||t===X.atanh?sn(p,s,"f64",t):nn(p,s,"f64",E.get(t)):Kt.has(t)?m=rn(p,s,"f64",Kt.get(t)):S.has(t)?m=S.get(t)(p,s,"f64"):(m=p[0],f=!1);if(f&&t!==U.isNull&&!ms.has(t)){const d=b.createEmptyBand(r,m.length);s||(s=new Uint8Array(m.length).fill(255)),Bn(m,s,r,d),m=d}n.push(m)}const u=i[0];return new b({width:u.width,height:u.height,pixelType:r,mask:t===U.isNull?null:s,pixels:n})}function jn(i,t,e){return ds(i,t=[null,1,2,3,23,5,44][t]??1,{outputPixelType:e})}let Ft=class extends G{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return(e==null?void 0:e[0])==null||(e==null?void 0:e[1])==null?null:jn(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[r,o]=ot(s);const a=H(s);return a&&(r-=1e-4,o+=1e-4),{imageCount:2,operationName:e,domainRange:[r,o],isOutputRounded:a}}};c([h({json:{write:!0,name:"rasterFunction"}})],Ft.prototype,"functionName",void 0),c([h({type:Us,json:{write:!0,name:"rasterFunctionArguments"}})],Ft.prototype,"functionArguments",void 0),c([h()],Ft.prototype,"rasterArgumentNames",void 0),Ft=c([P("esri.layers.support.rasterFunctions.ArithmeticFunction")],Ft);const Sn=Ft;var ne;let re=ne=class extends D{clone(){return new ne({raster:this.raster})}};re=ne=c([P("esri.layers.support.rasterFunctions.AspectFunctionArguments")],re);const Mn=re;let at=class extends G{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var s;const t=this.sourceRasterInfos[0];this.isGCS=((s=t.spatialReference)==null?void 0:s.isGeographic)??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var n;const e=(n=t.pixelBlocks)==null?void 0:n[0];if(e==null)return null;const{extent:s,primaryPixelSizes:r}=t,o=r==null?void 0:r[0],a=o??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return ks(e,{resolution:a})}};c([h({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),c([h({type:Mn,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),c([h()],at.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],at.prototype,"isGCS",void 0),at=c([P("esri.layers.support.rasterFunctions.AspectFunction")],at);const On=at,Dn=new Set(["+","-","*","/","(",")"]);function Gn(i,t){(i=i.replaceAll(" ","")).startsWith("-")&&(i="0"+i),i.startsWith("+")&&(i=i.slice(1,i.length));const e=i.split(""),s=[],r=[];let o="";for(let a=0;a<e.length;a++){const n=e[a];Dn.has(n)?(o.length&&r.push(Ye(o,t)),s.push(n),o=""):o=o.concat(n)}return o.length&&r.push(Ye(o,t)),{ops:s,nums:r}}function Ye(i,t){return i.toLowerCase().startsWith("b")?t[parseInt(i.slice(1),10)-1]:parseFloat(i)}function En(i,t,e,s){if(typeof e=="number"&&typeof s=="number")return e+s;let r,o,a;typeof e=="number"?(a=s,r=a.length,o=new Float32Array(r),o.fill(e)):(r=e.length,o=e,s.constructor===Number?(a=new Float32Array(r),a.fill(s)):a=s);const n=new Float32Array(r);switch(t){case"+":for(let u=0;u<r;u++)(i==null||i[u])&&(n[u]=o[u]+a[u]);break;case"-":for(let u=0;u<r;u++)(i==null||i[u])&&(n[u]=o[u]-a[u]);break;case"*":for(let u=0;u<r;u++)(i==null||i[u])&&(n[u]=o[u]*a[u]);break;case"/":for(let u=0;u<r;u++)(i==null||i[u])&&a[u]&&(n[u]=o[u]/a[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return n}function zn(i,t){i.splice(t,1);let e=0,s=0;do{e=0,s=0;for(let r=0;r<i.length;r++)if(i[r]==="(")e=r;else if(i[r]===")"){s=r;break}s===e+1&&i.splice(e,2)}while(s===e+1);return i}function Vn(i){if(i.length===1)return{opIndex:0,numIndex:0};let t=0,e=0;for(let a=0;a<i.length;a++)if(i[a]==="(")t=a;else if(i[a]===")"){e=a;break}const s=e===0?i:i.slice(t+1,e);let r=-1;for(let a=0;a<s.length;a++)if(s[a]==="*"||s[a]==="/"){r=a;break}if(r>-1)e>0&&(r+=t+1);else{for(let a=0;a<s.length;a++)if(s[a]==="+"||s[a]==="-"){r=a;break}e>0&&(r+=t+1)}let o=0;for(let a=0;a<r;a++)i[a]==="("&&o++;return{opIndex:r,numIndex:r-o}}function Un(i,t,e){let s,{ops:r,nums:o}=Gn(e,t);if(r.length===0){const a=o.length===1?o[0]:t[0];if(a instanceof Float32Array)return[a];const n=new Float32Array(t[0].length);return typeof a=="number"?n.fill(a):n.set(a),[n]}for(;r.length>0;){const{numIndex:a,opIndex:n}=Vn(r);if(s=En(i,r[n],o[a],o[a+1]),r.length===1)break;r=zn(r,n),o.splice(a,2,s)}return[s]}const Ln=new it({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Wn(i,t){if(!Ts(i))return i;const{equation:e,method:s}=t,r=t.bandIndexes.map(p=>p-1),{pixels:o,mask:a}=i;let n;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=Ze(a,o[r[0]],o[r[1]]);break;case"ndwi":n=Ze(a,o[r[1]],o[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=Hn(a,o[r[0]],o[r[1]]);break;case"ci-g":case"ci-re":n=Xn(a,o[r[0]],o[r[1]]);break;case"savi":n=Kn(a,o[r[0]],o[r[1]],r[2]+1);break;case"tsavi":n=Jn(a,o[r[0]],o[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":n=Yn(a,o[r[0]],o[r[1]]);break;case"gemi":n=Zn(a,o[r[0]],o[r[1]]);break;case"pvi":n=Qn(a,o[r[0]],o[r[1]],r[2]+1,r[3]+1);break;case"gvitm":n=tr(a,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"sultan":n=er(a,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]]]);break;case"vari":n=sr(a,[o[r[0]],o[r[1]],o[r[2]]]);break;case"mtvi2":n=nr(a,[o[r[0]],o[r[1]],o[r[2]]]);break;case"rtvi-core":n=rr(a,[o[r[0]],o[r[1]],o[r[2]]]);break;case"evi":n=or(a,[o[r[0]],o[r[1]],o[r[2]]]);break;case"wndwi":n=ir(a,[o[r[0]],o[r[1]],o[r[2]]],r[3]?r[3]+1:.5);break;case"bai":n=ar(a,o[r[0]],o[r[1]]);break;case"custom":n=Un(a,o,e);break;default:return i}const u=a!=null?new Uint8Array(a.length):null;a!=null&&u!=null&&u.set(a);const l=new b({width:i.width,height:i.height,pixelType:"f32",pixels:n,mask:u});return l.updateStatistics(),l}function qn(i,t,e,s){const{mask:r,pixels:o,width:a,height:n}=i,u=o[e],l=o[t],p=l.length,m=s?new Uint8Array(p):new Float32Array(p),f=s?100:1,d=s?100.5:0;for(let x=0;x<p;x++)if(r==null||r[x]){const y=u[x],A=l[x],w=y+A;w&&(m[x]=(y-A)/w*f+d)}const g=new b({width:a,height:n,mask:r,pixelType:s?"u8":"f32",pixels:[m]});return g.updateStatistics(),g}function z(i){const t=new Float32Array(9);return t[3*i[0]]=1,t[3*i[1]+1]=1,t[3*i[2]+2]=1,t}function Ze(i,t,e){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(i==null||i[o]){const a=t[o],n=e[o],u=a+n;u&&(r[o]=(a-n)/u)}return[r]}function Hn(i,t,e){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(i==null||i[o]){const a=t[o],n=e[o];n&&(r[o]=a/n)}return[r]}function Xn(i,t,e){const s=t.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(i==null||i[o]){const a=t[o],n=e[o];n&&(r[o]=a/n-1)}return[r]}function Kn(i,t,e,s){const r=e.length,o=new Float32Array(r);for(let a=0;a<r;a++)if(i==null||i[a]){const n=e[a],u=t[a],l=u+n+s;l&&(o[a]=(u-n)/l*(1+s))}return[o]}function Jn(i,t,e,s,r,o){const a=e.length,n=new Float32Array(a),u=-r*s+o*(1+s*s);for(let l=0;l<a;l++)if(i==null||i[l]){const p=e[l],m=t[l],f=r*m+p+u;f&&(n[l]=s*(m-s*p-r)/f)}return[n]}function Yn(i,t,e){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(i==null||i[o]){const a=e[o],n=t[o],u=2*n+1;r[o]=.5*(u-Math.sqrt(u*u-8*(n-a)))}return[r]}function Zn(i,t,e){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(i==null||i[o]){const a=e[o],n=t[o];if(a!==1&&n+a+.5!==0){const u=(2*(n*n-a*a)+1.5*n+.5*a)/(n+a+.5);r[o]=u*(1-.25*u)-(a-.125)/(1-a)}}return[r]}function Qn(i,t,e,s,r){const o=e.length,a=new Float32Array(o),n=1/Math.sqrt(1+s*s);for(let u=0;u<o;u++)if(i==null||i[u]){const l=e[u],p=t[u];a[u]=(p-s*l-r)*n}return[a]}function tr(i,t){const[e,s,r,o,a,n]=t,u=e.length,l=new Float32Array(u);for(let p=0;p<u;p++)(i==null||i[p])&&(l[p]=-.2848*e[p]-.2435*s[p]-.5436*r[p]+.7243*o[p]+.084*a[p]-.18*n[p]);return[l]}function er(i,t){const[e,s,r,o,a]=t,n=e.length,u=new Float32Array(n),l=new Float32Array(n),p=new Float32Array(n);for(let m=0;m<n;m++)(i==null||i[m])&&(u[m]=a[m]?o[m]/a[m]*100:0,l[m]=e[m]?o[m]/e[m]*100:0,p[m]=r[m]?s[m]/r[m]*(o[m]/r[m])*100:0);return[u,l,p]}function sr(i,t){const[e,s,r]=t,o=e.length,a=new Float32Array(o);for(let n=0;n<o;n++)if(i==null||i[n])for(n=0;n<o;n++){const u=e[n],l=s[n],p=l+u-r[n];p&&(a[n]=(l-u)/p)}return[a]}function nr(i,t){const[e,s,r]=t,o=e.length,a=new Float32Array(o);for(let n=0;n<o;n++)if(i==null||i[n])for(n=0;n<o;n++){const u=e[n],l=s[n],p=r[n],m=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(l))-.5);if(m){const f=1.5*(1.2*(u-p)-2.5*(l-p));a[n]=f/m}}return[a]}function rr(i,t){const[e,s,r]=t,o=e.length,a=new Float32Array(o);for(let n=0;n<o;n++)if(i==null||i[n])for(n=0;n<o;n++){const u=e[n],l=s[n],p=r[n];a[n]=100*(u-l)-10*(u-p)}return[a]}function or(i,t){const[e,s,r]=t,o=e.length,a=new Float32Array(o);for(let n=0;n<o;n++)if(i==null||i[n])for(n=0;n<o;n++){const u=e[n],l=s[n],p=u+6*l-7.5*r[n]+1;p&&(a[n]=2.5*(u-l)/p)}return[a]}function ir(i,t,e=.5){const[s,r,o]=t,a=r.length,n=new Float32Array(a);for(let u=0;u<a;u++)if(i==null||i[u])for(u=0;u<a;u++){const l=s[u],p=r[u],m=o[u],f=l+e*p+(1-e)*m;f&&(n[u]=(l-e*p-(1-e)*m)/f)}return[n]}function ar(i,t,e){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(i==null||i[o])for(o=0;o<s;o++){const a=(.1-t[o])**2+(.06-e[o])**2;a&&(r[o]=1/a)}return[r]}var oe;let zt=oe=class extends D{constructor(){super(...arguments),this.method="custom"}clone(){return new oe({method:this.method,bandIndexes:this.bandIndexes,raster:L(this.raster)})}};c([h({json:{type:String,write:!0}})],zt.prototype,"bandIndexes",void 0),c([J(Ln)],zt.prototype,"method",void 0),zt=oe=c([P("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],zt);const ur=zt,lr=new Set(["vari","mtvi2","rtvi-core","evi"]);let Nt=class extends G{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){var a;const e=(a=t.pixelBlocks)==null?void 0:a[0];if(e==null)return e;const{method:s,bandIndexes:r}=this.functionArguments,o=r.split(" ").map(n=>parseFloat(n));return Wn(e,{method:s,bandIndexes:o,equation:r})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(n=>parseFloat(n)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,r;const o=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=z([e[0],e[1],0]),r="ndxi";break;case"ndwi":s=z([e[1],e[0],0]),r="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=z([e[0],e[1],0]),r="sr";break;case"ci-g":case"ci-re":s=z([e[0],e[1],0]),r="ci";break;case"savi":s=z([e[0],e[1],0]),r="savi",o[0]=t[2]+1;break;case"tsavi":s=z([e[0],e[1],0]),r="tsavi",o[0]=t[2]+1,o[1]=t[3]+1,o[2]=t[4]+1;break;case"msavi":s=z([e[0],e[1],0]),r="msavi";break;case"gemi":s=z([e[0],e[1],0]),r="gemi";break;case"pvi":s=z([e[0],e[1],0]),r="tsavi",o[0]=t[2]+1,o[1]=t[3]+1;break;case"vari":s=z([e[0],e[1],e[2]]),r="vari";break;case"mtvi2":s=z([e[0],e[1],e[2]]),r="mtvi";break;case"rtvi-core":s=z([e[0],e[1],e[2]]),r="rtvicore";break;case"evi":s=z([e[0],e[1],e[2]]),r="evi";break;case"wndwi":s=z([e[0],e[1],0]),r="wndwi",o[0]=t[3]?t[3]+1:.5;break;case"bai":s=z([e[1],e[0],0]),r="bai";break;default:s=z([0,1,2]),r="custom"}return{bandIndexMat3:s,indexType:r,adjustments:o}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(n=>parseFloat(n)-1),s=t.length,r=e.map(n=>n>=s?s-1:n),o=lr.has(this.functionArguments.method)?3:2,a=r.slice(0,o).map(n=>t[n]);return a.length===2&&a.push(0),a}};c([h({json:{write:!0,name:"rasterFunction"}})],Nt.prototype,"functionName",void 0),c([h({type:ur,json:{write:!0,name:"rasterFunctionArguments"}})],Nt.prototype,"functionArguments",void 0),c([h()],Nt.prototype,"rasterArgumentNames",void 0),Nt=c([P("esri.layers.support.rasterFunctions.BandArithmeticFunction")],Nt);const cr=Nt;var ie;const Qe=new it({1:"outside",2:"inside"},{useNumericKeys:!0});let Vt=ie=class extends D{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ie({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};c([h({types:vs,json:{read:Es,write:!0}})],Vt.prototype,"clippingGeometry",void 0),c([h({json:{read:Qe.read,write:Qe.write}})],Vt.prototype,"clippingType",void 0),Vt=ie=c([P("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Vt);const pr=Vt;let ut=class extends G{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};c([h({json:{write:!0,name:"rasterFunction"}})],ut.prototype,"functionName",void 0),c([h({type:pr,json:{write:!0,name:"rasterFunctionArguments"}})],ut.prototype,"functionArguments",void 0),c([h()],ut.prototype,"rasterArgumentNames",void 0),c([h()],ut.prototype,"isNoopProcess",void 0),ut=c([P("esri.layers.support.rasterFunctions.ClipFunction")],ut);const mr=ut;var ae;let K=ae=class extends D{castColormapName(i){if(!i)return null;const t=i.toLowerCase();return _s.includes(t)?t:null}readColorRamp(i){return ls(i)}readColorRampName(i,t){if(!i)return null;const e=Wt.jsonValues.find(s=>s.toLowerCase()===i.toLowerCase());return e?Wt.fromJSON(e):null}clone(){var i;return new ae({colormap:L(this.colormap),colormapName:this.colormapName,colorRamp:(i=this.colorRamp)==null?void 0:i.clone(),colorRampName:this.colorRampName})}};c([h({type:[[Number]],json:{write:!0}})],K.prototype,"colormap",void 0),c([h({type:String,json:{write:!0}})],K.prototype,"colormapName",void 0),c([os("colormapName")],K.prototype,"castColormapName",null),c([h({types:zs,json:{write:!0}})],K.prototype,"colorRamp",void 0),c([Mt("colorRamp")],K.prototype,"readColorRamp",null),c([h({type:Wt.apiValues,json:{type:Wt.jsonValues,write:Wt.write}})],K.prototype,"colorRampName",void 0),c([Mt("colorRampName")],K.prototype,"readColorRampName",null),K=ae=c([P("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],K);const hr=K,fr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],dr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function ke(i,t){const e=[],s=[];for(let o=0;o<i.length-1;o++)e.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:i[o].slice(1),toColor:i[o+1].slice(1)}),s.push(i[o+1][0]-i[o][0]);const r=i[i.length-1][0];return us({type:"multipart",colorRamps:e},{numColors:r,weights:t=t??s})}function gr(){return ke([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function yr(){const i=ke([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let t=i.length;t<256;t++)i.push([6,27,7]);return i}function xr(){return us({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function wr(){const i=[];for(let t=0;t<256;t++){const e=[];for(let s=0;s<3;s++)e.push(Math.round(255*Math.random()));i.push(e)}return i}function br(){return ke([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function vr(i){let t;switch(i){case"elevation":t=gr();break;case"gray":t=xr();break;case"hillshade":t=br();break;case"ndvi":t=fr;break;case"ndvi2":t=yr();break;case"ndvi3":t=dr;break;case"random":t=wr()}return t?(t=t.map((e,s)=>[s,...e]),t):null}let Y=class extends G{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:r,colorRampName:o}=this.functionArguments;if(!(e!=null&&e.length))if(r)this.colorRamp=r,e=Se(r,{interpolateAlpha:!0});else if(o){const u=Bs(o);u&&(e=Se(u),this.colorRamp=ls(u))}else s&&(e=vr(s));if(!(e!=null&&e.length))return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const a=this._getOutputPixelType(t.pixelType);this.outputPixelType=a.startsWith("f")?"s32":a;const n=t.clone();return n.pixelType=this.outputPixelType,n.colormap=e,n.bandCount=1,this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){var s;let e=(s=t.pixelBlocks)==null?void 0:s[0];return!e||H(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};c([h({json:{write:!0,name:"rasterFunction"}})],Y.prototype,"functionName",void 0),c([h({type:hr,json:{write:!0,name:"rasterFunctionArguments"}})],Y.prototype,"functionArguments",void 0),c([h()],Y.prototype,"rasterArgumentNames",void 0),c([h()],Y.prototype,"isNoopProcess",void 0),c([h({json:{write:!0}})],Y.prototype,"indexedColormap",void 0),c([h()],Y.prototype,"colorRamp",void 0),Y=c([P("esri.layers.support.rasterFunctions.ColormapFunction")],Y);const Ar=Y;var ue;let Ut=ue=class extends D{constructor(){super(...arguments),this.rasters=[]}writeRasters(i,t){t.rasters=i.map(e=>typeof e=="number"||typeof e=="string"?e:e.toJSON())}clone(){return new ue({rasters:L(this.rasters)})}};c([h({json:{write:!0}})],Ut.prototype,"rasters",void 0),c([Ot("rasters")],Ut.prototype,"writeRasters",null),Ut=ue=c([P("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Ut);const Tr=Ut;let $t=class extends G{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map(({bandCount:o})=>o).reduce((o,a)=>o+a),t.every(({statistics:o})=>o!=null&&o.length)){const o=[];t.forEach(({statistics:a})=>a!=null&&o.push(...a)),s.statistics=o}if(t.every(({histograms:o})=>o!=null&&o.length)){const o=[];t.forEach(({histograms:a})=>a!=null&&o.push(...a)),s.histograms=o}s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const r=t.every(o=>{var a;return(a=o.keyProperties.BandProperties)==null?void 0:a.length})?t.flatMap(o=>o.keyProperties.BandProperties):void 0;return s.keyProperties={...s.keyProperties,BandProperties:r},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?(e==null?void 0:e[0])==null?null:Ps(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};c([h({json:{write:!0,name:"rasterFunction"}})],$t.prototype,"functionName",void 0),c([h({type:Tr,json:{write:!0,name:"rasterFunctionArguments"}})],$t.prototype,"functionArguments",void 0),c([h()],$t.prototype,"rasterArgumentNames",void 0),$t=c([P("esri.layers.support.rasterFunctions.CompositeBandFunction")],$t);const Pr=$t,Fr=new it({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Nr=new it({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function $r(i,t,e,s){const[r,o]=i,a=H(e)&&!H(r.pixelType)&&!H(o.pixelType),n=[r.mask,o.mask].filter(g=>g),u=b.combineBandMasks(n),l=i.map(g=>g.pixels[0]),{width:p,height:m}=r,f=b.createEmptyBand(e,p*m);switch(t){case"difference":case"relative-difference":Ir({bands:l,mask:u,outBand:f,isRoundingNeeded:a,isRelative:t==="relative-difference"});break;case"categorical":Cr({bands:l,mask:u,outBand:f,...s});break;case"euclidean-distance":Rr({pixels:i.map(g=>g.pixels),mask:u,outBand:f});break;case"angle-difference":kr({pixels:i.map(g=>g.pixels),mask:u,outBand:f});break;case"band-with-most-change":_r({pixels:i.map(g=>g.pixels),mask:u,outBand:f})}const d=new b({width:p,height:m,pixels:[f],pixelType:e,mask:u});return d.updateStatistics(),d}function Ir(i){const{bands:[t,e],mask:s,isRelative:r,isRoundingNeeded:o,outBand:a}=i,n=t.length;for(let u=0;u<n;u++)if(!s||s[u]){let l=t[u]-e[u];if(r){const p=Math.max(Math.abs(t[u])-Math.abs(e[u]));l=p>0?l/p:0}a[u]=o?Math.round(l):l}}function Cr(i){const{bands:[t,e],categoryIndexLookups:[s,r],classNames:[o,a],mask:n,keepMethod:u,outBand:l}=i,p=t.length,m=o.length,f=a.length,d=m*f,g=d+1,x=d+2;for(let y=0;y<p;y++)if(!n||n[y]){const A=t[y],w=e[y],I=s[A],v=r[w],N=o[I],T=a[v];l[y]=I==null||v==null?d:u==="changed"&&N===T?g:u==="unchanged"&&N!==T?x:I*f+v}}function Rr(i){const{pixels:[t,e],mask:s,outBand:r}=i,o=t[0].length,a=t.length;for(let n=0;n<o;n++)if(!s||s[n]){let u=0;for(let l=0;l<a;l++){const p=t[l][n]-e[l][n];u+=p*p}r[n]=Math.sqrt(u)}}function kr(i){const{pixels:[t,e],mask:s,outBand:r}=i,o=t[0].length,a=t.length;for(let n=0;n<o;n++)if(!s||s[n]){let u=0,l=0,p=0;for(let f=0;f<a;f++){const d=t[f][n],g=e[f][n];u+=d*g,l+=d*d,p+=g*g}const m=Math.sqrt(l*p);r[n]=m?Math.acos(u/m):1.5707963267948966}}function _r(i){const{pixels:[t,e],mask:s,outBand:r}=i,o=t[0].length,a=t.length;for(let n=0;n<o;n++)if(!s||s[n]){let u=0,l=0;for(let p=0;p<a;p++){const m=Math.abs(t[p][n]-e[p][n]);m>u&&(u=m,l=p)}r[n]=l}}var le;let lt=le=class extends D{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new le({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};c([J(Fr)],lt.prototype,"method",void 0),c([J(Nr)],lt.prototype,"keepMethod",void 0),c([h({json:{write:!0}})],lt.prototype,"raster2",void 0),c([h({readOnly:!0})],lt.prototype,"rasters",null),lt=le=c([P("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],lt);const Br=lt;let ct=class extends G{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),t==="categorical"){const s=this.sourceRasterInfos.map(a=>a.attributeTable),r=this._getFieldNames(s,"value"),o=s.map(a=>this._getClassFieldName(a));if(r[0]==null||r[1]==null||o[0]==null||o[1]==null)return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,r,o)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:t==="difference"||t==="relative-difference"}}_processPixels(t){const{pixelBlocks:e}=t;if((e==null?void 0:e[0])==null||(e==null?void 0:e[1])==null)return null;const{method:s}=this.functionArguments;return $r(e,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,s]=ot(t);const r=H(t);return r&&(e-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[e,s],isOutputRounded:r}}_updateAttributeTable(t,e,s){const r=this.sourceRasterInfos.map(v=>v.attributeTable),o=r.map((v,N)=>v.features.map(T=>T.attributes[e[N]])),a=r.map((v,N)=>v.features.map(T=>T.attributes[s[N]])),n=o.map(v=>{const N=[];return v.forEach((T,F)=>N[T]=F),N}),{keepMethod:u}=this.functionArguments;this._categoryConfig={categoryIndexLookups:n,classNames:a,keepMethod:u};const l=r[0].clone();l.fields=[new tt({name:"OID",type:"oid"}),new tt({name:"Value",type:"integer"}),new tt({name:"ClassName",type:"string"}),new tt({name:"Class_From",type:"string"}),new tt({name:"Class_To",type:"string"})];const p=this._getFieldNames(r,"red"),m=this._getFieldNames(r,"green"),f=this._getFieldNames(r,"blue"),d=[],g=p.length===2&&m.length===2&&f.length===2;g&&(d.push(...r.map((v,N)=>v.features.map(T=>[T.attributes[p[N]],T.attributes[m[N]],T.attributes[f[N]]]))),l.fields.push(new tt({name:"Red",type:"integer"}),new tt({name:"Green",type:"integer"}),new tt({name:"Blue",type:"integer"})));const x=l.features[0].clone();x.geometry=null;const y=[],[A,w]=o.map(v=>v.length);let I=1;for(let v=0;v<A;v++){const N=a[0][v];for(let T=0;T<w;T++){const F=a[1][T];if(u==="changed"&&N===F||u==="unchanged"&&N!==F)continue;const C=x.clone();C.attributes={OID:I++,Value:v*w+T,ClassName:N===F?N:`${N} -> ${F}`,Class_From:N,Class_To:F},g&&(C.attributes.Red=d[0][v][0]+d[1][T][0]>>1,C.attributes.Green=d[0][v][1]+d[1][T][1]>>1,C.attributes.Blue=d[0][v][2]+d[1][T][2]>>1),y.push(C)}}if(u==="changed"){const v=x.clone();v.attributes={OID:I++,Value:A*w+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},y.push(v)}else if(u==="unchanged"){const v=x.clone();v.attributes={OID:I++,Value:A*w+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},y.push(v)}l.features=y,t.attributeTable=l}_getFieldNames(t,e){return t.map(({fields:s})=>{var r;return(r=s.find(o=>o.name.toLowerCase()===e))==null?void 0:r.name}).filter(s=>s)}_getClassFieldName(t){const e=t.fields.find(s=>s.type==="string"&&s.name.toLowerCase().startsWith("class"))??t.fields.find(s=>s.type==="string"&&s.name.toLowerCase().includes("class")||s.name.toLowerCase().includes("type")||s.name.toLowerCase().includes("name"))??t.fields.find(s=>s.type==="string");return e==null?void 0:e.name}};c([h({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0),c([h({type:Br,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0),c([h()],ct.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],ct.prototype,"_categoryConfig",void 0),ct=c([P("esri.layers.support.rasterFunctions.ComputeChangeFunction")],ct);const jr=ct;var ce;let Lt=ce=class extends D{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new ce({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};c([h({json:{write:!0}})],Lt.prototype,"contrastOffset",void 0),c([h({json:{write:!0}})],Lt.prototype,"brightnessOffset",void 0),Lt=ce=c([P("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Lt);const Sr=Lt;let pt=class extends G{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if(e.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:r,brightnessOffset:o}=this.functionArguments;return this.lookup=js(r,o),{success:!0,supportsGPU:!0}}_processPixels(t){var s;const e=(s=t.pixelBlocks)==null?void 0:s[0];return e==null?null:Ie(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};c([h({json:{write:!0,name:"rasterFunction"}})],pt.prototype,"functionName",void 0),c([h({type:Sr,json:{write:!0,name:"rasterFunctionArguments"}})],pt.prototype,"functionArguments",void 0),c([h()],pt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],pt.prototype,"lookup",void 0),pt=c([P("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],pt);const Mr=pt;function _e(i,t,e,s,r){const o=Math.floor(s/2);for(let n=0;n<o;n++)for(let u=0;u<t;u++)i[n*t+u]=i[(r-1-n)*t+u],i[(e-1-n)*t+u]=i[(e-r+n)*t+u];const a=Math.floor(r/2);for(let n=0;n<e;n++){const u=n*t;for(let l=0;l<a;l++)i[u+l]=i[u+r-1-l],i[u+t-l-1]=i[u+t+l-r]}}const j=new Map;function Or(i){const t=Math.sqrt(i.length),e=i.slice(0,t),s=[1];for(let r=1;r<t;r++){let o=null;for(let a=0;a<t;a++){const n=i[a+r*t],u=i[a];if(o==null)if(u===0){if(n)return{separable:!1,row:null,col:null}}else o=n/u;else if(n/u!==o)return{separable:!1,row:null,col:null}}if(o==null)return{separable:!1,row:null,col:null};s.push(o)}return{separable:!0,row:e,col:s}}function ts(i,t,e,s,r,o,a){const n=new Float32Array(t*e),u=o.length,l=a?0:s,p=a?s:0,m=a?1:t;for(let f=l;f<e-l;f++){const d=f*t;for(let g=p;g<t-p;g++){if(r&&!r[d+g])continue;let x=0;for(let y=0;y<u;y++)x+=i[d+g+(y-s)*m]*o[y];n[d+g]=x}}return n}function Dr(i,t,e,s,r,o,a){const n=new Float32Array(t*e),u=Math.floor(s/2),l=Math.floor(r/2);for(let p=u;p<e-u;p++){const m=p*t;for(let f=l;f<t-l;f++){if(o&&!o[m+f])continue;let d=0;for(let g=0;g<s;g++)for(let x=0;x<r;x++)d+=i[m+f+(g-u)*t+x-l]*a[g*r+x];n[m+f]=d}}return n}function Gr(i,t,e=!0){const{pixels:s,width:r,height:o,pixelType:a,mask:n}=i,u=s.length,l=[],{kernel:p,rows:m,cols:f}=t;for(let d=0;d<u;d++){const g=Dr(s[d],r,o,m,f,n,p);e&&_e(g,r,o,m,f),l.push(g)}return new b({width:r,height:o,pixelType:a,pixels:l,mask:n})}function Er(i,t,e,s=!0){const{pixels:r,width:o,height:a,pixelType:n,mask:u}=i,l=r.length,p=[],m=t.length,f=e.length,d=Math.floor(m/2),g=Math.floor(f/2);for(let x=0;x<l;x++){let y=ts(r[x],o,a,d,u,t,!0);y=ts(y,o,a,g,u,e,!1),s&&_e(y,o,a,m,f),p.push(y)}return new b({width:o,height:a,pixelType:n,pixels:p,mask:u})}function zr(i,t){const e=Or(t.kernel),s=t.mirrorEdges!==!1,r=e.separable?Er(i,e.row,e.col,s):Gr(i,t,s),{outputPixelType:o}=t;return o&&r.clamp(o),r}j.set(R.none,[0,0,0,0,1,0,0,0,0]),j.set(R.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),j.set(R.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),j.set(R.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),j.set(R.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),j.set(R.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),j.set(R.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),j.set(R.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),j.set(R.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),j.set(R.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),j.set(R.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),j.set(R.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),j.set(R.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),j.set(R.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),j.set(R.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),j.set(R.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),j.set(R.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),j.set(R.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),j.set(R.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),j.set(R.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),j.set(R.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),j.set(R.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),j.set(R.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var pe;let mt=pe=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(i){this._set("convolutionType",i);const t=j.get(i);if(!t||i===R.userDefined||i===R.none)return;const e=Math.sqrt(t.length);this._set("kernel",t),this._set("cols",e),this._set("rows",e)}clone(){return new pe({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:L(this.raster)})}};c([h({json:{type:Number,write:!0}})],mt.prototype,"rows",void 0),c([h({json:{type:Number,write:!0}})],mt.prototype,"cols",void 0),c([h({json:{name:"type",type:Number,write:!0}})],mt.prototype,"convolutionType",null),c([h({json:{type:[Number],write:!0}})],mt.prototype,"kernel",void 0),mt=pe=c([P("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],mt);const Vr=mt,es=25;let ht=class extends G{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce((r,o)=>r+o);return e===-1||s===0||s===1?t:t.map(r=>r/s)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:r}=this.functionArguments;if(!Object.values(R).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==R.none&&e*s!==r.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const o=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(o.pixelType);const a=o.clone();a.pixelType=this.outputPixelType;const n=[R.none,R.sharpen,R.sharpen2,R.sharpening3x3,R.sharpening5x5];return(t===-1||this.outputPixelType!=="u8"&&!n.includes(t))&&(a.statistics=null,a.histograms=null),a.colormap=null,a.attributeTable=null,this.rasterInfo=a,{success:!0,supportsGPU:r.length<=es}}_processPixels(t){var a;const e=(a=t.pixelBlocks)==null?void 0:a[0];if(e==null||this.functionArguments.convolutionType===R.none)return e;const{rows:s,cols:r}=this.functionArguments,{_normalizedKernel:o}=this;return zr(e,{kernel:o,rows:s,cols:r,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(es);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:ot(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],ht.prototype,"functionName",void 0),c([h({type:Vr,json:{write:!0,name:"rasterFunctionArguments"}})],ht.prototype,"functionArguments",void 0),c([h()],ht.prototype,"rasterArgumentNames",void 0),c([h()],ht.prototype,"_normalizedKernel",null),ht=c([P("esri.layers.support.rasterFunctions.ConvolutionFunction")],ht);const Ur=ht;var me;const gs=new it({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let It=me=class extends D{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(i,t){return gs.fromJSON(t.type??t.curvatureType??0)}clone(){return new me({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};c([h({json:{write:{target:"type"}}}),J(gs)],It.prototype,"curvatureType",void 0),c([Mt("curvatureType",["type","curvatureType"])],It.prototype,"readCurvatureType",null),c([h({type:Number,json:{write:!0}})],It.prototype,"zFactor",void 0),It=me=c([P("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],It);const Lr=It;let ft=class extends G{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var p;const e=(p=t.pixelBlocks)==null?void 0:p[0];if(e==null)return null;const{zFactor:s,curvatureType:r}=this.functionArguments,{extent:o,primaryPixelSizes:a}=t,n=a==null?void 0:a[0],u=n??(o?{x:o.width/e.width,y:o.height/e.height}:{x:1,y:1}),l=this.isGCS&&s>=1?s*Zt:s;return Ss(e,{zFactor:l,curvatureType:r,resolution:u})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Zt:t}}};c([h({json:{write:!0,name:"rasterFunction"}})],ft.prototype,"functionName",void 0),c([h({type:Lr,json:{write:!0,name:"rasterFunctionArguments"}})],ft.prototype,"functionArguments",void 0),c([h()],ft.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],ft.prototype,"isGCS",void 0),ft=c([P("esri.layers.support.rasterFunctions.CurvatureFunction")],ft);const Wr=ft;var he;let Z=he=class extends D{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=is.bestMatch}clone(){var i,t,e;return new he({bandIds:(i=this.bandIds)==null?void 0:i.slice(),bandNames:(t=this.bandNames)==null?void 0:t.slice(),bandWavelengths:(e=this.bandWavelengths)==null?void 0:e.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};c([h({json:{write:!0}})],Z.prototype,"bandIds",void 0),c([h({json:{write:!0}})],Z.prototype,"bandNames",void 0),c([h({json:{write:!0}})],Z.prototype,"bandWavelengths",void 0),c([J({0:"name",1:"wavelength",2:"id"})],Z.prototype,"method",void 0),c([h({json:{write:!0}})],Z.prototype,"missingBandAction",void 0),c([h({json:{write:!0}})],Z.prototype,"wavelengthMatchTolerance",void 0),Z=he=c([P("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Z);const qr=Z;let Ct=class extends G{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){var A;const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:r,bandNames:o,bandWavelengths:a,bandIds:n,missingBandAction:u}=t,l=(o==null?void 0:o.length)&&(r==="name"||r!=="id"&&!(n!=null&&n.length)),p=(a==null?void 0:a.length)&&(r==="wavelength"||r!=="id"&&!(n!=null&&n.length)),m=u===is.fail,f=l?Xr(s,o):p?Jr(s,a,this.functionArguments,m):Kr(s,n,m);if(f==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${l?"band names":p?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=f,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const d=s.clone();d.pixelType=this.outputPixelType,d.bandCount=f.length;const{statistics:g,histograms:x}=d;g!=null&&g.length&&(d.statistics=f.map(w=>g[w]||g[g.length-1])),x!=null&&x.length&&(d.histograms=f.map(w=>x[w]||x[x.length-1]));let y=(A=d.keyProperties)==null?void 0:A.BandProperties;return y!=null&&y.length&&(y=f.map(w=>w>=y.length?y[y.length-1]:y[w]),d.keyProperties={...d.keyProperties,BandProperties:y}),this.rasterInfo=d,{success:!0,supportsGPU:d.bandCount<=3}}_processPixels(t){var o;const e=(o=t.pixelBlocks)==null?void 0:o[0];if(e==null)return null;const s=e.pixels.length,r=this.functionArguments.bandIds.map(a=>a>=s?s-1:a);return e.extractBands(r)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:z(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(s=>s>=e?e-1:s).map(s=>t[s])}};c([h({json:{write:!0,name:"rasterFunction"}})],Ct.prototype,"functionName",void 0),c([h({type:qr,json:{write:!0,name:"rasterFunctionArguments"}})],Ct.prototype,"functionArguments",void 0),c([h()],Ct.prototype,"rasterArgumentNames",void 0),Ct=c([P("esri.layers.support.rasterFunctions.ExtractBandFunction")],Ct);const Hr=Ct;function Xr(i,t){const e=i.bandInfos.map(({name:r})=>r.toLowerCase()),s=[];for(let r=0;r<t.length;r++){const o=t[r].toLowerCase();let a=e.indexOf(o);if(a===-1&&o==="nearinfrared"&&(a=e.findIndex(n=>n.startsWith("nearinfrared_1")),a===-1&&(a=e.findIndex(n=>n.startsWith("nearinfrared")))),a===-1)return null;s.push(a)}return s}function Kr(i,t,e){const{bandCount:s}=i;return!(t!=null&&t.length)||e&&t.some(r=>r<0||r>=s)?null:t}function Jr(i,t,{wavelengthMatchTolerance:e},s){const{bandInfos:r}=i,o=[];for(let n=0;n<r.length;n++){const{minWavelength:u,maxWavelength:l}=r[n];if(!u||!l)return null;o.push({minWavelength:u,maxWavelength:l})}const a=[];for(let n=0;n<t.length;n++){const u=t[n];let l=!1,p=-1,m=Number.MAX_VALUE;for(let f=0;f<o.length;f++){const d=o[f],g=u>=d.minWavelength&&u<=d.maxWavelength,x=Math.abs(u-(d.minWavelength+d.maxWavelength)/2);g?x<m&&(l=!0,p=f,m=x):!l&&x<m&&(p=f,m=x)}if(!l&&e&&m<e&&(l=!0),!l&&s)return null;a.push(p)}return a}function Yr(i,t,e){const{pixels:s,width:r,height:o,mask:a,bandMasks:n}=i,u=r*o,l=n!=null&&n.length?b.combineBandMasks(n):a,p=Math.min(t.length,s.length),m=e.startsWith("f"),f=!m&&e!==i.pixelType,[d,g]=ot(e),x=b.createEmptyBand(e,u);for(let A=0;A<o;A++){let w=A*r;for(let I=0;I<r;I++,w++)if(!l||l[w]){let v=0;for(let N=0;N<p;N++)v+=t[N]*s[N][w];m||(v=Math.round(v),f&&(v=v>g?g:v<d?d:v)),x[w]=v}}const y=new b({width:r,height:o,pixels:[x],pixelType:e,mask:l});return y.updateStatistics(),y}var fe;let Ht=fe=class extends D{clone(){return new fe({conversionParameters:[...this.conversionParameters],raster:this.raster})}};c([h({type:[Number],json:{write:!0}})],Ht.prototype,"conversionParameters",void 0),Ht=fe=c([P("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Ht);const Zr=Ht;let dt=class extends G{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((s,r)=>s+r);return t.map(s=>s/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!(t!=null&&t.length))return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=t.length===3||e.bandCount===3&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){var s;const e=(s=t.pixelBlocks)==null?void 0:s[0];return e==null?null:Yr(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};c([h({json:{write:!0,name:"rasterFunction"}})],dt.prototype,"functionName",void 0),c([h({type:Zr,json:{write:!0,name:"rasterFunctionArguments"}})],dt.prototype,"functionArguments",void 0),c([h()],dt.prototype,"rasterArgumentNames",void 0),c([h()],dt.prototype,"_normalizedWeights",null),dt=c([P("esri.layers.support.rasterFunctions.GrayscaleFunction")],dt);const Qr=dt;var de;let gt=de=class extends D{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(i,t){t.rasters=i.map(e=>typeof e=="number"||typeof e=="string"?e:e.toJSON())}clone(){return new de({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:L(this.rasters)})}};c([h({json:{write:!0}})],gt.prototype,"operation",void 0),c([h({json:{write:!0}})],gt.prototype,"rasters",void 0),c([Ot("rasters")],gt.prototype,"writeRasters",null),c([h({json:{write:!0}})],gt.prototype,"processAsMultiband",void 0),gt=de=c([P("esri.layers.support.rasterFunctions.LocalFunctionArguments")],gt);const to=gt;let Rt=class extends G{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:r}=this.functionArguments;if(t.some(l=>l.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:o,rasters:a}=this.functionArguments,n=Ge[o];if(!(n===999||a.length===n||a.length<=1&&n===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${n}`};const u=e.clone();return u.bandCount=n!==999||r?s:1,this._removeStatsHistColormapVAT(u),this._updateStatistics(u),this._updatePixelType(u),this.rasterInfo=u,{success:!0,supportsGPU:u.bandCount===1&&n<=3&&(o<11||o>16)}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(s=>s==null)?null:ds(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){var u;const{operation:t}=this.functionArguments,e=Ge[t],s=((u=Object.keys(Oe).find(l=>Oe[l]===t))==null?void 0:u.toLowerCase())??"undefined",r=this.outputPixelType??"f32";let[o,a]=ot(r);const n=H(r);return n&&(o-=1e-4,a+=1e-4),{imageCount:e,operationName:s,domainRange:[o,a],isOutputRounded:n}}_updateStatistics(t){var o,a;const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,r=(o=De(s))==null?void 0:o.domain;if(r){t.statistics=[];for(let n=0;n<t.bandCount;n++)t.statistics[n]={min:r[0],max:r[1],avg:(r[0]+r[1])/2,stddev:(r[0]+r[1])/10}}else s===45&&((a=e.statistics)!=null&&a.length)&&(t.statistics=e.statistics.map(n=>({min:-n.max,max:-n.min,avg:n.avg!=null?-n.avg:void 0,stddev:n.stddev!=null?-n.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:r}=this.functionArguments,{domain:o,isInteger:a}=De(r)??{domain:null,isInteger:!1};let n="f32";if(o&&a)n=Jt(o[0],o[1]);else if(r===30){const u=e==null?void 0:e[0];n=u?Jt(u.min,u.max):H(s)?s:"s32"}else if(r===45&&H(s)){const u=e==null?void 0:e.map(({max:f})=>-f),l=e==null?void 0:e.map(({min:f})=>-f),p=u!=null&&u.length?Math.min(...u):null,m=l!=null&&l.length?Math.min(...l):null;n=p!=null&&m!=null?Jt(p,m):s.startsWith("s")?s.replace("s","u"):s==="u1"||s==="u2"||s==="u4"?"s8":s==="u8"?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(n)}};c([h({json:{write:!0,name:"rasterFunction"}})],Rt.prototype,"functionName",void 0),c([h({type:to,json:{write:!0,name:"rasterFunctionArguments"}})],Rt.prototype,"functionArguments",void 0),c([h()],Rt.prototype,"rasterArgumentNames",void 0),Rt=c([P("esri.layers.support.rasterFunctions.LocalFunction")],Rt);const eo=Rt;var ge;let yt=ge=class extends D{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=as.matchAny}get normalizedNoDataValues(){const{noDataValues:i}=this;if(!(i!=null&&i.length))return null;let t=!1;const e=i.map(s=>{if(typeof s=="number")return t=!0,[s];if(typeof s=="string"){const r=s.trim().split(" ").filter(o=>o.trim()!=="").map(o=>Number(o));return t=t||r.length>0,r.length===0?null:r}return null});return t?e:null}clone(){var i,t;return new ge({includedRanges:((i=this.includedRanges)==null?void 0:i.slice())??[],noDataValues:((t=this.noDataValues)==null?void 0:t.slice())??[],noDataInterpretation:this.noDataInterpretation})}};c([h({json:{write:!0}})],yt.prototype,"includedRanges",void 0),c([h({json:{write:!0}})],yt.prototype,"noDataValues",void 0),c([h()],yt.prototype,"normalizedNoDataValues",null),c([h({json:{write:!0}})],yt.prototype,"noDataInterpretation",void 0),yt=ge=c([P("esri.layers.support.rasterFunctions.MaskFunctionArguments")],yt);const so=yt;let xt=class extends G{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:r}=this.functionArguments;if(!(s!=null&&s.length)&&!(r!=null&&r.length))return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let o=[];for(let n=0;n<t.bandCount;n++){const u=Fs(e,s==null?void 0:s.slice(2*n,2*n+2),r==null?void 0:r[n]);if(u==null){o=null;break}o.push(u)}this.lookups=o;const a=r!=null&&r.every(n=>{var u;return(n==null?void 0:n.length)===((u=r[0])==null?void 0:u.length)});return{success:!0,supportsGPU:(!s||s.length<=2*Q)&&(!r||a&&r[0].length<=Q)}}_processPixels(t){var l;const e=(l=t.pixelBlocks)==null?void 0:l[0];if(e==null)return null;const{outputPixelType:s,lookups:r}=this,{includedRanges:o,noDataInterpretation:a,normalizedNoDataValues:n}=this.functionArguments,u=a===as.matchAll;return Ns(e,{includedRanges:o,noDataValues:n,outputPixelType:s,matchAll:u,lookups:r})}_getWebGLParameters(){var o;const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(Q);s.fill(jt),(o=e==null?void 0:e[0])!=null&&o.length&&s.set(e[0]);const r=new Float32Array(Q);for(let a=0;a<r.length;a+=2)r[a]=(t==null?void 0:t[a])??-jt,r[a+1]=(t==null?void 0:t[a+1])??jt;return t!=null&&t.length&&r.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:r}}};c([h({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),c([h({type:so,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),c([h()],xt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],xt.prototype,"lookups",void 0),xt=c([P("esri.layers.support.rasterFunctions.MaskFunction")],xt);const no=xt;var ye;let kt=ye=class extends D{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:i,infraredBandID:t,scientificOutput:e}=this;return new ye({visibleBandID:i,infraredBandID:t,scientificOutput:e})}};c([h({json:{write:!0}})],kt.prototype,"visibleBandID",void 0),c([h({json:{write:!0}})],kt.prototype,"infraredBandID",void 0),c([h({json:{write:!0}})],kt.prototype,"scientificOutput",void 0),kt=ye=c([P("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],kt);const ro=kt;let _t=class extends G{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const r=this.sourceRasterInfos[0],o=Math.max(e,s);if(r.bandCount<2||o>=r.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const a=r.clone();a.pixelType=this.outputPixelType,a.colormap=null,a.histograms=null,a.bandCount=1,a.keyProperties={...a.keyProperties,BandProperties:void 0};const[n,u,l,p]=t?[-1,1,0,.1]:[0,200,100,10];return a.statistics=[{min:n,max:u,avg:l,stddev:p}],this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){var a;const e=(a=t.pixelBlocks)==null?void 0:a[0];if(e==null)return null;const{visibleBandID:s,infraredBandID:r,scientificOutput:o}=this.functionArguments;return qn(e,s,r,!o)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments,r=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:z(r),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map(r=>t[r])}};c([h({json:{write:!0,name:"rasterFunction"}})],_t.prototype,"functionName",void 0),c([h({type:ro,json:{write:!0,name:"rasterFunctionArguments"}})],_t.prototype,"functionArguments",void 0),c([h()],_t.prototype,"rasterArgumentNames",void 0),_t=c([P("esri.layers.support.rasterFunctions.NDVIFunction")],_t);const oo=_t;var xe;let et=xe=class extends D{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new xe({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};c([h({json:{write:!0}})],et.prototype,"inputRanges",void 0),c([h({json:{write:!0}})],et.prototype,"outputValues",void 0),c([h({json:{write:!0}})],et.prototype,"noDataRanges",void 0),c([h({json:{write:!0}})],et.prototype,"allowUnmatched",void 0),c([h({json:{write:!0}})],et.prototype,"isLastInputRangeInclusive",void 0),et=xe=c([P("esri.layers.support.rasterFunctions.RemapFunctionArguments")],et);const io=et;let wt=class extends G{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:s}=t,{allowUnmatched:r,outputValues:o,inputRanges:a,noDataRanges:n,isLastInputRangeInclusive:u}=this.functionArguments;if(s!=null&&s.length&&(o!=null&&o.length))if(r){const l=Math.min.apply(null,[...o,s[0].min]),p=Math.max.apply(null,[...o,s[0].max]);t.statistics=[{...s[0],min:l,max:p}]}else{let l=o[0],p=l;for(let m=0;m<o.length;m++)l=l>o[m]?o[m]:l,p=p>o[m]?p:o[m];t.statistics=[{...s[0],min:l,max:p}]}return this.rasterInfo=t,this.lookup=r?null:$s({srcPixelType:e,inputRanges:a,outputValues:o,noDataRanges:n,allowUnmatched:r,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!o||o.length<=Q)&&(!n||n.length<=Q)}}_processPixels(t){var p;const e=(p=t.pixelBlocks)==null?void 0:p[0];if(e==null)return null;const{lookup:s,outputPixelType:r}=this;if(s){const m=Ie(e,{lut:[s.lut],offset:s.offset,outputPixelType:r});return m!=null&&s.mask&&(m.mask=Is(e.pixels[0],e.mask,s.mask,s.offset,"u8")),m}const{inputRanges:o,outputValues:a,noDataRanges:n,allowUnmatched:u,isLastInputRangeInclusive:l}=this.functionArguments;return Cs(e,{inputRanges:o,outputValues:a,noDataRanges:n,outputPixelType:r,allowUnmatched:u,isLastInputRangeInclusive:l})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,r=new Float32Array(3*Q),o=1e-5,a=this.functionArguments.inputRanges??[],n=this.functionArguments.outputValues??[],u=n.length;for(let p=0;p<Q;p++)r[3*p]=a[2*p]??jt-1,r[3*p+1]=a[2*p+1]??jt,r[3*p+2]=n[p]??0,p<u&&(p>0&&(r[3*p]-=o),(p<u-1||!s)&&(r[3*p+1]-=o));const l=new Float32Array(2*Q);return l.fill(jt),e!=null&&e.length&&l.set(e),{allowUnmatched:t,rangeMaps:r,noDataRanges:l,clampRange:ot(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],wt.prototype,"functionName",void 0),c([h({type:io,json:{write:!0,name:"rasterFunctionArguments"}})],wt.prototype,"functionArguments",void 0),c([h()],wt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],wt.prototype,"lookup",void 0),wt=c([P("esri.layers.support.rasterFunctions.RemapFunction")],wt);const ao=wt;var we;const uo=new it({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let st=we=class extends D{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new we({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([J(uo)],st.prototype,"slopeType",void 0),c([h({type:Number,json:{write:!0}})],st.prototype,"zFactor",void 0),c([h({type:Number,json:{name:"psPower",write:!0}})],st.prototype,"pixelSizePower",void 0),c([h({type:Number,json:{name:"psZFactor",write:!0}})],st.prototype,"pixelSizeFactor",void 0),c([h({type:Boolean,json:{write:!0}})],st.prototype,"removeEdgeEffect",void 0),st=we=c([P("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],st);const lo=st;let bt=class extends G{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var f;const e=(f=t.pixelBlocks)==null?void 0:f[0];if(e==null)return null;const{zFactor:s,slopeType:r,pixelSizePower:o,pixelSizeFactor:a}=this.functionArguments,{isGCS:n}=this,{extent:u,primaryPixelSizes:l}=t,p=l==null?void 0:l[0],m=p??(u?{x:u.width/e.width,y:u.height/e.height}:{x:1,y:1});return Ms(e,{zFactor:s,slopeType:r,pixelSizePower:o,pixelSizeFactor:a,isGCS:n,resolution:m})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:r}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Zt:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:r??0}}};c([h({json:{write:!0,name:"rasterFunction"}})],bt.prototype,"functionName",void 0),c([h({type:lo,json:{write:!0,name:"rasterFunctionArguments"}})],bt.prototype,"functionArguments",void 0),c([h()],bt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],bt.prototype,"isGCS",void 0),bt=c([P("esri.layers.support.rasterFunctions.SlopeFunction")],bt);const co=bt,ss=new it({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function po(i,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:o,mask:a,outBand:n}=i;if(e&&!a)return void n.set(s);const{statisticsType:u,kernelRows:l,kernelCols:p}=t,m=u==="stddev",f=r*o,d=new Float64Array(f),g=new Float64Array(f),x=new Uint32Array(f);for(let T=0;T<o;T++){const F=T*r;let C=0,k=0,_=0;for(let B=0;B<p;B++)a&&!a[F+B]||(C+=s[F+B],m&&(k+=s[F+B]**2),_++);d[F]=C,g[F]=k,x[F]=_;for(let B=1;B<=r-p;B++){const W=F+B-1,Dt=W+p;a?(a[W]&&(_--,C-=s[W],m&&(k-=s[W]**2)),a[Dt]&&(_++,C+=s[Dt],m&&(k+=s[Dt]**2))):(C-=s[W],C+=s[Dt],m&&(k-=s[W]**2,k+=s[Dt]**2)),d[F+B]=C,x[F+B]=_,m&&(g[F+B]=k)}}const y=new Float64Array(f),A=new Float64Array(f),w=new Uint32Array(f),I=l*r;for(let T=0;T<=r-p;T++){let F=0,C=0,k=0;for(let _=0;_<l;_++){const B=_*r+T;F+=d[B],k+=x[B],m&&(C+=g[B])}y[T]=F,A[T]=C,w[T]=k;for(let _=1;_<=o-l;_++){const B=(_-1)*r+T,W=B+I;F-=d[B],F+=d[W],k-=x[B],k+=x[W],m&&(C-=g[B],C+=g[W]),y[_*r+T]=F,A[_*r+T]=C,w[_*r+T]=k}}const v=Math.floor(l/2),N=Math.floor(p/2);for(let T=v;T<o-v;T++){const F=T*r;for(let C=N;C<r-N;C++){const k=(T-v)*r+C-N,_=w[k];if(_===0||e&&(!a||a[F+C]))continue;const B=y[k]/_,W=m?Math.sqrt((A[k]-y[k]*B)/_):B;n[F+C]=W,a&&(a[F+C]=255)}}}function mo(i,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:o,mask:a,outBand:n}=i;if(e&&!a)return void n.set(s);const{kernelRows:u,kernelCols:l,statisticsType:p}=t,m=Math.floor(u/2),f=Math.floor(l/2),d=p==="min",g=n.slice(),x=new Uint32Array(r*o);for(let y=m;y<o-m;y++){const A=y*r;for(let w=f;w<r-f;w++){let I=d?Number.MAX_VALUE:-Number.MAX_VALUE,v=0;for(let N=0;N<u;N++)for(let T=0;T<l;T++){const F=A+w+(N-m)*r+T-f;a&&!a[F]||(I=d?Math.min(I,s[F]):Math.max(I,s[F]),v++)}a?(g[A+w]=v===0?0:I,x[A+w]=v):n[A+w]=v===0?0:I}}if(a)for(let y=m;y<o-m;y++){const A=y*r;for(let w=f;w<r-f;w++)if(x[A+w]){if(e&&a[A+w])continue;n[A+w]=g[A+w],a[A+w]=255}}}function ho(i,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:o,mask:a,outBand:n}=i;if(e&&!a)return void n.set(s);const{kernelRows:u,kernelCols:l}=t,p=Math.floor(u/2),m=Math.floor(l/2),f=n.slice(),d=new Uint32Array(r*o);for(let g=p;g<o-p;g++){const x=g*r;for(let y=m;y<r-m;y++){if(e&&(a!=null&&a[x+y]))continue;const A=[];for(let w=0;w<u;w++)for(let I=0;I<l;I++){const v=x+y+(w-p)*r+I-m;a&&!a[v]||A.push(s[v])}A.length&&(A.sort((w,I)=>w-I),a?(f[x+y]=A[Math.floor((A.length-1)/2)],d[x+y]=A.length):n[x+y]=A[Math.floor((A.length-1)/2)])}}if(a)for(let g=p;g<o-p;g++){const x=g*r;for(let y=m;y<r-m;y++)if(d[x+y]){if(e&&a[x+y])continue;n[x+y]=f[x+y],a[x+y]=255}}}function fo(i,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:o,mask:a,outBand:n}=i;if(e&&!a)return void n.set(s);const{kernelRows:u,kernelCols:l}=t,p=Math.floor(u/2),m=Math.floor(l/2),f=t.statisticsType==="majority",d=u*l,g=n.slice(),x=new Uint32Array(r*o);for(let y=p;y<o-p;y++){const A=y*r;for(let w=m;w<r-m;w++){if(e&&(a!=null&&a[A+w]))continue;const I=new Map;for(let F=0;F<u;F++)for(let C=0;C<l;C++){const k=A+w+(F-p)*r+C-m;if(a&&!a[k])continue;const _=s[k];I.set(_,I.has(_)?I.get(_)+1:1)}if(I.size===0)continue;let v=0,N=0,T=f?0:d+1;for(const F of I.keys())N=I.get(F),f===N>T&&(T=N,v=F);a?(g[A+w]=v,x[A+w]=I.size):n[A+w]=v}}if(a)for(let y=p;y<o-p;y++){const A=y*r;for(let w=m;w<r-m;w++)if(x[A+w]){if(e&&a[A+w])continue;n[A+w]=g[A+w],a[A+w]=255}}}function go(i,t){const{mask:e}=i,{fillNoDataOnly:s}=t;if(s&&!e)return i;const{pixels:r,width:o,height:a,bandMasks:n,pixelType:u}=i,l=r.length,p=o*a,m=[],{kernelRows:f,kernelCols:d,statisticsType:g,mirrorEdges:x}=t;if(s&&!e)return i;const y=t.outputPixelType??u,A=[];for(let v=0;v<l;v++){const N=r[v],T=b.createEmptyBand(y,p);s&&T.set(N);const F=(n==null?void 0:n[v])??e,C=(F==null?void 0:F.slice())??null,k={band:N,width:o,height:a,mask:C,outBand:T};switch(g){case"min":case"max":mo(k,t);break;case"mean":case"stddev":po(k,t);break;case"median":ho(k,t);break;case"majority":case"minority":fo(k,t)}x&&!s&&_e(T,o,a,f,d),m.push(T),C&&A.push(C)}let w=A[0]??e;A.length!==l&&(A.length=0),l>1&&(n!=null&&n.length)&&(w=b.combineBandMasks(n));const I=new b({pixelType:y,width:o,height:a,pixels:m,bandMasks:n&&A.length?A:null,mask:w});return I.updateStatistics(),I}var be;let vt=be=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new be({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:L(this.raster)})}};c([h({json:{write:!0,read:{source:["kernelRows","rows"],reader:(i,t)=>Number(i??(t==null?void 0:t.kernelRows)??3)}}})],vt.prototype,"rows",void 0),c([h({json:{write:!0,read:{source:["kernelCols","cols"],reader:(i,t)=>Number(i??(t==null?void 0:t.kernelCols)??3)}}})],vt.prototype,"cols",void 0),c([h({json:{write:!0}})],vt.prototype,"fillNoDataOnly",void 0),c([h({json:{read:{source:["statisticsType","type"],reader:(i,t)=>ss.fromJSON((t==null?void 0:t.statisticsType)??(t==null?void 0:t.type))??"min"},write:{target:"type"}}}),J(ss)],vt.prototype,"statisticsType",void 0),vt=be=c([P("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],vt);const yo=vt;let Bt=class extends G{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:r}=this.functionArguments;return r==="stddev"&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){var n;const e=(n=t.pixelBlocks)==null?void 0:n[0];if(e==null)return e;const{statisticsType:s,rows:r,cols:o,fillNoDataOnly:a}=this.functionArguments;return go(e,{kernelRows:r,kernelCols:o,fillNoDataOnly:a,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:r}=this.functionArguments;return{fillNoDataOnly:r,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:ot(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],Bt.prototype,"functionName",void 0),c([h({type:yo,json:{write:!0,name:"rasterFunctionArguments"}})],Bt.prototype,"functionArguments",void 0),c([h()],Bt.prototype,"rasterArgumentNames",void 0),Bt=c([P("esri.layers.support.rasterFunctions.StatisticsFunction")],Bt);const xo=Bt;var ve;let At=ve=class extends D{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(i,t){if(!(i!=null&&i.length))return null;const e=[];return i.forEach(s=>{const r={min:s.min,max:s.max,avg:s.avg??s.mean,stddev:s.stddev??s.standardDeviation};e.push(r)}),e}writeStatistics(i,t,e){if(!(i!=null&&i.length))return;const s=[];i.forEach(r=>{const o={...r,mean:r.avg,standardDeviation:r.stddev};delete o.avg,delete o.stddev,s.push(o)}),t[e]=s}clone(){return new ve({statistics:L(this.statistics),histograms:L(this.histograms)})}};c([h({json:{write:!0}})],At.prototype,"statistics",void 0),c([Mt("statistics")],At.prototype,"readStatistics",null),c([Ot("statistics")],At.prototype,"writeStatistics",null),c([h({json:{write:!0}})],At.prototype,"histograms",void 0),At=ve=c([P("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],At);const wo=At;let nt=class extends G{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:r}=this.functionArguments;return r&&(e.histograms=r),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}};c([h({json:{write:!0,name:"rasterFunction"}})],nt.prototype,"functionName",void 0),c([h({type:wo,json:{write:!0,name:"rasterFunctionArguments"}})],nt.prototype,"functionArguments",void 0),c([h()],nt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],nt.prototype,"indexedColormap",void 0),c([h()],nt.prototype,"isNoopProcess",void 0),nt=c([P("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],nt);const bo=nt;var Ae;const vo=new it({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let V=Ae=class extends D{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(i,t,e){i!=null&&i.length&&(Array.isArray(i[0])||(i=i.map(s=>[s.min,s.max,s.avg,s.stddev])),t[e]=i)}clone(){return new Ae({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:L(this.statistics),gamma:L(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:L(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};c([h({type:Boolean,json:{write:!0}})],V.prototype,"computeGamma",void 0),c([h({type:Boolean,json:{name:"dra",write:!0}})],V.prototype,"dynamicRangeAdjustment",void 0),c([h({type:[Number],json:{write:!0}})],V.prototype,"gamma",void 0),c([h()],V.prototype,"histograms",void 0),c([h({type:Number,json:{write:!0}})],V.prototype,"maxPercent",void 0),c([h({type:Number,json:{write:!0}})],V.prototype,"minPercent",void 0),c([h({type:Number,json:{write:!0}})],V.prototype,"numberOfStandardDeviations",void 0),c([h({type:Number,json:{name:"max",write:!0}})],V.prototype,"outputMax",void 0),c([h({type:Number,json:{name:"min",write:!0}})],V.prototype,"outputMin",void 0),c([h({type:Number,json:{write:!0}})],V.prototype,"sigmoidStrengthLevel",void 0),c([h({json:{type:[[Number]],write:!0}})],V.prototype,"statistics",void 0),c([Ot("statistics")],V.prototype,"writeStatistics",null),c([J(vo)],V.prototype,"stretchType",void 0),c([h({type:Boolean,json:{write:!0}})],V.prototype,"useGamma",void 0),V=Ae=c([P("esri.layers.support.rasterFunctions.StretchFunctionArguments")],V);const Ao=V;let rt=class extends G{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:r,gamma:o,useGamma:a}=s;if(!r&&["u8","u16","s8","s16"].includes(e)){const p=Yt(s.toJSON(),{rasterInfo:t}),m=H(this.outputPixelType)?"round":"float";this.lookup=Os({pixelType:e,...p,gamma:a?o:null,rounding:m}),this.cutOffs=p}else r||(this.cutOffs=Yt(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const n=t.clone();n.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(n),this.outputPixelType==="u8"&&(n.keyProperties.DataType="processed");const{outputMin:u=0,outputMax:l=255}=this.functionArguments;n.statistics=[];for(let p=0;p<n.bandCount;p++)n.statistics[p]={min:u,max:l};return this.rasterInfo=n,{success:!0,supportsGPU:!r}}_processPixels(t){var n;const e=(n=t.pixelBlocks)==null?void 0:n[0];if(e==null)return e;const{lookup:s}=this;if(s)return Ie(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:r}=this,o=this.cutOffs||Yt(r.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),a=r.useGamma?r.gamma:null;return Ds(e,{...o,gamma:a,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:r}=this.functionArguments,o=this.rasterInfo.bandCount>=2?3:1,a=r&&(s!=null&&s.length)?Gs(o,s):[1,1,1],{minCutOff:n,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};n.length===1&&(n[1]=n[2]=n[0],u[1]=u[2]=u[0]);const l=new Float32Array(o);let p;for(p=0;p<o;p++)l[p]=(e-t)/(u[p]-n[p]);const m=H(this.outputPixelType);return{bandCount:o,outMin:t,outMax:e,minCutOff:n,maxCutOff:u,factor:l,useGamma:r,gamma:r&&s?s:[1,1,1],gammaCorrection:r&&a?a:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:m,type:"stretch"}}};c([h({json:{write:!0,name:"rasterFunction"}})],rt.prototype,"functionName",void 0),c([h({type:Ao,json:{write:!0,name:"rasterFunctionArguments"}})],rt.prototype,"functionArguments",void 0),c([h()],rt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],rt.prototype,"lookup",void 0),c([h({json:{write:!0}})],rt.prototype,"cutOffs",void 0),rt=c([P("esri.layers.support.rasterFunctions.StretchFunction")],rt);const To=rt;var Te;let Xt=Te=class extends D{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Te({attributeTableAsRecordSet:L(this.attributeTableAsRecordSet)})}};c([h({json:{write:!0}})],Xt.prototype,"attributeTableAsRecordSet",void 0),Xt=Te=c([P("esri.layers.support.rasterFunctions.TableFunctionArguments")],Xt);const Po=Xt;let Tt=class extends G{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const i=this.sourceRasterInfos[0];if(i.bandCount>1||i.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:t}=this.functionArguments;if(!t)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(i.pixelType);const e=i.clone();return e.pixelType=this.outputPixelType,e.bandCount=1,e.dataType!=="thematic"&&(e.keyProperties=e.keyProperties?{...e.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(i){var t;return(t=i.pixelBlocks)==null?void 0:t[0]}};c([h({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),c([h({type:Po,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),c([h()],Tt.prototype,"rasterArgumentNames",void 0),c([h()],Tt.prototype,"isNoopProcess",void 0),Tt=c([P("esri.layers.support.rasterFunctions.TableFunction")],Tt);const Fo=Tt,M=new Map;function No(i,t){const{rasterFunctionArguments:e}=i;e&&(e.rasters||[e.raster,e.raster2]).forEach(s=>{s&&typeof s!="number"&&(typeof s=="string"?s.startsWith("http")&&(t.includes(s)||t.push(s)):"rasterFunctionArguments"in s&&No(s,t))})}function bi(i,t){if(t=t??{},"function"in(i=L(i))&&"arguments"in i&&i.arguments){const e=ws(i,new Map,t);if(Ne(e),!e.renderingRule)throw new St("raster-function-helper","Unsupported raster function json.");i=e.renderingRule}if("rasterFunction"in i)return ys(i=Pe(i),t);throw new St("raster-function-helper","unsupported raster function json.")}function $o(i,t){return t[0]==="rasters"&&Array.isArray(i.rasters)?i.rasters:t.map(e=>i[e])}function ns(i){return!!(i&&typeof i=="object"&&i.rasterFunction&&i.rasterFunctionArguments)}function Pe(i){var r;const{rasterFunction:t,rasterFunctionArguments:e}=i,s={};for(const o in e){let a=e[o];const n=o.toLowerCase();if(n==="rasters"&&Array.isArray(a))s.rasters=a.map(u=>ns(u)?Pe(u):u);else switch(ns(a)&&(a=Pe(a)),n){case"dra":s.dra=a;break;case"pspower":s.psPower=a;break;case"pszfactor":s.psZFactor=a;break;case"bandids":s.bandIds=a;break;default:s[o[0].toLowerCase()+o.slice(1)]=a}}return t!=="Local"||(r=s.rasters)!=null&&r.length||(s.rasters=["$$"]),{...i,rasterFunctionArguments:s}}function ys(i,t){var f,d;const{rasterFunction:e,rasterFunctionArguments:s}=i,r=(f=i.outputPixelType)==null?void 0:f.toLowerCase();if(e==null||!M.has(e))throw new St("raster-function-helper",`unsupported raster function: ${e}`);const o=M.get(e),a=(typeof o.ctor=="function"?o.ctor:o.ctor.default).fromJSON({...i,outputPixelType:r}),{rasterArgumentNames:n}=a,u=[],l=$o(s,n),p=n[0]==="rasters"||n.length>1,m=[];for(let g=0;g<l.length;g++){const x=l[g];let y;x==null||typeof x=="string"&&x.startsWith("$")?u.push(t==null?void 0:t.raster):typeof x=="string"?t[x]&&u.push(t[x]):typeof x!="number"&&"rasterFunction"in x&&(y=ys(x,t),p||(a.functionArguments[n[g]]=y),u.push(y)),p&&m.push(y??x)}if(p&&(n[0]==="rasters"?a.functionArguments.rasters=m:n.forEach((g,x)=>{a.functionArguments[g]=m[x]})),t){a.sourceRasters=u;const g=(d=t.raster)==null?void 0:d.url;g&&(a.mainPrimaryRasterId=g)}return a}function xs(i,t){if(i&&t)for(const e in i){const s=i[e];s&&typeof s=="object"&&"type"in s&&(s.type==="RasterFunctionTemplate"?xs(s.arguments,t):s.type==="RasterFunctionVariable"&&t[s.name]!=null&&(s.value=t[s.name]))}}function Fe(i,t){var r;if(!i||typeof i!="object")return i;const{value:e}=i;if(!e||typeof e!="object")return i.isDataset?"$$":e;if(Array.isArray(e))return e.length===0?[]:e.map(o=>typeof o=="object"&&o.type==="RasterFunctionVariable"?Fe(o,t):o);if("value"in e&&["number","string","boolean"].includes(typeof e.value))return e.value;if(i.isDataset&&e.type!=="Scalar")return"$$";if(!("type"in e))return e;let s=e;switch(e.type){case"Scalar":s=e.value;break;case"AlgorithmicColorRamp":s=rs(e);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:e.ArrayOfColorRamp.map(rs)};break;case"ArgumentArray":if((r=e.elements)!=null&&r.length&&e.elements[0].type!=="RasterStatistics"){const o=[];for(let a=0;a<e.elements.length;a++){const n=e.elements[a],{type:u}=n;if(u)if(u==="RasterFunctionTemplate"){const{renderingRule:l}=ws(n,t);o.push(l),n._object_id!=null&&t.set(n._object_id,l)}else{if(u!=="RasterFunctionVariable")throw new St("raster-function-helper","unsupported raster function json.");{const l=Fe(n,t);o.push(l),n._object_id!=null&&t.set(n._object_id,l)}}else o.push(n)}s=o}else s=e.elements}return e._object_id!=null&&t.set(e._object_id,s),s}function rs(i){const t=i.algorithm??"esriHSVAlgorithm";let{FromColor:e,ToColor:s}=i;if(!Array.isArray(e)){const{r,g:o,b:a}=je({h:e.Hue,s:e.Saturation,v:e.Value});e=[r,o,a,e.AlphaValue]}if(!Array.isArray(s)){const{r,g:o,b:a}=je({h:s.Hue,s:s.Saturation,v:s.Value});s=[r,o,a,s.AlphaValue]}return{type:"algorithmic",algorithm:t,fromColor:e,toColor:s}}function ws(i,t,e){e&&xs(i,e);const s={renderingRule:{},templates:t};return bs(i,s),s}function bs(i,t){if(!i||!t.renderingRule)return;const{renderingRule:e,templates:s}=t,{function:r,arguments:o,_object_id:a}=i;if(!r||!o)return;a!=null&&s.set(a,e),e.rasterFunction=r.type.replace("Function",""),e.outputPixelType=r.pixelType;const n={};e.rasterFunctionArguments=n;for(const u in o){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const l=o[u];l&&typeof l=="object"&&"type"in l&&(l.type==="RasterFunctionTemplate"||l.type==="RasterFunctionVariable")?(l.type==="RasterFunctionVariable"?n[u]=Fe(l,s):(e.rasterFunctionArguments[u]={},bs(l,{renderingRule:e.rasterFunctionArguments[u],templates:s})),l._object_id!=null&&s.set(l._object_id,n[u])):n[u]=l}switch(n.DEM&&!n.Raster&&(n.Raster=n.DEM,delete n.DEM),e.rasterFunction){case"Stretch":Io(n);break;case"Colormap":Co(n);break;case"Convolution":Ro(n);break;case"Mask":ko(n)}}function Ne(i){const{renderingRule:t,templates:e}=i;if(typeof t!="object"||!(t!=null&&t.rasterFunctionArguments)||!e.size)return;const{rasterFunctionArguments:s}=t;for(const r in s){const o=s[r],a=r==="_object_ref_id"?o:o&&typeof o=="object"&&"_object_ref_id"in o?o._object_ref_id:null;if(a==null)o&&typeof o=="object"&&(o.rasterFunctionArguments&&Ne({renderingRule:o,templates:e}),Array.isArray(o)&&o.forEach((n,u)=>{if(typeof n=="object")if(n._object_ref_id!=null){if(!e.has(n._object_ref_id))throw new St("raster-function-helper",`unsupported raster function json. _object_ref_id: ${o} does not exist`);const l=e.get(a);l&&typeof l=="object"?Object.assign(n,l):o[u]=l}else Ne({renderingRule:n,templates:e})}));else{if(!e.has(a))throw new St("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const n=e.get(a);r!=="_object_ref_id"?s[r]=n:n&&typeof n=="object"&&Object.assign(s,n)}}}function Io(i){var t;(t=i.Statistics)!=null&&t.length&&typeof i.Statistics=="object"&&(i.Statistics=i.Statistics.map(e=>[e.min,e.max,e.mean,e.standardDeviation])),i.NumberOfStandardDeviation!=null&&(i.NumberOfStandardDeviations=i.NumberOfStandardDeviation,delete i.NumberOfStandardDeviation)}function Co(i){var t,e;((e=(t=i.ColorRamp)==null?void 0:t.type)==null?void 0:e.toLowerCase())==="randomcolorramp"&&(delete i.ColorRamp,i.ColormapName="Random"),i.ColorSchemeType===0&&delete i.ColorRamp}function Ro(i){i.ConvolutionType!=null&&(i.Type=i.ConvolutionType,delete i.ConvolutionType)}function ko(i){var t;(t=i.NoDataValues)!=null&&t.length&&typeof i.NoDataValues[0]=="string"&&(i.NoDataValues=i.NoDataValues.filter(e=>e!=="").map(e=>Number(e)))}M.set("Arithmetic",{desc:"Arithmetic Function",ctor:Sn,rasterArgumentNames:["rasters"]}),M.set("Aspect",{desc:"Aspect Function",ctor:On,rasterArgumentNames:["raster"]}),M.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:cr,rasterArgumentNames:["raster"]}),M.set("Colormap",{desc:"Colormap Function",ctor:Ar,rasterArgumentNames:["raster"]}),M.set("CompositeBand",{desc:"CompositeBand Function",ctor:Pr,rasterArgumentNames:["rasters"]}),M.set("ComputeChange",{desc:"ComputeChange Function",ctor:jr,rasterArgumentNames:["rasters"]}),M.set("Convolution",{desc:"Convolution Function",ctor:Ur,rasterArgumentNames:["raster"]}),M.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Mr,rasterArgumentNames:["raster"]}),M.set("ExtractBand",{desc:"ExtractBand Function",ctor:Hr,rasterArgumentNames:["raster"]}),M.set("Curvature",{desc:"Curvature Function",ctor:Wr,rasterArgumentNames:["raster"]}),M.set("Grayscale",{desc:"Grayscale Function",ctor:Qr,rasterArgumentNames:["raster"]}),M.set("Clip",{desc:"Clip Function",ctor:mr,rasterArgumentNames:["raster"]}),M.set("Local",{desc:"Local Function",ctor:eo,rasterArgumentNames:["rasters"]}),M.set("Mask",{desc:"Mask Function",ctor:no,rasterArgumentNames:["raster"]}),M.set("NDVI",{desc:"NDVI Function",ctor:oo,rasterArgumentNames:["raster"]}),M.set("Remap",{desc:"Remap Function",ctor:ao,rasterArgumentNames:["raster"]}),M.set("Slope",{desc:"Slope Function",ctor:co,rasterArgumentNames:["raster"]}),M.set("Statistics",{desc:"Focal Statistics Function",ctor:xo,rasterArgumentNames:["raster"]}),M.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:bo,rasterArgumentNames:["raster"]}),M.set("Stretch",{desc:"Stretch Function",ctor:To,rasterArgumentNames:["raster"]}),M.set("Table",{desc:"Attribute Table Function",ctor:Fo,rasterArgumentNames:["raster"]});export{No as R,bi as S,cs as a,Yo as c,R as l,Jo as y};
