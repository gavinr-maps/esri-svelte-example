import{e as w}from"./Evented-CXIxDjmW.js";import{u as j}from"./Color-DDUWtbqR.js";import{d as C}from"./Graphic-Dc7F67nR.js";import"./symbols-CsUQ5BxR.js";import{T as K,K as X,r as k,u as U}from"./Accessor-D6mNnsWy.js";import{p as B,P as x,d as $}from"./reactiveUtils-BFQ0BtrB.js";import{y as V,b as J}from"./subclass-BR3PhgZG.js";import Q from"./GraphicsLayer-D2NeCfd2.js";import{i as F}from"./TelemetryDisplay-yRJEWb17.js";import{f as Z}from"./OverlayContainer-38pAenF6.js";import"./geometry-DpwwkAX1.js";import{c as M}from"./screenUtils-PfxkaaMN.js";import{n as tt}from"./vec2f64-Diu2Kaa8.js";import{K as _}from"./projection-A9yUaaTs.js";import{s as it}from"./DisplayObject-DFOkWAgp.js";import{a as et,f as rt}from"./LayerView2D-BGdjSMVF.js";import{c as R}from"./BufferObject-CjYoWxgZ.js";import{D as ot,F as H,E as st}from"./enums-BlUEVwJR.js";import{e as mt,c as nt}from"./Texture-BbJIOVx_.js";import{o as lt}from"./VertexArrayObject-Cwnso4un.js";import{j as at}from"./Polyline-D97hl-6E.js";import{_ as z}from"./Point-DB4Hp4hH.js";import{t as pt}from"./GraphicContainer-BEGiY-VM.js";import{V as ht}from"./GraphicsView2D-DDXdb_7d.js";import{y as yt}from"./LayerView-CbIY_4n2.js";import{S as ct,d as q,y as W}from"./TextSymbol-gKE-H_J6.js";import"./colorUtils-CS9vdHXB.js";import"./mathUtils-ClvKsMak.js";import"./PopupTemplate-ByHks6sq.js";import"./Clonable-cKbRam6-.js";import"./assets-C2mb-ea2.js";import"./index-CeCSsEgo.js";import"./jsonMap-DCC6W5ex.js";import"./writer-3zufXUNV.js";import"./fieldUtils-CNduWQU9.js";import"./intl-Dpfm8vPB.js";import"./Promise-CZrWwByK.js";import"./enumeration--HlxOQ_N.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./jsonUtils-Cma_7A64.js";import"./Extent-DHjqVB-p.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-rJEWaOSN.js";import"./persistableUrlUtils-BcifXQ1Z.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-liet8xHC.js";import"./shared-B3wH2qpO.js";import"./GraphicsCollection-nEq2FD1R.js";import"./Layer-C96_yo4i.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./BlendLayer-DmvCcS5c.js";import"./jsonUtils-C4Wp5KpV.js";import"./parser-BN6zmHl-.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./ScaleRangeLayer-CKYXLXxK.js";import"./ElevationInfo-BxYXLfrw.js";import"./unitConversionUtils-Dl04YuQU.js";import"./lengthUtils-D7_DvYH0.js";import"./mat3-DRqs2t5W.js";import"./DefaultUI-DVON9ypr.js";import"./jsxFactory-CbAu6VfF.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CMtXpTiG.js";import"./InputManager-C4xu1R9l.js";import"./Queue-DpHko4Yk.js";import"./signal-DzOfzcfh.js";import"./Map-C4JPDBFj.js";import"./Basemap-DhGpUWGY.js";import"./loadAll-DDw-urzS.js";import"./PortalItem-BuTU9OuN.js";import"./writeUtils-3wz9AuW7.js";import"./layerUtils-erzwAANv.js";import"./Ground-BuxgFYJy.js";import"./compilerUtils-BA04t1lN.js";import"./CollectionFlattener-CkyePFnC.js";import"./editableLayers-BHlaPs85.js";import"./catalogUtils--o1nDhfl.js";import"./basemapUtils-CkCKogG3.js";import"./TablesMixin-BKe9x_jT.js";import"./HeightModelInfo-CSXZysDz.js";import"./ReactiveMap-Dl_3-Rm5.js";import"./Query-Cx4awVKu.js";import"./DataLayerSource-6X35yXpo.js";import"./Field-C8SaaeoI.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BNIhEccm.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BGG3AyYa.js";import"./a11yUtils-DwloBVAu.js";import"./heightModelInfoUtils-BSzg1Wnl.js";import"./arcgisLayerUrl-Cgl5IQFD.js";import"./ViewingMode-Dodu7ZZk.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-DFh8uIGE.js";import"./Compass-DD0Dkx4v.js";import"./utils-DsJqvptN.js";import"./GoTo-CyjNnle5.js";import"./NavigationToggle-C75z3F4y.js";import"./Zoom-DVO2GqC9.js";import"./vec2f32-BbH2jxlN.js";import"./vec3f32-Cw9Q6TO_.js";import"./normalizeUtils-Bi6Jza1f.js";import"./normalizeUtilsCommon-tgSpcwHH.js";import"./utils-D61i9O7E.js";import"./utils-Dx8bgRIB.js";import"./viewpointUtils-BDYPvBda.js";import"./Viewpoint-B260yGoV.js";import"./Cyclical-BY_I03kj.js";import"./mat2d-DPkeMmgR.js";import"./mat2df64-CBKYtunK.js";import"./vec2-B_ymkwGp.js";import"./WGLContainer-CcOWMYe7.js";import"./definitions-ByNBSgP9.js";import"./LabelMetric-Agz2doNK.js";import"./enums-BRXbslMp.js";import"./Program-BE7XUO18.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./WGLBrushVTLSymbol-DCRjNI7n.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-wM3hmZl7.js";import"./DefaultVertexAttributeLayouts-BIPVF1RK.js";import"./TileKey-CIqLSCov.js";import"./mat2df32-orApM5a3.js";import"./Container-DVx3sJUL.js";import"./EffectView-D2q0Wr_W.js";import"./highlightReasons-BXkdrXK1.js";import"./HighlightOptions-DpSHmLEJ.js";import"./quickselect-D0_cvEX6.js";import"./earcut-BqgeR2O3.js";import"./featureConversionUtils-DdoZh_25.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./MapView-BnqB8NNa.js";import"./workers-8Q6jrI18.js";import"./TileInfo-DkEc90N-.js";import"./TileKey-DZd6gJy7.js";import"./unitBezier-BX6NeAEr.js";import"./TileStrategy-_ezroEyM.js";import"./QueueProcessor-Bu6RBZRX.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-CuuDkrHi.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./ClipRect-DgcoGaf3.js";import"./layerViewUtils-D2JqIDZ8.js";import"./AGraphicContainer-C5-yH1Tv.js";import"./TechniqueInstance-DTs0dm2_.js";import"./UpdateTracking2D-D2TqRUVs.js";import"./BindType-BmZEZMMh.js";import"./Util-BMqL_pkg.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./TileContainer-B3qIHDa9.js";import"./FeatureCommandQueue-DAg_9rUW.js";import"./CIMSymbolHelper-C1Ghh-WW.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CILP_6vp.js";import"./GeometryUtils-BSPpv37S.js";import"./utils-CO7DMJWl.js";import"./Rect-CUzevAry.js";import"./defaults-DCm7iNI6.js";import"./defaultsJSON-GKolV7NZ.js";import"./heatmapTextureUtils-DhR7tWLr.js";import"./constants-D5zmR9t2.js";import"./FieldsIndex-IOXc-mnc.js";import"./UnknownTimeZone-D0GlcniK.js";import"./OverrideHelper-C4oumxVn.js";import"./colorUtils-D5nOabzP.js";import"./quantizationUtils-CIQDbQFJ.js";import"./AttributeStore-C_C1j3YU.js";import"./labelFormatUtils-jemMExFz.js";import"./labelUtils-Cczy0uDR.js";import"./TimeOnly-cvONhzoK.js";import"./centroid-DdLmOD72.js";import"./diffUtils--7ofoPN-.js";import"./timeSupport-BvrtlmuZ.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-BELDWNln.js";const b=2;class dt extends it{constructor(t){super(),this.element=t,this._handles=new K,this.isWrapAround=!1,this.perspectiveTransform=tt(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(B(()=>this.element,()=>{const i=this.element;this.ready(),i&&this._handles.add(X(i,"play",()=>this.requestRender()))},x))}getMesh(t){throw new Error("Method not implemented.")}destroy(){this._handles.destroy(),this.texture=k(this.texture),this._vao&&(this._vao.dispose(),this._vao=null),this._vbo&&(this._vbo.dispose(),this._vbo=null),this.texture&&(this.texture.dispose(),this.texture=null)}get textureSize(){if(!this.texture)return[1,1];const t=this.texture.descriptor;return[t.width,t.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(t){const i=this.element;if(i==null)return;const{context:r}=t,{videoWidth:e,videoHeight:s}=i;if(e!==0&&s!==0){if(this.texture)i.paused||this.texture.setData(i);else{const m=new mt;m.wrapMode=ot.CLAMP_TO_EDGE,m.preMultiplyAlpha=!0,m.width=e,m.height=s,this.texture=new nt(r,m,i)}i.paused||(this.texture.generateMipmap(),this.requestRender()),super.beforeRender(t)}}_createTransforms(){return null}updateDrawCoords(t,i,r,e){const s=this.element,m=this._getFrameInfo();if(!s||!m)return;this._initializeData(t,m,r);const{controlPoints:l,horizon:a}=m,p=Math.sqrt(l.length),c=p,{x:n,y:h}=t,u=this._vertices,T=l[0],P=l[p-1],N=l[(c-1)*p],Y=l[(c-1)*p+p-1],G=_(a?a[0].mapPoint:T.mapPoint,r),O=_(a?a[1].mapPoint:P.mapPoint,r),f=_(N.mapPoint,r),D=_(Y.mapPoint,r);this.clipGeometry=a?new et({geometry:at.fromJSON({rings:[[[f.x,f.y],[D.x,D.y],[O.x,O.y],[G.x,G.y],[f.x,f.y]]],spatialReference:r})}):null;for(let y=0;y<l.length;y++){const L=l[y],{sourcePoint:S,mapPoint:A}=L;if(S==null||A==null)continue;const v=_(A,r);u[y*b+0]=v.x-n,u[y*b+1]=v.y-h}let E=i;if(e){const y=Math.min(G.x,O.x,f.x,D.x),L=Math.max(G.x,O.x,f.x,D.x),{worldWidth:S,xBounds:A}=e,[v,I]=A;y<v&&L>v?E=S:L>I&&y<I&&(E=-S)}this.wrapAroundShift=E,this.isWrapAround=E!==0}getVAO(t,i,r){if(this._vertices==null)return null;const e=this._vertices;if(this._vao)this._vbo.setData(e);else{this._vbo=R.createVertex(t,H.DYNAMIC_DRAW,e);const s=R.createVertex(t,H.STATIC_DRAW,this._texCoords);this._ibo=R.createIndex(t,H.DYNAMIC_DRAW,this._indices),this._vao=new lt(t,r,i,{geometry:this._vbo,tex:s},this._ibo)}return this._vao}draw(t){t.drawElements(st.TRIANGLE_STRIP,this._indices.length,t.gl.UNSIGNED_SHORT,0)}_initializeData(t,i,r){if(this._vertices!=null&&this._indices!=null)return;const{controlPoints:e}=i,s=Math.sqrt(e.length),m=s,l=new Float32Array(b*e.length),a=new Uint16Array(2*e.length);for(let n=0;n<e.length;n++){const h=e[n],{sourcePoint:u,mapPoint:T}=h;if(u==null||T==null)continue;const P=_(T,r);l[n*b+0]=P.x-t.x,l[n*b+1]=P.y-t.y,a[2*n+0]=u.x,a[2*n+1]=u.y}const p=new Uint16Array(m*s+(m-2)*(s+2));let c=0;for(let n=0;n<m;n++){for(let h=0;h<s;h++)p[c++]=n*s+h,p[c++]=(n+1)*s+h;n<m-2&&(p[c++]=(n+1)*s+(s-1),p[c++]=(n+1)*s)}this._vertices=l,this._texCoords=a,this._indices=p}_getFrameInfo(){if(!this.groundControlPoints)return null;const t=this._getFrameControlPoints(),i=this.frameHorizonPoints;let r=null;if(i){const e=i.startX,s=i.startY,m=i.endX,l=i.endY;r=[{sourcePoint:M(e,s),mapPoint:new z(i.startLongitude,i.startLatitude)},{sourcePoint:M(m,l),mapPoint:new z(i.endLongitude,i.endLatitude)}]}return{controlPoints:t,horizon:r}}_getFrameControlPoints(){const t=this.groundControlPoints,i=t==null?void 0:t.length;if(!i)return[];const r=new Array(i);for(let e=0;e<i;e++){const{x:s,y:m,lat:l,lon:a}=t[e];r[e]={sourcePoint:M(s,-m),mapPoint:new z(a,l)}}return r}}const g=new j([255,127,0]);let d=class extends rt(yt){constructor(){super(...arguments),this._graphicsLayer=new Q,this._frameOutlineGraphic=new C({symbol:new ct({outline:{type:"simple-line",color:g}})}),this._sensorTrailGraphic=new C({symbol:new q({color:g})}),this._lineOfSightGraphic=new C({symbol:new q({color:g})}),this._sensorLocationGraphic=new C({symbol:new W({color:g})}),this._frameCenterGraphic=new C({symbol:new W({color:g})}),this._overlayContainer=null,this.layer=null,this.symbolColor=g,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=U(this._graphicsLayer)}initialize(){var o,t,i,r,e;this.addHandles($(()=>this.symbolColor,()=>{this._frameOutlineGraphic.symbol.outline.color=this.symbolColor,this._sensorTrailGraphic.symbol.color=this.symbolColor,this._lineOfSightGraphic.symbol.color=this.symbolColor,this._sensorLocationGraphic.symbol.color=this.symbolColor,this._frameCenterGraphic.symbol.color=this.symbolColor},x)),this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic]),this.visibleTelemetryElements=new F({frameCenter:((o=this.layer.telemetryDisplay)==null?void 0:o.frameCenter)??!0,frameOutline:((t=this.layer.telemetryDisplay)==null?void 0:t.frameOutline)??!0,lineOfSight:((i=this.layer.telemetryDisplay)==null?void 0:i.lineOfSight)??!0,sensorLocation:((r=this.layer.telemetryDisplay)==null?void 0:r.sensorLocation)??!0,sensorTrail:((e=this.layer.telemetryDisplay)==null?void 0:e.sensorTrail)??!0})}attach(){this._overlayContainer=new Z,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new ht({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new pt(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([$(()=>{var o,t,i,r,e;return[(o=this.layer.telemetryDisplay)==null?void 0:o.frameCenter,(t=this.layer.telemetryDisplay)==null?void 0:t.frameOutline,(i=this.layer.telemetryDisplay)==null?void 0:i.sensorLocation,(r=this.layer.telemetryDisplay)==null?void 0:r.sensorTrail,(e=this.layer.telemetryDisplay)==null?void 0:e.lineOfSight]},()=>this._updateVisibleTelemetryElements(),x),$(()=>{var o,t,i,r,e;return[this.layer.telemetry,(o=this.visibleTelemetryElements)==null?void 0:o.frameCenter,(t=this.visibleTelemetryElements)==null?void 0:t.frameOutline,(i=this.visibleTelemetryElements)==null?void 0:i.sensorLocation,(r=this.visibleTelemetryElements)==null?void 0:r.sensorTrail,(e=this.visibleTelemetryElements)==null?void 0:e.lineOfSight]},()=>this._updateGraphicGeometries(),x)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=U(this.graphicsView)}supportsSpatialReference(o){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(o){this.graphicsView.processUpdate(o)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:o}=this.layer,{visibleTelemetryElements:t}=this;o&&t&&(t.frameOutline&&o.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&o.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&o.lineOfSight?this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight:this._lineOfSightGraphic.geometry=null,t.sensorLocation&&o.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&o.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const o=new dt(this.layer.videoElement);this.addAttachHandles([$(()=>[this.layer.frameHorizonPoints,this.layer.groundControlPoints],()=>{o.frameHorizonPoints=this.layer.frameHorizonPoints,o.groundControlPoints=this.layer.groundControlPoints},x)]),this._overlayContainer.addChild(o),this.view.stage.requestRender()}};w([V()],d.prototype,"graphicsView",void 0),w([V()],d.prototype,"layer",void 0),w([V()],d.prototype,"symbolColor",void 0),w([V({type:F})],d.prototype,"visibleTelemetryElements",void 0),d=w([J("esri.views.2d.layers.VideoLayerView2D")],d);const jr=d;export{jr as default};
