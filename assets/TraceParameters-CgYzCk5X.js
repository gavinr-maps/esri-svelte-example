import{e as t}from"./Evented-CXIxDjmW.js";import{f as l}from"./assets-C2mb-ea2.js";import{y as e,b as u,R as d}from"./subclass-BR3PhgZG.js";import{r as m}from"./writer-3zufXUNV.js";import{f}from"./Point-DB4Hp4hH.js";import{s as g,o as n}from"./UtilityNetwork-uO_jnEn5.js";import{n as w}from"./jsonMap-DCC6W5ex.js";const a=new w({startingPoint:"starting-point",barrier:"barrier"});let i=class extends l{constructor(o){super(o),this.globalId=null,this.isFilterBarrier=!1,this.percentAlong=null,this.terminalId=null,this.type=null}};t([e({type:String,json:{write:!0}})],i.prototype,"globalId",void 0),t([e({type:Boolean,json:{write:!0}})],i.prototype,"isFilterBarrier",void 0),t([e({type:Number,json:{write:!0}})],i.prototype,"percentAlong",void 0),t([e({type:Number,json:{write:!0}})],i.prototype,"terminalId",void 0),t([e({type:a.apiValues,json:{type:a.jsonValues,read:{reader:a.read,source:"traceLocationType"},write:{writer:a.write,target:"traceLocationType"}}})],i.prototype,"type",void 0),i=t([u("esri.rest.networks.support.TraceLocation")],i);const b=i;var p;let r=p=class extends l{static from(o){return d(p,o)}constructor(o){super(o),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}writeOutSR(o,s,c){if(o!=null){const{wkid:y}=o;s[c]=JSON.stringify({wkid:y})}}};t([e({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],r.prototype,"namedTraceConfigurationGlobalId",void 0),t([e({type:String,json:{write:!0}})],r.prototype,"gdbVersion",void 0),t([e({type:[b],json:{write:!0}})],r.prototype,"traceLocations",void 0),t([e({type:Date,json:{type:Number,write:{writer:(o,s)=>{s.moment=o?o.getTime():null}}}})],r.prototype,"moment",void 0),t([e({type:f,json:{write:{allowNull:!0,target:"outSR"}}})],r.prototype,"outSpatialReference",void 0),t([m("outSpatialReference")],r.prototype,"writeOutSR",null),t([e({type:g,json:{write:!0}})],r.prototype,"traceConfiguration",void 0),t([e({type:[Object],json:{write:!0}})],r.prototype,"resultTypes",void 0),t([e({type:n.apiValues,json:{type:n.jsonValues,read:n.read,write:n.write}})],r.prototype,"traceType",void 0),r=p=t([u("esri.rest.networks.support.TraceParameters")],r);const j=r,O=Object.freeze(Object.defineProperty({__proto__:null,default:j},Symbol.toStringTag,{value:"Module"}));export{O as T,b as a,j as m};
