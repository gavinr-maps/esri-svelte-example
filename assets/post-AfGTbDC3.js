import{f,U as v}from"./assets-C43MgM-v.js";import{m as a,a as l,b as c}from"./subclass-BZA_h8Db.js";import{f as y,i as d,s as j}from"./utils-6jMaHUrH.js";import{r as N}from"./serverVersionUtils-XL3pUZsI.js";import{r as i}from"./tslib.es6-B3Jf3DVX.js";import"./index-Bh2oEzTI.js";import"./Accessor-BLX9ikPh.js";let t=class extends f{constructor(s){super(s),this.moment=null,this.success=!1}};i([a({type:Date,json:{type:Number,write:{writer:(s,r)=>{r.moment=s?s.getTime():null}}}})],t.prototype,"moment",void 0),i([a({type:Boolean,json:{write:!0}})],t.prototype,"success",void 0),t=i([l("esri.rest.versionManagement.gdbVersion.support.PostResult")],t);const S=t,n=new Map;async function x(s,r,o,u){n.has(s)||await N(n,s);const e=n.get(s);if(((e==null?void 0:e.serverVersion)??0)<=11.1)throw new c("post:enterprise-version","versioning API requires ArcGIS Enterprise version 11.2 or higher");if(!r)throw new c("post:missing-guid","guid for version is missing");const p=y(s),m=o.toJSON();o.rows&&(m.rows=JSON.stringify(o.rows));const w=d(p.query,{query:j({...m,f:"json"}),...u,method:"post"});r.startsWith("{")&&(r=r.slice(1,-1));const g=`${p.path}/versions/${r}/post`,{data:h}=await v(g,w);return S.fromJSON(h)}export{x as post,n as serverVersionCacheMap};
