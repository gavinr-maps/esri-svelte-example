import{r as A}from"./tslib.es6-B3Jf3DVX.js";import{n as U,d as e,b as $}from"./Accessor-BLX9ikPh.js";import{a as O,d,p as h}from"./subclass-BZA_h8Db.js";const x=p=>{let c=class extends p{clone(){var m;const a=d(this);U(a,"unable to clone instance of non-accessor class");const u=a.metadata,i=a.store,E={},f=new Map;for(const o in u){const n=u[o],t=i==null?void 0:i.originOf(o),s=n.clonable;if(n.readOnly||s===!1||t!==e.USER&&t!==e.DEFAULTS&&t!==e.WEB_MAP&&t!==e.WEB_SCENE)continue;const r=this[o];let l=null;l=typeof s=="function"?s(r):s==="reference"?r:h(r),r!=null&&l==null||(t===e.DEFAULTS?f.set(o,l):E[o]=l)}const b=new(Object.getPrototypeOf(this)).constructor(E);if(f.size){const o=(m=d(b))==null?void 0:m.store;if(o)for(const[n,t]of f)o.set(n,t,e.DEFAULTS)}return b}};return c=A([O("esri.core.Clonable")],c),c};let S=class extends x($){};S=A([O("esri.core.Clonable")],S);export{x as i,S as l};
