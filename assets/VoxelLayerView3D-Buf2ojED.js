import{s as y,B as V,r as c,m as b,a as W}from"./Accessor-BmwT4B0c.js";import{d as a,P as T}from"./reactiveUtils-XM7cS2OP.js";import{_ as A,A as x,o as E}from"./vec32-Dvg_eL9J.js";import{n as g}from"./vec3f64-BLpZdpfb.js";import{c as M,g as L}from"./Point-Cz2JYYmX.js";import{n as I}from"./projectVectorToVector-CCOy_B5J.js";import{q as P,l as D}from"./aaBoundingBox-Dw3yBk2f.js";import{l as F}from"./LayerView3D-BJ3u1Cu5.js";import{t as $}from"./VoxelGraphic-BTYDoYqo.js";import{l as R,o as s,i as w}from"./ShadowCastAccumulate.glsl-DMni1gLj.js";import{t as C}from"./LineCallout.glsl-BQyjm-mE.js";import{i as U}from"./PopupSceneLayerView-DOs4Ybu9.js";import{y as G}from"./LayerView-DUZfYZew.js";import{l as H,r as z}from"./layerViewUtils-Bevty3Jm.js";import"./Evented-Dw4_VOGn.js";import"./SimpleObservable-CvOkykwM.js";import"./common-DQOJ18NT.js";import"./cast-CsZslgGN.js";import"./index-4eY77cms.js";import"./JSONSupport-DcrLLGjL.js";import"./writer-DKgfqj4X.js";import"./Extent-g5W9hy0j.js";import"./Polyline-s-JzsQqo.js";import"./mathUtils-Cfq9PL9W.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import"./projectPointToVector-BoxjK-qy.js";import"./projection-CyCZAIaD.js";import"./heightModelInfoUtils-D_x68P3s.js";import"./HeightModelInfo-C05IFsWs.js";import"./Graphic-Dt0LgVGU.js";import"./Clonable-Z-AWS-16.js";import"./opacityUtils-Dim20wpZ.js";import"./Promise-DfET-uns.js";import"./enumeration-DpvDkLNI.js";import"./Color-VJEMvW-n.js";import"./colorUtils-Rxh2V3ai.js";import"./ActionToggle-D7439N1A.js";import"./Identifiable-BHVfzH03.js";import"./jsonUtils-CwFG8yN4.js";import"./typeUtils-B6WBEKDM.js";import"./TextSymbol-BLIQ6RKX.js";import"./screenUtils-_ZIvrt5o.js";import"./collectionUtils-CTT-51g7.js";import"./Portal-CmmHxpLg.js";import"./Camera-CdyTfTAk.js";import"./Cyclical-Dlbl-cQK.js";import"./Viewpoint-DvyUmqUt.js";import"./jsxFactory-Cnml7uXM.js";import"./intl-Duiy0OzY.js";import"./uuid-Cl5lrJ4c.js";import"./workers-Cds_sd9m.js";import"./Queue-BQesTh_6.js";import"./GraphicsCollection-BJ5Nr2H8.js";import"./projectBoundingRect-C2OcwCLZ.js";import"./boundedPlane-DuGhiiFM.js";import"./sphere-Cin5efBj.js";import"./mat4-Fi6iAz29.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./mat3-CR8GKnhD.js";import"./mat3f64-BBpwCtoL.js";import"./plane-CpXmOyqq.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./vec2f64-Dy6m9Nrb.js";import"./mathUtils-BgCEaV43.js";import"./lineSegment-v806maA5.js";import"./RenderCoordsHelper-DA-pMWeR.js";import"./spatialReferenceEllipsoidUtils-DBqQpPRa.js";import"./projectVectorToPoint-DEm8-dt4.js";import"./dehydratedFeatureUtils-1rrRm6hF.js";import"./ViewingMode-Dodu7ZZk.js";import"./scaleUtils-DPfHG2g0.js";import"./layerUtils-B__v9OBu.js";import"./DefaultUI-BwWVKFUS.js";import"./UpdatingHandles-CzJ4c3KT.js";import"./InputManager-DZ3jJnlx.js";import"./signal-CySMLEX9.js";import"./Basemap-BZmrlnvW.js";import"./loadAll-D1eTJ7uv.js";import"./PortalItem-CTx1kJsR.js";import"./basemapDefinitions-D-Q7PKmu.js";import"./writeUtils-CcunaxF8.js";import"./groundInstanceUtils-Ben03ZCf.js";import"./CollectionFlattener-U8hHQmGf.js";import"./editableLayers-CWgCazH-.js";import"./catalogUtils-CGCu8hgu.js";import"./basemapEnsureType-CmRtohu0.js";import"./basemapUtils-oMnqy94d.js";import"./utils-DYurMneM.js";import"./mat4f32-DcsiF_Rp.js";import"./TablesMixin-Bqfi1Ha_.js";import"./Layer-DH4_Pn8a.js";import"./TimeExtent-BO6BsF_x.js";import"./timeUtils-C1c_L2Fd.js";import"./timeZoneUtils-DxzjpEBb.js";import"./ReactiveMap-BHFEHYMj.js";import"./Query-B_2mhyL4.js";import"./Field-BDG0QV_T.js";import"./fieldType-CBeoJWlv.js";import"./FullTextSearch-CBnxSwz4.js";import"./selectionUtils-DYi6daQO.js";import"./ViewEvents-c9mvQ_r3.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BWEEmpSb.js";import"./HighlightDefaults-CumzVg9-.js";import"./a11yUtils-ClKbIIe-.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-DsXKmbqJ.js";import"./capabilities-DwlKKScG.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-vQlnDsEX.js";import"./accessibleHandler-BaA3O97p.js";import"./CompassViewModel-DBhnIkQP.js";import"./GoTo-zPv0y7kC.js";import"./ZoomViewModel-Bua4WqEj.js";import"./NormalUtils.glsl-W-nmUbAv.js";import"./earcut-D9gy186-.js";import"./computeTranslationToOriginAndRotation-DYUrDrjE.js";import"./Indices-D8XWalpO.js";import"./vec3-BXNNVgyU.js";import"./ElevationContext-BJejROd5.js";import"./ElevationProvider-aS5xrHHy.js";import"./VertexAttribute-Cq4MnHjR.js";import"./unitConversionUtils-rg07EgOm.js";import"./lengthUtils-_77UiyVF.js";import"./hydratedFeatures-CNHxsqRS.js";import"./SnappingCandidate-DGkpYqI6.js";import"./graphicUtils-BFGMMQ1R.js";import"./meshVertexSpaceUtils-AgAbm20L.js";import"./MeshLocalVertexSpace-CnHk-qPr.js";import"./triangulationUtils-Cu97ljqy.js";import"./deduplicate-Cp1WDW0w.js";import"./Attribute-DGhdp5lO.js";import"./Material-C_-mgXN8.js";import"./NoParameters-t-PuNrgq.js";import"./FloatArray-BQXWSSJh.js";import"./BindType-BBwFZqyN.js";import"./Matrix3PassUniform-uCCQMnlP.js";import"./Texture-BVJ22uHh.js";import"./enums-D9v74xTE.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./renderState-Ci93M1-P.js";import"./basicInterfaces-CZwQPxTp.js";import"./InterleavedLayout-_dYEAUNK.js";import"./BufferView-0osDbyWD.js";import"./vec2-ChnYg_BJ.js";import"./types-D0PSWh4d.js";import"./triangle-B1tKFm7z.js";import"./ShaderTechniqueConfiguration-D4dZMCXS.js";import"./glsl-BH37Aalp.js";import"./requestImageUtils-DWgRKL5q.js";import"./TextureFormat-1mYWTFa-.js";import"./edgeUtils-D0U-z06n.js";import"./floatRGBA-Cb__GiDF.js";import"./NormalAttribute.glsl-0GHNIsQf.js";import"./RgbaFloatEncoding.glsl-_io2eW3M.js";import"./Float4DrawUniform-Db0CLl_z.js";import"./Matrix3DrawUniform-DD7AqlIc.js";import"./OverlayCompositing.glsl-CUa8aMAb.js";import"./GridLocalOriginFactory-CngFIYNp.js";import"./RibbonLine.glsl-DwJpAQ1c.js";import"./sdfPrimitives-DBgFWIDT.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Octree-CmoRJhci.js";import"./ShaderBuilder-BKul5qh8.js";import"./SceneLighting-BuSMIzqo.js";import"./RenderCamera-CDB-KFBK.js";import"./axisAngleDegrees-DdLZENJj.js";import"./quat-CP7JhygC.js";import"./weather-zOic7P_q.js";import"./BooleanBindUniform-BgD_OP8i.js";import"./RenderPlugin-CTXypYLE.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./VertexArrayObject-vYejmVPr.js";import"./BufferObject-BJilD_hc.js";import"./memoryEstimations-Bcyf-mHz.js";import"./NestedMap-GuqgquCN.js";import"./HUDRenderStyle-BhGvVxgm.js";import"./Scheduler-i_u8qdlN.js";import"./debugFlags-B1LM_Apo.js";import"./Normals-D6WqMXVD.js";import"./DefaultMaterial-GRoe8HM5.js";import"./GLTextureMaterial-96UpbkjC.js";import"./DefaultBufferWriter-CqCDaNCZ.js";import"./verticalOffsetUtils-BFnFdbst.js";import"./orientedBoundingBox-B17G_yFO.js";import"./VertexColor.glsl-D3WyDYIi.js";import"./Matrix4PassUniform-COGIPIq4.js";import"./VerticalOffset.glsl-CsMbbWIx.js";import"./Matrix4sPassUniform-SKhQ1xSr.js";import"./Float2PassUniform-x4sHx2JD.js";import"./CameraSpace.glsl-g9iLbhnR.js";import"./fontUtils-CGi-tOxo.js";import"./cameraUtils-Cg-qbPDO.js";import"./Intersector-tBiZcjSu.js";import"./intersectorUtils-BNnvTT1E.js";import"./earthUtils-8WLQbUUl.js";import"./spatialReferenceSupport-DfixDcu7.js";import"./ElevationSamplerData-UywXoG8C.js";import"./terrainUtils-CgFk6NLH.js";import"./TileInfo-DxwC9WcY.js";import"./TileKey-DZd6gJy7.js";import"./vec3f32-nZdmKIgz.js";import"./FramebufferObject-B01p0UGV.js";import"./glUtil-CAJRmga-.js";import"./ShadowCastVisualizeTechniqueConfiguration-vN_a9xco.js";import"./SunCalc-uwgdo0BB.js";import"./VirtualLighting-CdhwLgbn.js";import"./ray-C_tSu6xd.js";import"./RenderFeature-2QP3kBrd.js";import"./unitFormatUtils-Q7ZG7HcF.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./quantityUtils-BsDK158M.js";import"./ZoomMomentumEstimator-BDiG9U4W.js";import"./HUDMaterial-DDt4C7E7.js";import"./HUDVisibility.glsl-DuFScu5i.js";import"./labelFormatUtils-F9rkrs4Y.js";import"./labelUtils-DCpQ7n-8.js";import"./DepthRange-BJLjx8ee.js";import"./elevationInfoUtils-D26wVF2d.js";import"./hitTest-Dmi1EcVX.js";import"./LayerConstants-B33OP6sh.js";import"./intersectorUtilsConversions-CiJ6bOx7.js";import"./Intersector-zrebwyaY.js";import"./ElevationRange-BrgM1moX.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./MemCache-CmojB_Z1.js";import"./DefaultLoadingContext-pYVsNNqG.js";import"./wosrLoader-CvsaTck0.js";import"./Version-Cd3TlGH0.js";import"./DrawParameters-C9t9_e99.js";import"./TileStrategy-CtmYSAoK.js";import"./TileKey-DBTeo_j0.js";import"./ScheduledQueueProcessor-U8WIIyj8.js";import"./RenderableTile-FJVLrFon.js";import"./config-BOD8--da.js";import"./StyleDefinition-C2Flw6Qv.js";import"./enums-BTM-fOHQ.js";import"./enums-BRzLM11V.js";import"./GeometryUtils-F7QfOKlc.js";import"./DefaultVertexAttributeLayouts-wSIZdMhB.js";import"./DisplayObject-Dejv4A66.js";import"./resources-D31XxULB.js";import"./WorkerHandle-CKOgUZ7i.js";import"./colorUtils-DaPfwnk3.js";import"./GeometryUtil-D-PMXorz.js";import"./vec33-KumQEj7U.js";import"./ShaderTechniqueRepository-Ch1TPHrL.js";import"./Blit-_zFq7-RL.js";import"./testSVGPremultipliedAlpha-BGpZOwI7.js";import"./RenderingContext-7iVYEQBa.js";import"./ProgramCache-CuBZBhwD.js";import"./Program-C5Xq9SwE.js";import"./makeScheduleFunction-CggzEh3c.js";import"./visualVariableUtils-Xcorldoo.js";import"./vec2f32-BbH2jxlN.js";import"./dehydratedFeatures-kwLHUA1D.js";import"./quantizationUtils-DgFbqZi7.js";import"./featureConversionUtils-CvnFcmH_.js";import"./OptimizedFeature-P2towpqD.js";import"./OptimizedGeometry-BJqUA4Pi.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./webStyleAcceptedFormats-CG7ZQ6BV.js";import"./RealisticTree.glsl-PW_KtBDJ.js";import"./popupUtils-CY6-CisY.js";var r;(function(t){t[t.API=1]="API",t[t.VerboseAPI=2]="VerboseAPI",t[t.Error=3]="Error"})(r||(r={}));const l=g(),f=g();let n=class extends U(F(G)){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this.ignoresMemoryFactor=!0,this._dbgFlags=new Set}get baseUrl(){var t;return((t=this.layer.parsedUrl)==null?void 0:t.path)??""}get wasmLayerId(){return this._wasmLayerId}initialize(){var d;if(this._dbgFlags.add(r.Error),this.view.viewingMode!=="local")throw new y("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(!((d=this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat)!=null&&d.textureFloat))throw new y("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const t=this.layer.spatialReference;if(!M(t,this.view.spatialReference))throw H("voxel layer",t.wkid,this.view.spatialReference.wkid);const e=this.layer.currentVariableId,o=this.layer.getVolume(e),m=this.layer.getVariable(e);if(o!=null&&m!=null){const h=o.dimensions[0],i=o.dimensions[1],u=o.zDimension;if(u>1){const S=o.dimensions[u],v=h.size*i.size*S.size;let _=1;switch(m.renderingFormat.type){case"Int16":case"UInt16":_=2;break;case"Int32":case"UInt32":case"Float32":_=4}this._futureMemory=_*v}}const p=R(this).then(h=>{this._wasmLayerId=h,this._suspendedHandle=a(()=>this.suspended,i=>{const u=s(this.view);u&&u.setEnabled(this,!i)},T),this.addHandles([a(()=>this.layer.renderMode,i=>this._pushRenderModeToWasm(i)),a(()=>this.layer.currentVariableId,i=>this._pushCurrentVariableIdToWasm(i)),a(()=>this.layer.getSections(),i=>this._pushSectionsToWasm(i)),a(()=>this.layer.getVariableStyles(),i=>this._pushVariableStylesToWasm(i)),a(()=>this.layer.getVolumeStyles(),i=>this._pushVolumeStylesToWasm(i)),a(()=>this.layer.enableDynamicSections,i=>this._pushEnableDynamicSectionsToWasm(i)),a(()=>this.layer.enableIsosurfaces,i=>this._pushEnableIsosurfacesToWasm(i)),a(()=>this.layer.enableSections,i=>this._pushEnableSectionsToWasm(i)),a(()=>this.layer.enableSlices,i=>this._pushEnableSlicesToWasm(i)),a(()=>[this.layer.timeOffset,this.layer.timeExtent,this.layer.useViewTime],()=>this._updateLayerTimeProperties()),a(()=>this.slicePlaneEnabled,i=>this._pushAnalysisSliceToWasm(i,this.view.slicePlane)),a(()=>this.view.slicePlane,i=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,i))])}).catch(h=>{if(w(this),this._wasmLayerId=-1,h===-1)throw new y("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(h===-2)throw new y("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(p)}destroy(){w(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){const t=s(this.view);return!(this._wasmLayerId<0||t==null)&&t.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}get usedMemory(){return this._usedMemory}get unloadedMemory(){return this._futureMemory}get performanceInfo(){return new C(this.usedMemory)}get visibleAtCurrentScale(){return z(this.layer.effectiveScaleRange,this.view.scale)}whenGraphicBounds(t,e){const o=t.attributes["Voxel.WorldPosition"];if(o){const m=P(),p=JSON.parse(o);if(I(p,this.view.renderSpatialReference,f,this.view.spatialReference||L.WGS84))return D(m,f),Promise.resolve({boundingBox:m,screenSpaceObjects:[]})}return Promise.reject()}async whenGraphicAttributes(t,e){const o=s(this.view);if(!o)return t;const m=[];for(const p of t)this._isValidVoxelGraphic(p)&&m.push(p);return m.length&&await o.getOtherFieldPopupValues(m,e),t}_isValidVoxelGraphic(t){return t instanceof $}setUsedMemory(t){this._usedMemory=t,this._futureMemory=0}captureFrustum(){const t=s(this.view);t==null||t.captureFrustum()}toggleFullVolumeExtentDraw(){const t=s(this.view);t==null||t.toggleFullVolumeExtentDraw(this)}getLayerTimes(){const t=s(this.view);return(t==null?void 0:t.getLayerTimes(this))??[]}getCurrentLayerTimeIndex(){const t=s(this.view);return(t==null?void 0:t.getCurrentLayerTimeIndex(this))??0}dropQueryRenderTarget(){const t=s(this.view);t==null||t.dropQueryRenderTarget()}_pushRenderModeToWasm(t){const e=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(e?"have WASM":"don't have WASM!!!")),e!=null&&e.setRenderMode(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(t){const e=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(e?"have WASM":"don't have WASM!!!")),e!=null&&e.setStaticSections(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(t){const e=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(e?"have WASM":"don't have WASM!!!")),e!=null&&e.setCurrentVariable(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(t){const e=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(e?"have WASM":"don't have WASM!!!")),e!=null&&e.setVariableStyles(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!")}_accountForEnableSlices(t,e){const o=e??this.layer.enableSlices;for(let m=0;m<t.length;++m){const p=t[m];for(const d of p.slices)d.enabled=d.enabled&&o}}_pushVolumeStylesToWasm(t){const e=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(e?"have WASM":"don't have WASM!!!")),e&&(this._accountForEnableSlices(t,null),e.setVolumeStyles(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(t,e){const o=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(o?"have WASM":"don't have WASM!!!"));let m=!1;if(o){if(e){const p=e.origin;A(l,e.basis1,e.basis2),x(l,l),m=o.setAnalysisSlice(this,t,p,l)}else E(l,0,0,1),m=o.setAnalysisSlice(this,!1,l,l);m||this._dbg(r.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_updateLayerTimeProperties(){const t=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._updateLayerTimeProperties() called, "+(t?"have WASM":"don't have WASM!!!")),t&&t.updateLayerTimeProperties(this)}_pushEnableDynamicSectionsToWasm(t){const e=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(e?"have WASM":"don't have WASM!!!")),e!=null&&e.setEnableDynamicSections(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!")}_pushEnableSlicesToWasm(t){const e=s(this.view);if(this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(e?"have WASM":"don't have WASM!!!")),e){const o=this.layer.getVolumeStyles();this._accountForEnableSlices(o,t),e.setVolumeStyles(this,o)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(t){const e=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(e?"have WASM":"don't have WASM!!!")),e!=null&&e.setEnableIsosurfaces(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!")}_pushEnableSectionsToWasm(t){const e=s(this.view);this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(e?"have WASM":"don't have WASM!!!")),e!=null&&e.setEnableSections(this,t)||this._dbg(r.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!")}_dbg(t,e){this._dbgFlags.has(t)&&(t===r.Error?V.getLogger(this).error(e):V.getLogger(this).warn(e))}};c([b()],n.prototype,"layer",void 0),c([b()],n.prototype,"baseUrl",null),c([b({type:Boolean})],n.prototype,"slicePlaneEnabled",void 0),c([b({readOnly:!0})],n.prototype,"visibleAtCurrentScale",null),n=c([W("esri.views.3d.layers.VoxelLayerView3D")],n);const zo=n;export{zo as default};
