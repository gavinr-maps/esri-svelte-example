import{e as a}from"./Evented-CXIxDjmW.js";import{S as rt,T as zt,u as L}from"./Accessor-D6mNnsWy.js";import{y as l,b as ot,n as $t}from"./subclass-BR3PhgZG.js";import{e as Vt}from"./defaultUnit-6wOlq6cB.js";import{s as Mt}from"./AnalysisView3D-Bxdzk7YF.js";import{e as z}from"./interfaces-js1RL7O8.js";import{d as E,A as S,P as Tt}from"./reactiveUtils-BFQ0BtrB.js";import{r as Dt,t as xt}from"./projectionUtils-B3AaEXhh.js";import{h as Rt}from"./euclideanLengthMeasurementUtils-j7PbRKQS.js";import{f as jt,i as Et,a as F}from"./geodesicLengthMeasurementUtils-YCCCQWpE.js";import"./intl-CArXn1et.js";import{P as lt,E as ct,F as Gt,G as dt,q as Nt,R as ht}from"./colorUtils-D5nOabzP.js";import{d as U,z as B,f as Ot,_ as Pt,x as Ht,O as q,n as f,r as It,T as kt,Y as Wt,g as Qt,c as Ft,ad as Ut,h as Bt}from"./mathUtils-ClvKsMak.js";import{g as J,y as ut,j as qt,M as pt,w as Jt}from"./quantityFormatUtils-Del4ZVDh.js";import{s as Y}from"./quantityUtils-Cz8e0KG8.js";import{x as Ct,s as nt}from"./screenUtils-PfxkaaMN.js";import{J as Yt,j as Kt}from"./Point-TlcsOcXV.js";import{j as mt}from"./vec2-B_ymkwGp.js";import{e as y,o as A}from"./interfaces-CjSZqm0S.js";import{f as K,_ as gt,m as R,v as _t}from"./Segment-DrMYStNF.js";import{f as N}from"./LineVisualElement-DDrOKAfo.js";import{e as Xt}from"./mat4f64-Dk4dwAN8.js";import{a as vt}from"./vec42-B1mBkh1w.js";import{r as X,n as yt}from"./vec4f64-CBQL1T0x.js";import{c as H}from"./plane-Bz78OrLf.js";import{a as Zt}from"./Object3DVisualElement-DudZRJcw.js";import{N as te,u as ee}from"./viewpointUtils-DrSHV8Bj.js";import{g as ie}from"./RenderGeometry-C4TY81Cr.js";import{c as se,u as re,h as j}from"./Material-BN_i9QRJ.js";import{H as oe}from"./InterleavedLayout-UIhsB8jd.js";import{c as Z,o as wt}from"./NormalAttribute.glsl-Dqf1UPF9.js";import{o as ne,a as ae,b as tt,m as le,g as at,r as ce,j as de,A as he,k as ue,i as pe,E as bt,n as me}from"./Texture-DjTh7HwY.js";import{e as w}from"./VertexAttribute-BnAa5VW0.js";import{_ as ge}from"./index-BVncS3aY.js";import{r as et}from"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import{O as _e,E as ve}from"./enums-BlUEVwJR.js";import{S as ye,o as we,_ as be}from"./renderState-PYzNpa1K.js";import{D as fe}from"./RightAngleQuadVisualElement-ChD6bB1A.js";import{h as it}from"./lineStippleUtils-BJ8wDzcw.js";import{e as Le,h as Ee}from"./Promise-CZrWwByK.js";import"./mat4-ybYUU6jq.js";import"./BindType-BmZEZMMh.js";import{o as st}from"./interfaces-B8ge7Jg9.js";import"./getDefaultUnitForView-C278cFTz.js";import"./Portal-DCqdz-K4.js";import"./assets-BNizZMOZ.js";import"./writer-3zufXUNV.js";import"./Extent-B4rrMrqp.js";import"./jsonMap-DCC6W5ex.js";import"./shared-B3wH2qpO.js";import"./projection-tSh-0UvX.js";import"./Polyline-BQFeqYXi.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./ElevationProvider-eMOI1-3B.js";import"./sphere-DIv2hmik.js";import"./ViewingMode-Dodu7ZZk.js";import"./boundedPlane-Xr4Vx-V9.js";import"./lineSegment-A3_mEhFF.js";import"./verticalOffsetUtils-CU5zOPGb.js";import"./mat3-DRqs2t5W.js";import"./mat3f64-BBpwCtoL.js";import"./orientedBoundingBox-WyW1LZfF.js";import"./quat-ChS85qAG.js";import"./quatf64-BrpT0VRp.js";import"./spatialReferenceEllipsoidUtils-DuE2W35w.js";import"./computeTranslationToOriginAndRotation-CFxYfzBj.js";import"./vec2f64-Diu2Kaa8.js";import"./projectVectorToVector-BLdiwuTJ.js";import"./projectPointToVector-C-hGM2ap.js";import"./elevationInfoUtils-C0SzfJu0.js";import"./unitConversionUtils-BUA_O87q.js";import"./lengthUtils-vgIBtB6M.js";import"./geometryEngine-DyRMGqqp.js";import"./geometryEngineBase-RmbNeFm7.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-CRSW297p.js";import"./geodesicUtils-DyOqnDq-.js";import"./geometry-CnaxvJsv.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./Cyclical-BY_I03kj.js";import"./unitFormatUtils-BtkL2qzA.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./VisualElement-CT5Yhr5G.js";import"./jsxFactory-Be5PKa9i.js";import"./uuid-fwrPAdZb.js";import"./TextOverlayItem-BgGhi1uW.js";import"./mathUtils-kvswLROa.js";import"./Viewpoint-7_owAOZm.js";import"./Clonable-cKbRam6-.js";import"./jsonUtils-DtWlwXHP.js";import"./Graphic-Bi5hWHps.js";import"./PopupTemplate-D8mXPxzU.js";import"./fieldUtils-C5R42-PY.js";import"./enumeration--HlxOQ_N.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./symbols-CfvYGR4J.js";import"./TextSymbol-zZq0BA1M.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-BGxkJAW0.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./collectionUtils-Dm1icNvk.js";import"./projectVectorToPoint-GP7lggIC.js";import"./frustum-6KI4j9vx.js";import"./scaleUtils-C_vWi-B7.js";import"./earthUtils-IMU84l4c.js";import"./spatialReferenceSupport-B36j_qpq.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-CF_CpVBS.js";import"./Indices-B6BGScAS.js";import"./Util-BMqL_pkg.js";import"./hydratedFeatures-DHwl8sGq.js";import"./axisAngleDegrees-CHCWDIqP.js";import"./weather-B51D8kuv.js";import"./Scheduler-CDoWuxMK.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./Float4DrawUniform-CWdxHXQ-.js";import"./NestedMap-DgiGbX8E.js";import"./basicInterfaces-wONHx_SN.js";import"./Octree-BnKLop8B.js";import"./floatRGBA-C8rGFKJ0.js";import"./Texture-BbJIOVx_.js";import"./Intersector-pThUjfQo.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./MemCache-C6WUx-5V.js";import"./VertexArrayObject-Cwnso4un.js";import"./BufferObject-CjYoWxgZ.js";import"./BufferView-B7Z-dzh4.js";import"./compilerUtils-BA04t1lN.js";import"./doublePrecisionUtils-B0owpBza.js";import"./triangle-DtfDEZcP.js";import"./requestImageUtils-BkbekjsQ.js";import"./EngineVisualElement-DP_S_DwA.js";import"./ColorMaterial.glsl-8RSfQ59m.js";import"./VertexColor.glsl-BROYASAm.js";import"./triangulationUtils-KizYbMMI.js";import"./earcut-BqgeR2O3.js";import"./deduplicate-DxTSMkFY.js";let M=class extends rt{constructor(e){super(e)}initialize(){this.addHandles([E(()=>({viewData:this.viewData,startPoint:this.analysis.startPoint}),({viewData:e,startPoint:t})=>{e.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(t)},S),E(()=>({viewData:this.viewData,endPoint:this.analysis.endPoint}),({viewData:e,endPoint:t})=>{e.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(t)},S),E(()=>({result:this._computedResult,viewData:this.viewData}),({result:e,viewData:t})=>{t.result=e},S)])}_applyProjectionAndElevationAlignment(e){if(e==null)return e;const{spatialReference:t,elevationProvider:i}=this.view;return Dt(e,t,i)??(xt(this.analysis,e.spatialReference,$t.getLogger(this)),null)}get _computedResult(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,measurementMode:i}=this.viewData;if(e==null||t==null)return null;const s=Rt(e,t),r=jt(e,t);if(s==null)return null;let o,d;switch(i){case z.Auto:d=r!=null?"geodesic":"euclidean",o=r??s.horizontal;break;case z.Geodesic:if(r==null)return null;d="geodesic",o=r;break;case z.Euclidean:d="euclidean",o=s.horizontal}return{mode:d,directDistance:s.direct,horizontalDistance:o,verticalDistance:s.vertical,distance:i===z.Euclidean||s.horizontal.value<=Et?s.direct:r??s.horizontal}}};a([l()],M.prototype,"view",void 0),a([l()],M.prototype,"analysis",void 0),a([l()],M.prototype,"viewData",void 0),a([l()],M.prototype,"_computedResult",null),M=a([ot("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],M);function At(e){const t=new ne,{vertex:i,fragment:s}=t;ae(i,e),i.uniforms.add(new Z("width",o=>o.width)),t.attributes.add(w.POSITION,"vec3"),t.attributes.add(w.NORMAL,"vec3"),t.attributes.add(w.UV0,"vec2"),t.attributes.add(w.LENGTH,"float"),t.varyings.add("vtc","vec2"),t.varyings.add("vlength","float"),t.varyings.add("vradius","float"),i.code.add(st`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = length;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),s.uniforms.add(new Z("outlineSize",o=>o.outlineSize),new tt("outlineColor",o=>o.outlineColor),new Z("stripeLength",o=>o.stripeLength),new tt("stripeEvenColor",o=>o.stripeEvenColor),new tt("stripeOddColor",o=>o.stripeOddColor));const r=1/Math.sqrt(2);return s.code.add(st`
    const float INV_SQRT2 = ${st.float(r)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      fragColor = color;
    }
  `),t}const Oe=Object.freeze(Object.defineProperty({__proto__:null,build:At},Symbol.toStringTag,{value:"Module"}));class k extends ce{constructor(t,i,s){super(t,i,s)}initializeProgram(t){return new de(t.rctx,k.shader.get().build(this.configuration),St)}_setPipelineState(t){const i=t===at.NONE,s=this.configuration;return ye({blending:s.transparent?i?he:ue(t):null,polygonOffset:this.configuration.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:_e.LESS},depthWrite:we,colorWrite:be})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return ve.TRIANGLE_STRIP}}k.shader=new le(Oe,()=>ge(()=>Promise.resolve().then(()=>Qe),void 0,import.meta.url));let I=class extends pe{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=at.NONE}};a([et()],I.prototype,"polygonOffsetEnabled",void 0),a([et()],I.prototype,"transparent",void 0),a([et({count:at.COUNT})],I.prototype,"transparencyPassType",void 0);const St=new Map([[w.POSITION,0],[w.NORMAL,1],[w.UV0,2],[w.LENGTH,3]]);class Pe extends se{constructor(t){super(t,new Ae),this._vertexAttributeLocations=St,this.produces=new Map([[bt.OPAQUE_MATERIAL,i=>!this._transparent&&i===wt.Color],[bt.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,i=>this._transparent&&i===wt.Color]]),this._configuration=new I}getConfiguration(t,i){return this._configuration.polygonOffsetEnabled=this.parameters.polygonOffset,this._configuration.transparent=this._transparent,this._configuration.transparencyPassType=i.transparencyPassType,this._configuration}intersect(){}createGLMaterial(t){return new Ce(t)}createBufferWriter(){return new De}get _transparent(){const{parameters:t}=this;return t.outlineColor[3]<1||t.stripeEvenColor[3]<1||t.stripeOddColor[3]<1}}class Ce extends me{beginSlot(t){return this.ensureTechnique(k,t)}}class Ae extends re{constructor(){super(...arguments),this.width=32,this.outlineSize=.2,this.outlineColor=X(1,.5,0,1),this.stripeEvenColor=X(1,1,1,1),this.stripeOddColor=X(1,.5,0,1),this.stripeLength=1,this.polygonOffset=!1}}const Se=oe().vec3f(w.POSITION).vec3f(w.NORMAL).vec2f(w.UV0).f32(w.LENGTH),ze=f(),$e=f(),Ve=f(),Me=f(),Te=f();let De=class{constructor(){this.vertexBufferLayout=Se}elementCount(t){return 2*(t.attributes.get(w.POSITION).indices.length/2+1)}write(t,i,s,r,o){const{data:d,indices:u}=s.attributes.get(w.POSITION),c=s.attributes.get(w.NORMAL).data,h=d.length/3;u&&u.length!==2*(h-1)&&console.warn("MeasurementArrowMaterial does not support indices");const n=ze,p=$e,_=Ve,m=Me,O=Te,G=r.position,T=r.normal,P=r.uv0;let C=0;for(let b=0;b<h;++b){const x=3*b;if(U(n,d[x],d[x+1],d[x+2]),b<h-1){const D=3*(b+1);U(p,d[D],d[D+1],d[D+2]),U(O,c[D],c[D+1],c[D+2]),B(O,O),Ot(_,p,n),B(_,_),Pt(m,O,_),B(m,m)}const Q=Ht(n,p);t&&i&&(q(n,n,t),q(p,p,t),q(m,m,i));const $=o+2*b,V=$+1;G.setVec($,n),G.setVec(V,n),T.setVec($,m),T.setVec(V,m),P.set($,0,C),P.set($,1,-1),P.set(V,0,C),P.set(V,1,1),b<h-1&&(C+=Q)}const W=r.length;for(let b=0;b<2*h;++b)W.set(o+b,C)}},xe=class extends Zt{constructor(t){super(t),this._arrowWidth=16,this._arrowSubdivisions=128,this._origin=f(),this._originTransform=Xt(),this._arrowCenter=f(),this._renderOccluded=j.OccludeAndTransparent,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._color=yt(),this._contrastColor=yt(),this.applyProperties(t)}get renderOccluded(){return this._renderOccluded}set renderOccluded(t){t!==this._renderOccluded&&(this._renderOccluded=t,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:t}))}get geometry(){return this._geometry}set geometry(t){this._geometry=t,this._geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(t){this._stripeLength=t,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(t){if(this._stripesEnabled=t,this.attached){const i=this._stripesEnabled?this._contrastColor:this._color;this._arrowMaterial.setParameters({stripeEvenColor:i})}}get color(){return this._color}set color(t){lt(t,this._color)||(vt(this._color,t),this._updateArrowColor())}get contrastColor(){return this._contrastColor}set contrastColor(t){lt(t,this._color)||(vt(this._contrastColor,t),this._updateArrowColor())}createExternalResources(){const t=this._color,i=this._contrastColor,s=this._stripesEnabled?i:t;this._arrowMaterial=new Pe({outlineColor:t,stripeEvenColor:s,stripeOddColor:t,renderOccluded:this.renderOccluded,polygonOffset:!0,isDecoration:this.isDecoration}),this._handles=new zt,this._handles.add(E(()=>this.view.state.camera,()=>{this._viewChanged()}))}destroyExternalResources(){this._arrowMaterial=null,this._handles=L(this._handles)}forEachExternalMaterial(t){t(this._arrowMaterial)}createGeometries(t){var s;if(((s=this._geometry)==null?void 0:s.startRenderSpace)==null||this._geometry.endRenderSpace==null)return;const i=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);i.transformation=this._originTransform,t.addGeometry(i),this._viewChanged()}_createArrowGeometry(t,i,s,r){const o=this.view,d=o.renderCoordsHelper,u=[],c=[],h=(n,p)=>{const _=H.get();Ot(_,n,s),u.push(_),c.push(p)};if(r.type==="euclidean"){r.eval(.5,this._arrowCenter);const n=H.get();if(d.worldUpAtPosition(this._arrowCenter,n),Re(t,i,n)){const{heading:p,tilt:_}=o.camera,{direction:m}=te(o,t,p,_,je);It(n,m)}h(t,n),h(i,n)}else{r.eval(.5,this._arrowCenter);const n=this._arrowSubdivisions+1&-2;for(let p=0;p<n;++p){const _=p/(n-1),m=H.get(),O=H.get();r.eval(_,m),d.worldUpAtPosition(m,O),h(m,O)}}return ie(this._arrowMaterial,u,c)}_geometryChanged(){this.recreateGeometry()}_viewChanged(){if(this.view.ready&&this.attached&&this._geometry!=null){const t=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._arrowWidth*t})}}_updateArrowColor(){if(!this.attached)return;const t=this._color,i=this._contrastColor,s=this._stripesEnabled?i:t,r=t,o=t;this._arrowMaterial.setParameters({stripeEvenColor:s,outlineColor:r,stripeOddColor:o})}};function Re(e,t,i){const s=kt(ft,t,e),r=Pt(ft,s,i);return Wt(r)===0}const ft=f(),je=ee();let v=class extends rt{get _parameters(){const e=this.view.effectiveTheme,{accentColor:t,textColor:i}=e,s=ct(t),r=Gt(t,.75),o=ct(dt(t)),d=dt(i,Nt.Low);return{accentColor:s,contrastColor:o,translucentAccentColor:r,triangleLineWidth:3,geodesicProjectionLineWidth:2,guideLineWidth:2,guideStippleLengthPixels:3,directLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12,textColor:i,textBackgroundColor:ht(d,.6),textCalloutColor:ht(d,.5)}}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView;if(e==null||t==null||e.equals(t))return y.None;const i=this.analysisView.result;if(i==null)return y.Direct;if(this.actualVisualizedMeasurement==="geodesic")return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?y.ProjectedGeodesic:y.Direct;const{verticalDistance:s,horizontalDistance:r}=i,o=s.value,d=r.value;return Math.min(o/d,d/o)<this.triangleCollapseRatioThreshold?y.Direct:y.Triangle}get actualVisualizedMeasurement(){const{measurementMode:e,result:t}=this.analysisView;switch(e){case z.Auto:return t!=null&&t.horizontalDistance.value>Et?"geodesic":"euclidean";case z.Euclidean:return"euclidean";case z.Geodesic:return"geodesic"}}get allowVisualElementsOrientationChange(){return this._triangleOrientationOverride==null}set allowVisualElementsOrientationChange(e){this._triangleOrientationOverride==null!==e&&(this._triangleOrientationOverride==null?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){return this.actualVisualizedMeasurement==="geodesic"?{direct:null,horizontal:this._segmentLabel,vertical:this._verticalLabel}:{direct:this._segmentLabel,horizontal:this._horizontalLabel,vertical:this._verticalLabel}}constructor(e){super(e),this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=f(),this._endPosition=f(),this._cornerPosition=f(),this._startPositionAtSeaLevel=f(),this._endPositionAtSeaLevel=f(),this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=A.Auto,this.triangleCollapseRatioThreshold=.03}initialize(){const e=this._parameters,t={attached:!0,view:this.view,isDecoration:!0},{guideLineWidth:i,guideStippleLengthPixels:s,triangleLineWidth:r,geodesicProjectionLineWidth:o,directLabelFontSize:d,verticalLabelFontSize:u,horizontalLabelFontSize:c}=e;this._segmentVisualElement=new xe({...t,geometry:null,renderOccluded:j.OccludeAndTransparent}),this._triangleVisualElement=new N({...t,width:r,renderOccluded:j.OccludeAndTransparent}),this._rightAngleQuad=new fe({...t,renderOccluded:j.OccludeAndTransparent});const h={...t,polygonOffset:!0,renderOccluded:j.OccludeAndTransparent};this._projectedGeodesicLine=new N({...h,width:o,stipplePattern:it(s)}),this._geodesicStartHint=new N({...h,width:i,stipplePattern:it(s)}),this._geodesicEndHint=new N({...h,width:i,stipplePattern:it(s)}),this._segmentLabel=new K({...t,fontSize:d}),this._verticalLabel=new K({...t,fontSize:u}),this._horizontalLabel=new K({...t,fontSize:c}),this.addHandles([E(()=>{const{elevationAlignedStartPoint:n,elevationAlignedEndPoint:p}=this.analysisView,_=this.view;return{view:_,camera:_.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:n,elevationAlignedEndPoint:p,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}},n=>this._updateGeometryAndViewMode(n),S),E(()=>({visible:this.visible,viewMode:this.viewMode}),n=>this._updateVisualElementVisibility(n),S),E(()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement}),n=>this._updateLabelText(n),S),E(()=>({visible:this.visible,viewMode:this.viewMode}),n=>this._updateLabelVisibility(n),S),E(()=>this._measurementArrowStripeLength,n=>this._updateSegmentStripeLength(n),S),Le(async()=>this._updateMessageBundle()),E(()=>this._parameters,({textBackgroundColor:n,textCalloutColor:p,textColor:_,translucentAccentColor:m,accentColor:O,contrastColor:G})=>{const{_segmentLabel:T,_verticalLabel:P,_horizontalLabel:C,_triangleVisualElement:W,_rightAngleQuad:b,_projectedGeodesicLine:x,_geodesicStartHint:Q,_geodesicEndHint:$,_segmentVisualElement:V}=this;T.backgroundColor=n,T.calloutColor=p,T.textColor=_,P.backgroundColor=n,P.calloutColor=p,P.textColor=_,C.backgroundColor=n,C.calloutColor=p,C.textColor=_,W.color=m,b.color=m,x.color=m,Q.color=m,$.color=m,V.color=O,V.contrastColor=G},Tt)]),this._updateMessageBundle()}destroy(){this._segmentVisualElement=L(this._segmentVisualElement),this._triangleVisualElement=L(this._triangleVisualElement),this._rightAngleQuad=L(this._rightAngleQuad),this._projectedGeodesicLine=L(this._projectedGeodesicLine),this._geodesicStartHint=L(this._geodesicStartHint),this._geodesicEndHint=L(this._geodesicEndHint),this._segmentLabel=L(this._segmentLabel),this._verticalLabel=L(this._verticalLabel),this._horizontalLabel=L(this._horizontalLabel),this.set("view",null)}_updateVisualElementVisibility({visible:e,viewMode:t}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,e)switch(t){case y.None:break;case y.Direct:this._segmentVisualElement.visible=!0;break;case y.Triangle:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case y.ProjectedGeodesic:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:e,camera:t,viewMode:i,elevationAlignedStartPoint:s,elevationAlignedEndPoint:r,orientation:o,visualizedMeasurement:d,stripeLength:u}){const c=e.renderCoordsHelper;if(c==null||s==null||r==null||s.equals(r))return;let h=this._startPosition,n=this._endPosition;c.toRenderCoords(s,h),c.toRenderCoords(r,n);const p=o===A.AboveSegment?1:-1,_=p*(c.getAltitude(n)-c.getAltitude(h));_<0&&(h=this._endPosition,n=this._startPosition);const m=d==="geodesic"?new gt(this._startPosition,this._endPosition,c.spatialReference):new R(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=m,this._updateSegmentStripeLength(u),i){case y.Direct:this._updateSegment(m,o);break;case y.Triangle:this._updateSegmentAndTriangle({view:e,camera:t,segment:m,orientation:o,startPosition:h,endPosition:n,deltaSign:p,altitudeDelta:_});break;case y.ProjectedGeodesic:this._updateSegmentAndProjection({view:e,orientation:o,startPosition:h,endPosition:n})}}_updateSegment(e,t){this._segmentLabel.anchor=t===A.AboveSegment?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:e},camera:t,segment:i,orientation:s,startPosition:r,endPosition:o,deltaSign:d,altitudeDelta:u}){const c=this._cornerPosition;e.worldUpAtPosition(r,c),Qt(c,c,d*Math.abs(u)),Ft(c,c,r),this._triangleVisualElement.geometry=[[[r[0],r[1],r[2]],[c[0],c[1],c[2]],[o[0],o[1],o[2]]]],this._rightAngleQuad.geometry={previous:r,center:c,next:o};const h=new R(r,c),n=new R(c,o),p=Ge(r,o,c,s,t);this._segmentLabel.anchor=p.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:h,sampleLocation:"center"},this._verticalLabel.anchor=p.vertical,this._horizontalLabel.geometry={type:"segment",segment:n,sampleLocation:"center"},this._horizontalLabel.anchor=p.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:e},orientation:t,startPosition:i,endPosition:s}){e.setAltitude(this._startPositionAtSeaLevel,0,i),e.setAltitude(this._endPositionAtSeaLevel,0,s);const r=new gt(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,e.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(r),this._geodesicStartHint.setGeometryFromSegment(new R(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new R(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},this._segmentLabel.anchor=t===A.AboveSegment?"top":"bottom"}_updateLabelText({text:e,visualizedMeasurement:t}){e!=null?(this._segmentLabel.text=t==="euclidean"?e.directDistance:e.horizontalDistance,this._horizontalLabel.text=e.horizontalDistance,this._verticalLabel.text=e.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({visible:e,viewMode:t}){const i=this._segmentLabel,s=this._horizontalLabel,r=this._verticalLabel;if(i.visible=!1,s.visible=!1,r.visible=!1,e)switch(t){case y.Direct:i.visible=!0;break;case y.Triangle:i.visible=!0,s.visible=!0,r.visible=!0;break;case y.ProjectedGeodesic:i.visible=!0;case y.None:}}get _labelsText(){if(this.destroyed)return null;const e=this.messages,t=this.analysisView.result;if(t==null||e==null)return null;const{directDistance:i,horizontalDistance:s,verticalDistance:r}=t,o=this.analysisView.unit,d=u=>({directDistance:"",horizontalDistance:"",verticalDistance:"",...u});switch(o){case"metric":return d({directDistance:i&&pt(e,i),horizontalDistance:s&&pt(e,s),verticalDistance:r&&Jt(e,r)});case"imperial":return d({directDistance:i&&ut(e,i),horizontalDistance:s&&ut(e,s),verticalDistance:r&&qt(e,r)});default:return d({directDistance:i&&J(e,i,o),horizontalDistance:s&&J(e,s,o),verticalDistance:r&&J(e,r,o)})}}_updateSegmentStripeLength(e){const t=this._segmentVisualElement;e!=null?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(this._triangleOrientationOverride!=null)return this._triangleOrientationOverride;const e=this.visualElementOrientation;return e===A.Auto?this.view.state.camera.aboveGround?A.AboveSegment:A.BelowSegment:e}_requiresGeodesicGuideAt(e){const t=this.view;if(!(t!=null&&t.state))return!1;const i=t.state.camera,s=t.renderCoordsHelper;if(!s)return!1;const r=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/r>=10}get _measurementArrowStripeLength(){const{result:e,unit:t}=this.analysisView;if(e==null)return null;let i=null;const s=e.directDistance;switch(t){case"metric":i=s&&Y(s,"meters");break;case"imperial":i=s&&Y(s,Yt(s.value,s.unit));break;default:i=s&&Y(s,t)}return i==null?null:Ut(i.value/30)*Kt(1,i.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0,Ee("esri/core/t9n/Units").then(e=>{this.messages=e}).finally(()=>{this.loadingMessages=!1})}get testData(){}};function Ge(e,t,i,s,r){const o=Ne,d=He;r.projectToRenderScreen(i,o),r.projectToRenderScreen(t,d);const u={segment:"bottom",horizontal:"top",vertical:o[0]<d[0]?"left":"right"};{const c=Ie,h=ke;if(F(e,i,r,c),F(e,t,r,h),mt(c,h)>=Lt){const n=Math.sign(c[1])===Math.sign(h[1]);u.segment=n?_t(u.vertical):u.vertical}else{const n=We;F(i,t,r,n),mt(n,h)>=Lt&&(u.segment=Math.sign(n[0])===Math.sign(h[0])?_t(u.horizontal):u.horizontal)}}if(s===A.BelowSegment){const c=h=>h==="top"?"bottom":"top";u.segment=c(u.segment),u.horizontal=c(u.horizontal),u.vertical=c(u.vertical)}return u}a([l()],v.prototype,"_parameters",null),a([l()],v.prototype,"_triangleOrientationOverride",void 0),a([l()],v.prototype,"messages",void 0),a([l()],v.prototype,"view",void 0),a([l()],v.prototype,"analysis",void 0),a([l()],v.prototype,"analysisView",void 0),a([l()],v.prototype,"loadingMessages",void 0),a([l()],v.prototype,"visible",null),a([l()],v.prototype,"viewMode",null),a([l()],v.prototype,"actualVisualizedMeasurement",null),a([l()],v.prototype,"visualElementOrientation",void 0),a([l()],v.prototype,"triangleCollapseRatioThreshold",void 0),a([l()],v.prototype,"allowVisualElementsOrientationChange",null),a([l()],v.prototype,"labels",null),a([l()],v.prototype,"_labelsText",null),a([l()],v.prototype,"_actualVisualElementsOrientation",null),a([l()],v.prototype,"_measurementArrowStripeLength",null),v=a([ot("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],v);const Lt=Math.cos(Bt(12)),Ne=Ct(),He=Ct(),Ie=nt(),ke=nt(),We=nt();let g=class extends Mt(rt){constructor(e){super(e),this.type="direct-line-measurement-view-3d",this.analysis=null,this.result=null,this.measurementMode=z.Auto,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null}initialize(){const e=this.view,t=this.analysis;this._analysisVisualization=new v({view:e,analysis:t,analysisView:this}),this._analysisController=new M({view:e,analysis:t,viewData:this})}destroy(){this._analysisController=L(this._analysisController),this._analysisVisualization=L(this._analysisVisualization)}get updating(){var e;return!!((e=this._analysisVisualization)!=null&&e.loadingMessages)}get viewMode(){return this._analysisVisualization.viewMode}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(e){this._analysisVisualization.visualElementOrientation=e}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(e){this._analysisVisualization.allowVisualElementsOrientationChange=e}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._analysisVisualization.triangleCollapseRatioThreshold=e}get directLabelText(){var e;return((e=this._analysisVisualization.labels.direct)==null?void 0:e.text)??""}get horizontalLabelText(){var e;return((e=this._analysisVisualization.labels.horizontal)==null?void 0:e.text)??""}get verticalLabelText(){var e;return((e=this._analysisVisualization.labels.vertical)==null?void 0:e.text)??""}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){}};a([l()],g.prototype,"updating",null),a([l({readOnly:!0})],g.prototype,"type",void 0),a([l({constructOnly:!0,nonNullable:!0})],g.prototype,"analysis",void 0),a([l()],g.prototype,"result",void 0),a([l()],g.prototype,"measurementMode",void 0),a([l()],g.prototype,"elevationAlignedStartPoint",void 0),a([l()],g.prototype,"elevationAlignedEndPoint",void 0),a([l({readOnly:!0})],g.prototype,"viewMode",null),a([l({readOnly:!0})],g.prototype,"actualVisualizedMeasurement",null),a([l()],g.prototype,"visualElementOrientation",null),a([l()],g.prototype,"allowVisualElementsOrientationChange",null),a([l()],g.prototype,"triangleCollapseRatioThreshold",null),a([l({readOnly:!0})],g.prototype,"directLabelText",null),a([l({readOnly:!0})],g.prototype,"horizontalLabelText",null),a([l({readOnly:!0})],g.prototype,"verticalLabelText",null),a([l()],g.prototype,"_analysisVisualization",void 0),a([l()],g.prototype,"_analysisController",void 0),a([l()],g.prototype,"unit",null),a([l(Vt)],g.prototype,"_defaultUnit",void 0),g=a([ot("esri.views.3d.analysis.DirectLineMeasurementAnalysisView3D")],g);const zr=g,Qe=Object.freeze(Object.defineProperty({__proto__:null,build:At},Symbol.toStringTag,{value:"Module"}));export{zr as default};
