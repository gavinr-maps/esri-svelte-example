import{a0 as z}from"./Accessor-BHnuXKD2.js";const c=-3,f=c-1;var n;(function(_){_[_.ALL=0]="ALL",_[_.SOME=1]="SOME"})(n||(n={}));class y{constructor(s,t,e,h=0){this.name=s,this._storage=t,this._defaultPriority=h,this.id=g+++":",this.size=0,this.maxSize=-1,this._removeFunc=!1,this._hit=0,this._miss=0,this._storage.register(this),e&&(this._storage.registerRemoveFunc(this.id,e),this._removeFunc=!0)}destroy(){this._storage.clear(this),this._removeFunc&&this._storage.deregisterRemoveFunc(this.id),this._storage.deregister(this),this._storage=null}get hitRate(){return this._hit/(this._hit+this._miss)}get storageSize(){return this._storage.size}getSize(s){return this._storage.getSize(this,s)}resetHitRate(){this._hit=this._miss=0}put(s,t,e=this._defaultPriority){this._storage.put(this,s,t,t.cachedMemory,e)}pop(s){const t=this._storage.pop(this,s);return t===void 0?++this._miss:++this._hit,t}get(s){const t=this._storage.get(this,s);return t===void 0?++this._miss:++this._hit,t}peek(s){return this._storage.peek(this,s)}updateSize(s,t){this._storage.updateSize(this,s,t,t.cachedMemory)}clear(){this._storage.clear(this)}clearAll(){this._storage.clearAll()}get performanceInfo(){return this._storage.performanceInfo}resetStats(){this._storage.resetStats()}}class b{get size(){return this._size}constructor(s=10485760){this._maxSize=s,this._db=new Map,this._size=0,this._hit=0,this._miss=0,this._removeFuncs=new z,this._users=new z}destroy(){this.clearAll(),this._removeFuncs.clear(),this._users.clear()}register(s){this._users.push(s)}deregister(s){this._users.removeUnordered(s)}registerRemoveFunc(s,t){this._removeFuncs.push([s,t])}deregisterRemoveFunc(s){this._removeFuncs.filterInPlace(t=>t[0]!==s)}get maxSize(){return this._maxSize}set maxSize(s){this._maxSize=Math.max(s,-1),this._checkSize()}getSize(s,t){const e=this._db.get(s.id+t);return(e==null?void 0:e.size)??0}put(s,t,e,h,r){t=s.id+t;const i=this._db.get(t);if(i&&(this._size-=i.size,s.size-=i.size,this._db.delete(t),i.entry!==e&&this._notifyRemove(t,i.entry,i.size,n.ALL)),h>this._maxSize)return void this._notifyRemove(t,e,h,n.ALL);if(e===void 0)return void console.warn("Refusing to cache undefined entry ");if(!h||h<0)return console.warn(`Refusing to cache entry with size ${h} for key ${t}`),void this._notifyRemove(t,e,0,n.ALL);const o=1+Math.max(r,f)-c;this._db.set(t,new S(e,h,o)),this._size+=h,s.size+=h,this._checkSize()}updateSize(s,t,e,h){t=s.id+t;const r=this._db.get(t);if(r&&r.entry===e){for(this._size-=r.size,s.size-=r.size;h>this._maxSize;){const i=this._notifyRemove(t,e,h,n.SOME);if(!(i!=null&&i>0))return void this._db.delete(t);h=i}r.size=h,this._size+=h,s.size+=h,this._checkSize()}}pop(s,t){t=s.id+t;const e=this._db.get(t);if(e)return this._size-=e.size,s.size-=e.size,this._db.delete(t),++this._hit,e.entry;++this._miss}get(s,t){t=s.id+t;const e=this._db.get(t);if(e!==void 0)return this._db.delete(t),e.lives=e.lifetime,this._db.set(t,e),++this._hit,e.entry;++this._miss}peek(s,t){const e=this._db.get(s.id+t);return e?++this._hit:++this._miss,e==null?void 0:e.entry}get performanceInfo(){const s={Size:Math.round(this._size/1048576)+"/"+Math.round(this._maxSize/1048576)+"MB","Hit rate":Math.round(100*this._getHitRate())+"%",Entries:this._db.size.toString()},t={},e=new Array;this._db.forEach((i,o)=>{const a=i.lifetime;e[a]=(e[a]||0)+i.size,this._users.forAll(d=>{const{id:m,name:u}=d;if(o.startsWith(m)){const l=t[u]||0;t[u]=l+i.size}})});const h={};this._users.forAll(i=>{const o=i.name;if("hitRate"in i&&typeof i.hitRate=="number"&&!isNaN(i.hitRate)&&i.hitRate>0){const a=t[o]||0;t[o]=a,h[o]=Math.round(100*i.hitRate)+"%"}else h[o]="0%"});const r=Object.keys(t);r.sort((i,o)=>t[o]-t[i]),r.forEach(i=>s[i]=Math.round(t[i]/2**20)+"MB / "+h[i]);for(let i=e.length-1;i>=0;--i){const o=e[i];o&&(s["Priority "+(i+c-1)]=Math.round(o/this._size*100)+"%")}return s}resetStats(){this._hit=this._miss=0,this._users.forAll(s=>s.resetHitRate())}clear(s){const t=s.id;this._db.forEach((e,h)=>{h.startsWith(t)&&(this._size-=e.size,this._db.delete(h),this._notifyRemove(h,e.entry,e.size,n.ALL))}),s.size=0}clearAll(){this._db.forEach((s,t)=>this._notifyRemove(t,s.entry,s.size,n.ALL)),this._users.forAll(s=>s.size=0),this._size=0,this._db.clear()}_getHitRate(){return this._hit/(this._hit+this._miss)}_notifyRemove(s,t,e,h){let r;return this._removeFuncs.some(i=>{if(s.startsWith(i[0])){const o=i[1](t,h,e);return typeof o=="number"&&(r=o),!0}return!1}),r}_checkSize(){this._users.forAll(s=>this._checkSizeLimits(s)),this._checkSizeLimits()}_checkSizeLimits(s){const t=s??this;if(t.maxSize<0||t.size<=t.maxSize)return;const e=s==null?void 0:s.id;let h=!0;for(;h;){h=!1;for(const[r,i]of this._db)if(i.lifetime===0&&(!e||r.startsWith(e))){if(this._purgeItem(r,i,s),t.size<=.9*t.maxSize)return;h||(h=this._db.has(r))}}for(const[r,i]of this._db)if((!e||r.startsWith(e))&&(this._purgeItem(r,i,s),t.size<=.9*t.maxSize))return}_purgeItem(s,t,e=this._users.find(h=>s.startsWith(h.id))){if(this._db.delete(s),t.lives<=1){this._size-=t.size,e&&(e.size-=t.size);const h=this._notifyRemove(s,t.entry,t.size,n.SOME);h!=null&&h>0&&(this._size+=h,e&&(e.size+=h),t.lives=t.lifetime,t.size=h,this._db.set(s,t))}else--t.lives,this._db.set(s,t)}}let g=0;class S{constructor(s,t,e){this.entry=s,this.size=t,this.lifetime=e,this.lives=e}}export{c as e,b as h,f as i,y as r,n as s};
