const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./I3STreeDebugger-B9tvSEwc.js","./tslib.es6-B3Jf3DVX.js","./geometry-D964gYQX.js","./subclass-BZA_h8Db.js","./Extent-Bf3YTe7m.js","./Point-Cg0-ChZE.js","./Accessor-BLX9ikPh.js","./cast-Bjksrh93.js","./writer-DNAwXnhG.js","./assets-C43MgM-v.js","./index-Bh2oEzTI.js","./index-2kwcjS9-.css","./jsonMap-0cxwUWs2.js","./Polyline-D9YkgmM_.js","./mathUtils-C4_ghTv4.js","./mat4-GpOFENPA.js","./vec3f64-BLpZdpfb.js","./common-DQOJ18NT.js","./mat4f64-Dk4dwAN8.js","./vec32-Dvg_eL9J.js","./projectBuffer-Bs7GwaPY.js","./geodesicConstants-DWQLYX7F.js","./TileTreeDebugger-OrVa2xuv.js","./Color-BCS62Hs5.js","./colorUtils-0bJDPow9.js","./Graphic-DsxsIjhH.js","./PopupTemplate-BHMhS05j.js","./Clonable-D3rtuBWg.js","./Collection-CEdjem1-.js","./Evented-BHRw9x22.js","./shared-B3wH2qpO.js","./SimpleObservable-KocWTzVy.js","./fieldUtils-tmQlKvWo.js","./intl-CChhNOV8.js","./date-DlqISzcw.js","./locale-C9TlLpzi.js","./messages-OmQvZhAg.js","./enumeration-Ba5njXdz.js","./ActionToggle-iT4slXc7.js","./Identifiable-B1UbsKNt.js","./symbols-CNimns--.js","./TextSymbol-D8QO_KUV.js","./screenUtils-_ZIvrt5o.js","./materialUtils-DarhapKC.js","./opacityUtils-C68Tlu6_.js","./aaBoundingBox-BE7cC1jD.js","./persistableUrlUtils-fa1mAujs.js","./collectionUtils-D_lHIu88.js","./Portal-C10FKnaA.js","./Loadable-BabW5Xcc.js","./Promise-B2Hu02L7.js","./reactiveUtils-C5zUhJQJ.js","./asyncUtils-CWX51uTe.js","./jsonUtils-CEfjT-BK.js"])))=>i.map(i=>d[i]);
import{_ as V}from"./index-Bh2oEzTI.js";import{r as u}from"./tslib.es6-B3Jf3DVX.js";import{ae as H,af as j,n as w,M as q,a7 as Q,m as c,a as T}from"./subclass-BZA_h8Db.js";import{q as y,a as F}from"./Accessor-BLX9ikPh.js";import{initial as N,watch as U}from"./reactiveUtils-C5zUhJQJ.js";import{o as z}from"./vec32-Dvg_eL9J.js";import{_ as B,n as k}from"./vec3f64-BLpZdpfb.js";import{n as S}from"./projectBuffer-Bs7GwaPY.js";import{n as W,e as Z}from"./projectVectorToVector-G2uWGoIb.js";import{o as K,i as Y}from"./Extent-Bf3YTe7m.js";import{t as A,e as J}from"./aaBoundingBox-BE7cC1jD.js";import{o as X}from"./projection-B971H0Re.js";import{o as tt}from"./LayerConstants-B33OP6sh.js";import{Z as et}from"./dehydratedFeatures-BiOblf0d.js";import{c as rt}from"./hydratedFeatures-DBKLr8hT.js";import{G,K as it}from"./I3SOverrides-CoXeuGic.js";import{d as ot}from"./FeatureFilter-BMHRQSxq.js";import{b as P}from"./Query-5Xpquc1r.js";import{v as st}from"./basemapUtils-B9TjOm47.js";import{h as at}from"./WorkerHandle-T1sH-Myb.js";import{l as nt}from"./LayerView3D-Dkb0AiwM.js";import{D as pt,l as dt}from"./Graphics3DFeatureProcessor-BY1APY3j.js";import{w as lt,a as ht,i as mt,u as ut,f as ct,b as gt}from"./SceneLayerView-D0WPx7Fp.js";import{o as _t}from"./Evented-BHRw9x22.js";import{X as ft,e as yt,k as bt,A as vt,Q as M}from"./I3SUtil-BALmNw_P.js";import{u as It,t as xt}from"./TemporalSceneLayerView-D_Uh4zcF.js";import{t as Et}from"./LineCallout.glsl-C1R4fy2f.js";import{i as wt}from"./PopupSceneLayerView-DLoyiTmg.js";import{t as C}from"./Material-_xx7OZxD.js";import{J as Nt,s as Ct}from"./orientedBoundingBox-DOAJUK5g.js";import{t as Ot}from"./ShadowCastAccumulate.glsl-BNKV7IEU.js";import{C as Dt}from"./RibbonLine.glsl-BZu1FDpE.js";import{u as Ft}from"./popupUtils-BaLxn3kI.js";import{c as St}from"./HighlightDefaults-D4ckYWWJ.js";import{g as At}from"./Scheduler-CJu5awNf.js";import"./asyncUtils-CWX51uTe.js";import"./Collection-CEdjem1-.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./common-DQOJ18NT.js";import"./mathUtils-C4_ghTv4.js";import"./Point-Cg0-ChZE.js";import"./cast-Bjksrh93.js";import"./writer-DNAwXnhG.js";import"./assets-C43MgM-v.js";import"./jsonMap-0cxwUWs2.js";import"./geodesicConstants-DWQLYX7F.js";import"./Polyline-D9YkgmM_.js";import"./projectPointToVector-GINIbYMz.js";import"./quantizationUtils-uj_P09aO.js";import"./geometry-D964gYQX.js";import"./Field-ybkHhtnK.js";import"./enumeration-Ba5njXdz.js";import"./fieldType-BuzM0UHS.js";import"./Graphic-DsxsIjhH.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./fieldUtils-tmQlKvWo.js";import"./intl-CChhNOV8.js";import"./date-DlqISzcw.js";import"./locale-C9TlLpzi.js";import"./messages-OmQvZhAg.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./screenUtils-_ZIvrt5o.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./Portal-C10FKnaA.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./jsonUtils-CEfjT-BK.js";import"./ViewingMode-Dodu7ZZk.js";import"./MemCache-Dx1v3xLC.js";import"./uuid-fwrPAdZb.js";import"./mat3-BRl2i9Bz.js";import"./mat3f64-BBpwCtoL.js";import"./RenderTexture-CDO7DfmT.js";import"./meshVertexSpaceUtils-CXzOFlTI.js";import"./MeshLocalVertexSpace-LEHwMUnu.js";import"./sphere-C77djCO6.js";import"./mat4-GpOFENPA.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./plane-IENfwZlB.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./vec2f64-miziP1SN.js";import"./mathUtils-BG-eq9fO.js";import"./resourceUtils-B0XGoEvl.js";import"./renderState-DQLu6AJX.js";import"./enums-D9v74xTE.js";import"./AlphaCutoff-UcccL64p.js";import"./Texture-Fac_8AOC.js";import"./interfaces-DDtDqZYj.js";import"./VertexAttribute-Cq4MnHjR.js";import"./BindType-BmZEZMMh.js";import"./Util-BIfApRF5.js";import"./Texture-Begq2x5n.js";import"./Matrix3DrawUniform-CiBFaSz6.js";import"./compilerUtils-Dw3R0f-Z.js";import"./vec2-maR1OrZI.js";import"./lengthUtils-DL1-FDQQ.js";import"./ShaderTechniqueConfiguration-CBbn2DCi.js";import"./Indices-DflDlU4Z.js";import"./triangle-PTGDC_xJ.js";import"./lineSegment-D7sKPPYf.js";import"./requestImageUtils-DgMiQwsm.js";import"./DefaultMaterial-DgOvtNL9.js";import"./InterleavedLayout-e-di2fxs.js";import"./BufferView-_QDXRCew.js";import"./VertexColor.glsl-_ARMpsAT.js";import"./verticalOffsetUtils-BDQLpfho.js";import"./doublePrecisionUtils-B0owpBza.js";import"./DecodeSymbolColor.glsl-BPIX0fAF.js";import"./I3SNode-DvnboJA7.js";import"./ElevationRange-BrgM1moX.js";import"./I3SBinaryReader-D1r70N_w.js";import"./spatialReferenceEllipsoidUtils-DBE_OFra.js";import"./frustum-CQrOepbv.js";import"./ReactiveSet-BU2iaegS.js";import"./featureQueryAll-DnVoEjkM.js";import"./meshFeatureSet-CeeA_du7.js";import"./Mesh-Dq3yHM_F.js";import"./axisAngleDegrees-Ci2HA7Jo.js";import"./quat-4pa1e6ds.js";import"./MeshComponent-C3VFvn4B.js";import"./imageUtils-CtmzXUTE.js";import"./meshProperties-C4iW0Ukm.js";import"./MeshTransform-D2t3aEmK.js";import"./MeshVertexAttributes-BgxxMxrG.js";import"./triangulationUtils-DWWEtF_0.js";import"./earcut-Lltz9D9k.js";import"./deduplicate-DIJK2kGw.js";import"./vertexSpaceConversion-CPh5QK5U.js";import"./computeTranslationToOriginAndRotation-Q27G6TBL.js";import"./vec3-kbEkneOB.js";import"./vec4-BpYqBTK4.js";import"./External-B2-Xb0PD.js";import"./infoFor3D-C0hFfS1m.js";import"./FeatureSet-BHEkYP03.js";import"./meshFeatureAttributes-ch2d0Ntd.js";import"./TimeExtent-DocT5yPf.js";import"./timeUtils-8fb_2oAt.js";import"./DataLayerSource-BKkswDvG.js";import"./FullTextSearch-Csd1Hktu.js";import"./Basemap-DVYOaWHz.js";import"./loadAll-B6mYSptb.js";import"./PortalItem-DzgXrpyc.js";import"./writeUtils-Dz7BsE1e.js";import"./layerUtils-BrNoooE9.js";import"./utils-93yNk4Xc.js";import"./mat4f32-DcsiF_Rp.js";import"./workers-D4HfeYKj.js";import"./Queue-yu3bZ02p.js";import"./heightModelInfoUtils-C6gW75mB.js";import"./HeightModelInfo-9nOoV6LU.js";import"./arcgisLayerUrl-BX1FE5Hm.js";import"./hash-CcEbRgUF.js";import"./diffUtils-BP7jmOAy.js";import"./UpdatingHandles-GfwcIh5z.js";import"./UniqueValueRenderer-BQtAHUSo.js";import"./colorRamps-pKd7I5WZ.js";import"./SizeVariable-936USOrb.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DX1kS9Se.js";import"./ColorStop-Dk3U5tCk.js";import"./jsonUtils-Ds2Sqto-.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./RendererLegendOptions-B-4se3aU.js";import"./styleUtils-BYTm14n3.js";import"./renderingInfoUtils-DAsRBUXK.js";import"./ExtentSet-BhWFQ8Zv.js";import"./ClassBreaksRenderer-BuHwSyVK.js";import"./jsonUtils-DxpLMo6d.js";import"./LRUCache-B_PHMSGm.js";import"./Version-BSlAgupz.js";import"./FieldsIndex-DpwHKAMX.js";import"./UnknownTimeZone-BkowvBs8.js";import"./OverrideHelper-ti072FkP.js";import"./colorUtils-aL8wj-8G.js";import"./utils-D2PLyMFF.js";import"./enums-CmIX1y88.js";import"./HeatmapColorStop-BJc5nbwr.js";import"./heatmapUtils-Dwiv9IEa.js";import"./SimpleRenderer-BV2L9G_n.js";import"./Layer-CVt7Hb5J.js";import"./rendererConversion-CcWsy4Z5.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./optimizedFeatureQueryEngineAdapter-BOPMFOve.js";import"./centroid-DdLmOD72.js";import"./graphicUtils-CWEFaVJb.js";import"./sdfPrimitives-CUWZbMRe.js";import"./vec3f32-nZdmKIgz.js";import"./floatRGBA-CfH_2xsy.js";import"./PooledRBush-D7s4d_Fs.js";import"./quickselect-QQC62dOK.js";import"./unitConversionUtils-BMfW9yAe.js";import"./dehydratedFeatureUtils-B--Sgpdi.js";import"./intersectorUtils-BK9EUwUf.js";import"./boundedPlane-EV1sS2Ke.js";import"./InputManager-Ba9xzDpe.js";import"./signal-D4lghLjV.js";import"./layerViewUtils-DhFEu8Rd.js";import"./Graphics3DObjectStates-DLTNWJbN.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-DrzbS-Dm.js";import"./normalizeUtils-EVmAQ-ak.js";import"./normalizeUtilsCommon-dT81xWiM.js";import"./utils-6jMaHUrH.js";import"./utils-Bema0iXE.js";import"./featureConversionUtils-D14h8iad.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./WhereClause-BNiy948d.js";import"./TimeOnly-DOn_Hy89.js";import"./timeSupport-T1g9-JyG.js";import"./queryUtils-O-WFKoZd.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-Bh2cHa3t.js";import"./utils-BwQ00KBJ.js";import"./utils-rwwdQ1Ui.js";import"./ClassBreaksDefinition-CS8Z_VNX.js";import"./SnappingCandidate-O5eRSE6e.js";import"./highlightUtils-BYmbiZ48.js";import"./languageUtils-JGnUBrxZ.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-OyXfj1UM.js";import"./number-CUaGJe2K.js";import"./LayerView-CGYm21KA.js";import"./edgeUtils-BUKTgPFR.js";import"./Float4DrawUniform-N58YDhuZ.js";import"./timeSupport-CXKPoROL.js";import"./timeUtils-BnYjW4Rc.js";import"./utils-BpB3MnW1.js";import"./tagSymbols-BPcGfZon.js";import"./ElevationProvider-C95wyCKc.js";import"./vec2f32-BbH2jxlN.js";import"./RealisticTree.glsl-CAmeC2w1.js";import"./Viewpoint-C4FqWA2d.js";import"./Cyclical-oTUX3aX7.js";import"./jsxFactory-CJa39Fro.js";import"./GraphicsCollection-FfahqxsR.js";import"./RenderCoordsHelper-C50UGjbb.js";import"./projectVectorToPoint-DcLtSZYw.js";import"./scaleUtils-D_Nw3nhM.js";import"./DefaultUI-C0utm694.js";import"./Map-iWpb5DpI.js";import"./Ground-CAIVlzbd.js";import"./CollectionFlattener-CQN6i8ZK.js";import"./editableLayers-Cn9dHzhB.js";import"./catalogUtils-DyGHPM81.js";import"./TablesMixin-5umgS75f.js";import"./ReactiveMap-6CfRGOlR.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-WcqhHU65.js";import"./a11yUtils-cyWndM8Q.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-hWbBTR_7.js";import"./CompassViewModel-C7G3VWNL.js";import"./utils-DsJqvptN.js";import"./GoTo-Wtu9mgoE.js";import"./NavigationToggle-BIWeotJk.js";import"./ZoomViewModel-oUfjVFgI.js";import"./viewpointUtils-Bq9TFP4R.js";import"./earthUtils-ByXwmaX5.js";import"./spatialReferenceSupport-yRFduOSO.js";import"./ElevationSamplerData-DF8Bl6I9.js";import"./terrainUtils-CPZNZdjg.js";import"./TileInfo-Dphjf6xH.js";import"./TileKey-DZd6gJy7.js";import"./OverlayCompositing.glsl-CiE3Tt8y.js";import"./MergedRenderer-Dli9s1X5.js";import"./VertexArrayObject-lPxPk5E-.js";import"./NestedMap-GuqgquCN.js";import"./glUtil-D0YUa0ow.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./weather-eV4wTXCK.js";import"./BufferObject-BVi1lwBq.js";import"./Intersector-wXoCuQ8W.js";import"./Program-mfcb06fW.js";import"./ShadowCastVisualizeTechniqueConfiguration-Bb-Uir0o.js";import"./Environment-BDo9QJi6.js";import"./Compositing.glsl-DMM7CJmu.js";import"./Blit-B-VutIER.js";import"./unitFormatUtils-CZ2bRlFg.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./quantityUtils-D0GB2dMc.js";import"./ZoomMomentumEstimator-DA-HeSfK.js";import"./HUDMaterial.glsl-D6WRipwF.js";import"./labelFormatUtils-DFKxfrJb.js";import"./labelUtils-B8petyBk.js";import"./NormalUtils.glsl-DwmdcsLR.js";import"./fontUtils-BKHqaMFz.js";import"./LodRenderer-EVrH9dsH.js";import"./Octree-C8d4sqjv.js";import"./Intersector-BQ92CPLA.js";import"./FeaturePipelineRenderManager-DjjUkvYY.js";import"./elevationInfoUtils-BC_66_Fg.js";import"./ElevationQueryTileCache-D4sXpJpw.js";import"./intersectorUtilsConversions-D_fcRVdX.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./vec33-DUxPafiq.js";import"./Normals-DzBXR8Bg.js";import"./TileStrategy-DT04gaWW.js";import"./TileKey-Cs1awCRX.js";import"./QueueProcessor-DZiVr5XH.js";import"./RenderableTile-Dl7jrqnB.js";import"./config-MDUrh2eL.js";import"./StyleDefinition-BTt_i6C1.js";import"./enums-BRzLM11V.js";import"./GeometryUtils-Dyjqugo6.js";import"./DefaultVertexAttributeLayouts-PrbBmwty.js";import"./DisplayObject-DGZ6h7sV.js";import"./resources-CLJpJAXm.js";import"./ShaderTechniqueRepository-hTzew41Z.js";import"./testSVGPremultipliedAlpha-uTaDUvFS.js";import"./RenderingContext-C2W2PIoX.js";import"./ProgramCache-BcuuBWLJ.js";import"./debugFlags-BF6Z0j0F.js";class $ extends at{constructor(e){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:i=>[i.geometryBuffer]},e,{hasInitialize:!0})}}class Gt extends _t{constructor(e,i){super(),this._updateAndCompare=e,this._notifyUpdated=i,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const e=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:e})}this._nodes.clear()}get length(){return this._graphics.size}get(e){return this._graphics.get(e)}getNode(e){return this._nodes.get(e)}hasNode(e){return this._nodes.has(e)}nodes(){return this._nodes.values()}addNode(e,i){this._nodes.set(e,i);const r=i.graphics;if(r.length===0)return;const o=new Set;for(let a=0;a<r.length;a++){const n=r[a],p=n.objectId,h=this._graphics.get(p);if(h){o.add(p),n!==h&&(r[a]=h);const l=this._duplicates.get(p);l?l.push(e):this._duplicates.set(p,[h.nodeIndex,e])}else n.nodeIndex=e,this._graphics.set(p,n)}o.size&&this._updateForeignGraphics(i);const s=o.size>0?r.filter(a=>!o.has(a.objectId)):r;s.length>0&&this.emit("change",{added:s,removed:[]})}removeNode(e){const i=this._nodes.get(e);if(!i)return;this._nodes.delete(e);const r=new Set,o=[];for(const s of i.graphics){const a=s.objectId,n=this._graphics.get(a);if(!n)continue;const p=this._duplicates.get(a);if(p){const h=p.indexOf(e);if(h===-1)continue;if(p.splice(h,1),n.nodeIndex===e){let l=this.getNode(p[0]);for(let d=1;d<p.length;d++){const g=this.getNode(p[d]);(l==null||g!=null&&g.node.level>l.node.level)&&(l=g)}l!=null&&r.add(l)}p.length===1&&this._duplicates.delete(a)}else this._graphics.delete(a),o.push(s)}o.length>0&&this.emit("change",{added:[],removed:o}),r.forEach(s=>this._updateForeignGraphics(s))}_updateForeignGraphics(e){const i=[],r=e.node.index,o=e.node.level;let s=0;for(;s<e.graphics.length;){const a=e.graphics[s].nodeIndex;if(a===r){s++;continue}let n=1;for(;s+n<e.graphics.length&&e.graphics[s+n].nodeIndex===a;)n++;const p=this.getNode(a);if(p!=null&&p.node.level>o)s+=n;else{for(let h=s;h<s+n;h++){const l=e.graphics[h];l.nodeIndex=r,this._updateAndCompare(l,e,h)&&i.push(l)}s+=n}}i.length>0&&this._notifyUpdated(i)}toArray(){return Array.from(this._graphics.values())}find(e){return H(this._graphics,e)}some(e){return j(this._graphics,e)}forEach(e){this._graphics.forEach(i=>e(i))}forEachNode(e){this._nodes.forEach((i,r)=>e(i,r))}get nodeCount(){return this._nodes.size}_checkInvariants(){const e=new Map;this._nodes.forEach((i,r)=>{i.graphics.forEach(o=>{e.set(o.objectId,1+(e.get(o.objectId)??0)),this._duplicates.get(o.objectId)})}),e.forEach((i,r)=>{const o=this._graphics.get(r);if(!o||!this._nodes.get(o.nodeIndex))return;const s=this._duplicates.get(r);s&&s.forEach(a=>{this._nodes.get(a)})})}}const R=gt();class Pt{constructor(e,i,r,o){this.graphics=e,this.featureIds=i,this.attributeInfo=r,this.node=o}}let m=class extends It(xt(wt(nt(lt)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this._pendingEditsQueue=Promise.resolve(),this.loadedGraphics=new Gt((t,e,i)=>Rt(t,e,i),t=>this.processor.graphicsCore.recreateGraphics(t)),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(t,e){return t.url===this.layer.url&&this._i3sOverrides.isEmpty?t.load(e).then(()=>{var r;ft(this.layer,t,this._i3sOverrides),this.layer=t,this._i3sOverrides.destroy();const i=(r=this.view.resourceController)==null?void 0:r.memoryController;this._i3sOverrides=new G({view:this.view,layer:t,memoryController:i}),y(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()}):null}initialize(){var e,i;this.addResolvingPromise(this.layer.indexInfo);const t=(e=this.view.resourceController)==null?void 0:e.memoryController;this._i3sOverrides=new G({view:this.view,layer:this.layer,memoryController:t}),yt(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new ht({layerView:this}),this._updatingHandles.add(()=>this.layer.rangeInfos,r=>this._rangeInfosChanged(r),N),this._updatingHandles.add(()=>this.layer.renderer,(r,o)=>this._rendererChange(r,o)),this._updatingHandles.add(()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted],()=>this._filterChange()),this.addHandles(U(()=>C.I3S_TREE_SHOW_TILES,r=>{if(r&&!this._treeDebugger){const o=this._controller.crsIndex;V(()=>import("./I3STreeDebugger-B9tvSEwc.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53]),import.meta.url).then(({I3STreeDebugger:s})=>{!this._treeDebugger&&C.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new s({lv:this,view:this.view,nodeSR:o}))})}else r||!this._treeDebugger||C.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},N)),this._set("processor",new pt({owner:this,preferredUpdatePolicy:Dt.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:r=>this._updateClippingExtent(r)})),(i=this.processor.elevationAlignment)==null||i.events.on("invalidate-elevation",({extent:r,spatialReference:o})=>this._controller.updateElevationChanged(r,o)),this.supportsHeightUnitConversion&&(this._verticalScale=X("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.when()),this._memCache=this.view.resourceController.memoryController.newCache(`psl-${this.uid}`),this._controller=new it({layerView:this}),bt(this.layer.geometryDefinitions)&&(this._worker=new $(r=>this.view.resourceController.immediate.schedule(r))),this.addHandles(this.layer.on("apply-edits",r=>this._updatingHandles.addPromise(r.result))),this.addHandles(this.layer.on("edits",r=>{const o=this._pendingEditsQueue.then(()=>this._handleEdits(r)).then();this._pendingEditsQueue=o,this._updatingHandles.addPromise(o)})),this.when(()=>{this._setupQueryEngine(),this._updatingHandles.add(()=>this.maximumNumberOfFeatures,r=>this._controller.featureTarget=r,N),this._updatingHandles.add(()=>this.suspended,r=>{r&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=y(this._treeDebugger),this._i3sOverrides=y(this._i3sOverrides),this._set("processor",y(this.processor)),this._controller=y(this._controller),this._queryEngine=y(this._queryEngine),this._worker=y(this._worker),this._memCache=y(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=y(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??1}get requiredFields(){var t;return((t=this._fieldsHelper)==null?void 0:t.requiredFields)??[]}get maximumNumberOfFeatures(){var e,i;const t=(i=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:i.displayFeatureLimit;return(t==null?void 0:t.maximumNumberOfFeatures)??0}set maximumNumberOfFeatures(t){t!=null?(this._override("maximumNumberOfFeatures",t),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){var t;return!this.suspended&&!!((t=this._controller)!=null&&t.useMaximumNumberOfFeatures)&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const t=this.layer.excludeObjectIds;return t.length?t.toArray().sort((e,i)=>e-i):null}get lodFactor(){return this.layer.semantic==="Labels"?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}get contentVisible(){var t;return!this.suspended&&!!((t=this._controller)!=null&&t.rootNodeVisible)}get legendEnabled(){var t;return this.contentVisible&&((t=this.i3slayer)==null?void 0:t.legendEnabled)===!0}async whenGraphicAttributes(t,e){return vt(this.layer,t,this._getObjectIdField(),e,()=>[...this.loadedGraphics.nodes()])}getHit(t){var r;if(!this.loadedGraphics)return null;const e=rt(this.loadedGraphics.find(o=>o.uid===t),this.layer),i=this._getObjectIdField();return(r=e==null?void 0:e.attributes)!=null&&r[i]?(e.layer=this.layer,e.sourceLayer=this.layer,{type:"graphic",graphic:e,layer:e.layer}):null}whenGraphicBounds(t,e){return this.processor.whenGraphicBounds(t,e)}computeAttachmentOrigin(t,e){return this.processor.computeAttachmentOrigin(t,e)}isUpdating(){var t,e,i;return!!((t=this._controller)!=null&&t.updating||(e=this.processor)!=null&&e.updating||(i=this._fieldsHelper)!=null&&i.updating||this.layerFilterUpdating)}highlight(t,e){return this.processor.highlight(t,this.layer.objectIdField,e??St)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(t){return mt(this._attributeEditingContext,t)}async _decompressBinaryPointData(t,e){const i={geometryBuffer:t.geometryBuffer};this._worker==null&&(this._worker=new $(o=>this.view.resourceController.immediate.schedule(o)));const r=await this._worker.invoke(i,e);if(r==null)throw new Error("Failed to decompress Draco point data");return{positionData:r.positions,featureIds:r.featureIds}}async addNode(t,e,i){var f;if(!O(e)&&!$t(e))throw new Error;if(this.loadedGraphics.hasNode(t.index))return void w.getLogger(this).error("I3S node "+t.id+" already added");const r=this.layer.fullExtent!=null?Mt(this.layer.fullExtent.clone(),.5):null,{featureIds:o,pointPositions:s}=O(e)?await this._extractBinaryPointPositions(t,e,i):this._extractLegacyPointPositions(e),a=new Array;this._validatePositions(t,o,s,r,a);const n=this._controller.crsVertex,p=this.view.spatialReference;S(s,n,0,s,p,0,o.length);const h=O(e)?t.level:0,l=this._createGraphics(o,s,t.index,h),d=new Pt(l,o,e.attributeDataInfo,t);if(await this._i3sOverrides.applyAttributeOverrides(d.featureIds,e.attributeDataInfo,i),t.numFeatures=d.graphics.length,this._updateNodeMemory(t),D(d),a.length>0&&(this._computeObb(t,a,n),this._controller.updateVisibility(t.index)),!this._controller.isGeometryVisible(t))return void this._cacheNodeData(d);if(this._verticalScale!=null)for(const b of d.graphics)this._verticalScale(b.geometry);const g=this.view._stage.renderView.olidRenderHelper;if(g){const b=st(this.view.map,this.layer.uid);for(let x=0;x<d.featureIds.length;x++){const E=d.featureIds[x];g.setUidToObjectAndLayerId(E,d.graphics[x].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled&&!b&&Ft(this.layer,(f=this.view.popup)==null?void 0:f.defaultPopupTemplateEnabled),d.node.resources.attributes,x)}}this.loadedGraphics.addNode(t.index,d),this._controller.updateLoadStatus(t.index,!0),this._filterNode(d),this._treeDebugger&&this._treeDebugger.update()}_computeObb(t,e,i){const r=this._controller.crsIndex,o=r.isGeographic?this.view.renderSpatialReference:r;S(e,i,0,e,o,0),t.serviceObbInIndexSR=Nt(new Ct(e,3)),r.isGeographic&&(W(t.serviceObbInIndexSR.center,o,I,r),t.serviceObbInIndexSR.center=I)}isNodeLoaded(t){return this.loadedGraphics.hasNode(t)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(t,e,i){const r=await this._decompressBinaryPointData(e,i),o=r.positionData,s=3,a=o.length/s,n=A(3*a),p=t.serviceObbInIndexSR!=null?t.serviceObbInIndexSR.center:B,h=Math.abs(p[2])*2**-20;for(let l=0;l<a;l++){const d=l*s;n[d]=o[d]+p[0],n[d+1]=o[d+1]+p[1],n[d+2]=o[d+2]+p[2],Math.abs(n[d+2])<h&&(n[d+2]=0)}return{featureIds:r.featureIds?J(r.featureIds):[],pointPositions:n}}_extractLegacyPointPositions(t){var o,s;const e=t.pointData.length,i=A(3*e),r=new Array;for(let a=0;a<e;a++){const n=t.pointData[a],p=n.featureDataPosition,h=p.length,l=((o=n.geometries)==null?void 0:o[0])??Lt[h],d=n.featureIds[0];if(l.type!=="Embedded"||l.params.type!=="points"||h<2||h>3)continue;const g=((s=l.params.vertexAttributes)==null?void 0:s.position)??[0,0,0],f=3*r.length;i[f]=p[0]+g[0],i[f+1]=p[1]+g[1],i[f+2]=h===3?p[2]+g[2]:NaN,r.push(d)}return{featureIds:r,pointPositions:i}}_validatePositions(t,e,i,r,o){if(r==null&&t.serviceObbInIndexSR)return;const s=e.length,a=3;for(let n=0;n<s;n++){const p=n*a;z(I,i[p],i[p+1],i[p+2]);const h=!Number.isNaN(i[2]);r==null||(h?K(r,I):Y(r,I))||(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&w.getLogger(this).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&w.getLogger(this).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),t.serviceObbInIndexSR||o.push(I[0],I[1],I[2])}}_createGraphics(t,e,i,r){const o=t.length,s=3,a=this._getObjectIdField(),n=this.processor.graphicsCore,p=new Array,h=this.view.spatialReference;for(let l=0;l<o;l++){const d=t[l],g={};d!=null&&(g[a]=d);const f=d??F(),b=l*s,x=isNaN(e[b+2])?void 0:e[b+2],E=Z(e[b],e[b+1],x,h),v=this.loadedGraphics.get(f);if(v!=null)(v.level==null||v.level<r)&&(_.property="geometry",_.graphic=v,_.oldValue=v.geometry,_.newValue=E,v.geometry=E,v.level=r,n.graphicUpdateHandler(_)),p.push(v);else{const L=F();p.push({objectId:f,uid:L,geometry:E,attributes:g,visible:!0,nodeIndex:i,level:r})}}return p}_updateNodeMemory(t){t.memory=4096+(t.numFeatures!=null?t.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(t){const e=t.graphics.reduce((i,r)=>et(r)+i,q(t.featureIds)+1024);this._memCache.put(this._getMemCacheKey(t.node),t,e)}_getMemCacheKey(t){return`${t.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode((t,e)=>{if(t){const i=t.node;this._updateNodeMemory(i),this._cacheNodeData(t)}this._controller.updateLoadStatus(e,!1)}),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(t){const e=this._removeNodeStageData(t);e&&(this._updateNodeMemory(e.node),this._cacheNodeData(e))}_removeNodeStageData(t){const e=this.loadedGraphics.getNode(t);return e==null?null:(this._controller.updateLoadStatus(t,!1),this.loadedGraphics.removeNode(t),this._treeDebugger&&this._treeDebugger.update(),e)}async loadCachedNodeData(t){var e;return(e=this._memCache)==null?void 0:e.pop(this._getMemCacheKey(t))}async addCachedNodeData(t,e,i,r){this.loadedGraphics.hasNode(t.index)?w.getLogger(this).error("I3S node "+t.id+" already added"):(await this._i3sOverrides.applyAttributeOverrides(e.featureIds,i,r),e.attributeInfo=i,this.loadedGraphics.addNode(t.index,e),this._controller.updateLoadStatus(t.index,!0),this._updateNodeMemory(t),D(e),this._filterNode(e),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const t=[];return this.loadedGraphics.forEachNode(e=>t.push(e.node.id)),t.sort()}getVisibleNodes(){const t=new Array;return this.loadedGraphics.forEachNode(e=>t.push(e.node)),t}getLoadedNodeIndices(t){this.loadedGraphics.forEachNode((e,i)=>t.push(i))}getLoadedAttributes(t){const e=this.loadedGraphics.getNode(t);if((e==null?void 0:e.attributeInfo)!=null)return e.attributeInfo.loadedAttributes}getAttributeData(t){const e=this.loadedGraphics.getNode(t);if((e==null?void 0:e.attributeInfo)!=null)return e.attributeInfo.attributeData}_setAttributeData(t,e){const i=this.loadedGraphics.getNode(t);(i==null?void 0:i.attributeInfo)!=null&&(i.attributeInfo.attributeData=e,this._attributeValuesChanged(i))}async updateAttributes(t,e,i){const r=this.loadedGraphics.getNode(t);r!=null&&(await this._i3sOverrides.applyAttributeOverrides(r.featureIds,e,i),r.attributeInfo=e,this._attributeValuesChanged(r))}_attributeValuesChanged(t){D(t),this._filterNode(t);const{processor:e}=this,{graphicsCore:i}=e;if(i.labelsEnabled){const r=t.node.index,o=new Array;t.graphics.forEach(s=>s.nodeIndex===r&&o.push(s.uid)),i.updateLabelingInfo(o)}e.refreshFilter()}_updateClippingExtent(t){return this._controller&&this._controller.updateClippingArea(t),!1}_getObjectIdField(){return this.layer.objectIdField||tt}_getGlobalIdField(){var t;return(t=this.layer.associatedLayer)==null?void 0:t.globalIdField}async _rendererChange(t,e){const{layer:{fieldsIndex:i}}=this,r=new Set;let o,s;t?(await t.collectRequiredFields(r,i),o=Array.from(r).sort()):o=[],r.clear(),e?(await e.collectRequiredFields(r,i),s=Array.from(r).sort()):s=[],o.length===s.length&&o.every((a,n)=>o[n]===s[n])||this._reloadAllNodes()}_rangeInfosChanged(t){t!=null&&t.length>0&&w.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode(t=>this._filterNode(t))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(t){const e=this.parsedDefinitionExpression,i=this._excludeObjectIdsSorted,r=this._getObjectIdField();for(const o of t.graphics){const s=o.visible,a=!e||this._evaluateClause(e,o),n=i==null||Q(i,o.attributes[r])<0;o.visible=a&&n,s!==o.visible&&(_.graphic=o,_.property="visible",_.oldValue=s,_.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(_))}}createQuery(){const t={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(t):new P(t)}queryFeatures(t,e){return this._queryEngine.executeQuery(this._ensureQuery(t),e==null?void 0:e.signal)}queryObjectIds(t,e){return this._queryEngine.executeQueryForIds(this._ensureQuery(t),e==null?void 0:e.signal)}queryFeatureCount(t,e){return this._queryEngine.executeQueryForCount(this._ensureQuery(t),e==null?void 0:e.signal)}queryExtent(t,e){return this._queryEngine.executeQueryForExtent(this._ensureQuery(t),e==null?void 0:e.signal)}_ensureQuery(t){return this._addDefinitionExpressionToQuery(t==null?this.createQuery():P.from(t))}_setupQueryEngine(){const t=()=>this.processor.featureStore;this._queryEngine=new dt({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return t()},hasZ:this.hasZ,hasM:this.hasM},priority:At.FEATURE_QUERY_ENGINE})}get usedMemory(){var t,e;return((e=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:e.usedMemory)??0}get unloadedMemory(){var t,e,i;return .8*((((t=this._controller)==null?void 0:t.unloadedMemoryEstimate)??0)+(((i=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:i.unprocessedMemoryEstimate)??0))}get ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}async _handleEdits(t){const e=this._attributeEditingContext,i=await ut(e,t);ct(e,i)}get _attributeEditingContext(){const t=this._getObjectIdField(),e=this._getGlobalIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:t,globalIdField:e,forEachNode:i=>this.loadedGraphics.forEachNode(r=>i(r.node,r.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:i=>this.getAttributeData(i),setAttributeData:(i,r,o)=>{this._setAttributeData(i,r);const s=this.loadedGraphics.getNode(i);if(o!=null){const a=this.loadedGraphics.get(o.attributes[t]);a!=null&&this.processor.graphicsCore.recreateGraphics([a])}else s!=null&&this.processor.graphicsCore.recreateGraphics(s.graphics)},clearMemCache:()=>{}}}get performanceInfo(){return new Et(this.usedMemory,this.loadedGraphics.length,-1,this.maximumNumberOfFeatures,this.loadedGraphics.nodeCount,this.processor.graphicsCore.performanceInfo)}get test(){}};u([c()],m.prototype,"processor",void 0),u([c({type:ot})],m.prototype,"filter",void 0),u([c()],m.prototype,"loadedGraphics",void 0),u([c()],m.prototype,"i3slayer",null),u([c()],m.prototype,"_controller",void 0),u([c()],m.prototype,"updating",void 0),u([c()],m.prototype,"suspended",void 0),u([c()],m.prototype,"holeFilling",void 0),u([c(Ot)],m.prototype,"updatingProgress",void 0),u([c()],m.prototype,"updatingProgressValue",null),u([c(R.requiredFields)],m.prototype,"requiredFields",null),u([c(R.availableFields)],m.prototype,"availableFields",void 0),u([c()],m.prototype,"_fieldsHelper",void 0),u([c({type:Number})],m.prototype,"maximumNumberOfFeatures",null),u([c({readOnly:!0})],m.prototype,"maximumNumberOfFeaturesExceeded",null),u([c()],m.prototype,"_excludeObjectIdsSorted",null),u([c({readOnly:!0})],m.prototype,"lodFactor",null),u([c({readOnly:!0})],m.prototype,"hasM",null),u([c({readOnly:!0})],m.prototype,"hasZ",null),u([c()],m.prototype,"contentVisible",null),u([c({readOnly:!0})],m.prototype,"legendEnabled",null),m=u([T("esri.views.3d.layers.SceneLayerGraphicsView3D")],m);const ka=m;function $t(t){return"pointData"in t}function O(t){return"geometryBuffer"in t&&t.geometryBuffer!==null}function Rt(t,e,i){const r=e.attributeInfo;if((r==null?void 0:r.loadedAttributes)==null||r.attributeData==null)return!1;let o=!1;for(const{name:s}of r.loadedAttributes)if(r.attributeData[s]){const a=M(r.attributeData[s],i);a!==t.attributes[s]&&(t.attributes[s]=a,o=!0)}return o}function D(t){const e=t.attributeInfo,i=t.node.index;if((e==null?void 0:e.loadedAttributes)!=null&&e.attributeData!=null)for(let r=0;r<t.graphics.length;r++){const o=t.graphics[r];if(o.nodeIndex===i){o.attributes||(o.attributes={});for(const{name:s}of e.loadedAttributes)e.attributeData[s]&&(o.attributes[s]=M(e.attributeData[s],r))}}}function Mt(t,e){return t.xmin-=e,t.ymin-=e,t.xmax+=e,t.ymax+=e,t.zmin!=null&&t.zmax!=null&&(t.zmin-=e,t.zmax+=e),t.mmin!=null&&t.mmax!=null&&(t.mmin-=e,t.mmax+=e),t}const Lt={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},I=k(),_={graphic:null,property:null,oldValue:null,newValue:null};export{ka as default};
