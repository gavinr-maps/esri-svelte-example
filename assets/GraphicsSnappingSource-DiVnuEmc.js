import{r as p}from"./tslib.es6-B3Jf3DVX.js";import{b as v,O as S,s as d,D as w}from"./Accessor-BLX9ikPh.js";import{m,a as b,k}from"./subclass-BZA_h8Db.js";import{d as E}from"./asyncUtils-CWX51uTe.js";import{t as F}from"./memoize-DsJmrG76.js";import{initial as u,watch as C,on as P}from"./reactiveUtils-C5zUhJQJ.js";import{h as $}from"./UpdatingHandles-GfwcIh5z.js";import{v as A}from"./Polyline-D9YkgmM_.js";import{N as G,J as H,K as I}from"./projection-B971H0Re.js";import{a as O}from"./normalizeUtilsSync-BUrHV6iS.js";import{o as R}from"./geometry-D964gYQX.js";import{o as x}from"./featureConversionUtils-D14h8iad.js";import{e as z}from"./OptimizedFeature-6cJ-QFG5.js";import{m as Z}from"./FeatureStore-Dr0GQdbp.js";import{V as M}from"./QueryEngine-DrzbS-Dm.js";import{Z as L}from"./FieldsIndex-DpwHKAMX.js";import{y as J}from"./elevationInfoUtils-BC_66_Fg.js";import{J as y}from"./utils-Ce7L3imC.js";import{E as W,q}from"./SnappingManager-BJPyuu7J.js";import{o as N,i as T}from"./queryEngineUtils-ByAifPHc.js";import{i as g,r as j,n as f}from"./symbologySnappingCandidates-DEMddSdd.js";import{g as D}from"./Scheduler-CJu5awNf.js";import"./Collection-CEdjem1-.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./writer-DNAwXnhG.js";import"./Extent-Bf3YTe7m.js";import"./Point-Cg0-ChZE.js";import"./cast-Bjksrh93.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./jsonMap-0cxwUWs2.js";import"./mathUtils-C4_ghTv4.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./jsonUtils-CEfjT-BK.js";import"./normalizeUtilsCommon-dT81xWiM.js";import"./aaBoundingBox-BE7cC1jD.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./BoundsStore-BhV7QrYA.js";import"./PooledRBush-D7s4d_Fs.js";import"./quickselect-QQC62dOK.js";import"./timeSupport-T1g9-JyG.js";import"./queryUtils-O-WFKoZd.js";import"./normalizeUtils-EVmAQ-ak.js";import"./utils-6jMaHUrH.js";import"./utils-Bema0iXE.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-BOPMFOve.js";import"./centroid-DdLmOD72.js";import"./LRUCache-B_PHMSGm.js";import"./MemCache-Dx1v3xLC.js";import"./WhereClause-BNiy948d.js";import"./TimeOnly-DOn_Hy89.js";import"./UnknownTimeZone-BkowvBs8.js";import"./date-DlqISzcw.js";import"./locale-C9TlLpzi.js";import"./fieldType-BuzM0UHS.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./quantizationUtils-uj_P09aO.js";import"./fieldUtils-tmQlKvWo.js";import"./intl-CChhNOV8.js";import"./messages-OmQvZhAg.js";import"./utils-Bh2cHa3t.js";import"./screenUtils-_ZIvrt5o.js";import"./timeUtils-8fb_2oAt.js";import"./heatmapUtils-Dwiv9IEa.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-BwQ00KBJ.js";import"./Basemap-DVYOaWHz.js";import"./collectionUtils-D_lHIu88.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./loadAll-B6mYSptb.js";import"./Portal-C10FKnaA.js";import"./PortalItem-DzgXrpyc.js";import"./persistableUrlUtils-fa1mAujs.js";import"./writeUtils-Dz7BsE1e.js";import"./layerUtils-BrNoooE9.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./utils-rwwdQ1Ui.js";import"./ClassBreaksDefinition-CS8Z_VNX.js";import"./enumeration-Ba5njXdz.js";import"./SnappingCandidate-O5eRSE6e.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./Clonable-D3rtuBWg.js";import"./jsonUtils-CSnQD004.js";import"./parser-CTsgEym6.js";import"./utils-93yNk4Xc.js";import"./cimSymbolUtils-DXvZxabN.js";import"./utils-D2PLyMFF.js";import"./enums-CmIX1y88.js";import"./projectVectorToVector-G2uWGoIb.js";import"./projectPointToVector-GINIbYMz.js";import"./vec32-Dvg_eL9J.js";import"./Query-5Xpquc1r.js";import"./DataLayerSource-BKkswDvG.js";import"./Field-ybkHhtnK.js";import"./FullTextSearch-Csd1Hktu.js";import"./TimeExtent-DocT5yPf.js";import"./InputManager-Ba9xzDpe.js";import"./Queue-yu3bZ02p.js";import"./signal-D4lghLjV.js";import"./keybindings-DoOdil3D.js";import"./utils-BpB3MnW1.js";import"./Version-BSlAgupz.js";import"./vec2-maR1OrZI.js";import"./vec2f64-miziP1SN.js";import"./geodesicUtils-FCYOaNwu.js";import"./plane-IENfwZlB.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./mathUtils-BG-eq9fO.js";import"./sphere-C77djCO6.js";import"./mat3-BRl2i9Bz.js";import"./geometry2dUtils-DdyQE7AQ.js";import"./viewUtils-DrPohWV3.js";import"./VertexSnappingCandidate-B3OqL2vp.js";import"./PointSnappingHint-D7X20mlb.js";import"./debugFlags-BF6Z0j0F.js";const _="graphics-collections";let n=class extends v{get updating(){return this._updatingHandles.updating}get _hasZ(){const t=this.view;return t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d";if(!i||e.type==="map-notes")return g();const o=async(r,s)=>(await w(t.whenLayerView(e),s)).elevationAlignPointsInFeatures(r,s);return g(i,{elevationInfo:e.elevationInfo,alignPointsInFeatures:o})}get _snappingElevationFilter(){const{view:t}=this,e=t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes";return j(e)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d",o=this._extrudedPolygonSymbolsCount>0;return i&&e.type!=="map-notes"&&o?f(o,async(r,s)=>{const a=await t.whenLayerView(e);return d(s),a.queryForSymbologySnapping({candidates:r,spatialReference:t.spatialReference},s)}):f()}constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new $,this._memoizedMakeGetGroundElevation=F(T)}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources(t=>this._destroySource(t)),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add(()=>this.getGraphicsLayers(),i=>{this._updatingHandles.removeHandles(_);for(const o of i)this._addMany(o.graphics.toArray()),this.addHandles([o.on("graphic-update",r=>this._onGraphicUpdate(r)),this._updatingHandles.addOnCollectionChange(()=>o.graphics,r=>this._onGraphicsChanged(r))],_)},u);const{view:t}=this,{layer:e}=this.layerSource;t!=null&&t.type==="3d"&&e.type!=="map-notes"&&t.elevationProvider&&this.addHandles([t.elevationProvider.on("elevation-change",({context:i})=>{J(i,e.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),C(()=>e.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),u),P(()=>e,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(t,e){const{point:i,coordinateHelper:{spatialReference:o}}=t,r=await S(this._mapSources(l=>this._fetchCandidatesForSource(l,t,e)));d(e);const s=this._memoizedMakeGetGroundElevation(this.view,o),a=r.flat().map(l=>N(l,s));return W(i,a),a}async _fetchCandidatesForSource(t,e,i){var c;const o=q(e,((c=this.view)==null?void 0:c.type)??"2d"),r=await t.queryEngine.executeQueryForSnapping(o,i);d(i);const s=await this._snappingElevationAligner.alignCandidates(r.candidates,e.coordinateHelper.spatialReference,i);d(i);const a=await this._symbologySnappingFetcher.fetch(s,i);d(i);const l=a.length===0?s:[...s,...a];return this._snappingElevationFilter.filter(o,l)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some(e=>e.graphics.includes(t.graphic)))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const e of t.removed)this._remove(e);this._addMany(t.added)}_addMany(t){const e=[],i=new Map;for(const o of t)o.geometry!=null&&(this._needsInitializeProjection(o.geometry.spatialReference)?(e.push(o.geometry.spatialReference),i.set(o.uid,o)):this._add(o));this._createPendingAdd(e,i)}_createPendingAdd(t,e){if(!t.length)return;const i=E(async s=>{await G(t.map(a=>({source:a,dest:this.spatialReference})),{signal:s}),this._markLoadedSpatialReferences(t);for(const a of e.values())this._add(a)});this._updatingHandles.addPromise(i.promise);const o={task:i,graphics:e},r=()=>k(this._pendingAdds,o);i.promise.then(r,r),this._pendingAdds.push(o)}_markLoadedSpatialReferences(t){for(const e of t){e.wkid!=null&&this._loadedWkids.add(e.wkid);const i=e.wkt2||e.wkt;i&&this._loadedWkts.add(i)}}_add(t){if(t.geometry==null||!t.visible)return;let e=t.geometry;if(e.type==="mesh")return;e.type==="extent"&&(e=A.fromExtent(e));const i=this._ensureSource(e.type);if(i==null)return;const o=this._createOptimizedFeature(t.uid,e);o!=null&&(i.featureStore.add(o),y(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){if(t.wkid!=null&&this._loadedWkids.has(t.wkid))return!1;const e=t.wkt2||t.wkt;return(!e||!this._loadedWkts.has(e))&&!H(t,this.spatialReference)}_createOptimizedFeature(t,e){const i=I(O(e),this.spatialReference);if(!i)return null;const o=this._ensureGeometryHasZ(i),r=x(o,this._hasZ,!1);return new z(r,{[h]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const e=o=>{for(;o.length<3;)o.push(0)},i=t.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(e);break;case"polyline":i.paths.forEach(o=>o.forEach(e));break;case"polygon":i.rings.forEach(o=>o.forEach(e))}return i}_ensureSource(t){const e=this._sources[t];if(e!=null)return e;const i=this._createSource(t);return this._sources[t]=i,i}_createSource(t){const e=R.toJSON(t),i=this._hasZ,o=new Z({geometryType:e,hasZ:i,hasM:!1});return{featureStore:o,queryEngine:new M({featureStore:o,fieldsIndex:L.fromLayerJSON({fields:[{name:h,type:"esriFieldTypeOID",alias:h}]}),geometryType:e,hasM:!1,hasZ:i,objectIdField:h,spatialReference:this.spatialReference,priority:D.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources(e=>this._removeFromSource(e,t));for(const e of this._pendingAdds)e.graphics.delete(t.uid),e.graphics.size===0&&e.task.abort()}_removeFromSource(t,e){const i=e.uid;t.featureStore.has(i)&&(t.featureStore.removeById(e.uid),y(e.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:e,polygon:i,polyline:o,multipoint:r}=this._sources,s=[];return e!=null&&s.push(t(e)),i!=null&&s.push(t(i)),o!=null&&s.push(t(o)),r!=null&&s.push(t(r)),s}};p([m()],n.prototype,"getGraphicsLayers",void 0),p([m({constructOnly:!0})],n.prototype,"layerSource",void 0),p([m({constructOnly:!0})],n.prototype,"spatialReference",void 0),p([m({constructOnly:!0})],n.prototype,"view",void 0),p([m({readOnly:!0})],n.prototype,"updating",null),p([m({readOnly:!0})],n.prototype,"availability",void 0),p([m()],n.prototype,"_hasZ",null),p([m()],n.prototype,"_snappingElevationAligner",null),p([m()],n.prototype,"_snappingElevationFilter",null),p([m()],n.prototype,"_symbologySnappingFetcher",null),p([m()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),n=p([b("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const h="OBJECTID";export{n as GraphicsSnappingSource};
