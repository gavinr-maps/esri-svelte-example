import{V as a,q as n,f as i,g as s,t as l,j as o}from"./index-27db053b.js";import{m as h,u as d}from"./LayerView-26563b2c.js";import"./scaleUtils-0378b944.js";import"./Container-b45c6fd4.js";import"./parser-e532dcbf.js";import"./definitions-7eb3a064.js";import"./enums-bdecffa2.js";import"./Texture-4e3bcd4f.js";let t=class extends h(d){constructor(e){super(e),this.layerViews=new a}set layerViews(e){this._set("layerViews",n(e,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((e,r)=>e+r.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(e){}moveStart(){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,r)=>this.container.addChildAt(e.container,r))}};i([s({cast:l})],t.prototype,"layerViews",null),i([s({readOnly:!0})],t.prototype,"updatingProgress",null),t=i([o("esri.views.2d.layers.KnowledgeGraphLayerView2D")],t);const C=t;export{C as default};
