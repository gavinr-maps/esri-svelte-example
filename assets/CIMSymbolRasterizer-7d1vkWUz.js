import{i as k}from"./CIMResourceManager-B4IX3V_C.js";import{e as _,s as E,$ as F}from"./CIMSymbolHelper-BObHJeub.js";import{y as G}from"./OverrideHelper-ti072FkP.js";import{V as P}from"./utils-D2PLyMFF.js";import"./fontUtils-BKHqaMFz.js";import"./subclass-BZA_h8Db.js";import"./imageUtils-CtmzXUTE.js";import"./index-Bh2oEzTI.js";import"./assets-C43MgM-v.js";import"./tslib.es6-B3Jf3DVX.js";import"./Accessor-BLX9ikPh.js";import"./BidiEngine-DNnuvc1i.js";import"./screenUtils-_ZIvrt5o.js";import"./Polyline-D9YkgmM_.js";import"./writer-DNAwXnhG.js";import"./Extent-Bf3YTe7m.js";import"./Point-Cg0-ChZE.js";import"./cast-Bjksrh93.js";import"./jsonMap-0cxwUWs2.js";import"./mathUtils-C4_ghTv4.js";import"./TextSymbol-D8QO_KUV.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./enumeration-Ba5njXdz.js";import"./jsonUtils-CEfjT-BK.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./GeometryUtils-Dyjqugo6.js";import"./enums-CmIX1y88.js";import"./geometry-D964gYQX.js";import"./definitions-DfvbPdMm.js";import"./mat2d-D9DBP-jx.js";import"./common-DQOJ18NT.js";import"./mat2df32-orApM5a3.js";import"./vec2-maR1OrZI.js";import"./vec2f32-BbH2jxlN.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CnpCxTZE.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./colorUtils-aL8wj-8G.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./fieldUtils-tmQlKvWo.js";import"./intl-CChhNOV8.js";import"./date-DlqISzcw.js";import"./locale-C9TlLpzi.js";import"./messages-OmQvZhAg.js";import"./quantizationUtils-uj_P09aO.js";const $=96/72;class zt{constructor(y){this._spatialReference=y,this._imageDataCanvas=null,this._cimResourceManager=new k}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(y,d,w,f,a,r,m,s,M){if(!y)return null;const{data:h}=y;if(!h||h.type!=="CIMSymbolReference"||!h.symbol)return null;const{symbol:C}=h;r||(r=P(C));const o=await G.resolveSymbolOverrides(h,d,this._spatialReference,a,r,m,s),p=this._cimResourceManager,u=[];_.fetchResources(o,p,u),_.fetchFonts(o,p,u),u.length>0&&await Promise.all(u);const{width:e,height:i}=w,R=D(r,e,i,f),t=_.getEnvelope(o,R,p);if(!t)return null;t.x===1/0&&(t.x=e+2),t.y===1/0&&(t.y=-i/2),t.width===-1/0&&(t.width=e),t.height===-1/0&&(t.height=i);let n=1,v=0,x=0;switch(C.type){case"CIMPointSymbol":case"CIMTextSymbol":{let c=1;t.width>e&&(c=e/t.width);let g=1;t.height>i&&(g=i/t.height),f==="preview"&&(t.width<e&&(c=e/t.width),t.height<i&&(g=i/t.height)),n=Math.min(c,g),v=t.x+t.width/2,x=t.y+t.height/2}break;case"CIMLineSymbol":{(M||t.height>i)&&(n=i/t.height),x=t.y+t.height/2;const c=t.x*n+e/2,g=(t.x+t.width)*n+e/2,{paths:b}=R;b[0][0][0]-=c/n,b[0][2][0]-=(g-e)/n}break;case"CIMPolygonSymbol":{v=t.x+t.width/2,x=t.y+t.height/2;const c=t.x*n+e/2,g=(t.x+t.width)*n+e/2,b=t.y*n+i/2,I=(t.y+t.height)*n+i/2,{rings:l}=R;c<0&&(l[0][0][0]-=c,l[0][3][0]-=c,l[0][4][0]-=c),b<0&&(l[0][0][1]+=b,l[0][1][1]+=b,l[0][4][1]+=b),g>e&&(l[0][1][0]-=g-e,l[0][2][0]-=g-e),I>i&&(l[0][2][1]+=I-i,l[0][3][1]+=I-i)}}const z={type:"cim",data:{type:"CIMSymbolReference",symbol:o}};return this.rasterize(z,e,i,v,x,n,r,1,R)}rasterize(y,d,w,f,a,r,m,s=0,M=null){const{data:h}=y;if(!h||h.type!=="CIMSymbolReference"||!h.symbol)return null;const{symbol:C}=h,o=this._canvas,p=(window.devicePixelRatio||1)*$;o.width=d*p,o.height=w*p,m||(m=P(C)),M||(M=D(m,d,w,"legend")),o.width+=2*s,o.height+=2*s;const u=o.getContext("2d",{willReadFrequently:!0}),e=F.createIdentity();return e.translate(-f,-a),e.scale(r*p,-r*p),e.translate(d*p/2+s,w*p/2+s),u.clearRect(0,0,o.width,o.height),new E(u,this._cimResourceManager,e,!0).drawSymbol(C,M),u.getImageData(0,0,o.width,o.height)}}function D(S,y,d,w){const a=-y/2+1,r=y/2-1,m=d/2-1,s=-d/2+1;switch(S){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[a,0],[0,0],[r,0]]]};default:return w==="legend"?{rings:[[[a,m],[r,0],[r,s],[a,s],[a,m]]]}:{rings:[[[a,m],[r,m],[r,s],[a,s],[a,m]]]}}}export{zt as CIMSymbolRasterizer};
