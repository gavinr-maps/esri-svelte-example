import{r as v}from"./tslib.es6-B3Jf3DVX.js";import{U as z,m as B,p as T,v as F}from"./assets-C43MgM-v.js";import{V as O}from"./Collection-CEdjem1-.js";import{e as N,q as C}from"./Accessor-BLX9ikPh.js";import{watch as W}from"./reactiveUtils-C5zUhJQJ.js";import{m as S,a as H}from"./subclass-BZA_h8Db.js";import{w as U}from"./Extent-Bf3YTe7m.js";import{K as k,W as K}from"./projection-B971H0Re.js";import{j as $,g as A}from"./Point-Cg0-ChZE.js";import{b as D,g as J,d as Y}from"./kmlUtils-BqS_SREB.js";import{f as Q}from"./utils-6jMaHUrH.js";import{c as P}from"./GraphicsCollection-FfahqxsR.js";import{g as X,f as Z,S as tt}from"./Bitmap-DK9KkDb_.js";import{a as it}from"./BitmapContainer-g3pj899H.js";import{j as et}from"./LayerView2D-px9oN7HI.js";import{t as M}from"./GraphicContainer-GVp5Ep2A.js";import{F as R}from"./GraphicsView2D-DKl03PVr.js";import{y as rt}from"./LayerView-CGYm21KA.js";import{C as ot,i as at}from"./rasterProjectionHelper-Cyb7j9c9.js";import{b as st}from"./WGLContainer-D25GaDws.js";import{o as pt}from"./MaterialPrograms-BdU0AWCG.js";import{D as E,G as mt,U as nt,X as j}from"./enums-D9v74xTE.js";import{E as lt}from"./Program-mfcb06fW.js";import{c as ht}from"./rasterUtils-jq3RMBD1.js";import{y as ct}from"./RenderingContext-C2W2PIoX.js";import{e as q,m as dt}from"./Texture-Begq2x5n.js";import"./index-Bh2oEzTI.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./asyncUtils-CWX51uTe.js";import"./vec3f64-BLpZdpfb.js";import"./Polyline-D9YkgmM_.js";import"./writer-DNAwXnhG.js";import"./mathUtils-C4_ghTv4.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./cast-Bjksrh93.js";import"./jsonMap-0cxwUWs2.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./fieldUtils-tmQlKvWo.js";import"./intl-CChhNOV8.js";import"./date-DlqISzcw.js";import"./locale-C9TlLpzi.js";import"./messages-OmQvZhAg.js";import"./geometry-D964gYQX.js";import"./enumeration-Ba5njXdz.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./aaBoundingBox-BE7cC1jD.js";import"./jsonUtils-DxpLMo6d.js";import"./ClassBreaksRenderer-BuHwSyVK.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./screenUtils-_ZIvrt5o.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./Portal-C10FKnaA.js";import"./Loadable-BabW5Xcc.js";import"./Promise-B2Hu02L7.js";import"./UniqueValueRenderer-BQtAHUSo.js";import"./diffUtils-BP7jmOAy.js";import"./colorRamps-pKd7I5WZ.js";import"./SizeVariable-936USOrb.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DX1kS9Se.js";import"./Graphic-DsxsIjhH.js";import"./jsonUtils-CEfjT-BK.js";import"./compilerUtils-Dw3R0f-Z.js";import"./lengthUtils-DL1-FDQQ.js";import"./ColorStop-Dk3U5tCk.js";import"./jsonUtils-Ds2Sqto-.js";import"./layerUtils-BrNoooE9.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./RendererLegendOptions-B-4se3aU.js";import"./styleUtils-BYTm14n3.js";import"./LRUCache-B_PHMSGm.js";import"./MemCache-Dx1v3xLC.js";import"./Version-BSlAgupz.js";import"./FieldsIndex-DpwHKAMX.js";import"./UnknownTimeZone-BkowvBs8.js";import"./OverrideHelper-ti072FkP.js";import"./colorUtils-aL8wj-8G.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-D2PLyMFF.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-uj_P09aO.js";import"./HeatmapColorStop-BJc5nbwr.js";import"./heatmapUtils-Dwiv9IEa.js";import"./SimpleRenderer-BV2L9G_n.js";import"./FeatureSet-BHEkYP03.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./mat3-BRl2i9Bz.js";import"./DefaultUI-C0utm694.js";import"./jsxFactory-CJa39Fro.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-GfwcIh5z.js";import"./InputManager-Ba9xzDpe.js";import"./Queue-yu3bZ02p.js";import"./signal-D4lghLjV.js";import"./Map-iWpb5DpI.js";import"./Basemap-DVYOaWHz.js";import"./loadAll-B6mYSptb.js";import"./PortalItem-DzgXrpyc.js";import"./writeUtils-Dz7BsE1e.js";import"./Ground-CAIVlzbd.js";import"./CollectionFlattener-CQN6i8ZK.js";import"./editableLayers-Cn9dHzhB.js";import"./catalogUtils-DyGHPM81.js";import"./basemapUtils-B9TjOm47.js";import"./utils-93yNk4Xc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./TablesMixin-5umgS75f.js";import"./Layer-CVt7Hb5J.js";import"./TimeExtent-DocT5yPf.js";import"./timeUtils-8fb_2oAt.js";import"./HeightModelInfo-9nOoV6LU.js";import"./ReactiveMap-6CfRGOlR.js";import"./Query-5Xpquc1r.js";import"./DataLayerSource-BKkswDvG.js";import"./FullTextSearch-Csd1Hktu.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-WcqhHU65.js";import"./a11yUtils-cyWndM8Q.js";import"./heightModelInfoUtils-C6gW75mB.js";import"./arcgisLayerUrl-BX1FE5Hm.js";import"./ViewingMode-Dodu7ZZk.js";import"./vec32-Dvg_eL9J.js";import"./HighlightDefaults-D4ckYWWJ.js";import"./imageUtils-CtmzXUTE.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-hWbBTR_7.js";import"./CompassViewModel-C7G3VWNL.js";import"./utils-DsJqvptN.js";import"./GoTo-Wtu9mgoE.js";import"./NavigationToggle-BIWeotJk.js";import"./ZoomViewModel-oUfjVFgI.js";import"./vec2f32-BbH2jxlN.js";import"./DisplayObject-DGZ6h7sV.js";import"./MapView-C1_P4WdJ.js";import"./Viewpoint-C4FqWA2d.js";import"./Cyclical-oTUX3aX7.js";import"./workers-D4HfeYKj.js";import"./TileInfo-Dphjf6xH.js";import"./TileKey-DZd6gJy7.js";import"./vec2f64-miziP1SN.js";import"./vec2-maR1OrZI.js";import"./viewpointUtils-CRlgks6_.js";import"./mat2d-D9DBP-jx.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-EVmAQ-ak.js";import"./normalizeUtilsCommon-dT81xWiM.js";import"./utils-Bema0iXE.js";import"./mat2df32-orApM5a3.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CJu5awNf.js";import"./debugFlags-BF6Z0j0F.js";import"./TileStrategy-DT04gaWW.js";import"./TileKey-Cs1awCRX.js";import"./QueueProcessor-DZiVr5XH.js";import"./Tile-Bf5TzhCn.js";import"./quickselect-QQC62dOK.js";import"./definitions-DfvbPdMm.js";import"./utils-BpB3MnW1.js";import"./ColorBackground-CfloAtNa.js";import"./utils-BQBvadb7.js";import"./Container-CbFxlDqr.js";import"./EffectView-DC4OeDwG.js";import"./parser-CTsgEym6.js";import"./ClipRect-DeEaZJhE.js";import"./layerViewUtils-DhFEu8Rd.js";import"./AGraphicContainer-Bo3sLRcj.js";import"./TechniqueInstance-a5TTDhUW.js";import"./UpdateTracking2D-DEYEtGAB.js";import"./BindType-BmZEZMMh.js";import"./Util-BIfApRF5.js";import"./LabelMetric-CbxH21Le.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-CvTbgMe6.js";import"./FeatureCommandQueue-CUifz1JZ.js";import"./CIMSymbolHelper-BObHJeub.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BKHqaMFz.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./GeometryUtils-Dyjqugo6.js";import"./Rect-CUzevAry.js";import"./BufferObject-BVi1lwBq.js";import"./VertexArrayObject-lPxPk5E-.js";import"./heatmapTextureUtils-DJXJBog1.js";import"./constants-F8oTIn7N.js";import"./vec3f32-nZdmKIgz.js";import"./AttributeStore-BCrjTIMI.js";import"./TimeOnly-DOn_Hy89.js";import"./centroid-DdLmOD72.js";import"./featureConversionUtils-D14h8iad.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./labelFormatUtils-DFKxfrJb.js";import"./labelUtils-B8petyBk.js";import"./queryUtils-O-WFKoZd.js";import"./json-Wa8cmqdu.js";import"./timeSupport-T1g9-JyG.js";import"./normalizeUtilsSync-BUrHV6iS.js";import"./WGLBrushVTLSymbol-jiuyIxHa.js";import"./DefaultVertexAttributeLayouts-PrbBmwty.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-DCygKC_A.js";import"./earcut-Lltz9D9k.js";import"./programUtils-CwiKxPbA.js";import"./ProgramCache-BcuuBWLJ.js";import"./NestedMap-GuqgquCN.js";import"./renderState-DQLu6AJX.js";import"./interfaces-DDtDqZYj.js";import"./testSVGPremultipliedAlpha-uTaDUvFS.js";import"./floatRGBA-CfH_2xsy.js";import"./doublePrecisionUtils-B0owpBza.js";class l{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(l._instance)return l._instanceRefCount++,l._instance;l._instanceRefCount=1,l._instance=this,this._ownsRctx=!0;const i=document.createElement("canvas").getContext("webgl2");i.getExtension("OES_texture_float"),this._rctx=new ct(i,{})}const o={applyProjection:!0,bilinear:!1,bicubic:!1},a=pt("raster/reproject","raster/reproject",new Map([["a_position",0]]),o);this._program=this._rctx.programCache.acquire(a.shaders.vertexShader,a.shaders.fragmentShader,a.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new st(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,o,a=!1){const i=k(t.extent,o),r=new $({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:s,y:n}=ot(r,o,t.extent);let p=(s+n)/2;const m=Math.round((i.xmax-i.xmin)/p),g=Math.round((i.ymax-i.ymin)/p);p=(i.width/m+i.height/g)/2;const I=new $({x:p,y:p,spatialReference:i.spatialReference}),_=at({projectedExtent:i,srcBufferExtent:t.extent,pixelSize:I,hasWrapAround:!0,spacing:[16,16]}),w=ht(this._rctx,_),f=new q(m,g);f.wrapMode=E.CLAMP_TO_EDGE;const h=new lt(this._rctx,f);this._rctx.bindFramebuffer(h),this._rctx.setViewport(0,0,m,g),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(w,1),this._quad.bind();const{width:y=0,height:x=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",y,x),this._program.setUniform2fv("u_transformSpacing",_.spacing),this._program.setUniform2fv("u_transformGridSize",_.size),this._program.setUniform2f("u_targetImageSize",m,g),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),w.dispose(),a){const{width:c,height:V}=h,u=new ImageData(c??0,V??0);h.readPixels(0,0,c??0,V??0,mt.RGBA,nt.UNSIGNED_BYTE,u.data);const G=h.detachColorTexture(j.COLOR_ATTACHMENT0);return h.dispose(),{texture:G,extent:i,imageData:u}}const b=h.detachColorTexture(j.COLOR_ATTACHMENT0);return h.dispose(),{texture:b,extent:i}}reprojectBitmapData(t,o){const a=X(t.bitmapData)?Z(t.bitmapData):t.bitmapData,i=new q;i.wrapMode=E.CLAMP_TO_EDGE,i.width=t.bitmapData.width,i.height=t.bitmapData.height;const r=new dt(this._rctx,i,a),s=this.reprojectTexture({texture:r,extent:t.extent},o,!0);s.texture.dispose();const n=document.createElement("canvas"),p=s.imageData;return n.width=p.width,n.height=p.height,n.getContext("2d").putImageData(p,0,0),{bitmapData:n,extent:s.extent}}async loadAndReprojectBitmapData(t,o,a){const i=(await z(t,{responseType:"image"})).data,r=document.createElement("canvas");r.width=i.width,r.height=i.height;const s=r.getContext("2d");s.drawImage(i,0,0);const n=s.getImageData(0,0,r.width,r.height);if(o.spatialReference.equals(a))return{bitmapData:n,extent:o};const p=this.reprojectBitmapData({bitmapData:n,extent:o},a);return{bitmapData:p.bitmapData,extent:p.extent}}destroy(){this._ownsRctx?(l._instanceRefCount--,l._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),l._instance=null)):(this._quad.dispose(),this._program.dispose())}}l._instanceRefCount=0;class L{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let d=class extends et(rt){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new it,this._kmlVisualData=new L,this._fetchController=null,this.allVisiblePoints=new P,this.allVisiblePolylines=new P,this.allVisiblePolygons=new P,this.allVisibleMapImages=new O}async hitTest(e,t){var a,i,r;const o=this.layer;return[(a=this._pointsView)==null?void 0:a.hitTest(e),(i=this._polylinesView)==null?void 0:i.hitTest(e),(r=this._polygonsView)==null?void 0:r.hitTest(e)].flat().filter(Boolean).map(s=>(s.layer=o,s.sourceLayer=o,{type:"graphic",graphic:s,layer:o,mapPoint:e}))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new R({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new R({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new R({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",e=>{e.added.forEach(t=>this._addMapImage(t)),e.removed.forEach(t=>this._removeMapImage(t))}),W(()=>this.layer.visibleSublayers,e=>{for(const t of this._kmlVisualData.allSublayers.values())t.visibility=0;for(const t of e){const o=this._kmlVisualData.allSublayers.get(t.id);o&&(o.visibility=1)}this._refreshCollections()})]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new l}detach(){this._fetchController=N(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=C(this._polygonsView),this._polylinesView=C(this._polylinesView),this._pointsView=C(this._pointsView),this._imageReprojector=C(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){var t,o;((t=this.view.spatialReference)!=null&&t.isWGS84||(o=this.view.spatialReference)!=null&&o.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(e.href,U.fromJSON(e.extent),this.view.spatialReference).then(a=>{const i=new tt(a.bitmapData);i.x=a.extent.xmin,i.y=a.extent.ymax,i.resolution=a.extent.width/a.bitmapData.width,i.rotation=e.rotation,this._mapImageContainer.addChild(i),this._bitmapIndex.set(e,i)})}async _getViewDependentUrl(e,t){const{viewFormat:o,viewBoundScale:a,httpQuery:i}=e;if(o!=null){if(t==null)throw new Error("Loading this network link requires a view state.");let r;if(await K(),a!=null&&a!==1){const c=new U(t.extent);c.expand(a),r=c}else r=t.extent;r=k(r,A.WGS84);const s=k(r,A.WebMercator),n=r.xmin,p=r.xmax,m=r.ymin,g=r.ymax,I=t.size[0]*t.pixelRatio,_=t.size[1]*t.pixelRatio,w=Math.max(s.width,s.height),f={"[bboxWest]":n.toString(),"[bboxEast]":p.toString(),"[bboxSouth]":m.toString(),"[bboxNorth]":g.toString(),"[lookatLon]":r.center.x.toString(),"[lookatLat]":r.center.y.toString(),"[lookatRange]":w.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":r.center.x.toString(),"[lookatTerrainLat]":r.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":r.center.x.toString(),"[cameraLat]":r.center.y.toString(),"[cameraAlt]":w.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":I.toString(),"[vertPixels]":_.toString(),"[terrainEnabled]":"0","[clientVersion]":B,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},h=c=>{for(const V in c){let u;for(u in f)c[V]=c[V].replace(u,f[u])}},y=T(o);h(y);let x={};i!=null&&(x=T(i),h(x));const b=Q(e.href);return b.query={...b.query,...y,...x},`${b.path}?${F(y)}`}return e.href}async _fetchService(e){const t=new L;await this._loadVisualData(this.layer.url,t,e),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e))}_isSublayerVisible(e){const t=this._kmlVisualData.allSublayers.get(e);return!!(t!=null&&t.visibility)&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(e,t,o){return this._fetchParsedKML(e,o).then(async a=>{for(const i of a.sublayers){t.allSublayers.set(i.id,i);const r=i.points?await D(i.points):[],s=i.polylines?await D(i.polylines):[],n=i.polygons?await D(i.polygons):[],p=i.mapImages||[];if(t.allPoints.push(...r.map(m=>({item:m,sublayerId:i.id}))),t.allPolylines.push(...s.map(m=>({item:m,sublayerId:i.id}))),t.allPolygons.push(...n.map(m=>({item:m,sublayerId:i.id}))),t.allMapImages.push(...p.map(m=>({item:m,sublayerId:i.id}))),i.networkLink){const m=await this._getViewDependentUrl(i.networkLink,this.view.state);await this._loadVisualData(m,t,o)}}})}_fetchParsedKML(e,t){return J(e,this.layer.spatialReference,this.layer.refreshInterval,t).then(o=>Y(o.data))}_removeMapImage(e){const t=this._bitmapIndex.get(e);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(e))}};v([S()],d.prototype,"_pointsView",void 0),v([S()],d.prototype,"_polylinesView",void 0),v([S()],d.prototype,"_polygonsView",void 0),v([S()],d.prototype,"updating",void 0),d=v([H("esri.views.2d.layers.KMLLayerView2D")],d);const To=d;export{To as default};
