const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./ElevationQuery-LTvIma39.js","./reactiveUtils-BFQ0BtrB.js","./Evented-CXIxDjmW.js","./Accessor-D6mNnsWy.js","./subclass-BR3PhgZG.js","./shared-B3wH2qpO.js","./Point-TlcsOcXV.js","./jsonMap-DCC6W5ex.js","./writer-3zufXUNV.js","./assets-BNizZMOZ.js","./index-BVncS3aY.js","./index-CjOb8WjV.css","./Polyline-BQFeqYXi.js","./Extent-B4rrMrqp.js","./mathUtils-ClvKsMak.js","./projection-tSh-0UvX.js","./projectBuffer-iyGwL2dv.js","./geodesicConstants-kj1AtlGg.js","./ElevationSamplerData-Buk1kzZu.js","./geometry-CnaxvJsv.js","./ElevationTile-CSa7ZWHE.js","./TileKey-DZd6gJy7.js","./layersCreator-pwoFFBtV.js","./portalLayers-C03kizKz.js","./associatedFeatureServiceUtils-DrLOVkk4.js","./arcgisLayerUrl-ETqee4Bd.js","./persistableUrlUtils-Dx61-x4K.js","./Portal-DCqdz-K4.js","./Promise-CZrWwByK.js","./PortalItem-CaeKabGc.js","./lazyLayerLoader-Dvz94v5M.js","./requestPresets-xNTV8VKT.js","./layerUtils-BzjQnEdj.js","./portalItemUtils-C4O2jNL5.js","./styleUtils-BATHgMyw.js"])))=>i.map(i=>d[i]);
import{_ as c}from"./index-BVncS3aY.js";import{e as s}from"./Evented-CXIxDjmW.js";import{u as L}from"./Color-DDUWtbqR.js";import{V as $}from"./reactiveUtils-BFQ0BtrB.js";import{n as C}from"./collectionUtils-Dm1icNvk.js";import{o as A}from"./compilerUtils-BA04t1lN.js";import{b as I,n as v,c as E,a as g,y as l,N as _}from"./subclass-BR3PhgZG.js";import{f as S,u as b}from"./assets-BNizZMOZ.js";import{m as O}from"./Portal-DCqdz-K4.js";import{t as x}from"./loadAll-z9YY33Kx.js";import{b as P,u as N,s as d}from"./Accessor-D6mNnsWy.js";import{r as T}from"./writer-3zufXUNV.js";import{o as F}from"./enumeration--HlxOQ_N.js";import{r as j,n as R}from"./opacityUtils-BT7mQkwC.js";var m;let y=m=class extends S{constructor(e){super(e),this.type="none"}clone(){return new m({type:this.type})}};s([F({none:"none",stayAbove:"stay-above"})],y.prototype,"type",void 0),y=m=s([I("esri.ground.NavigationConstraint")],y);var h;let a=h=class extends b(O){constructor(e){super(e),this.opacity=1,this.surfaceColor=null,this.navigationConstraint=null,this.layers=new $;const t=r=>{r.parent&&r.parent!==this&&"remove"in r.parent&&r.parent.remove(r),r.parent=this,r.type!=="elevation"&&r.type!=="base-elevation"&&v.getLogger(this).error(`Layer '${r.title}, id:${r.id}' of type '${r.type}' is not supported as a ground layer and will therefore be ignored. Only layers of type 'elevation' are supported.`)},i=r=>{r.parent=null};this.addHandles([this.layers.on("after-add",r=>t(r.item)),this.layers.on("after-remove",r=>i(r.item))])}initialize(){this.when().catch(e=>{P(e)||v.getLogger(this).error("#load()","Failed to load ground",e)}),this.resourceInfo&&this.read(this.resourceInfo.data,this.resourceInfo.context)}destroy(){const e=this.layers.removeAll();for(const t of e)N(t);this.layers.destroy()}normalizeCtorArgs(e){return e&&"resourceInfo"in e&&(this._set("resourceInfo",e.resourceInfo),delete(e={...e}).resourceInfo),e}set layers(e){this._set("layers",C(e,this._get("layers")))}writeLayers(e,t,i,r){const o=[];e&&(r={...r,layerContainerType:"ground"},e.forEach(n=>{if("write"in n){const p={};A(n)().write(p,r)&&o.push(p)}else r!=null&&r.messages&&r.messages.push(new E("layer:unsupported",`Layers (${n.title}, ${n.id}) of type '${n.declaredClass}' cannot be persisted in the ground`,{layer:n}))})),t.layers=o}load(e){return this.addResolvingPromise(this._loadFromSource(e)),Promise.resolve(this)}loadAll(){return x(this,e=>{e(this.layers)})}async queryElevation(e,t){await this.load({signal:t==null?void 0:t.signal});const{ElevationQuery:i}=await c(()=>import("./ElevationQuery-LTvIma39.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]),import.meta.url);d(t);const r=new i,o=this.layers.filter(w).toArray();return r.queryAll(o,e,t)}async createElevationSampler(e,t){await this.load({signal:t==null?void 0:t.signal});const{ElevationQuery:i}=await c(()=>import("./ElevationQuery-LTvIma39.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]),import.meta.url);d(t);const r=new i,o=this.layers.filter(w).toArray();return r.createSamplerAll(o,e,t)}clone(){const e={opacity:this.opacity,surfaceColor:g(this.surfaceColor),navigationConstraint:g(this.navigationConstraint),layers:this.layers.slice()};return this.loaded&&(e.loadStatus="loaded"),new h({resourceInfo:this.resourceInfo}).set(e)}read(e,t){this.resourceInfo||this._set("resourceInfo",{data:e,context:t}),super.read(e,t)}_loadFromSource(e){const t=this.resourceInfo;return t?this._loadLayersFromJSON(t.data,t.context,e):Promise.resolve()}async _loadLayersFromJSON(e,t,i){const r=(t==null?void 0:t.origin)||"web-scene",o=(t==null?void 0:t.portal)||null,n=(t==null?void 0:t.url)||null,{populateOperationalLayers:p}=await c(async()=>{const{populateOperationalLayers:u}=await import("./layersCreator-pwoFFBtV.js");return{populateOperationalLayers:u}},__vite__mapDeps([22,1,2,3,4,5,23,24,9,10,11,25,26,27,28,7,8,13,6,29,30,31,32,33,15,14,12,16,17,34]),import.meta.url);d(i);const f=[];if(e.layers&&Array.isArray(e.layers)){const u={context:{origin:r,url:n,portal:o,layerContainerType:"ground"},defaultLayerType:"ArcGISTiledElevationServiceLayer"};f.push(p(this.layers,e.layers,u))}await Promise.allSettled(f)}};function V(e){return e&&"createElevationSampler"in e}function w(e){return e.type==="elevation"||V(e)}s([l({json:{read:!1}})],a.prototype,"layers",null),s([T("layers")],a.prototype,"writeLayers",null),s([l({readOnly:!0})],a.prototype,"resourceInfo",void 0),s([l({type:Number,nonNullable:!0,range:{min:0,max:1},json:{type:_,read:{reader:j,source:"transparency"},write:{writer:(e,t)=>{t.transparency=R(e)},target:"transparency"}}})],a.prototype,"opacity",void 0),s([l({type:L,json:{type:[_],write:(e,t)=>{t.surfaceColor=e.toJSON().slice(0,3)}}})],a.prototype,"surfaceColor",void 0),s([l({type:y,json:{write:!0}})],a.prototype,"navigationConstraint",void 0),a=h=s([I("esri.Ground")],a);const Y=a;export{Y as b};
