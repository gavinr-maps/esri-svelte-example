import{g as P,r as n,m as c,a as x}from"./Accessor-BmwT4B0c.js";import{h as u}from"./Color-VJEMvW-n.js";import{b as z,w as O,h as $,p as j,z as A,j as k}from"./Graphic-Dt0LgVGU.js";import{V as T}from"./reactiveUtils-XM7cS2OP.js";import{o as L}from"./mathUtils-Cfq9PL9W.js";import{S as E,m as J}from"./TextSymbol-BLIQ6RKX.js";const N=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let r=class extends P{constructor(s){super(s),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=N.map(s=>new E({color:[s[0],s[1],s[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(s){this._enabled!==s&&(this._enabled=s,this.update())}update(){if(!this._enabled)return void this.clear();const s=e=>{if(e.label!=null)return e.label;let t=e.lij.toString();return e.loadPriority!=null&&(t+=` (${e.loadPriority})`),e.measures&&(t+=`[${e.measures.lodLevel}]`),t},h=this.getTiles(),y=new Array,d=new Set((this._labels.size,this._labels.keys()));h.forEach((e,t)=>{var m;const l=e.lij.toString();d.delete(l);const M=((m=e.measures)==null?void 0:m.lodLevel)??e.level,g=e.geometry;if(this.enablePolygons&&!this._polygons.has(l)){const o=new z({geometry:g,symbol:this._symbols[M%this._symbols.length]});this._polygons.set(l,o),y.push(o)}if(this.enableLabels){const o=s(e),w=t/(h.length-1),p=L(0,200,w),_=L(20,6,w)/.75,f=e.loadPriority!=null&&e.loadPriority>=h.length,v=new u([p,f?0:p,f?0:p]),S=this.view.type==="3d"?()=>new O({verticalOffset:new j({screenLength:40/.75}),callout:new $({color:new u("white"),border:new k({color:new u("black")})}),symbolLayers:new T([new A({text:o,halo:{color:"white",size:1/.75},material:{color:v},size:_})])}):()=>new J({text:o,haloColor:"white",haloSize:1/.75,color:v,size:_}),a=this._labels.get(l);if(a){const i=S();a.symbol!=null&&JSON.stringify(i)===JSON.stringify(a.symbol)||(a.symbol=i)}else{const i=new z({geometry:g.extent.center,symbol:S()});this._labels.set(l,i),y.push(i)}}});const b=new Array;d.forEach(e=>{const t=this._polygons.get(e);t!=null&&(b.push(t),this._polygons.delete(e));const l=this._labels.get(e);l!=null&&(b.push(l),this._labels.delete(e))}),this.view.graphics.removeMany(b),this.view.graphics.addMany(y)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([c({constructOnly:!0})],r.prototype,"view",void 0),n([c({readOnly:!0})],r.prototype,"updating",void 0),n([c()],r.prototype,"enabled",null),r=n([x("esri.views.support.TileTreeDebugger")],r);export{r as d};
