import{e}from"./Evented-CXIxDjmW.js";import{S as et,u as H,t as st}from"./Accessor-D6mNnsWy.js";import{y as s,b as L}from"./subclass-BR3PhgZG.js";import{e as z,B as nt,n as E}from"./jsxFactory-Be5PKa9i.js";import{c as rt}from"./Analysis-BPeFLKhb.js";import{_ as A,ae as V}from"./Point-TlcsOcXV.js";import{d as M,P as $,A as N}from"./reactiveUtils-BFQ0BtrB.js";import{e as ot}from"./defaultUnit-6wOlq6cB.js";import"./geometry-CnaxvJsv.js";import{t as at}from"./memoize-DsJmrG76.js";import{h as lt}from"./UpdatingHandles-CMtXpTiG.js";import{x as pt}from"./hydratedFeatures-DHwl8sGq.js";import{M as ut}from"./measurementUtils-22mMXl4k.js";import{R as dt}from"./SnappingVisualizer3D-MnPwlkC2.js";import{F as mt,z as ht,q as ct}from"./dragEventPipeline3D-BsmsUwER.js";import{u as I}from"./Color-DDUWtbqR.js";import{G as gt,F as vt,P as yt,D as wt}from"./colorUtils-D5nOabzP.js";import{n as C}from"./mathUtils-ClvKsMak.js";import{h as _t}from"./lineSegment-A3_mEhFF.js";import{e as Pt}from"./interfaces-js1RL7O8.js";import{e as R}from"./interfaces-CjSZqm0S.js";import{e as k,f as ft,a as bt}from"./RenderObject-Cc5ObyLE.js";import{c as Mt}from"./Laserlines.glsl-Dgb6OMTT.js";import{s as Dt}from"./RenderGeometry-C4TY81Cr.js";import{b as Lt}from"./ElevationProvider-eMOI1-3B.js";import{o as St}from"./ShadedColorMaterial.glsl-vn9dLgnT.js";import{E as Vt,p as Ot,P as $t}from"./EditGeometryOperations-yqtNdguW.js";import{p as Ct,h as Ut}from"./InteractiveToolBase-BwczmwYA.js";import{e as xt}from"./SnappingContext-lR2hMWGP.js";import{f as Ht}from"./SnappingDragPipelineStep-Xj6G0KqT.js";import{a as At}from"./SnappingManagerPool-CxgepikZ.js";import{N as Tt}from"./SnappingManager-DFm0py-D.js";import{n as F}from"./screenUtils-BGG3AyYa.js";import{u as Gt}from"./InteractiveAnalysisViewModel-Dobr8sYR.js";import{e as B}from"./globalCss-CZa70j6i.js";import{u as zt}from"./MeasurementWidgetContent-CNKyAkoI.js";import"./intl-CArXn1et.js";import"./Promise-CZrWwByK.js";import"./jsonMap-DCC6W5ex.js";import"./assets-BNizZMOZ.js";import"./index-BVncS3aY.js";import"./uuid-fwrPAdZb.js";import"./Clonable-cKbRam6-.js";import"./Identifiable-BLvpQbOc.js";import"./writer-3zufXUNV.js";import"./shared-B3wH2qpO.js";import"./getDefaultUnitForView-C278cFTz.js";import"./Portal-DCqdz-K4.js";import"./Extent-B4rrMrqp.js";import"./Polyline-BQFeqYXi.js";import"./Graphic-Bi5hWHps.js";import"./PopupTemplate-D8mXPxzU.js";import"./fieldUtils-C5R42-PY.js";import"./enumeration--HlxOQ_N.js";import"./ActionToggle-C0Z1k2jc.js";import"./symbols-CfvYGR4J.js";import"./TextSymbol-zZq0BA1M.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./aaBoundingBox-BGxkJAW0.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./collectionUtils-Dm1icNvk.js";import"./jsonUtils-DtWlwXHP.js";import"./projectVectorToVector-BLdiwuTJ.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./projectPointToVector-C-hGM2ap.js";import"./projection-tSh-0UvX.js";import"./sphere-DIv2hmik.js";import"./mat4-ybYUU6jq.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./plane-Bz78OrLf.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-kvswLROa.js";import"./geodesicAreaMeasurementUtils-CSr4mjZE.js";import"./quantityUtils-Cz8e0KG8.js";import"./geometryEngine-DyRMGqqp.js";import"./geometryEngineBase-RmbNeFm7.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-CRSW297p.js";import"./geodesicUtils-DyOqnDq-.js";import"./geodesicLengthMeasurementUtils-YCCCQWpE.js";import"./vec2-B_ymkwGp.js";import"./elevationInfoUtils-C0SzfJu0.js";import"./unitConversionUtils-BUA_O87q.js";import"./lengthUtils-vgIBtB6M.js";import"./ExtendedLineVisualElement-CC63Pz3j.js";import"./vec4f32-CjrfB-0a.js";import"./frustum-6KI4j9vx.js";import"./EngineVisualElement-DP_S_DwA.js";import"./VisualElement-CT5Yhr5G.js";import"./Material-BN_i9QRJ.js";import"./interfaces-B8ge7Jg9.js";import"./basicInterfaces-wONHx_SN.js";import"./VertexAttribute-BnAa5VW0.js";import"./ViewingMode-Dodu7ZZk.js";import"./PointVisualElement-BUqXP0eU.js";import"./Object3DVisualElement-DudZRJcw.js";import"./ColorMaterial.glsl-8RSfQ59m.js";import"./mat3-DRqs2t5W.js";import"./BufferView-B7Z-dzh4.js";import"./Texture-DjTh7HwY.js";import"./NormalAttribute.glsl-Dqf1UPF9.js";import"./BindType-BmZEZMMh.js";import"./compilerUtils-BA04t1lN.js";import"./Util-BMqL_pkg.js";import"./enums-BlUEVwJR.js";import"./Texture-BbJIOVx_.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-B6BGScAS.js";import"./triangle-DtfDEZcP.js";import"./renderState-PYzNpa1K.js";import"./requestImageUtils-BkbekjsQ.js";import"./InterleavedLayout-UIhsB8jd.js";import"./VertexColor.glsl-BROYASAm.js";import"./floatRGBA-C8rGFKJ0.js";import"./RightAngleQuadVisualElement-ChD6bB1A.js";import"./orientedBoundingBox-WyW1LZfF.js";import"./quat-ChS85qAG.js";import"./spatialReferenceEllipsoidUtils-DuE2W35w.js";import"./computeTranslationToOriginAndRotation-CFxYfzBj.js";import"./SnappingVisualizer-Bg9_3fTb.js";import"./PointSnappingHint-DJuRAzp4.js";import"./ray-DzoXcN4v.js";import"./verticalOffsetUtils-CU5zOPGb.js";import"./colorUtils-CS9vdHXB.js";import"./interfaces-D6pIddIh.js";import"./DoubleArray-CF_CpVBS.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BufferObject-CjYoWxgZ.js";import"./vec3f32-Cw9Q6TO_.js";import"./axisAngleDegrees-CHCWDIqP.js";import"./weather-B51D8kuv.js";import"./Scheduler-CDoWuxMK.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./Float4DrawUniform-CWdxHXQ-.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-BnKLop8B.js";import"./Intersector-pThUjfQo.js";import"./MemCache-C6WUx-5V.js";import"./VertexArrayObject-Cwnso4un.js";import"./boundedPlane-Xr4Vx-V9.js";import"./geometry2dUtils-BraNT6Fs.js";import"./meshVertexSpaceUtils-BfF6O78E.js";import"./MeshLocalVertexSpace-sBjAuOT3.js";import"./dehydratedFeatureComparison-NNZuxUKF.js";import"./FeatureFilter-DqmBE6ye.js";import"./TimeExtent-Dl-qaORu.js";import"./timeUtils-DQR2jUPL.js";import"./Query-BpMwiNVl.js";import"./DataLayerSource-BX7Ap_tY.js";import"./Field-poIiHWUc.js";import"./fieldType-CIG5ey7e.js";import"./FullTextSearch-BhJOgh_r.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./layerUtils-BzjQnEdj.js";import"./InputManager-C4xu1R9l.js";import"./Queue-DpHko4Yk.js";import"./keybindings-DYR2fa8r.js";import"./utils-CXgSw6Sd.js";import"./layerViewUtils-D2JqIDZ8.js";import"./Cyclical-BY_I03kj.js";import"./UnitSelect-Cnnhr_2u.js";let b=class extends rt{constructor(t){super(t),this.type="direct-line-measurement",this.startPoint=null,this.endPoint=null,this.unit=null}get requiredPropertiesForEditing(){return[this.startPoint,this.endPoint]}clear(){this.startPoint=null,this.endPoint=null}};e([s({type:["direct-line-measurement"]})],b.prototype,"type",void 0),e([s({type:A})],b.prototype,"startPoint",void 0),e([s({type:A})],b.prototype,"endPoint",void 0),e([s({type:V,value:null})],b.prototype,"unit",void 0),e([s({readOnly:!0})],b.prototype,"requiredPropertiesForEditing",null),b=e([L("esri.analysis.DirectLineMeasurementAnalysis")],b);const j=b;var D;(function(t){t.Manipulators="manipulators",t.AnalysisViewDestroyed="analysis-view-destroyed",t.AnalysisView="analysis-view"})(D||(D={}));let u=class extends et{constructor(t){super(t),this.cursorPoint=null,this._visible=!1,this._laserLine=null,this.laserLineEnabled=!0,this._lastDraggedHandle=null}initialize(){this._laserLine=new Mt({view:this.view,attached:!0,isDecoration:!0}),this._updateVisibility(this._visible),this._connectToAnalysisView(),this.addHandles(M(()=>this._params,({laserLineGlowColor:t,laserLineInnerColor:i,laserLineGlobalAlpha:r})=>{const n=this._laserLine,l=n.style;n.style={...l,innerColor:i,glowColor:t,globalAlpha:r}}))}destroy(){this._laserLine=H(this._laserLine)}get _params(){const{accentColor:t}=this.view.effectiveTheme;return{laserLineGlowColor:I.toUnitRGB(t),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:I.toUnitRGB(gt(t)),laserLineInnerWidth:.75,laserLineGlobalAlpha:.75*t.a,handleColor:vt(t,.5),handleRadius:5}}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){}get _cursorPosition(){const t=C(),i=this.cursorPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _startPosition(){const t=C(),i=this.analysis.startPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _endPosition(){const t=C(),i=this.analysis.endPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _laserLineParams(){const t=this._focusPosition,{active:i,lineState:r}=this.toolState,n=this.analysisViewData,l=this.laserLineEnabled&&!!t&&r!=="measured"&&i;if(!l||!this.visible||n==null||n.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};const a=n.actualVisualizedMeasurement,o=this.view.viewingMode!=="local"&&l&&!!this.analysis.startPoint&&a==="geodesic",d=l&&n.viewMode===R.Triangle;return{heightManifoldTarget:a==="euclidean"?t:null,pointDistanceLine:o?this._pointDistanceLine:null,lineVerticalPlaneSegment:d?_t(this._startPosition,this._endPosition):null}}get _focusPosition(){const{lineState:t}=this.toolState,i=this.analysisViewData,r=i!=null&&!i.destroyed&&i.measurementMode===Pt.Euclidean&&i.viewMode===R.Direct;switch(t){case"drawing":return r?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case"editing":return r?this._lastDraggedHandle==="start"?this._endPosition:this._startPosition:this._lastDraggedHandle==="start"?this._startPosition:this._endPosition;default:return this.cursorPoint!=null?this._cursorPosition:null}}get _pointDistanceLine(){return{origin:this.toolState.lineState==="drawing"||this._lastDraggedHandle==="end"?this._startPosition:this._endPosition,target:this._focusPosition}}createManipulators(){const t=this._params,{view:i}=this,r=()=>{const p=ft(t.handleColor),f=[new bt(Dt(p,1,32,32))],_=new k({view:i,renderObjects:f});return _.available=!1,_.radius=t.handleRadius,[_,p]},[n,l]=r(),[a,o]=r(),d=new k({view:this.view,available:!1,interactive:!1});this.analysis.startPoint!=null&&(n.location=this.analysis.startPoint,n.available=!0),this.analysis.endPoint!=null&&(a.location=this.analysis.endPoint,a.available=!0);const c=()=>{let p=this._lastDraggedHandle;n.grabbing&&!a.grabbing&&(p="start"),a.grabbing&&!n.grabbing&&(p="end"),n.grabbing||a.grabbing||(p=null),this._lastDraggedHandle=p},P=n.events.on("grab-changed",c),w=a.events.on("grab-changed",c);return this.addHandles([P,w,M(()=>wt(this._params.handleColor),p=>{l.setParameters({color:p}),o.setParameters({color:p})},{equals:yt})],D.Manipulators),{start:n,end:a,cursor:d}}show(){this.destroyed||this._visible||this._updateVisibility(!0)}hide(){!this.destroyed&&this._visible&&this._updateVisibility(!1)}_connectToAnalysisView(){this.removeHandles(D.AnalysisView),this.addHandles([M(()=>{var t;return(t=this.analysisViewData)==null?void 0:t.destroyed},t=>{t&&this.removeHandles(D.AnalysisView)},$),M(()=>[this.toolState.lineState==="measured",this.analysisViewData],([t,i])=>{i==null||i.destroyed||(i.allowVisualElementsOrientationChange=!t)},$),M(()=>this._laserLineParams,t=>{const i=this._laserLine;i.heightManifoldTarget=t.heightManifoldTarget,i.pointDistanceLine=t.pointDistanceLine,i.lineVerticalPlaneSegment=t.lineVerticalPlaneSegment},$)],D.AnalysisView)}_updateVisibility(t){this.initialized&&(this._visible=t,t?this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha}:this.view.cursor=null,this._laserLine.visible=t)}};e([s({constructOnly:!0})],u.prototype,"view",void 0),e([s()],u.prototype,"_params",null),e([s({constructOnly:!0})],u.prototype,"analysis",void 0),e([s({constructOnly:!0})],u.prototype,"analysisViewData",void 0),e([s()],u.prototype,"cursorPoint",void 0),e([s()],u.prototype,"toolState",void 0),e([s()],u.prototype,"visible",null),e([s()],u.prototype,"testData",null),e([s()],u.prototype,"_visible",void 0),e([s()],u.prototype,"_laserLine",void 0),e([s({constructOnly:!0})],u.prototype,"laserLineEnabled",void 0),e([s()],u.prototype,"_cursorPosition",null),e([s()],u.prototype,"_startPosition",null),e([s()],u.prototype,"_endPosition",null),e([s()],u.prototype,"_lastDraggedHandle",void 0),e([s()],u.prototype,"_laserLineParams",null),e([s()],u.prototype,"_focusPosition",null),e([s()],u.prototype,"_pointDistanceLine",null),u=e([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],u);let m=class extends St{constructor(t){super(t),this._updatingHandles=new lt,this._emulatedDrag=null,this.lineState="initial",this.startPointSurfaceLocation=null,this.endPointSurfaceLocation=null,this.cursorPointSurfaceLocation=null,this.startManipulator=null,this.endManipulator=null,this.cursorManipulator=null,this._getSnappingContext=at(i=>new xt({elevationInfo:{mode:"absolute-height",offset:0},pointer:i,editGeometryOperations:new Vt(new Ot("point",$t(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new dt}))}initialize(){const{view:t,analysis:i,analysisViewData:r,visible:n}=this;this.measurementView=new u({toolState:this,view:t,analysis:i,analysisViewData:r,visible:n});const l=At(t);this._snappingManagerResult=l,this.addHandles(l);const{start:a,end:o,cursor:d}=this.measurementView.createManipulators(),c=(w,p,f)=>Ct(w,(_,K,S,T)=>{const G=ct(_),Q=this._snappingManager,X=this._getSnappingContext(T),Y=this._updatingHandles,{lineState:Z}=this;S=S.next(G).next(Ut(this,[f,p])).next(g=>{if(p!=="cursorPoint"){const v=this.analysis[p];v!=null&&(_.location=v)}return g});const tt=ht(this.view),it=g=>{const v=tt(g);return v||this.lineState!=="drawing"&&this.lineState!=="initial"||(this[p]=null,this[f]=null),v};let O=K.next(G).next(it);if(T!=="touch"||Z==="editing"){const{snappingStep:g,cancelSnapping:v}=Ht({snappingManager:Q,snappingContext:X,updatingHandles:Y});S=S.next(v),O=O.next(...g)}O.next(g=>g.action!=="start"?g:null).next(g=>{const v=pt(g.mapEnd,new A);this[p]=v,_.location=v,this[f]=this._surfaceLocation(v,g.surfaceType)})}),P=w=>w.events.on("grab-changed",()=>{const p=a.grabbing||o.grabbing;this.lineState=p?"editing":"measured"});this.addHandles([c(a,"startPoint","startPointSurfaceLocation"),c(o,"endPoint","endPointSurfaceLocation"),c(d,"cursorPoint","cursorPointSurfaceLocation"),P(a),P(o)]),this.manipulators.add(a),this.manipulators.add(o),this.manipulators.add(d),this.startManipulator=a,this.endManipulator=o,this.cursorManipulator=d,this.addHandles(M(()=>this.state,w=>{w==="measured"&&this.finishToolCreation()},N)),Tt(this)}destroy(){this._updatingHandles=H(this._updatingHandles),this.measurementView=H(this.measurementView)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){const{analysis:t}=this;if(t.startPoint==null&&t.endPoint==null)return"ready";const{lineState:i}=this;return this.validMeasurement&&i!=="editing"&&i!=="drawing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.lineState==="drawing"?"crosshair":null}get startPoint(){return this.analysis.startPoint}set startPoint(t){this.analysis.startPoint=t}get endPoint(){return this.analysis.endPoint}set endPoint(t){this.analysis.endPoint=t}get cursorPoint(){return this.measurementView.cursorPoint}set cursorPoint(t){this.measurementView.cursorPoint=t}get snappingOptions(){return this._snappingManager.options}get validMeasurement(){return this.analysis.startPoint!=null&&this.analysis.endPoint!=null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onShow(){this.measurementView.show(),this._updateManipulatorAvailability()}onHide(){this.measurementView.hide()}onDeactivate(){var t;(t=this._emulatedDrag)==null||t.cancel(),this._emulatedDrag=null}onInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t)}this._updateManipulatorAvailability()}_handlePointerMove(t){var d,c;if(!this.active||this.view.navigating)return;const{pointerType:i}=t;if(i!=="mouse")return;const r=F(t),{lineState:n,cursorManipulator:l,endManipulator:a}=this;let o=!1;this.cursorPoint==null&&((d=this._emulatedDrag)==null||d.cancel(),this._emulatedDrag=U(l,i,r),o=!0),n==="initial"&&((c=this._emulatedDrag)==null||c.update(r),o=!0),n==="drawing"&&(a.events.emit("drag",{action:"update",start:r,screenPoint:r}),o=!0),o&&t.stopPropagation()}_handleImmediateClick(t){var c,P,w,p,f;if(!this.active||!ut(t))return;const i=F(t),{pointerType:r}=t,{cursorManipulator:n,startManipulator:l,endManipulator:a,lineState:o}=this;let d=!1;switch(this.cursorPoint==null&&((c=this._emulatedDrag)==null||c.cancel(),this._emulatedDrag=U(n,r,i)),o){case"initial":if((P=this._emulatedDrag)==null||P.update(i),this.cursorPoint!=null){(w=this._emulatedDrag)==null||w.end(i),this._emulatedDrag=null;const{cursorPoint:_}=this;this.startPoint=_,this.startPointSurfaceLocation=this.cursorPointSurfaceLocation,l.location=_,l.interactive=!1,a.interactive=!1,this.lineState="drawing",this._emulatedDrag=U(a,r,i),d=!0}break;case"drawing":(p=this._emulatedDrag)==null||p.update(i),this.endPoint!=null&&((f=this._emulatedDrag)==null||f.end(i),this._emulatedDrag=null,l.interactive=!0,a.interactive=!0,this.lineState="measured",d=!0)}d&&t.stopPropagation()}_surfaceLocation(t,i){return i===mt.GROUND?"on-the-surface":(t.z??0)>=this._getElevation(t)?"above-the-surface":"below-the-surface"}_updateManipulatorAvailability(){this.startManipulator.available=this.analysis.startPoint!=null,this.endManipulator.available=this.analysis.endPoint!=null}_getElevation(t){return this.view.basemapTerrain.ready?Lt(this.view.elevationProvider,t)??0:0}get test(){}};function U(t,i,r){return t.events.emit("drag",{action:"start",pointerType:i,start:r,screenPoint:r}),{update:n=>t.events.emit("drag",{action:"update",start:n,screenPoint:n}),end:n=>t.events.emit("drag",{action:"end",start:n,screenPoint:n}),cancel:()=>t.events.emit("drag",{action:"cancel"})}}e([s({readOnly:!0})],m.prototype,"state",null),e([s()],m.prototype,"lineState",void 0),e([s({readOnly:!0})],m.prototype,"cursor",null),e([s()],m.prototype,"startPoint",null),e([s()],m.prototype,"endPoint",null),e([s()],m.prototype,"cursorPoint",null),e([s({constructOnly:!0})],m.prototype,"analysis",void 0),e([s({constructOnly:!0})],m.prototype,"analysisViewData",void 0),e([s()],m.prototype,"measurementView",void 0),e([s({constructOnly:!0})],m.prototype,"view",void 0),e([s({readOnly:!0})],m.prototype,"validMeasurement",null),e([s({value:null})],m.prototype,"startPointSurfaceLocation",void 0),e([s({value:null})],m.prototype,"endPointSurfaceLocation",void 0),e([s({value:null})],m.prototype,"cursorPointSurfaceLocation",void 0),e([s()],m.prototype,"updating",null),m=e([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],m);const Et=m;let y=class extends Gt{constructor(i){super(i),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="DirectLineMeasurement3DViewModel is only supported in 3D views.",this._userUnit=null,this._userUnitOptions=null}initialize(){this.addHandles(M(()=>({analysis:this.analysis,unit:this.unit}),({analysis:i,unit:r})=>{i!=null&&(i.unit=r)},N))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){var o;const{tool:i}=this;if(i==null)return null;const r=()=>({text:null,state:"unavailable"}),n=d=>({text:d,state:"available"}),{analysisViewData:l}=i,a=l.result!=null;return{mode:((o=l.result)==null?void 0:o.mode)??"euclidean",directDistance:a&&l.actualVisualizedMeasurement==="euclidean"?n(l.directLabelText):r(),horizontalDistance:a?n(l.horizontalLabelText):r(),verticalDistance:a?n(l.verticalLabelText):r()}}set unitOptions(i){this._userUnitOptions=i,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(i){this._userUnit=i?this._findSelectableUnit(i,this._userUnit):null}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new j}constructTool(){return new Et({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(i,r){const n=this.unitOptions;return n.includes(i)?i:r?this._findSelectableUnit(r):n[0]}_filteredOrAllUnits(i){if(!i)return V.slice();const r=i.filter(n=>V.includes(n));return r.length===0?V.slice():r}};e([s({type:j})],y.prototype,"analysis",void 0),e([s({readOnly:!0})],y.prototype,"state",null),e([s({readOnly:!0})],y.prototype,"measurement",null),e([s()],y.prototype,"unitOptions",null),e([s()],y.prototype,"unit",null),e([s(ot)],y.prototype,"defaultUnit",void 0),e([s()],y.prototype,"_userUnit",void 0),e([s()],y.prototype,"_userUnitOptions",void 0),y=e([L("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],y);const J=y,W="esri-direct-line-measurement-3d",q={base:W,newMeasurementButton:`${W}__clear-button`};let h=class extends nt{constructor(t,i){super(t,i),this.messages=null,this.messagesCommon=null,this.viewModel=new J}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get icon(){return"measure-line"}set icon(t){this._overrideIfSome("icon",t)}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesCommon:i,unit:r,unitOptions:n,viewModel:l}=this,{active:a,measurement:o,state:d,supported:c}=l;return E("div",{"aria-label":this.messages.widgetLabel,class:this.classes(q.base,B.widget,B.panel),key:this,role:"presentation"},this.visible?E(zt,{active:a,measurementItems:[{key:"direct",title:t.direct,value:x(o==null?void 0:o.directDistance)},{key:"horizontal",title:t.horizontal,value:x(o==null?void 0:o.horizontalDistance)},{key:"vertical",title:t.vertical,value:x(o==null?void 0:o.verticalDistance)}],messages:{...t,notApplicable:i==null?void 0:i.notApplicable},newMeasurementButtonClass:q.newMeasurementButton,state:d,supported:c,unit:r,unitOptions:n,onNewMeasurementClick:()=>{st(this.viewModel.start())},onUnitChange:P=>{this.unit=P}}):null)}};function x(t){return(t==null?void 0:t.state)==="available"?t.text:null}e([s()],h.prototype,"view",null),e([s()],h.prototype,"visible",null),e([s()],h.prototype,"active",null),e([s({constructOnly:!0,nonNullable:!0})],h.prototype,"analysis",null),e([s()],h.prototype,"icon",null),e([s()],h.prototype,"label",null),e([s(),z("esri/widgets/DirectLineMeasurement3D/t9n/DirectLineMeasurement3D")],h.prototype,"messages",void 0),e([s(),z("esri/t9n/common")],h.prototype,"messagesCommon",void 0),e([s()],h.prototype,"uiStrings",void 0),e([s({type:J})],h.prototype,"viewModel",void 0),e([s()],h.prototype,"unitOptions",null),e([s()],h.prototype,"unit",null),h=e([L("esri.widgets.DirectLineMeasurement3D")],h);const Ks=h;export{Ks as default};
