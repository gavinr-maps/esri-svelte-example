import{r as a}from"./tslib.es6-B3Jf3DVX.js";import{q as L,Y as se,j as oe}from"./Accessor-BLX9ikPh.js";import{m as n,a as I,n as ae}from"./subclass-BZA_h8Db.js";import{e as O,B as ne,n as W}from"./jsxFactory-CJa39Fro.js";import{watch as b,initial as S,whenOnce as me}from"./reactiveUtils-C5zUhJQJ.js";import{j as T,g as $,I as z,aa as k}from"./Point-Cg0-ChZE.js";import{_ as le,K as v,W as pe}from"./projection-B971H0Re.js";import{e as ue}from"./defaultUnit-_T4IY-sW.js";import"./geometry-D964gYQX.js";import{d as A}from"./Graphic-DsxsIjhH.js";import"./intl-CChhNOV8.js";import"./symbols-CNimns--.js";import{I as R,R as he,L as ce}from"./colorUtils-aL8wj-8G.js";import{g as B,j as de,$ as ge,d as ve,D as ye}from"./unitFormatUtils-CZ2bRlFg.js";import{h as fe}from"./UpdatingHandles-GfwcIh5z.js";import{geodesicDensify as x,planarLength as E,simplify as M,geodesicLength as _e,geodesicArea as we,planarArea as be}from"./geometryEngine-DGiYLHJy.js";import{y as U,z as _,R as G,v as q}from"./geodesicUtils-FCYOaNwu.js";import C from"./GraphicsLayer-i3FeUJ_n.js";import{l as V}from"./ViewingMode-Dodu7ZZk.js";import{d as Le}from"./SnappingVisualizer2D-Br8KvMdL.js";import{l as Me}from"./Draw-dun67gWj.js";import{E as j,p as $e,P as Ae}from"./EditGeometryOperations-Cl8Sbfxr.js";import{n as Se,p as De,E as Oe,f as Te}from"./InteractiveToolBase-vg6J8uyT.js";import{S as ke}from"./GraphicManipulator-Dc-QfW2U.js";import{e as xe}from"./SnappingContext-lR2hMWGP.js";import{f as Ge}from"./SnappingDragPipelineStep-rzVcndp8.js";import{a as qe}from"./SnappingManagerPool-CewNAGGP.js";import{G as Ce}from"./SnappingManager-BJPyuu7J.js";import{h as N}from"./messages-OmQvZhAg.js";import{g as Re}from"./locale-C9TlLpzi.js";import{S as Ue,d as Ie,m as He,a as We,y as P}from"./TextSymbol-D8QO_KUV.js";import{d as K,v as ze}from"./Polyline-D9YkgmM_.js";import{p as Be,u as Ee}from"./MeasurementWidgetContent-DYwVXn7I.js";import{e as Y}from"./globalCss-CZa70j6i.js";import"./Evented-BHRw9x22.js";import"./Promise-B2Hu02L7.js";import"./uuid-fwrPAdZb.js";import"./cast-Bjksrh93.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./asyncUtils-CWX51uTe.js";import"./Collection-CEdjem1-.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./writer-DNAwXnhG.js";import"./jsonMap-0cxwUWs2.js";import"./vec3f64-BLpZdpfb.js";import"./Extent-Bf3YTe7m.js";import"./projectBuffer-Bs7GwaPY.js";import"./mathUtils-C4_ghTv4.js";import"./geodesicConstants-DWQLYX7F.js";import"./getDefaultUnitForView-Ce2vZZap.js";import"./Portal-C10FKnaA.js";import"./Loadable-BabW5Xcc.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./fieldUtils-tmQlKvWo.js";import"./date-DlqISzcw.js";import"./enumeration-Ba5njXdz.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./ActionToggle-iT4slXc7.js";import"./Identifiable-B1UbsKNt.js";import"./jsonUtils-CEfjT-BK.js";import"./screenUtils-_ZIvrt5o.js";import"./materialUtils-DarhapKC.js";import"./opacityUtils-C68Tlu6_.js";import"./aaBoundingBox-BE7cC1jD.js";import"./persistableUrlUtils-fa1mAujs.js";import"./collectionUtils-D_lHIu88.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./Cyclical-oTUX3aX7.js";import"./quantityUtils-D0GB2dMc.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-C9rxSL4a.js";import"./GraphicsCollection-FfahqxsR.js";import"./Layer-CVt7Hb5J.js";import"./TimeExtent-DocT5yPf.js";import"./timeUtils-8fb_2oAt.js";import"./BlendLayer-CXM4n_Ge.js";import"./jsonUtils-CSnQD004.js";import"./parser-CTsgEym6.js";import"./utils-93yNk4Xc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./ScaleRangeLayer-Bb8Ig1Hz.js";import"./ElevationInfo-CA5m_tHv.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";import"./vec2-maR1OrZI.js";import"./vec2f64-miziP1SN.js";import"./enums-CmIX1y88.js";import"./SnappingVisualizer-BtjTdiTG.js";import"./PointSnappingHint-D7X20mlb.js";import"./vec32-Dvg_eL9J.js";import"./projectVectorToVector-G2uWGoIb.js";import"./projectPointToVector-GINIbYMz.js";import"./SnappingOperation-CaI4DIP4.js";import"./Scheduler-CJu5awNf.js";import"./signal-D4lghLjV.js";import"./debugFlags-BF6Z0j0F.js";import"./InputManager-Ba9xzDpe.js";import"./Queue-yu3bZ02p.js";import"./keybindings-DoOdil3D.js";import"./screenUtils-WcqhHU65.js";import"./elevationInfoUtils-BC_66_Fg.js";import"./surfaceCoordinateSystems-DhFxihAh.js";import"./memoize-DsJmrG76.js";import"./ReactiveSet-BU2iaegS.js";import"./diffUtils-BP7jmOAy.js";import"./dehydratedFeatureComparison-06VFTqH5.js";import"./angularMeasurementUtils-7e2vxqzG.js";import"./SketchLabelOptions-DDQnGNSN.js";import"./hydratedFeatures-DBKLr8hT.js";import"./mat2d-D9DBP-jx.js";import"./mat2df64-CBKYtunK.js";import"./quat-4pa1e6ds.js";import"./mat3f64-BBpwCtoL.js";import"./quatf64-CCm9z-pX.js";import"./compilerUtils-Dw3R0f-Z.js";import"./plane-IENfwZlB.js";import"./mat4f64-Dk4dwAN8.js";import"./mathUtils-BG-eq9fO.js";import"./geometry2dUtils-DdyQE7AQ.js";import"./meshVertexSpaceUtils-CXzOFlTI.js";import"./MeshLocalVertexSpace-LEHwMUnu.js";import"./interfaces-D6pIddIh.js";import"./defaults-DZ1kfMRx.js";import"./defaultsJSON-GKolV7NZ.js";import"./drapedUtils-HWKOCxgF.js";import"./Query-5Xpquc1r.js";import"./DataLayerSource-BKkswDvG.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./FullTextSearch-Csd1Hktu.js";import"./utils-BpB3MnW1.js";import"./Version-BSlAgupz.js";import"./sphere-C77djCO6.js";import"./mat3-BRl2i9Bz.js";import"./viewUtils-DrPohWV3.js";import"./UnitSelect-Bx5aDsPO.js";const y=1e5;let g=class extends Se{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new C({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new C({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new C({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new fe,this._vertices=[],this.geodesicDistanceThreshold=null,this.measurement=null,this.measurementLabel=null}initialize(){N("esri/core/t9n/Units").then(t=>{this.messages=t});const e=this.view;this._draw=new Me({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this._snappingManagerResult=qe(e),this.addHandles([Re(async()=>{this.messages=await N("esri/core/t9n/Units")}),b(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updateGraphics()},S),b(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:i})=>i);for(const{handle:i}of this._vertices)i.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)}),b(()=>this.snappingOptions.featureSources,t=>{for(const i of t)i.layer!==this._measurementLayer&&i.layer!==this._manipulatorLayer||(i.enabled=!1)},S),this._snappingManagerResult]),Ce(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=L(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=L(this._measurementLayer),this._manipulatorLayer=L(this._manipulatorLayer),this._snappingLayer=L(this._snappingLayer),this._updatingHandles=L(this._updatingHandles),this._resetVertices()}get _snappingManager(){return this._snappingManagerResult.snappingManager}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this._snappingManager.options}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_getSnappingContext(e){return new xe({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new j(new $e("point",Ae(!1,!1,this.view.spatialReference)),V.Local),visualizer:new Le(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._snappingManager,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],i=>this._updateSketch(i.vertices)),t.on("draw-complete",()=>this._stopSketch())}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const t=this.view.spatialReference;if(t&&(!X(t)||le())){for(;this._vertices.length>e.length;){const{handle:i,manipulator:s}=this._vertices.pop();i.remove(),this.manipulators.remove(s)}for(let i=this._vertices.length;i<e.length;i++){const[s,p]=e[i],m=new T({x:s,y:p,spatialReference:t}),l=Ve(m,this.view,this._manipulatorLayer);this.manipulators.add(l);const o=j.fromGeometry(m,V.Local);o.on("vertex-update",h=>{const u=h.vertices.at(0);u&&(this._vertices[i].coord=[u.pos[0],u.pos[1]],this._updateGraphics())});const r=De(l,(h,u,d,w)=>{const ee=this._getSnappingContext(w),te=this._snappingManager,ie=this._updatingHandles,{snappingStep:re}=Ge({snappingContext:ee,snappingManager:te,updatingHandles:ie});u.next(Oe(this.view)).next(D=>{if(D.action==="start"){const H=new T(D.mapStart);h.graphic.geometry=H,o.trySetGeometry(H)}return D}).next(...re).next(Te({operations:o})).next(()=>{h.graphic.geometry=o.data.geometry})});this._vertices.push({manipulator:l,coord:[s,p],handle:r})}if(this._vertices.length){const i=this._vertices.length-1,s=this._vertices[i],[p,m]=e[i];s.coord[0]===p&&s.coord[1]===m||(s.coord=[p,m],s.manipulator.graphic.geometry=new T({x:p,y:m,spatialReference:t}));const l=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach(({manipulator:o})=>{o.interactive=l==null||o!==l})}this._updateGraphics()}}_updateGraphics(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=je(this._vertices.map(({coord:d})=>d),this.view.spatialReference,this.geodesicDistanceThreshold);if(!e)return;const{measurement:t,fillGeometry:i,outlineGeometry:s}=e;this._set("measurement",t);const p=t?Pe(this.messages,t,this.unit):null;if(this._set("measurementLabel",p),!i&&!s)return;let m,l,o;const{graphics:r}=this._measurementLayer,h=r.length===3,{effectiveTheme:u}=this.view;h?(m=r.at(0),l=r.at(1),o=r.at(2)):(m=new A({symbol:new Ue({color:R(u.accentColor,.3),outline:null})}),l=new A({symbol:new Ie({color:u.accentColor,width:2})}),o=new A({symbol:new He({color:u.textColor,font:new We({size:14,family:"sans-serif"}),haloColor:R(he(u.textColor,ce.Low),.5),haloSize:2})}),r.removeAll(),r.addMany([m,l,o])),m.geometry=i,l.geometry=s,o.geometry=i==null?void 0:i.centroid,o.symbol.text=(p==null?void 0:p.area)??""}};function Ve(e,t,i){const p={style:"circle",color:R(t.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},m=new P({...p,size:8}),l=new P({...p,size:1.5*8}),o=new A({geometry:e,symbol:m});return new ke({view:t,layer:i,graphic:o,focusedSymbol:l})}function je(e,t,i){if(e.length===2){const h=new K({paths:[e],spatialReference:t});let u;if(t.isGeographic)if(U(t))u=_(h,y);else{const d=v(h,$.WGS84),w=_(d,y);u=v(w,t)}else if(t.isWebMercator)u=x(h,y,"meters");else if(E(h,"meters")>=F(i)){const d=v(h,$.WGS84),w=_(d,y);u=v(w,t)}else u=h;return{measurement:null,fillGeometry:null,outlineGeometry:u}}e.push(e[0]);const s=new K({paths:[e],spatialReference:t}),p=new ze({rings:[e],spatialReference:t});let m,l,o=null,r=null;if(t.isGeographic)if(U(t)){if(o=_(s,y),r=_(p,y),r=M(r),!r)return null;m=G([s],"meters")[0],l=q([r],"square-meters")[0]}else{const h=$.WGS84,u=v(s,h),d=v(p,h);if(o=_(u,y),r=_(d,y),r=M(r),!r)return null;m=G([u],"meters")[0],l=q([r],"square-meters")[0],o=v(o,t),r=v(r,t)}else if(t.isWebMercator){if(o=x(s,y,"meters"),r=x(p,y,"meters"),r=M(r),!r)return null;m=_e(s,"meters"),l=we(r,"square-meters")}else{const h=E(s,"meters");if(h>=F(i)){const u=$.WGS84,d=v(s,u),w=v(p,u);if(o=_(d,y),r=_(w,y),r=M(r),!r)return null;m=G([d],"meters")[0],l=q([r],"square-meters")[0],o=v(o,t),r=v(r,t)}else{if(o=s,r=M(p),!r)return null;m=h,l=be(r,"square-meters")}}return{measurement:{geometry:r,area:l,perimeter:m},fillGeometry:r,outlineGeometry:o}}function Ne(e){return e!=null}function X(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:s}=e;return t&&!s&&!U(e)||!t&&!i}function Pe(e,t,i){if(!t||!e)return null;const s={area:null,perimeter:null},{area:p,perimeter:m}=t;switch(i){case"metric":s.area=ge(e,p,"square-meters");break;case"imperial":s.area=de(e,p,"square-meters");break;default:{const o=z(p,"square-meters",i);s.area=B(e,o,i);break}}const l=Ke(i);if(l)switch(l){case"metric":s.perimeter=ye(e,m,"meters");break;case"imperial":s.perimeter=ve(e,m,"meters");break;default:{const o=z(m,"meters",l);s.perimeter=B(e,o,l);break}}else s.perimeter="";return s}function Ke(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}function F(e){return e??1/0}a([n()],g.prototype,"_drawActive",void 0),a([n({readOnly:!0})],g.prototype,"cursor",null),a([n({value:!0})],g.prototype,"editable",null),a([n({type:Number})],g.prototype,"geodesicDistanceThreshold",void 0),a([n({readOnly:!0})],g.prototype,"measurement",void 0),a([n({readOnly:!0})],g.prototype,"measurementLabel",void 0),a([n()],g.prototype,"messages",void 0),a([n()],g.prototype,"unit",void 0),a([n()],g.prototype,"updating",null),a([n({constructOnly:!0})],g.prototype,"view",void 0),g=a([I("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],g);let f=class extends Be{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views."}initialize(){this.addHandles([b(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),b(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},S),b(()=>this.geodesicDistanceThreshold,e=>{this.tool!=null&&(this.tool.geodesicDistanceThreshold=e)},S)])}get geodesicDistanceThreshold(){return this._get("geodesicDistanceThreshold")}set geodesicDistanceThreshold(e){se(ae.getLogger(this),"geodesicDistanceThreshold",{version:"4.29",warnOnce:!0}),this._set("geodesicDistanceThreshold",e)}get measurement(){return this.tool!=null?this.tool.measurement:null}get measurementLabel(){return this.tool!=null?this.tool.measurementLabel:null}get state(){var e;return this.disabled||this.view==null||!Ne(this.view.spatialReference)?"disabled":(e=this.tool)!=null&&e.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return k}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await me(()=>e.ready),X(e.spatialReference)&&await pe()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new g({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return e!=null&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(e==null)return[];const t=e.filter(i=>k.includes(i));return t.length===0?k.slice():t}};a([n(ue)],f.prototype,"defaultUnit",void 0),a([n()],f.prototype,"geodesicDistanceThreshold",null),a([n({readOnly:!0})],f.prototype,"measurement",null),a([n({readOnly:!0})],f.prototype,"measurementLabel",null),a([n({readOnly:!0})],f.prototype,"state",null),a([n({type:String})],f.prototype,"unit",null),a([n({type:[String]})],f.prototype,"unitOptions",null),f=a([I("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],f);const Z=f,J="esri-area-measurement-2d",Q={base:J,newMeasurementButton:`${J}__clear-button`};let c=class extends ne{constructor(e,t){super(e,t),this.messages=null,this.messagesUnits=null,this.messagesCommon=null,this.viewModel=new Z}get active(){return this.viewModel.active}get icon(){return"measure-area"}set icon(e){this._overrideIfSome("icon",e)}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,messagesUnits:i,unit:s,unitOptions:p,viewModel:m,visible:l}=this,{active:o,measurementLabel:r,state:h,supported:u}=m;return W("div",{"aria-label":e.widgetLabel,class:this.classes(Q.base,Y.widget,Y.panel),key:this,role:"region"},l?W(Ee,{active:o,measurementItems:[{key:"area",title:i==null?void 0:i.measures.area,value:r==null?void 0:r.area},{key:"perimeter",title:e.perimeter,value:r==null?void 0:r.perimeter}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:Q.newMeasurementButton,state:h,supported:u,unit:s,unitOptions:p,onNewMeasurementClick:()=>{oe(m.start())},onUnitChange:d=>{this.unit=d}}):null)}};a([n({readOnly:!0})],c.prototype,"active",null),a([n()],c.prototype,"icon",null),a([n()],c.prototype,"label",null),a([n(),O("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],c.prototype,"messages",void 0),a([n(),O("esri/core/t9n/Units")],c.prototype,"messagesUnits",void 0),a([n(),O("esri/t9n/common")],c.prototype,"messagesCommon",void 0),a([n()],c.prototype,"uiStrings",void 0),a([n()],c.prototype,"unit",null),a([n()],c.prototype,"unitOptions",null),a([n()],c.prototype,"view",null),a([n({type:Z})],c.prototype,"viewModel",void 0),a([n({type:Boolean})],c.prototype,"visible",null),c=a([I("esri.widgets.AreaMeasurement2D")],c);const xr=c;export{xr as default};
