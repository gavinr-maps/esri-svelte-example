import"./geometry-DpwwkAX1.js";import{a as N,J as O,O as I}from"./subclass-BR3PhgZG.js";import{N as v,W as S,_ as W}from"./Point-DB4Hp4hH.js";import{A as k,n as E}from"./mathUtils-ClvKsMak.js";import{b as B}from"./Circle-tfMUO3hu.js";import{simplify as C,distance as D}from"./geometryEngine-BT1Ysmbs.js";import{u as F,m as G,M as _,j as H,c as K,z as Q}from"./Polyline-D97hl-6E.js";import{w as r}from"./surfaceCoordinateSystems-CdeJZGsb.js";function d(s,t){const o=new W({x:s[0],y:s[1],spatialReference:t});return s.length>2&&(o.z=s[2]),o}function lt(s,t){return new F({points:s,spatialReference:t})}function ot(s,t,o){const e=new G({paths:s,spatialReference:t});return o&&_(e),e}function U(s,t,o,e=!0){const l=N(s);l.forEach(a=>{const c=a[0],i=a[a.length-1];O(c,i)&&a.length!==1||a.push(a[0])});let n=new H({rings:l,spatialReference:t});return n.rings.forEach(a=>{K(a)||a.reverse()}),o&&_(n),e&&n.isSelfIntersecting&&v(t)&&(n=C(n)),n}function rt(s,t,o){const e=t.mapToLocalMultiple(s),l=[],n={x:e[0].x,y:e[0].y},a={x:e[1].x,y:e[1].y},c=Math.round(a.x-n.x),i=Math.round(a.y-n.y),p=Math.max(Math.abs(c),Math.abs(i));if(o){const u={x:n.x+p,y:n.y+p},f={x:n.x-p,y:n.y-p};l.push(r(u.x,f.y),r(f.x,f.y),r(f.x,u.y),r(u.x,u.y))}else{const u={x:c>0?n.x+p:n.x-p,y:i>0?n.y+p:n.y-p};l.push(r(n.x,n.y),r(u.x,n.y),r(u.x,u.y),r(n.x,u.y))}return q(U([l.map(u=>t.localToMap(u)).filter(I)],t.spatialReference,t.doUnnormalization,!0),l,t)}function st(s,t,o){let e=t.mapToLocalMultiple(s);if(e.length===1){const i=e[0];e=[r(i.x-48,i.y+48),r(i.x+48,i.y-48),r(i.x+48,i.y-48),r(i.x-48,i.y+48)]}const l=[],n={x:e[0].x,y:e[0].y},a={x:e[1].x,y:e[1].y};if(o){const c=Math.round(a.x-n.x),i=Math.round(a.y-n.y);l.push(r(n.x-c,n.y-i),r(a.x,n.y-i),r(a.x,a.y),r(n.x-c,a.y))}else l.push(r(n.x,n.y),r(a.x,n.y),r(a.x,a.y),r(n.x,a.y));return q(U([l.map(c=>t.localToMap(c)).filter(I)],t.spatialReference,t.doUnnormalization,!0),l,t)}function q(s,t,o){const e=z(t[3],t[2],o),l=z(t[1],t[2],o),n=z(t[0],t[1],o),a=z(t[0],t[3],o);return{geometry:s,midpoints:e!=null&&l!=null&&n!=null&&a!=null?{top:e,right:l,bottom:n,left:a}:null}}function z(s,t,o){g[0]=s.x,g[1]=s.y,g[2]=0,b[0]=t.x,b[1]=t.y,b[2]=0,k(g,g,b,.5),$.x=g[0],$.y=b[1],$.z=b[2];const e=o.localToMap($);return e!=null?d(e,o.spatialReference):null}const $=r(0,0,0),g=E(),b=E();function it(s,t,o,e){const l=t.mapToLocalMultiple(s);let n=null,a=null;if(o)n=l[0],a=l[1];else{const y=l[0],x=l[1],R=Math.round(x.x-y.x),T=Math.round(x.y-y.y),h=Math.max(Math.abs(R),Math.abs(T));n=r(R>0?y.x+h/2:y.x-h/2,T>0?y.y+h/2:y.y-h/2),a=r(Math.abs(R)>Math.abs(T)?n.x-h/2:n.x,Math.abs(R)>Math.abs(T)?n.y:n.y-h/2)}const c=t.localToMap(n),i=t.localToMap(a);if(c==null||i==null)return null;t.doUnnormalization&&Q([[c,i]],t.spatialReference);const p=d(c,t.spatialReference),u=d(i,t.spatialReference),f=S(t.spatialReference);let M=0;if(v(t.spatialReference))M=f*D(p,u,null);else{const y=n.x-a.x,x=n.y-a.y;M=f*Math.sqrt(y*y+x*x)*(e||1)}const w=new B({center:p,radius:M,radiusUnit:"meters",spatialReference:t.spatialReference});return{geometry:U(w.rings,w.spatialReference,!1),center:p,edge:u}}function ct(s,t,o){const e=t.mapToLocalMultiple(s),l=e[0],n=e[1],a=Math.round(n.x-l.x),c=Math.round(n.y-l.y),i=r(o?l.x:l.x+a/2,o?l.y:l.y+c/2),p=o?a:a/2,u=o?c:c/2,f=60,M=[],w=2*Math.PI/f;function y(m){const A=Math.cos(m),J=Math.sin(m);return r(p*A+i.x,u*J+i.y)}for(let m=0;m<f;m++)M.push(y(m*w));M.push(M[0]);const{spatialReference:x,doUnnormalization:R}=t,T=U([M.map(m=>t.localToMap(m)).filter(I)],x,R,!1),h=t.localToMap(y(Math.PI/2)),P=t.localToMap(y(0)),L=t.localToMap(y(-Math.PI/2)),j=t.localToMap(y(Math.PI));return{geometry:T,midpoints:h!=null&&P!=null&&L!=null&&j!=null?{top:d(h,x),right:d(P,x),bottom:d(L,x),left:d(j,x)}:null}}export{it as L,ot as R,rt as T,st as b,lt as d,U as j,ct as v};
