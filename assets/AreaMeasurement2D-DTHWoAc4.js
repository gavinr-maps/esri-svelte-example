import{r as s,m as n,a as G,N as y,j as re}from"./Accessor-BHnuXKD2.js";import{e as A,O as se,n as R}from"./jsxFactory-CLjKarlq.js";import{d as b,P as F,A as ae,w as ne}from"./reactiveUtils-BR0C1Kq4.js";import{j as O,g as D,x as T,an as S}from"./Point-XGrwlf63.js";import{k as oe,O as _,K as pe}from"./projection-B2I9Bzj_.js";import{e as me}from"./defaultUnit-CO7iAvsB.js";import{d as J,I as le}from"./SnappingManager-CF4NflXd.js";import{b as L}from"./Graphic-CFXUQZlS.js";import{f as H}from"./intl-Do3GEEJ7.js";import{P as q,E as ue,R as he}from"./colorUtils-BAowQmkN.js";import{g as z,j as ce,$ as de,d as ge,D as ve}from"./unitFormatUtils-Dbksq3U5.js";import{h as ye}from"./UpdatingHandles-ptqz1ck8.js";import{geodesicDensify as k,simplify as M,geodesicLength as fe,geodesicArea as _e,planarLength as we,planarArea as be}from"./geometryEngine-CtEcpiHE.js";import{P as E,j as Me}from"./Polyline-BmuD2-ZN.js";import{y as C,z as w,R as P,v as I}from"./geodesicUtils-Bh_GX0Qj.js";import{h as x}from"./GraphicsLayer-Acqd2VFm.js";import{S as Le,d as $e,m as Ae,a as Oe,y as j}from"./TextSymbol-BQ_NW9Xo.js";import{l as V}from"./ViewingMode-Dodu7ZZk.js";import{d as Se}from"./SnappingVisualizer2D-CeuJ0hoo.js";import{l as ke}from"./Draw-0bcqxOI1.js";import{E as W,p as xe,P as qe}from"./EditGeometryOperations-C5kkQVhH.js";import{p as Ce,E as Ge,f as Ue}from"./dragEventPipeline-D_Ldto1o.js";import{S as Re}from"./GraphicManipulator-dZUtye0g.js";import{n as De}from"./InteractiveToolBase-DNJTN0p5.js";import{e as Te}from"./SnappingContext-lR2hMWGP.js";import{f as He}from"./SnappingDragPipelineStep-C7nIAEz_.js";import{u as ze}from"./RightAngleSnappingHint-CCcBBYgG.js";import{h as Ee}from"./Promise-CmQqe-ke.js";import{p as Pe,u as Ie}from"./MeasurementWidgetContent-Cq8lpBlY.js";import{e as B}from"./globalCss-CZa70j6i.js";import"./Evented-DCWccWGU.js";import"./uuid-Cl5lrJ4c.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./SimpleObservable-7oieNGD8.js";import"./writer-B2bQV2uU.js";import"./vec3f64-BLpZdpfb.js";import"./Extent-CBBGeHb-.js";import"./projectBuffer-DOU0xvVi.js";import"./mathUtils-DV9iOXpW.js";import"./geodesicConstants-yASAK_zX.js";import"./getDefaultUnitForView-CuRQcAm0.js";import"./Portal-CTRRujjZ.js";import"./elevationInfoUtils-RSZ4Logn.js";import"./unitConversionUtils-C4AR5obr.js";import"./lengthUtils-DjJgJFRg.js";import"./vec32-Dvg_eL9J.js";import"./common-DQOJ18NT.js";import"./vec2-maR1OrZI.js";import"./screenUtils-_ZIvrt5o.js";import"./projectVectorToVector-dS8io47t.js";import"./projectPointToVector-BS0u8fq6.js";import"./viewUtils-Ce2x26K8.js";import"./Clonable-DvJsj5LF.js";import"./opacityUtils-CSd4XoR2.js";import"./enumeration-Cr5WIZs4.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./ActionToggle-__-l4AdQ.js";import"./Identifiable-BrT7zvUW.js";import"./jsonUtils-Cu7OBRmN.js";import"./typeUtils-BSg8Y507.js";import"./collectionUtils-CbaToa73.js";import"./aaBoundingBox-CeBivBRq.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./Cyclical-CPiNl4ru.js";import"./quantityUtils-1LswOhxZ.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-Dw-Mfo_Y.js";import"./GraphicsCollection-CkliHSk1.js";import"./Layer-C9uQlTBT.js";import"./TimeExtent-J5qnUFx_.js";import"./timeUtils-D2X862bk.js";import"./ScaleRangeLayer-C59zG_yk.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-TjZmCq6l.js";import"./utils-DYurMneM.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./ElevationInfo-Di4W6v5U.js";import"./vec2f64-Dy6m9Nrb.js";import"./enums-BJSSbDkD.js";import"./SnappingVisualizer-Cb3uuWOu.js";import"./PointSnappingHint-CurBFXPo.js";import"./SnappingOperation-DhUO_0vk.js";import"./Scheduler-B_GuBefw.js";import"./signal-DSa0yokC.js";import"./debugFlags-ZrDyTcDc.js";import"./InputManager-Bs9UE-jw.js";import"./Queue-BOnccek2.js";import"./keybindings-DrKrBFID.js";import"./screenUtils-DyhV4TAA.js";import"./surfaceCoordinateSystems-DRgCZXAE.js";import"./memoize-DsJmrG76.js";import"./ReactiveSet-CoXPgSt3.js";import"./diffUtils-CMkuJvD2.js";import"./dehydratedFeatureComparison-Bbl7iMhI.js";import"./DrawingMode-Cvvf0VVz.js";import"./angularMeasurementUtils-lDJJxFDs.js";import"./SketchLabelOptions-CwtwEofC.js";import"./hydratedFeatures-BVVSs98j.js";import"./mat2d-D9DBP-jx.js";import"./mat2df64-CBKYtunK.js";import"./quat-4pa1e6ds.js";import"./mat3f64-BBpwCtoL.js";import"./quatf64-CCm9z-pX.js";import"./plane-4dpuo6-e.js";import"./mat4f64-Dk4dwAN8.js";import"./mathUtils-B9R7G-2c.js";import"./geometry2dUtils-vtViF5g_.js";import"./meshVertexSpaceUtils-SW0WEjNN.js";import"./MeshLocalVertexSpace-C0YDTRex.js";import"./defaults-Dwxdhopq.js";import"./defaultsJSON-GKolV7NZ.js";import"./drapedUtils-DFAbG8en.js";import"./interfaces-D6pIddIh.js";import"./Query-DCBIeen2.js";import"./Field-Cyk7Ur5d.js";import"./fieldType-L-VlbZqy.js";import"./FullTextSearch-BWm_kPUE.js";import"./utils-D02V2_jH.js";import"./Version-9k2AOv05.js";import"./sphere-DQxj5tsv.js";import"./mat3-CR8GKnhD.js";import"./UnitSelect-JGyYeoZR.js";const v=1e5;let d=class extends De{constructor(e){super(e),this._measurementLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new ye,this._vertices=[],this._drawActive=!1,this.measurement=null,this.measurementLabel=null}initialize(){H("esri/core/t9n/Units").then(t=>{this.messages=t});const e=this.view;this._draw=new ke({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this.addHandles([Ee(async()=>{this.messages=await H("esri/core/t9n/Units")}),b(()=>[this.unit,this.messages],()=>{this._updateGraphics()},F),b(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:i})=>i);for(const{handle:i}of this._vertices)i.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)})]),ze(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=y(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=y(this._measurementLayer),this._manipulatorLayer=y(this._manipulatorLayer),this._snappingLayer=y(this._snappingLayer),this._updatingHandles=y(this._updatingHandles),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this.snappingManager.options}get updating(){return this._updatingHandles.updating||this.snappingManager.updating}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_getSnappingContext(e){return new Te({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new W(new xe("point",qe(!1,!1,this.view.spatialReference)),V.Local),visualizer:new Se(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const{snappingManager:e}=this,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],i=>this._updateSketch(i.vertices)),t.on("draw-complete",()=>this._stopSketch())}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const t=this.view.spatialReference;if(t&&(!Q(t)||oe())){for(;this._vertices.length>e.length;){const{handle:i,manipulator:a}=this._vertices.pop();i.remove(),this.manipulators.remove(a)}for(let i=this._vertices.length;i<e.length;i++){const[a,p]=e[i],m=new O({x:a,y:p,spatialReference:t}),o=je(m,this.view,this._manipulatorLayer);this.manipulators.add(o);const r=W.fromGeometry(m,V.Local);r.on("vertex-update",u=>{const h=u.vertices.at(0);h&&(this._vertices[i].coord=[h.pos[0],h.pos[1]],this._updateGraphics())});const l=Ce(o,(u,h,f,Y)=>{const Z=this._getSnappingContext(Y),{snappingManager:ee}=this,te=this._updatingHandles,{snappingStep:ie}=He({snappingContext:Z,snappingManager:ee,updatingHandles:te});h.next(Ge(this.view)).next($=>{if($.action==="start"){const U=new O($.mapStart);u.graphic.geometry=U,r.trySetGeometry(U)}return $}).next(...ie).next(Ue({operations:r})).next(()=>{u.graphic.geometry=r.data.geometry})});this._vertices.push({manipulator:o,coord:[a,p],handle:l})}if(this._vertices.length){const i=this._vertices.length-1,a=this._vertices[i],[p,m]=e[i];a.coord[0]===p&&a.coord[1]===m||(a.coord=[p,m],a.manipulator.graphic.geometry=new O({x:p,y:m,spatialReference:t}));const o=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach(({manipulator:r})=>{r.interactive=o==null||r!==o})}this._updateGraphics()}}_updateGraphics(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=Ve(this._vertices.map(({coord:f})=>f),this.view.spatialReference);if(!e)return;const{measurement:t,fillGeometry:i,outlineGeometry:a}=e;this._set("measurement",t);const p=t?Be(this.messages,t,this.unit):null;if(this._set("measurementLabel",p),!i&&!a)return;let m,o,r;const{graphics:l}=this._measurementLayer,u=l.length===3,{effectiveTheme:h}=this.view;u?(m=l.at(0),o=l.at(1),r=l.at(2)):(m=new L({symbol:new Le({color:q(h.accentColor,.3),outline:null})}),o=new L({symbol:new $e({color:h.accentColor,width:2})}),r=new L({symbol:new Ae({color:h.textColor,font:new Oe({size:14,family:"sans-serif"}),haloColor:q(ue(h.textColor,he.Low),.5),haloSize:2})}),l.removeAll(),l.addMany([m,o,r])),m.geometry=i,o.geometry=a,r.geometry=i==null?void 0:i.centroid,r.symbol.text=(p==null?void 0:p.area)??""}};function je(e,t,i){const p={style:"circle",color:q(t.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},m=new j({...p,size:8}),o=new j({...p,size:1.5*8}),r=new L({geometry:e,symbol:m});return new Re({view:t,layer:i,graphic:r,focusedSymbol:o})}function Ve(e,t){if(e.length===2){const l=new E({paths:[e],spatialReference:t});let u;if(t.isGeographic)if(C(t))u=w(l,v);else{const h=_(l,D.WGS84),f=w(h,v);u=_(f,t)}else u=t.isWebMercator?k(l,v,"meters"):l;return{measurement:null,fillGeometry:null,outlineGeometry:u}}e.push(e[0]);const i=new E({paths:[e],spatialReference:t}),a=new Me({rings:[e],spatialReference:t});let p,m,o=null,r=null;if(t.isGeographic)if(C(t)){if(o=w(i,v),r=w(a,v),r=M(r),!r)return null;p=P([i],"meters")[0],m=I([r],"square-meters")[0]}else{const l=D.WGS84,u=_(i,l),h=_(a,l);if(o=w(u,v),r=w(h,v),r=M(r),!r)return null;p=P([u],"meters")[0],m=I([r],"square-meters")[0],o=_(o,t),r=_(r,t)}else if(t.isWebMercator){if(o=k(i,v,"meters"),r=k(a,v,"meters"),r=M(r),!r)return null;p=fe(i,"meters"),m=_e(r,"square-meters")}else{if(o=i,r=M(a),!r)return null;p=we(i,"meters"),m=be(r,"square-meters")}return{measurement:{geometry:r,area:m,perimeter:p},fillGeometry:r,outlineGeometry:o}}function We(e){return e!=null}function Q(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:a}=e;return t&&!a&&!C(e)||!t&&!i}function Be(e,t,i){if(!t||!e)return null;const a={area:null,perimeter:null},{area:p,perimeter:m}=t;switch(i){case"metric":a.area=de(e,p,"square-meters");break;case"imperial":a.area=ce(e,p,"square-meters");break;default:{const r=T(p,"square-meters",i);a.area=z(e,r,i);break}}const o=Ne(i);if(o)switch(o){case"metric":a.perimeter=ve(e,m,"meters");break;case"imperial":a.perimeter=ge(e,m,"meters");break;default:{const r=T(m,"meters",o);a.perimeter=z(e,r,o);break}}else a.perimeter="";return a}function Ne(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-nautical-miles":return"nautical-miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}s([n()],d.prototype,"_drawActive",void 0),s([n({readOnly:!0})],d.prototype,"cursor",null),s([n({value:!0})],d.prototype,"editable",null),s([n({readOnly:!0})],d.prototype,"measurement",void 0),s([n({readOnly:!0})],d.prototype,"measurementLabel",void 0),s([n()],d.prototype,"messages",void 0),s([n({constructOnly:!0})],d.prototype,"snappingManager",void 0),s([n()],d.prototype,"unit",void 0),s([n()],d.prototype,"updating",null),s([n({constructOnly:!0})],d.prototype,"view",void 0),d=s([G("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],d);let g=class extends Pe{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views.",this._snappingManager=null,this.snappingOptions=new J}initialize(){this.addHandles([b(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),b(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},F),b(()=>this.view,e=>{this._snappingManager=y(this._snappingManager),e&&(this._snappingManager=new le({view:e,options:this.snappingOptions}))},ae),b(()=>this.snappingOptions,e=>{this._snappingManager&&e&&(this._snappingManager.options=e)})])}destroy(){this._snappingManager=y(this._snappingManager)}get measurement(){var e;return((e=this.tool)==null?void 0:e.measurement)??null}get measurementLabel(){var e;return((e=this.tool)==null?void 0:e.measurementLabel)??null}get state(){var e;return this.disabled||this.view==null||!We(this.view.spatialReference)?"disabled":(e=this.tool)!=null&&e.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return S}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await ne(()=>e.ready),Q(e.spatialReference)&&await pe()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new d({snappingManager:this._snappingManager,unit:this.unit,view:this.view,visible:this.visible})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return e!=null&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(e==null)return[];const t=e.filter(i=>S.includes(i));return t.length===0?S.slice():t}};s([n()],g.prototype,"_snappingManager",void 0),s([n(me)],g.prototype,"defaultUnit",void 0),s([n({readOnly:!0})],g.prototype,"measurement",null),s([n({readOnly:!0})],g.prototype,"measurementLabel",null),s([n({type:J,nonNullable:!0})],g.prototype,"snappingOptions",void 0),s([n({readOnly:!0})],g.prototype,"state",null),s([n({type:String})],g.prototype,"unit",null),s([n({type:[String]})],g.prototype,"unitOptions",null),g=s([G("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],g);const X=g,N="esri-area-measurement-2d",K={base:N,newMeasurementButton:`${N}__clear-button`};let c=class extends se{constructor(e,t){super(e,t),this.messages=null,this.messagesUnits=null,this.messagesCommon=null,this.viewModel=new X}get active(){return this.viewModel.active}get icon(){return"measure-area"}set icon(e){this._overrideIfSome("icon",e)}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get snappingOptions(){return this.viewModel.snappingOptions}set snappingOptions(e){this.viewModel.snappingOptions=e}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,messagesUnits:i,unit:a,unitOptions:p,viewModel:m,visible:o}=this,{active:r,measurementLabel:l,state:u,supported:h}=m;return R("div",{"aria-label":e.widgetLabel,class:this.classes(K.base,B.widget,B.panel),key:this,role:"region"},o?R(Ie,{active:r,measurementItems:[{key:"area",title:i==null?void 0:i.measures.area,value:l==null?void 0:l.area},{key:"perimeter",title:e.perimeter,value:l==null?void 0:l.perimeter}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:K.newMeasurementButton,state:u,supported:h,unit:a,unitOptions:p,onNewMeasurementClick:()=>{re(m.start())},onUnitChange:f=>{this.unit=f}}):null)}};s([n({readOnly:!0})],c.prototype,"active",null),s([n()],c.prototype,"icon",null),s([n()],c.prototype,"label",null),s([n(),A("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],c.prototype,"messages",void 0),s([n(),A("esri/core/t9n/Units")],c.prototype,"messagesUnits",void 0),s([n(),A("esri/t9n/common")],c.prototype,"messagesCommon",void 0),s([n()],c.prototype,"snappingOptions",null),s([n()],c.prototype,"uiStrings",void 0),s([n()],c.prototype,"unit",null),s([n()],c.prototype,"unitOptions",null),s([n()],c.prototype,"view",null),s([n({type:X})],c.prototype,"viewModel",void 0),s([n({type:Boolean})],c.prototype,"visible",null),c=s([G("esri.widgets.AreaMeasurement2D")],c);const dr=c;export{dr as default};
