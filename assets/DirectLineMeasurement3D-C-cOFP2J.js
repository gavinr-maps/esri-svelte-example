import{r as e,m as s,a as L,g as et,N as H,j as st}from"./Accessor-BHnuXKD2.js";import{e as z,O as nt,n as G}from"./jsxFactory-CLjKarlq.js";import{c as rt}from"./Analysis-BnA3eZRj.js";import{j as A,ao as V}from"./Point-XGrwlf63.js";import{d as M,P as $,A as q}from"./reactiveUtils-BR0C1Kq4.js";import{e as ot}from"./defaultUnit-CO7iAvsB.js";import{t as at}from"./memoize-DsJmrG76.js";import{h as lt}from"./UpdatingHandles-ptqz1ck8.js";import{x as pt}from"./hydratedFeatures-BVVSs98j.js";import{M as ut}from"./measurementUtils-BNY2_E9m.js";import{R as mt}from"./SnappingVisualizer3D-DDfmr2ew.js";import{q as dt,B as ht,z as ct}from"./dragEventPipeline3D-m6RYCQo0.js";import{h as I}from"./Color-gncXBiLc.js";import{E as gt,S as vt,K as yt,N as wt}from"./colorUtils-BAowQmkN.js";import{n as C}from"./vec3f64-BLpZdpfb.js";import{b as _t}from"./lineSegment-C-CDF7QX.js";import{e as Pt}from"./interfaces-js1RL7O8.js";import{e as R}from"./interfaces-CjSZqm0S.js";import{e as k,f as ft,a as bt}from"./RenderObject-8TEkyAoe.js";import{c as Mt}from"./LaserlineVisualElement-BPYPJd-Q.js";import{o as Dt}from"./GeometryUtil-vHI0hYMT.js";import{a as Lt}from"./ElevationProvider-aS5xrHHy.js";import{o as St}from"./ShadedColorMaterial.glsl-BaXE-_67.js";import{E as Vt,p as Ot,P as $t}from"./EditGeometryOperations-C5kkQVhH.js";import{p as Ct,h as Ut}from"./dragEventPipeline-D_Ldto1o.js";import{e as xt}from"./SnappingContext-lR2hMWGP.js";import{f as Ht}from"./SnappingDragPipelineStep-C7nIAEz_.js";import{a as At}from"./SnappingManagerPool-DzCRDPdL.js";import{u as Tt}from"./RightAngleSnappingHint-CCcBBYgG.js";import{n as B}from"./screenUtils-DyhV4TAA.js";import{u as Et}from"./InteractiveAnalysisViewModel-eesy6CGK.js";import{e as N}from"./globalCss-CZa70j6i.js";import{u as zt}from"./MeasurementWidgetContent-Cq8lpBlY.js";import"./intl-Do3GEEJ7.js";import"./Promise-CmQqe-ke.js";import"./cast-BA_-jlhc.js";import"./index-tefRSezt.js";import"./JSONSupport-CGdeqxpk.js";import"./Evented-DCWccWGU.js";import"./uuid-Cl5lrJ4c.js";import"./Clonable-DvJsj5LF.js";import"./Identifiable-BrT7zvUW.js";import"./writer-B2bQV2uU.js";import"./SimpleObservable-7oieNGD8.js";import"./getDefaultUnitForView-CuRQcAm0.js";import"./Portal-CTRRujjZ.js";import"./Extent-CBBGeHb-.js";import"./Graphic-CFXUQZlS.js";import"./opacityUtils-CSd4XoR2.js";import"./enumeration-Cr5WIZs4.js";import"./ActionToggle-__-l4AdQ.js";import"./jsonUtils-Cu7OBRmN.js";import"./Polyline-BmuD2-ZN.js";import"./mathUtils-DV9iOXpW.js";import"./typeUtils-BSg8Y507.js";import"./TextSymbol-BQ_NW9Xo.js";import"./screenUtils-_ZIvrt5o.js";import"./collectionUtils-CbaToa73.js";import"./aaBoundingBox-CeBivBRq.js";import"./projectVectorToVector-dS8io47t.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./projectPointToVector-BS0u8fq6.js";import"./projection-B2I9Bzj_.js";import"./vec32-Dvg_eL9J.js";import"./common-DQOJ18NT.js";import"./sphere-DQxj5tsv.js";import"./mat4-Fi6iAz29.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./mat3-CR8GKnhD.js";import"./mat3f64-BBpwCtoL.js";import"./plane-4dpuo6-e.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./vec2f64-Dy6m9Nrb.js";import"./mathUtils-B9R7G-2c.js";import"./geodesicAreaMeasurementUtils-C07tJXJM.js";import"./quantityUtils-1LswOhxZ.js";import"./geometryEngine-CtEcpiHE.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-Dw-Mfo_Y.js";import"./geodesicUtils-Bh_GX0Qj.js";import"./geodesicMeasurementUtils-ChQtpZ42.js";import"./elevationInfoUtils-RSZ4Logn.js";import"./unitConversionUtils-C4AR5obr.js";import"./lengthUtils-DjJgJFRg.js";import"./viewUtils-Ce2x26K8.js";import"./vec2-maR1OrZI.js";import"./ExtendedLineVisualElement-D93_23WS.js";import"./Octree-B-jwmuW2.js";import"./InterleavedLayout-Dvj-Snan.js";import"./BufferView-_QDXRCew.js";import"./types-D0PSWh4d.js";import"./EngineVisualElement-B_1wMpLc.js";import"./GridLocalOriginFactory-BvhZ_UoU.js";import"./Attribute-B-NAci_J.js";import"./Material-Ba8x5bbY.js";import"./VertexAttribute-Cq4MnHjR.js";import"./boundedPlane-Dyz2ub5d.js";import"./ViewingMode-Dodu7ZZk.js";import"./NoParameters-t-PuNrgq.js";import"./FloatArray-BCfeX8wo.js";import"./BindType-BBwFZqyN.js";import"./Matrix3PassUniform-Bhi2fM3C.js";import"./Texture-D-SqNa4i.js";import"./signal-DSa0yokC.js";import"./enums-D9v74xTE.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./renderState-e7QeQoUO.js";import"./basicInterfaces-CZwQPxTp.js";import"./Indices-Db9lERgy.js";import"./triangle-D_E6eTS3.js";import"./ShaderTechniqueConfiguration-YrUOztAU.js";import"./glsl-BH37Aalp.js";import"./requestImageUtils-Brn0e8z8.js";import"./TextureFormat-1mYWTFa-.js";import"./RibbonLine.glsl-D3IEIaDR.js";import"./sdfPrimitives-B8Jbwvqs.js";import"./doublePrecisionUtils-B0owpBza.js";import"./floatRGBA-CR2j2c7-.js";import"./ShaderBuilder-DV1s2efh.js";import"./RgbaFloatEncoding.glsl-_io2eW3M.js";import"./OverlayCompositing.glsl-BbJKjUZQ.js";import"./SceneLighting-fZH2UQ_L.js";import"./RenderCamera-BovI3JTe.js";import"./colorUtils-Rxh2V3ai.js";import"./axisAngleDegrees-8Sw4vC28.js";import"./quat-4pa1e6ds.js";import"./weather-DtiKeY2t.js";import"./BooleanBindUniform-xvVHJCDz.js";import"./Float4DrawUniform-C_Hqa-pI.js";import"./RenderPlugin-B2sz29jJ.js";import"./HighlightDefaults-ESbuT2uR.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-DcVjXzZo.js";import"./BufferObject-CIl3vJtA.js";import"./memoryEstimations-5gFNwkKK.js";import"./NestedMap-GuqgquCN.js";import"./HUDRenderStyle-BhGvVxgm.js";import"./Scheduler-B_GuBefw.js";import"./debugFlags-ZrDyTcDc.js";import"./VisualElement-D3eR6o-M.js";import"./LaserlinePath.glsl-C1vDezzs.js";import"./Object3DVisualElement-BtsT49h4.js";import"./ElevationContext-jcnAn7VT.js";import"./computeTranslationToOriginAndRotation-BT43Xu5d.js";import"./dehydratedFeatureUtils-1rrRm6hF.js";import"./HUDMaterial-DRUv4rua.js";import"./HUDVisibility.glsl-DSeZY4v-.js";import"./VerticalOffset.glsl-0YVQE7vQ.js";import"./GLTextureMaterial-BXvkeRxQ.js";import"./DefaultBufferWriter-D4XUxbP-.js";import"./Float2PassUniform-Blij1ug3.js";import"./RightAngleQuadVisualElement-C-m5WG_E.js";import"./ColorMaterial.glsl-CArPvmMs.js";import"./TriangleMaterial-t01j2IAH.js";import"./VertexColor.glsl-C67vI27I.js";import"./Matrix3DrawUniform-B_gSHO7v.js";import"./Matrix4PassUniform-LFIUaE9i.js";import"./SnappingVisualizer-Cb3uuWOu.js";import"./PointSnappingHint-CurBFXPo.js";import"./ray-D3Okb4cY.js";import"./Intersector-DqUGp7Vs.js";import"./intersectorUtils-l6zkk4nF.js";import"./verticalOffsetUtils-CUH6QZ7-.js";import"./orientedBoundingBox-9z4w3ZAL.js";import"./spatialReferenceEllipsoidUtils-DM073JUd.js";import"./interfaces-D6pIddIh.js";import"./graphicUtils-Daa6cjYT.js";import"./meshVertexSpaceUtils-SW0WEjNN.js";import"./MeshLocalVertexSpace-C0YDTRex.js";import"./Blit-D5AxBSxC.js";import"./glUtil-D0YUa0ow.js";import"./CameraSpace.glsl-BZ4Eapt3.js";import"./vec3f32-nZdmKIgz.js";import"./InteractiveToolBase-DNJTN0p5.js";import"./geometry2dUtils-vtViF5g_.js";import"./dehydratedFeatureComparison-Bbl7iMhI.js";import"./SnappingManager-CF4NflXd.js";import"./timeUtils-D2X862bk.js";import"./Query-DCBIeen2.js";import"./Field-Cyk7Ur5d.js";import"./fieldType-L-VlbZqy.js";import"./FullTextSearch-BWm_kPUE.js";import"./TimeExtent-J5qnUFx_.js";import"./InputManager-Bs9UE-jw.js";import"./Queue-BOnccek2.js";import"./keybindings-DrKrBFID.js";import"./utils-D02V2_jH.js";import"./Version-9k2AOv05.js";import"./UnitSelect-JGyYeoZR.js";let b=class extends rt{constructor(t){super(t),this.type="direct-line-measurement",this.startPoint=null,this.endPoint=null,this.unit=null}get requiredPropertiesForEditing(){return[this.startPoint,this.endPoint]}clear(){this.startPoint=null,this.endPoint=null}};e([s({type:["direct-line-measurement"]})],b.prototype,"type",void 0),e([s({type:A})],b.prototype,"startPoint",void 0),e([s({type:A})],b.prototype,"endPoint",void 0),e([s({type:V,value:null})],b.prototype,"unit",void 0),e([s({readOnly:!0})],b.prototype,"requiredPropertiesForEditing",null),b=e([L("esri.analysis.DirectLineMeasurementAnalysis")],b);const j=b;var D;(function(t){t.Manipulators="manipulators",t.AnalysisViewDestroyed="analysis-view-destroyed",t.AnalysisView="analysis-view"})(D||(D={}));let u=class extends et{constructor(t){super(t),this.cursorPoint=null,this._visible=!1,this._laserLine=null,this.laserLineEnabled=!0,this._lastDraggedHandle=null}initialize(){this._laserLine=new Mt({view:this.view,attached:!0,isDecoration:!0}),this._updateVisibility(this._visible),this._connectToAnalysisView(),this.addHandles(M(()=>this._params,({laserLineGlowColor:t,laserLineInnerColor:i,laserLineGlobalAlpha:r})=>{const n=this._laserLine,l=n.style;n.style={...l,innerColor:i,glowColor:t,globalAlpha:r}}))}destroy(){this._laserLine=H(this._laserLine)}get _params(){const{accentColor:t}=this.view.effectiveTheme;return{laserLineGlowColor:I.toUnitRGB(t),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:I.toUnitRGB(gt(t)),laserLineInnerWidth:.75,laserLineGlobalAlpha:.75*t.a,handleColor:vt(t,.5),handleRadius:5}}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){}get _cursorPosition(){const t=C(),i=this.cursorPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _startPosition(){const t=C(),i=this.analysis.startPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _endPosition(){const t=C(),i=this.analysis.endPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _laserLineParams(){const t=this._focusPosition,{active:i,lineState:r}=this.toolState,n=this.analysisViewData,l=this.laserLineEnabled&&!!t&&r!=="measured"&&i;if(!l||!this.visible||n==null||n.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};const a=n.actualVisualizedMeasurement,o=this.view.viewingMode!=="local"&&l&&!!this.analysis.startPoint&&a==="geodesic",m=l&&n.viewMode===R.Triangle;return{heightManifoldTarget:a==="euclidean"?t:null,pointDistanceLine:o?this._pointDistanceLine:null,lineVerticalPlaneSegment:m?_t(this._startPosition,this._endPosition):null}}get _focusPosition(){const{lineState:t}=this.toolState,i=this.analysisViewData,r=i!=null&&!i.destroyed&&i.measurementMode===Pt.Euclidean&&i.viewMode===R.Direct;switch(t){case"drawing":return r?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case"editing":return r?this._lastDraggedHandle==="start"?this._endPosition:this._startPosition:this._lastDraggedHandle==="start"?this._startPosition:this._endPosition;default:return this.cursorPoint!=null?this._cursorPosition:null}}get _pointDistanceLine(){return{origin:this.toolState.lineState==="drawing"||this._lastDraggedHandle==="end"?this._startPosition:this._endPosition,target:this._focusPosition}}createManipulators(){const t=this._params,{view:i}=this,r=()=>{const p=ft(t.handleColor),f=[new bt(Dt(p,1,32,32))],_=new k({view:i,renderObjects:f});return _.available=!1,_.radius=t.handleRadius,[_,p]},[n,l]=r(),[a,o]=r(),m=new k({view:this.view,available:!1,interactive:!1});this.analysis.startPoint!=null&&(n.location=this.analysis.startPoint,n.available=!0),this.analysis.endPoint!=null&&(a.location=this.analysis.endPoint,a.available=!0);const c=()=>{let p=this._lastDraggedHandle;n.grabbing&&!a.grabbing&&(p="start"),a.grabbing&&!n.grabbing&&(p="end"),n.grabbing||a.grabbing||(p=null),this._lastDraggedHandle=p},P=n.events.on("grab-changed",c),w=a.events.on("grab-changed",c);return this.addHandles([P,w,M(()=>wt(this._params.handleColor),p=>{l.setParameters({color:p}),o.setParameters({color:p})},{equals:yt})],D.Manipulators),{start:n,end:a,cursor:m}}show(){this.destroyed||this._visible||this._updateVisibility(!0)}hide(){!this.destroyed&&this._visible&&this._updateVisibility(!1)}_connectToAnalysisView(){this.removeHandles(D.AnalysisView),this.addHandles([M(()=>{var t;return(t=this.analysisViewData)==null?void 0:t.destroyed},t=>{t&&this.removeHandles(D.AnalysisView)},$),M(()=>[this.toolState.lineState==="measured",this.analysisViewData],([t,i])=>{i==null||i.destroyed||(i.allowVisualElementsOrientationChange=!t)},$),M(()=>this._laserLineParams,t=>{const i=this._laserLine;i.heightManifoldTarget=t.heightManifoldTarget,i.pointDistanceLine=t.pointDistanceLine,i.lineVerticalPlaneSegment=t.lineVerticalPlaneSegment},$)],D.AnalysisView)}_updateVisibility(t){this.initialized&&(this._visible=t,t?this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha}:this.view.cursor=null,this._laserLine.visible=t)}};e([s({constructOnly:!0})],u.prototype,"view",void 0),e([s()],u.prototype,"_params",null),e([s({constructOnly:!0})],u.prototype,"analysis",void 0),e([s({constructOnly:!0})],u.prototype,"analysisViewData",void 0),e([s()],u.prototype,"cursorPoint",void 0),e([s()],u.prototype,"toolState",void 0),e([s()],u.prototype,"visible",null),e([s()],u.prototype,"testData",null),e([s()],u.prototype,"_visible",void 0),e([s()],u.prototype,"_laserLine",void 0),e([s({constructOnly:!0})],u.prototype,"laserLineEnabled",void 0),e([s()],u.prototype,"_cursorPosition",null),e([s()],u.prototype,"_startPosition",null),e([s()],u.prototype,"_endPosition",null),e([s()],u.prototype,"_lastDraggedHandle",void 0),e([s()],u.prototype,"_laserLineParams",null),e([s()],u.prototype,"_focusPosition",null),e([s()],u.prototype,"_pointDistanceLine",null),u=e([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],u);let d=class extends St{constructor(t){super(t),this._updatingHandles=new lt,this._emulatedDrag=null,this.lineState="initial",this.startPointSurfaceLocation=null,this.endPointSurfaceLocation=null,this.cursorPointSurfaceLocation=null,this.startManipulator=null,this.endManipulator=null,this.cursorManipulator=null,this._getSnappingContext=at(i=>new xt({elevationInfo:{mode:"absolute-height",offset:0},pointer:i,editGeometryOperations:new Vt(new Ot("point",$t(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new mt}))}initialize(){const{view:t,analysis:i,analysisViewData:r,visible:n}=this;this.measurementView=new u({toolState:this,view:t,analysis:i,analysisViewData:r,visible:n});const l=At(t);this._snappingManagerResult=l,this.addHandles(l);const{start:a,end:o,cursor:m}=this.measurementView.createManipulators(),c=(w,p,f)=>Ct(w,(_,J,S,T)=>{const E=ct(_),Q=this._snappingManager,X=this._getSnappingContext(T),Y=this._updatingHandles,{lineState:Z}=this;S=S.next(E).next(Ut(this,[f,p])).next(g=>{if(p!=="cursorPoint"){const v=this.analysis[p];v!=null&&(_.location=v)}return g});const tt=ht(this.view),it=g=>{const v=tt(g);return v||this.lineState!=="drawing"&&this.lineState!=="initial"||(this[p]=null,this[f]=null),v};let O=J.next(E).next(it);if(T!=="touch"||Z==="editing"){const{snappingStep:g,cancelSnapping:v}=Ht({snappingManager:Q,snappingContext:X,updatingHandles:Y});S=S.next(v),O=O.next(...g)}O.next(g=>g.action!=="start"?g:null).next(g=>{const v=pt(g.mapEnd,new A);this[p]=v,_.location=v,this[f]=this._surfaceLocation(v,g.surfaceType)})}),P=w=>w.events.on("grab-changed",()=>{const p=a.grabbing||o.grabbing;this.lineState=p?"editing":"measured"});this.addHandles([c(a,"startPoint","startPointSurfaceLocation"),c(o,"endPoint","endPointSurfaceLocation"),c(m,"cursorPoint","cursorPointSurfaceLocation"),P(a),P(o)]),this.manipulators.add(a),this.manipulators.add(o),this.manipulators.add(m),this.startManipulator=a,this.endManipulator=o,this.cursorManipulator=m,this.addHandles(M(()=>this.state,w=>{w==="measured"&&this.finishToolCreation()},q)),Tt(this)}destroy(){this._updatingHandles=H(this._updatingHandles),this.measurementView=H(this.measurementView)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){const{analysis:t}=this;if(t.startPoint==null&&t.endPoint==null)return"ready";const{lineState:i}=this;return this.validMeasurement&&i!=="editing"&&i!=="drawing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.lineState==="drawing"?"crosshair":null}get startPoint(){return this.analysis.startPoint}set startPoint(t){this.analysis.startPoint=t}get endPoint(){return this.analysis.endPoint}set endPoint(t){this.analysis.endPoint=t}get cursorPoint(){return this.measurementView.cursorPoint}set cursorPoint(t){this.measurementView.cursorPoint=t}get snappingOptions(){return this._snappingManager.options}get validMeasurement(){return this.analysis.startPoint!=null&&this.analysis.endPoint!=null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onShow(){this.measurementView.show(),this._updateManipulatorAvailability()}onHide(){this.measurementView.hide()}onDeactivate(){var t;(t=this._emulatedDrag)==null||t.cancel(),this._emulatedDrag=null}onInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t)}this._updateManipulatorAvailability()}_handlePointerMove(t){var m,c;if(!this.active||this.view.navigating)return;const{pointerType:i}=t;if(i!=="mouse")return;const r=B(t),{lineState:n,cursorManipulator:l,endManipulator:a}=this;let o=!1;this.cursorPoint==null&&((m=this._emulatedDrag)==null||m.cancel(),this._emulatedDrag=U(l,i,r),o=!0),n==="initial"&&((c=this._emulatedDrag)==null||c.update(r),o=!0),n==="drawing"&&(a.events.emit("drag",{action:"update",start:r,screenPoint:r}),o=!0),o&&t.stopPropagation()}_handleImmediateClick(t){var c,P,w,p,f;if(!this.active||!ut(t))return;const i=B(t),{pointerType:r}=t,{cursorManipulator:n,startManipulator:l,endManipulator:a,lineState:o}=this;let m=!1;switch(this.cursorPoint==null&&((c=this._emulatedDrag)==null||c.cancel(),this._emulatedDrag=U(n,r,i)),o){case"initial":if((P=this._emulatedDrag)==null||P.update(i),this.cursorPoint!=null){(w=this._emulatedDrag)==null||w.end(i),this._emulatedDrag=null;const{cursorPoint:_}=this;this.startPoint=_,this.startPointSurfaceLocation=this.cursorPointSurfaceLocation,l.location=_,l.interactive=!1,a.interactive=!1,this.lineState="drawing",this._emulatedDrag=U(a,r,i),m=!0}break;case"drawing":(p=this._emulatedDrag)==null||p.update(i),this.endPoint!=null&&((f=this._emulatedDrag)==null||f.end(i),this._emulatedDrag=null,l.interactive=!0,a.interactive=!0,this.lineState="measured",m=!0)}m&&t.stopPropagation()}_surfaceLocation(t,i){return i===dt.GROUND?"on-the-surface":(t.z??0)>=this._getElevation(t)?"above-the-surface":"below-the-surface"}_updateManipulatorAvailability(){this.startManipulator.available=this.analysis.startPoint!=null,this.endManipulator.available=this.analysis.endPoint!=null}_getElevation(t){return this.view.basemapTerrain.ready?Lt(this.view.elevationProvider,t)??0:0}get test(){}};function U(t,i,r){return t.events.emit("drag",{action:"start",pointerType:i,start:r,screenPoint:r}),{update:n=>t.events.emit("drag",{action:"update",start:n,screenPoint:n}),end:n=>t.events.emit("drag",{action:"end",start:n,screenPoint:n}),cancel:()=>t.events.emit("drag",{action:"cancel"})}}e([s({readOnly:!0})],d.prototype,"state",null),e([s()],d.prototype,"lineState",void 0),e([s({readOnly:!0})],d.prototype,"cursor",null),e([s()],d.prototype,"startPoint",null),e([s()],d.prototype,"endPoint",null),e([s()],d.prototype,"cursorPoint",null),e([s({constructOnly:!0})],d.prototype,"analysis",void 0),e([s({constructOnly:!0})],d.prototype,"analysisViewData",void 0),e([s()],d.prototype,"measurementView",void 0),e([s({constructOnly:!0})],d.prototype,"view",void 0),e([s({readOnly:!0})],d.prototype,"validMeasurement",null),e([s({value:null})],d.prototype,"startPointSurfaceLocation",void 0),e([s({value:null})],d.prototype,"endPointSurfaceLocation",void 0),e([s({value:null})],d.prototype,"cursorPointSurfaceLocation",void 0),e([s()],d.prototype,"updating",null),d=e([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],d);const Gt=d;let y=class extends Et{constructor(i){super(i),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="DirectLineMeasurement3DViewModel is only supported in 3D views.",this._userUnit=null,this._userUnitOptions=null}initialize(){this.addHandles(M(()=>({analysis:this.analysis,unit:this.unit}),({analysis:i,unit:r})=>{i!=null&&(i.unit=r)},q))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){var o;const{tool:i}=this;if(i==null)return null;const r=()=>({text:null,state:"unavailable"}),n=m=>({text:m,state:"available"}),{analysisViewData:l}=i,a=l.result!=null;return{mode:((o=l.result)==null?void 0:o.mode)??"euclidean",directDistance:a&&l.actualVisualizedMeasurement==="euclidean"?n(l.directLabelText):r(),horizontalDistance:a?n(l.horizontalLabelText):r(),verticalDistance:a?n(l.verticalLabelText):r()}}set unitOptions(i){this._userUnitOptions=i,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(i){this._userUnit=i?this._findSelectableUnit(i,this._userUnit):null}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new j}constructTool(){return new Gt({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(i,r){const n=this.unitOptions;return n.includes(i)?i:r?this._findSelectableUnit(r):n[0]}_filteredOrAllUnits(i){if(!i)return V.slice();const r=i.filter(n=>V.includes(n));return r.length===0?V.slice():r}};e([s({type:j})],y.prototype,"analysis",void 0),e([s({readOnly:!0})],y.prototype,"state",null),e([s({readOnly:!0})],y.prototype,"measurement",null),e([s()],y.prototype,"unitOptions",null),e([s()],y.prototype,"unit",null),e([s(ot)],y.prototype,"defaultUnit",void 0),e([s()],y.prototype,"_userUnit",void 0),e([s()],y.prototype,"_userUnitOptions",void 0),y=e([L("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],y);const K=y,W="esri-direct-line-measurement-3d",F={base:W,newMeasurementButton:`${W}__clear-button`};let h=class extends nt{constructor(t,i){super(t,i),this.messages=null,this.messagesCommon=null,this.viewModel=new K}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get icon(){return"measure-line"}set icon(t){this._overrideIfSome("icon",t)}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesCommon:i,unit:r,unitOptions:n,viewModel:l}=this,{active:a,measurement:o,state:m,supported:c}=l;return G("div",{"aria-label":this.messages.widgetLabel,class:this.classes(F.base,N.widget,N.panel),key:this,role:"presentation"},this.visible?G(zt,{active:a,measurementItems:[{key:"direct",title:t.direct,value:x(o==null?void 0:o.directDistance)},{key:"horizontal",title:t.horizontal,value:x(o==null?void 0:o.horizontalDistance)},{key:"vertical",title:t.vertical,value:x(o==null?void 0:o.verticalDistance)}],messages:{...t,notApplicable:i==null?void 0:i.notApplicable},newMeasurementButtonClass:F.newMeasurementButton,state:m,supported:c,unit:r,unitOptions:n,onNewMeasurementClick:()=>{st(this.viewModel.start())},onUnitChange:P=>{this.unit=P}}):null)}};function x(t){return(t==null?void 0:t.state)==="available"?t.text:null}e([s()],h.prototype,"view",null),e([s()],h.prototype,"visible",null),e([s()],h.prototype,"active",null),e([s({constructOnly:!0,nonNullable:!0})],h.prototype,"analysis",null),e([s()],h.prototype,"icon",null),e([s()],h.prototype,"label",null),e([s(),z("esri/widgets/DirectLineMeasurement3D/t9n/DirectLineMeasurement3D")],h.prototype,"messages",void 0),e([s(),z("esri/t9n/common")],h.prototype,"messagesCommon",void 0),e([s()],h.prototype,"uiStrings",void 0),e([s({type:K})],h.prototype,"viewModel",void 0),e([s()],h.prototype,"unitOptions",null),e([s()],h.prototype,"unit",null),h=e([L("esri.widgets.DirectLineMeasurement3D")],h);const wn=h;export{wn as default};
