import{s as y}from"./Accessor-BmwT4B0c.js";import{d as S}from"./cast-CsZslgGN.js";import{t as T}from"./fetchService-DZsSekGm.js";import{c as v,n as F,l as f,a as M,o as P,u as g,e as I,i as G,t as w}from"./loadUtils-DPEbqruB.js";import{C as x}from"./Portal-CmmHxpLg.js";import{e as b}from"./jsonContext-Ctyl6VtL.js";import{s as C}from"./portalItemUtils-ByOtbGao.js";import{t as D}from"./styleUtils-Bye9ft1s.js";import{t as $}from"./requestPresets-D39VZbLJ.js";import"./index-4eY77cms.js";import"./JSONSupport-DcrLLGjL.js";import"./associatedFeatureServiceUtils-BqJqfohX.js";import"./PortalItem-CTx1kJsR.js";import"./writer-DKgfqj4X.js";import"./Extent-g5W9hy0j.js";import"./Point-Cz2JYYmX.js";import"./Promise-DfET-uns.js";import"./projection-CyCZAIaD.js";import"./SimpleObservable-CvOkykwM.js";import"./vec3f64-BLpZdpfb.js";import"./Polyline-s-JzsQqo.js";import"./mathUtils-Cfq9PL9W.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import"./reactiveUtils-XM7cS2OP.js";import"./Evented-Dw4_VOGn.js";async function he(t,o){const a=t.instance.portalItem;if(a!=null&&a.id)return await a.load(o),k(t),t.validateItem&&t.validateItem(a),j(t,o)}function k(t){const o=t.instance.portalItem;if(!(o!=null&&o.type)||!t.supportedTypes.includes(o.type))throw new y("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:o==null?void 0:o.type,expectedType:t.supportedTypes.join(", ")})}async function j(t,o){const a=t.instance,e=a.portalItem;if(!e)return;const{url:i,title:r}=e,n=b(e,"portal-item");if(a.type==="group")return A(a,n,t);i&&a.type!=="media"&&a.read({url:i},n);const p=new I,l=await L(t,p,o);return l&&a.read(l,n),a.resourceReferences={portalItem:e,paths:n.readResourcePaths??[]},a.type!=="subtype-group"&&a.read({title:r},n),D(a,n)}async function A(t,o,a){const e=t.portalItem;if(!t.sourceIsPortalItem)return;const{title:i,type:r}=e;if(r==="Group Layer"){if(!C(e,"Map"))throw new y("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return E(t,a)}return t.read({title:i},o),O(t,a)}async function E(t,o){const a=t.portalItem,e=await a.fetchData("json");if(!e)return;if(!o.populateGroupLayer)throw new y("portal:missing-populate-group-layer","Missing populate group layer");const i=b(a,"web-map");t.read(e,i),await o.populateGroupLayer(t,e,{context:i}),t.resourceReferences={portalItem:a,paths:i.readResourcePaths??[]}}async function O(t,o){var u;let a;const{portalItem:e}=t;if(!e)return;const i=e.type,r=o.layerModuleTypeMap;if(!r)throw new y("portal:missing-layer-module-type-map","Layer module type map is required to construct sub layers");switch(i){case"Feature Service":case"Feature Collection":a=r.FeatureLayer;break;case"Stream Service":a=r.StreamLayer;break;case"Scene Service":a=r.SceneLayer;break;default:throw new y("portal:unsupported-item-type-as-group",`The item type '${i}' is not supported as a 'IGroupLayer'`)}const n=new I;let[p,l]=await Promise.all([a(),L(o,n)]),s=()=>p;if(i==="Feature Service"){const c=(u=f(l))==null?void 0:u.customParameters;l=e.url?await M(l,e.url,n):{},s=await H(l,r)||s;const m=await B(e.url,{customParameters:c,loadContext:n});return await d(t,s,s,l,r,m)}return i==="Scene Service"&&e.url&&(l=await P(e,l,n)),g(l)>0?await d(t,s,null,l,r):await R(t,s,r)}async function R(t,o,a){var r,n;const{portalItem:e}=t;if(!(e!=null&&e.url))return;const i=await $(e.url);i&&d(t,o,null,{layers:(r=i.layers)==null?void 0:r.map(w),tables:(n=i.tables)==null?void 0:n.map(w)},a)}async function d(t,o,a,e,i,r){var l;let n=e.layers||[];const p=e.tables||[];if(((l=t.portalItem)==null?void 0:l.type)==="Feature Collection"?(n.forEach((s,u)=>{var c;s.id=u,((c=s==null?void 0:s.layerDefinition)==null?void 0:c.type)==="Table"&&p.push(s)}),n=n.filter(s=>{var u;return((u=s==null?void 0:s.layerDefinition)==null?void 0:u.type)!=="Table"})):(n.reverse(),p.reverse()),n.forEach(s=>{const u=r==null?void 0:r(s);if(u||!r){const c=h(t,o(s),e,s,u);t.add(c)}}),p.length){const s=a?null:await i.FeatureLayer();p.forEach(u=>{const c=r==null?void 0:r(u);if(c||!r){const m=h(t,a?a(u):s,e,u,c);t.tables.add(m)}})}}function h(t,o,a,e,i){const r=t.portalItem,n={portalItem:r.clone(),layerId:e.id};e.url!=null&&(n.url=e.url);const p=new o(n);if("sourceJSON"in p&&(p.sourceJSON=i),p.type!=="subtype-group"&&p.type!=="catalog"&&(p.sublayerTitleMode="service-name"),r.type==="Feature Collection"){const l={origin:"portal-item",portal:r.portal||x.getDefault()};p.read(e,l);const s=a.showLegend;s!=null&&p.read({showLegend:s},l)}return p}async function L(t,o,a){if(t.supportsData===!1)return;const e=t.instance,i=e.portalItem;if(!i)return;let r=null;try{r=await i.fetchData("json",a)}catch{}if(q(e)){let n=null;const p=await J(i,r,o);if((r!=null&&r.layers||r!=null&&r.tables)&&p>0){if(e.layerId==null){const l=v(e.type),s=l!=null&&l.length?F(r,l)[0]:f(r);s&&(e.layerId=s.id)}n=N(r,e),(n==null?void 0:n.layerType)==="OrientedImageryLayer"&&e.type==="oriented-imagery"&&e.supportedSourceTypes.add("Feature Layer"),n&&r.showLegend!=null&&(n.showLegend=r.showLegend)}return p>1&&"sublayerTitleMode"in e&&e.sublayerTitleMode!=="service-name"&&(e.sublayerTitleMode="item-title-and-service-name"),n}return r}async function J(t,o,a){var r,n,p,l,s;if(o!=null&&o.layers&&(o!=null&&o.tables))return g(o);const e=S(t.url);if(!e)return 1;const i=await a.fetchServiceMetadata(e.url.path,{customParameters:(r=f(o))==null?void 0:r.customParameters}).catch(()=>null);return(((n=o==null?void 0:o.layers)==null?void 0:n.length)??((p=i==null?void 0:i.layers)==null?void 0:p.length)??0)+(((l=o==null?void 0:o.tables)==null?void 0:l.length)??((s=i==null?void 0:i.tables)==null?void 0:s.length)??0)}function N(t,o){var i,r;const{layerId:a}=o,e=((i=t.layers)==null?void 0:i.find(n=>n.id===a))||((r=t.tables)==null?void 0:r.find(n=>n.id===a));return e&&z(e,o)?e:null}function q(t){return t.type!=="stream"&&"layerId"in t}function z(t,o){const a="layerType"in t&&t.layerType,{type:e}=o;return!(e==="feature"&&a&&t.layerType!=="ArcGISFeatureLayer"||e==="catalog"&&!a||e==="oriented-imagery"&&!a||e==="subtype-group"&&!a)}async function B(t,o){const{layersJSON:a}=await T(t,o);if(!a)return null;const e=[...a.layers,...a.tables];return i=>e.find(r=>r.id===i.id)}async function H(t,o){const{layers:a,tables:e}=t,i=[...a??[],...e??[]];if(!i.length)return;const r=new Set,n=[];for(const{layerType:s}of i){const u=s??"ArcGISFeatureLayer";if(r.has(u))continue;r.add(u);const c=o[G(u)];n.push(c())}const p=await Promise.all(n),l=new Map;return Array.from(r).forEach((s,u)=>{l.set(s,p[u])}),({layerType:s})=>{const u=s??"ArcGISFeatureLayer";return l.get(u)}}export{he as load};
