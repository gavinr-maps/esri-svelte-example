import{g as E,E as x,B as w,r as a,m as p,a as v,k as q,e as V,G as k,M as A}from"./Accessor-BmwT4B0c.js";import{b as f}from"./Graphic-Dt0LgVGU.js";import{d as y,A as D,C as R,V as S}from"./reactiveUtils-XM7cS2OP.js";import{c as I}from"./GraphicsCollection-BJ5Nr2H8.js";import{d as z,f as C,a as U}from"./RasterVFDisplayObject-CrHRbiUv.js";import{S as T}from"./LayerView2D-mneyXHGR.js";import{A as H}from"./GraphicsView2D-YaB3LUCn.js";import{h as F}from"./HighlightGraphicContainer-wB5ctusc.js";import{M as G,m as M,f as L}from"./dataUtils-Pv68iOZD.js";import{r as O}from"./BitmapContainer-CJqgKDtv.js";import{n as j}from"./Container-CQ-TKdBu.js";import{l as J}from"./BitmapTechnique-CQrEueUW.js";import{_ as N}from"./ExportStrategy-C2GE0ys-.js";import{P as W}from"./cast-CsZslgGN.js";import{w as B}from"./Extent-g5W9hy0j.js";import{a2 as K}from"./Point-Cz2JYYmX.js";import{V as Q}from"./rasterProjectionHelper-Wej15Bp6.js";import{E as $}from"./View2D-CUfvXSSH.js";import{a as X}from"./WGLContainer-CAGx_8nH.js";import{m as Y}from"./ImageryLayerView-CpLZppSV.js";import{y as Z}from"./LayerView-DUZfYZew.js";import{i as tt}from"./RefreshableLayerView-CmQe69iO.js";import{c as et}from"./HighlightDefaults-CumzVg9-.js";import"./Clonable-Z-AWS-16.js";import"./JSONSupport-DcrLLGjL.js";import"./writer-DKgfqj4X.js";import"./opacityUtils-Dim20wpZ.js";import"./index-4eY77cms.js";import"./Promise-DfET-uns.js";import"./enumeration-DpvDkLNI.js";import"./Color-VJEMvW-n.js";import"./colorUtils-Rxh2V3ai.js";import"./mathUtils-Cfq9PL9W.js";import"./ActionToggle-D7439N1A.js";import"./Identifiable-BHVfzH03.js";import"./jsonUtils-CwFG8yN4.js";import"./Polyline-s-JzsQqo.js";import"./typeUtils-B6WBEKDM.js";import"./TextSymbol-BLIQ6RKX.js";import"./screenUtils-_ZIvrt5o.js";import"./collectionUtils-CTT-51g7.js";import"./Portal-CmmHxpLg.js";import"./vec3f64-BLpZdpfb.js";import"./aaBoundingBox-Dw3yBk2f.js";import"./Evented-Dw4_VOGn.js";import"./SimpleObservable-CvOkykwM.js";import"./mat3-CR8GKnhD.js";import"./common-DQOJ18NT.js";import"./DefaultUI-BwWVKFUS.js";import"./jsxFactory-Cnml7uXM.js";import"./intl-Duiy0OzY.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CzJ4c3KT.js";import"./InputManager-DZ3jJnlx.js";import"./Queue-BQesTh_6.js";import"./signal-CySMLEX9.js";import"./Basemap-BZmrlnvW.js";import"./loadAll-D1eTJ7uv.js";import"./PortalItem-CTx1kJsR.js";import"./basemapDefinitions-D-Q7PKmu.js";import"./writeUtils-CcunaxF8.js";import"./layerUtils-B__v9OBu.js";import"./groundInstanceUtils-Ben03ZCf.js";import"./CollectionFlattener-U8hHQmGf.js";import"./editableLayers-CWgCazH-.js";import"./catalogUtils-CGCu8hgu.js";import"./basemapEnsureType-CmRtohu0.js";import"./basemapUtils-oMnqy94d.js";import"./utils-DYurMneM.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./TablesMixin-Bqfi1Ha_.js";import"./Layer-DH4_Pn8a.js";import"./TimeExtent-BO6BsF_x.js";import"./timeUtils-C1c_L2Fd.js";import"./HeightModelInfo-C05IFsWs.js";import"./timeZoneUtils-DxzjpEBb.js";import"./ReactiveMap-BHFEHYMj.js";import"./Query-B_2mhyL4.js";import"./Field-BDG0QV_T.js";import"./fieldType-CBeoJWlv.js";import"./FullTextSearch-CBnxSwz4.js";import"./selectionUtils-DYi6daQO.js";import"./ViewEvents-c9mvQ_r3.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BWEEmpSb.js";import"./a11yUtils-ClKbIIe-.js";import"./heightModelInfoUtils-D_x68P3s.js";import"./ViewingMode-Dodu7ZZk.js";import"./projection-CyCZAIaD.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import"./vec32-Dvg_eL9J.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-DsXKmbqJ.js";import"./capabilities-DwlKKScG.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-vQlnDsEX.js";import"./accessibleHandler-BaA3O97p.js";import"./CompassViewModel-DBhnIkQP.js";import"./GoTo-zPv0y7kC.js";import"./ZoomViewModel-Bua4WqEj.js";import"./BufferObject-BJilD_hc.js";import"./memoryEstimations-Bcyf-mHz.js";import"./enums-D9v74xTE.js";import"./Texture-BVJ22uHh.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./WGLBrushVTLSymbol-CmI_2XQu.js";import"./DefaultVertexAttributeLayouts-wSIZdMhB.js";import"./DisplayObject-Dejv4A66.js";import"./TileKey-DBTeo_j0.js";import"./definitions-CP59Y04S.js";import"./StyleDefinition-C2Flw6Qv.js";import"./enums-BTM-fOHQ.js";import"./vec2f32-BbH2jxlN.js";import"./config-BOD8--da.js";import"./dataViewUtils-htlyuhrl.js";import"./BoundingBox-CnpCxTZE.js";import"./utils-BQBvadb7.js";import"./ClipRect-0Tl6AMAT.js";import"./layerViewUtils-Bevty3Jm.js";import"./FieldsIndex-FW1AMU67.js";import"./CIMSymbolHelper-BDfNg_6w.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CGi-tOxo.js";import"./OptimizedGeometry-BJqUA4Pi.js";import"./GeometryUtils-F7QfOKlc.js";import"./utils-UPZJIDfz.js";import"./defaultCIMValues-Bb-CUowV.js";import"./rasterizingUtils-C1EbvluX.js";import"./floatRGBA-Cb__GiDF.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./vec2-ChnYg_BJ.js";import"./Rect-CUzevAry.js";import"./defaults-FkBa0ybj.js";import"./defaultsJSON-GKolV7NZ.js";import"./OverrideHelper-BItCoKFp.js";import"./colorUtils-DaPfwnk3.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-Dty09cLj.js";import"./quantizationUtils-DgFbqZi7.js";import"./FeatureMetadata-Bu8jYZ4s.js";import"./diffUtils-BanfihCO.js";import"./UpdateTracking2D-DnXhWMyK.js";import"./queryUtils-DBEPdow2.js";import"./normalizeUtils-BTGdXlpz.js";import"./normalizeUtilsCommon-lGDszWRI.js";import"./utils-YowqfOgk.js";import"./utils-B-dlKIhi.js";import"./json-Wa8cmqdu.js";import"./timeSupport-C7DiFkF_.js";import"./featureConversionUtils-CvnFcmH_.js";import"./OptimizedFeature-P2towpqD.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./TimeOnly-CveCl9ie.js";import"./labelFormatUtils-F9rkrs4Y.js";import"./labelUtils-DCpQ7n-8.js";import"./FeatureCommandQueue-D2VPggrt.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule--vK3Hbk2.js";import"./FramebufferObject-B01p0UGV.js";import"./Program-C5Xq9SwE.js";import"./ShaderBuilder-BKul5qh8.js";import"./BindType-BBwFZqyN.js";import"./heatmapTextureUtils-C_5TPY_E.js";import"./lengthUtils-_77UiyVF.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BzFcKfHF.js";import"./Tile-DxjvolLp.js";import"./quickselect-QQC62dOK.js";import"./mat3f64-BBpwCtoL.js";import"./normalizeUtilsSync-12EQcOVf.js";import"./dehydratedFeatures-kwLHUA1D.js";import"./AGraphicContainer-CZ0yY9Ih.js";import"./TechniqueInstance-DTD5bLhu.js";import"./TileContainer-B394BLqZ.js";import"./vec3f32-nZdmKIgz.js";import"./pixelRangeUtils-Bk2sXCMF.js";import"./EffectView-vElW3ESK.js";import"./jsonUtils-DZz5FrgB.js";import"./TileInfo-DxwC9WcY.js";import"./TileKey-DZd6gJy7.js";import"./TileStrategy-CtmYSAoK.js";import"./ScheduledQueueProcessor-U8WIIyj8.js";import"./Viewpoint-DvyUmqUt.js";import"./Camera-CdyTfTAk.js";import"./Cyclical-Dlbl-cQK.js";import"./workers-Cds_sd9m.js";import"./vec2f64-Dy6m9Nrb.js";import"./viewpointUtils-CtXMVquh.js";import"./mat2df64-CBKYtunK.js";import"./Scheduler-i_u8qdlN.js";import"./debugFlags-B1LM_Apo.js";import"./utils-BjSXFjBJ.js";import"./Version-Cd3TlGH0.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-BpBqJqy1.js";import"./earcut-D9gy186-.js";import"./timeSupport-B8qjIabC.js";import"./popupUtils-CY6-CisY.js";let m=class extends E{constructor(){super(...arguments),this.attached=!1,this.container=new j,this.updateRequested=!1,this.type="imagery",this._bitmapView=new O}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{x(e)||w.getLogger(this).error(e)})}hitTest(t){return new f({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new N({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{const{source:e}=t;if(!e||e instanceof ImageBitmap)return;const i=await this.layer.applyRenderer({extent:e.extent,pixelBlock:e.originalPixelBlock??e.pixelBlock});e.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...i,extent:e.extent}}).catch(t=>{x(t)||w.getLogger(this).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(s=>s.source).filter(s=>s.extent&&s.extent.intersects(e)).map(s=>({extent:s.extent,pixelBlock:s.originalPixelBlock})),r=G(i,e);return r!=null?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}async _fetchImage(t,e,i,r){var d;(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,r.returnImageBitmap=!0;const s=await this.layer.fetchImage(t,e,i,r);if(s.imageBitmap)return s.imageBitmap;const o=await this.layer.applyRenderer(s.pixelData,{signal:r.signal}),n=new J(o.pixelBlock,(d=o.extent)==null?void 0:d.clone(),s.pixelData.pixelBlock);return n.filter=u=>this.layer.applyFilter(u),n}};a([p()],m.prototype,"attached",void 0),a([p()],m.prototype,"container",void 0),a([p()],m.prototype,"layer",void 0),a([p()],m.prototype,"strategy",void 0),a([p()],m.prototype,"timeExtent",void 0),a([p()],m.prototype,"view",void 0),a([p()],m.prototype,"updateRequested",void 0),a([p()],m.prototype,"updating",null),a([p()],m.prototype,"type",void 0),m=a([v("esri.views.2d.layers.imagery.ImageryView2D")],m);const it=m;class rt extends X{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[z],target:()=>this.children,drawPhase:$.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===$.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let l=class extends E{constructor(t){super(t),this._loading=null,this.update=q((e,i)=>this._update(e,i).catch(r=>{x(r)||w.getLogger(this).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:s}=t.state,o=new B({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:s}),[n,d]=t.state.size;this._loading=this.fetchPixels(o,n,d,i);const u=await this._loading;this._addToDisplay(u,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(t.pixelBlock==null)return this.container.children.forEach(n=>n.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:s}=t,o=new C(s);o.offset=[0,0],o.symbolizerParameters=e,o.rawPixelData=t,o.invalidateVAO(),o.x=r.xmin,o.y=r.ymax,o.pixelRatio=i.pixelRatio,o.rotation=i.rotation,o.resolution=i.resolution,o.width=s.width*e.symbolTileSize,o.height=s.height*e.symbolTileSize,this.container.children.forEach(n=>n.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(o)}};a([p()],l.prototype,"fetchPixels",void 0),a([p()],l.prototype,"container",void 0),a([p()],l.prototype,"_loading",void 0),a([p()],l.prototype,"updating",null),l=a([v("esri.views.2d.layers.imagery.ImageryVFStrategy")],l);const st=l;let h=class extends E{constructor(){super(...arguments),this.attached=!1,this.container=new rt,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const s=await this._projectFullExtentPromise,{symbolTileSize:o}=this.layer.renderer,{extent:n,width:d,height:u}=M(t,e,i,o,s);if(s!=null&&!s.intersects(t))return{extent:n,pixelBlock:null};const _={bbox:`${n.xmin}, ${n.ymin}, ${n.xmax}, ${n.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:o,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(_)){const c=this.getPixelData();if(c!=null&&`${c.extent.xmin}, ${c.extent.ymin}, ${c.extent.xmax}, ${c.extent.ymax}`===_.bbox)return c}const{pixelData:b}=await this.layer.fetchImage(n,d,u,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});this._dataParameters=_;const P=b==null?void 0:b.pixelBlock;return P==null?{extent:n,pixelBlock:null}:{extent:n,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?L(P,"vector-uv"):P}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new st({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(y(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),D),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){var r;const t=(r=this.container.children[0])==null?void 0:r.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new f({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams).catch(e=>{x(e)||w.getLogger(this).error(e)})}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,s=this._dataParameters.bbox===t.bbox;return e&&i&&r&&s}async _getProjectedFullExtent(t){try{return Q(this.layer.fullExtent,t)}catch{try{const i=(await W(this.layer.url,{query:{option:"footprints",outSR:K(t),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?B.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){(t==null?void 0:t.type)==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};a([p()],h.prototype,"attached",void 0),a([p()],h.prototype,"container",void 0),a([p()],h.prototype,"layer",void 0),a([p()],h.prototype,"timeExtent",void 0),a([p()],h.prototype,"type",void 0),a([p()],h.prototype,"view",void 0),a([p()],h.prototype,"updating",null),h=a([v("esri.views.2d.layers.imagery.VectorFieldView2D")],h);const at=h;let g=class extends Y(tt(T(Z))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new I,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}update(t){var e;(e=this.subview)==null||e.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new H({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new F(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([y(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},R),y(()=>this.timeExtent,t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())},R),this.layer.on("redraw",()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())}),y(()=>this.layer.renderer,()=>this._setSubView())])}detach(){var t,e;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.subview=null,(e=this._highlightView)==null||e.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:S.isCollection(t)?t.at(0):t)instanceof f))return V();let i=[];Array.isArray(t)||S.isCollection(t)?i=t.map(o=>o.clone()):t instanceof f&&(i=[t.clone()]);const r=i==null?void 0:i.filter(k);if(!(r!=null&&r.length))return V();const s=(e==null?void 0:e.name)??et;return this._addHighlightGraphics(i,s),V(()=>!this.destroyed&&this._removeHighlightGraphics(i,s))}_addHighlightGraphics(t,e){this._highlightGraphics.addMany(t),this._addHighlights(t.map(i=>i.uid),e)}_removeHighlightGraphics(t,e){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(i=>i.uid),e)}async doRefresh(){this.requestUpdate()}isUpdating(){var e,i;const t=!this.subview||this.subview.updating||!!((e=this._highlightView)!=null&&e.updating);return A("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${t}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${(i=this._highlightView)==null?void 0:i.updating}
`),t}_processHighlight(){var e;const t=this._getHighlights();(e=this._highlightView)==null||e.setHighlight(t)}_setSubView(){var i,r;if(!this.view)return;const t=(i=this.layer.renderer)==null?void 0:i.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:s}=this.subview;if(s===e)return this._attachSubview(this.subview),void(s==="flow"?this.subview.redrawOrRefetch():s==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=e==="imagery"?new it({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new at({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new U({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t!=null&&t.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};a([p()],g.prototype,"pixelData",null),a([p()],g.prototype,"subview",void 0),g=a([v("esri.views.2d.layers.ImageryLayerView2D")],g);const Wr=g;export{Wr as default};
