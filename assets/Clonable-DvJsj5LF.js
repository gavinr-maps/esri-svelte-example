import{r as x,a as A,p as g,q as O,u as o,v as U,g as $}from"./Accessor-BHnuXKD2.js";const C=r=>{let i=class extends r{clone(){var d;const f=g(this);O(f,"unable to clone instance of non-accessor class");const E=f.metadata,u=f.store,b={},p=new Map;for(const n in E){const s=E[n],e=u==null?void 0:u.originOf(n),c=s.clonable;if(s.readOnly||c===!1||e!==o.USER&&e!==o.DEFAULTS&&e!==o.WEB_MAP&&e!==o.WEB_SCENE)continue;const a=this[n];let l=null;l=typeof c=="function"?c(a):c==="reference"?a:U(a),a!=null&&l==null||(e===o.DEFAULTS?p.set(n,l):b[n]=l)}const S=new(Object.getPrototypeOf(this)).constructor(b);if(p.size){const n=(d=g(S))==null?void 0:d.store;if(n)for(const[s,e]of p)n.set(s,e,o.DEFAULTS)}return S}};return i=x([A("esri.core.Clonable")],i),i};let t=class extends C($){};t=x([A("esri.core.Clonable")],t),function(r){r.ClonableMixin=C}(t||(t={}));const m=t;export{m as a};
