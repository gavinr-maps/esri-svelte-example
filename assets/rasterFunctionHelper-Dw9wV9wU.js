const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngine-CLtm9OQA.js","./Accessor-BmwT4B0c.js","./Point-Cz2JYYmX.js","./cast-CsZslgGN.js","./index-4eY77cms.js","./index-Cx51aysm.css","./JSONSupport-DcrLLGjL.js","./writer-DKgfqj4X.js","./geometryEngineBase-B0ZyeKAX.js","./_commonjsHelpers-DCkdB7M8.js","./hydrated-DcIAHEVL.js","./Extent-g5W9hy0j.js","./Polyline-s-JzsQqo.js","./mathUtils-Cfq9PL9W.js"])))=>i.map(i=>d[i]);
import{U as Ue}from"./colorUtils-DaPfwnk3.js";import{r as c,m,a as N,c as H,s as Et}from"./Accessor-BmwT4B0c.js";import{i as Ms,u as ms,s as Rt,o as L,l as se}from"./pixelRangeUtils-Bk2sXCMF.js";import{S as fs}from"./JSONSupport-DcrLLGjL.js";import{a as ds,o as Z}from"./cast-CsZslgGN.js";import{g as A,o as Gs,k as gs,e as ne,r as zs,j as je,n as ys,q as xs,w as Os,t as et,v as Ds,y as Es,x as Us,z as Vs}from"./dataUtils-Pv68iOZD.js";import{d as Ls,x as Ws,y as $t,C as Hs,z as ws,f as oe,E as vs,G as bs,H as qs,I as Ht,J as Js,K as Zt,M as As,O as Ts,Q as Ks,T as Xs,V as Zs,W as re,X as Qs,Y as Ys,Z as tn}from"./RasterSymbolizer-DU-Ljv5-.js";import{r as X}from"./enumeration-DpvDkLNI.js";import{f as en}from"./jsonUtils-CwFG8yN4.js";import{l as sn}from"./typeUtils-B6WBEKDM.js";import{_ as nn}from"./index-4eY77cms.js";import{Q as Ve,j as rn}from"./Point-Cz2JYYmX.js";import{w as Le}from"./Extent-g5W9hy0j.js";import{V as on,Z as an}from"./rasterProjectionHelper-Wej15Bp6.js";import{o as qt,r as Yt}from"./writer-DKgfqj4X.js";import{m as un,p as Ps}from"./colorRamps-CRjjPL3r.js";import{y as st}from"./Field-BDG0QV_T.js";import{q as Dt}from"./mathUtils-Cfq9PL9W.js";function ln(a,t){if(a.spatialReference.equals(t))return a;const e=Ve(a.spatialReference),s=Ve(t);if(e===s)return a;const r=e/s;return{x:a.x*r,y:a.y*r}}async function $i(a,t,e){if(e.type==="extent")return pn(a,t,e);const{width:s,height:r}=a,o=new Uint8Array(s*r),{contains:i,intersects:n}=await nn(async()=>{const{contains:u,intersects:l}=await import("./geometryEngine-CLtm9OQA.js");return{contains:u,intersects:l}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13]),import.meta.url);return n(t,e)?e.type==="polyline"?hn(a,t,e):i(e,t)?a:cn(a,t,e):new A({pixelType:a.pixelType,width:s,height:r,mask:o,maskIsAlpha:!1,pixels:[...a.pixels]})}function cn(a,t,e){if(!a)return a;const{width:s,height:r}=a,o=t.width/s,i=t.height/r,{xmin:n,ymax:u}=t;let l;if(e.type==="extent"){const d=(e.xmin-n)/o,b=(e.xmax-n)/o,w=(u-e.ymax)/i,P=(u-e.ymin)/i;l=[[[d,w],[d,P],[b,P],[b,w],[d,w]]]}else l=e.rings.map(d=>d.map(([b,w])=>[(b-n)/o,(u-w)/i]));const p=document.createElement("canvas");p.width=s,p.height=r;const h=p.getContext("2d");h.fillStyle="#f00",h.beginPath(),l.forEach(d=>{h.moveTo(d[0][0],d[0][1]);for(let b=0;b<d.length;b++)h.lineTo(d[b][0],d[b][1]);h.closePath()}),h.fill();const f=h.getImageData(0,0,s,r).data,g=a.mask,y=s*r,x=new Uint8Array(y);for(let d=0;d<y;d++)g&&!g[d]||(x[d]=f[4*d+3]>127?255:0);return new A({pixelType:a.pixelType,width:s,height:r,mask:x,maskIsAlpha:!1,pixels:[...a.pixels]})}function pn(a,t,e){const{width:s,height:r}=a,o=new Uint8Array(s*r),i=t.width/s,n=t.height/r;if(e.width/i<.5||e.height/n<.5)return new A({pixelType:a.pixelType,width:s,height:r,mask:o,pixels:[...a.pixels]});const{xmin:u,xmax:l,ymin:p,ymax:h}=t,{xmin:f,xmax:g,ymin:y,ymax:x}=e,d=Math.max(u,f),b=Math.min(l,g),w=Math.max(p,y),P=Math.min(h,x),v=.5*i,F=.5*n;if(b-d<v||P-w<F||b<u+v||d>l-v||w>h-F||P<p+F)return new A({pixelType:a.pixelType,width:s,height:r,mask:o,pixels:[...a.pixels]});const T=Math.max(0,(d-u)/i),$=Math.min(s,Math.max(0,(b-u)/i)),R=Math.max(0,(h-P)/n),k=Math.min(r,Math.max(0,(h-w)/n)),C=Math.round(T),S=Math.round($)-1,z=Math.round(R),Q=Math.round(k)-1;if(C===S&&T%1>.5&&$%1<.5||z===Q&&R%1>.5&&k%1<.5)return new A({pixelType:a.pixelType,width:s,height:r,mask:o,pixels:[...a.pixels]});if(C===0&&z===0&&S===s&&Q===r)return a;const De=a.mask;for(let te=z;te<=Q;te++)for(let ee=C;ee<=S;ee++){const Ee=te*s+ee;o[Ee]=De?De[Ee]:255}return new A({pixelType:a.pixelType,width:s,height:r,mask:o,pixels:[...a.pixels]})}function hn(a,t,e){const{width:s,height:r}=a,o=new Uint8Array(s*r),i=t.width/s,n=t.height/r,{xmin:u,ymax:l}=t,{paths:p}=e,h=a.mask;for(let f=0;f<p.length;f++){const g=p[f];for(let y=0;y<g.length-1;y++){const[x,d]=g[y],[b,w]=g[y+1];let P=Math.floor((l-d)/n),v=Math.floor((l-w)/n);if(v<P){const T=P;P=v,v=T}P=Math.max(0,P),v=Math.min(r-1,v);const F=(b-x)/(w-d);for(let T=P;T<=v;T++){const $=T===P?Math.max(d,w):(r+1-T)*n,R=T===v?Math.min(d,w):$-n;let k=Math.floor(w===d?(x-u)/i:(F*($-d)+x-u)/i),C=Math.floor(w===d?(b-u)/i:(F*(R-d)+x-u)/i);if(C<k){const z=k;k=C,C=z}const S=T*s;k=Math.max(0,k),C=Math.min(s-1,C);for(let z=S+k;z<=S+C;z++)o[z]=h?h[z]:255}}}return new A({pixelType:a.pixelType,width:s,height:r,mask:o,pixels:[...a.pixels]})}function mn(a,t){const{extent:e}=fn(a,t,new rn({x:a.pixelSize.x,y:a.pixelSize.y,spatialReference:a.spatialReference})),{extent:s}=a.extent;if(e.xmax=Math.min(e.xmax,s.xmax),e.ymax=Math.min(e.ymax,s.ymax),e.xmin<e.xmax&&e.ymin<e.ymax){const{x:r,y:o}=a.pixelSize,i=Math.round(e.width/r),n=Math.round(e.height/o);a.extent=e,a.width=i,a.height=n}}function fn(a,t,e,s=!0){const{spatialReference:r}=a,{x:o,y:i}=ln(e,r);let n,u,l;const p=t.type==="extent"?t:t.extent;let{xmin:h,xmax:f,ymax:g,ymin:y}=p;const{xmin:x,ymax:d}=a.extent;return s?(h=x+(h>x?o*Math.round((h-x)/o):0),g=d-(g<d?i*Math.round((d-g)/i):0),f=x+(f>x?o*Math.round((f-x)/o):0),y=d-(y<d?i*Math.round((d-y)/i):0),n=new Le({xmin:h,ymax:g,xmax:f,ymin:y,spatialReference:r}),u=Math.round(n.width/o),l=Math.round(n.height/i)):(u=Math.floor((f-h)/o+.8),l=Math.floor((g-y)/i+.8),h=x+(h>x?o*Math.floor((h-x)/o+.1):0),g=d-(g<d?i*Math.floor((d-g)/i+.1):0),f=h+u*o,y=g-l*i,n=new Le({xmin:h,ymax:g,xmax:f,ymin:y,spatialReference:r})),{extent:n,width:u,height:l}}let Jt=class extends fs{constructor(){super(...arguments),this.raster=void 0}};c([m({json:{write:!0}})],Jt.prototype,"raster",void 0),Jt=c([N("esri.layers.support.rasterFunctions.BaseFunctionArguments")],Jt);const O=Jt;var ie;let It=ie=class extends O{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new ie({raster:this.raster,raster2:this.raster2,operation:this.operation})}};c([m({json:{write:!0}})],It.prototype,"operation",void 0),c([m({json:{write:!0}})],It.prototype,"raster2",void 0),c([m({readOnly:!0})],It.prototype,"rasters",null),It=ie=c([N("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],It);const dn=It,gn=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let D=class extends fs{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){var u;const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let r=s.rasters||s.raster&&[s.raster];for(;r!=null&&r.length;){e.unshift(...r);const l=[];for(let p=0;p<r.length;p++){const{parameters:h}=r[p],f=h.rasters||h.raster&&[h.raster];f!=null&&f.length&&l.push(...f)}r=l}for(let l=e.length-1;l>=0;l--)e[l].isNoopProcess&&e.splice(l,1);let o=!1;for(let l=0;l<e.length;l++){const p=e[l];p.id=e.length-l-1;const{rasters:h}=p.parameters;o=o||h!=null&&h.length>1}const i=e.some(({name:l})=>gn.has(l.toLowerCase())),{rawSourceRasterInfos:n}=this;return{functions:e,hasBranches:o,hasFocalFunction:i,isSourceSingleBand:((u=n==null?void 0:n[0])==null?void 0:u.bandCount)===1}}bind(t,e=!1,s=-1){this.id=s+1;const r=this._getRasterValues();let o=!0;for(let i=0;i<r.length;i++){const n=r[i];if(n!=null&&this._isRasterFunctionValue(n)){const u=n.bind(t,e,this.id+i);if(!u.success)return this._bindingResult=u,u;o=o&&u.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=o&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(r=>this._readRasterValue(r,t));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const o=t.map(n=>n.processInputBandIds()[0]);this.rawInputBandIds=o,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((n,u)=>n!==u);const i=t.filter(n=>n.functionName==="ExtractBand");return i.length&&i.forEach((n,u)=>{n.isInputBandIdsSwizzled=!0,n.swizzledBandSelection=[u,u,u]}),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:o}=this.sourceRasterInfos[0];for(let i=0;i<o;i++)e.push(i)}const r=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=r.some((o,i)=>o!==i),this.rawInputBandIds=r,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map(r=>this._isRasterFunctionValue(r)?r.getWebGLProcessorDefinition():typeof r=="number"?{name:"Constant",parameters:{value:r},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:r},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(r=>r!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];this.functionName==="Clip"&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach(r=>{if(this._isRasterFunctionValue(r)){const o=r.getClippingGeometries();t.push(...o)}});else if(this._isRasterFunctionValue(e)){const r=e.getClippingGeometries();t.push(...r)}return t}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){var e;t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,(e=t.multidimensionalInfo)==null||e.variables.forEach(s=>{s.statistics=void 0,s.histograms=void 0})}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:r}=t;if(e.length===0)return s;const o=e.map(n=>n&&typeof n=="object"&&"bind"in n&&n.rasterInfo?n.rasterInfo:typeof n=="string"&&r.includes(n)?s[r.indexOf(n)]:typeof n!="number"?s[0]:void 0),i=o.find(n=>n)??s[0];return o.forEach((n,u)=>{n===void 0&&(o[u]=i)}),o}_getPrimaryRasterId(t){return t==null?void 0:t.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let r=0;r<t.sourceRasters.length;r++){const o=t.sourceRasters[r];if(typeof o!="number")if("bind"in o)this._getPrimaryRasters(o,e,s);else{const i=o,n=this._getPrimaryRasterId(i);if(n==null)continue;s.includes(n)||(this.mainPrimaryRasterId===n?(e.unshift(i),s.unshift(n)):(e.push(i),s.push(n)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(t==null||t==="$$"){const r=s[0];return r==null?null:r.clone()}if(typeof t=="string"){const r=e.primaryRasterIds.indexOf(t);return r===-1?null:s[r]}if(typeof t=="number"){const r=s[0];if(r==null)return null;const{width:o,height:i,pixelType:n}=r,u=new Float32Array(o*i);u.fill(t);const l=this.sourceRasterInfos[0].bandCount,p=new Array(l).fill(u);return new A({width:o,height:i,pixelType:n,pixels:p})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!(t!=null&&t.keyProperties))return;const{bandCount:e,keyProperties:s,statistics:r,histograms:o}=t,i=s.BandProperties;i&&i.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),r&&r.length!==e&&(t.statistics=r.length>e?r.slice(0,e):null),o&&o.length!==e&&(t.histograms=o.length>e?o.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:typeof s.BAND_COUNT=="string"?String(e):e})}};c([m({json:{write:!0}})],D.prototype,"functionName",void 0),c([m({json:{write:!0}})],D.prototype,"functionArguments",void 0),c([m()],D.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}}),ds(a=>a==null?void 0:a.toLowerCase())],D.prototype,"outputPixelType",void 0),c([m({json:{write:!0}})],D.prototype,"mainPrimaryRasterId",void 0),c([m()],D.prototype,"sourceRasters",void 0),c([m({type:[Ls],json:{write:!0}})],D.prototype,"sourceRasterInfos",void 0),c([m({json:{write:!0}})],D.prototype,"rasterInfo",void 0),c([m({json:{write:!0}})],D.prototype,"readingBufferSize",void 0),c([m({json:{write:!0}})],D.prototype,"id",void 0),c([m()],D.prototype,"isNoopProcess",void 0),c([m()],D.prototype,"supportsGPU",null),c([m()],D.prototype,"rawInputBandIds",void 0),c([m()],D.prototype,"rawSourceRasterInfos",void 0),c([m()],D.prototype,"isInputBandIdsSwizzled",void 0),c([m()],D.prototype,"swizzledBandSelection",void 0),c([m()],D.prototype,"isBranch",void 0),c([m({readOnly:!0})],D.prototype,"flatWebGLFunctionChain",null),c([m()],D.prototype,"_bindingResult",void 0),D=c([N("esri.layers.support.rasterFunctions.BaseRasterFunction")],D);const G=D,_={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},yn={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},W={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},J={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},xn={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Fs={setNull:50,conditional:78},We={...yn,...W,...J,...xn,...Fs},Ns=new Map([[J.acos,{domain:[0,Math.PI],isInteger:!1}],[J.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[J.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[J.cos,{domain:[-1,1],isInteger:!1}],[J.sin,{domain:[-1,1],isInteger:!1}],[W.booleanAnd,{domain:[0,1],isInteger:!0}],[W.booleanNot,{domain:[0,1],isInteger:!0}],[W.booleanOr,{domain:[0,1],isInteger:!0}],[W.booleanXOr,{domain:[0,1],isInteger:!0}],[W.equalTo,{domain:[0,1],isInteger:!0}],[W.notEqual,{domain:[0,1],isInteger:!0}],[W.greaterThan,{domain:[0,1],isInteger:!0}],[W.greaterThanEqual,{domain:[0,1],isInteger:!0}],[W.lessThan,{domain:[0,1],isInteger:!0}],[W.lessThanEqual,{domain:[0,1],isInteger:!0}],[W.isNull,{domain:[0,1],isInteger:!0}]]);function He(a){return Ns.get(a)}const qe=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function wn(a,t=!1){const e=a.map(n=>n.mask),s=e.filter(n=>n!=null),r=a[0].pixels[0].length;if(s.length===0||t&&s.length!==e.length)return new Uint8Array(r).fill(255);const o=s[0],i=new Uint8Array(o);if(s.length===1)return i;if(!t){for(let n=1;n<s.length;n++){const u=s[n];for(let l=0;l<i.length;l++)i[l]&&(i[l]=u[l]?255:0)}return i}for(let n=1;n<s.length;n++){const u=s[n];for(let l=0;l<i.length;l++)i[l]===0&&(i[l]=u[l]?255:0)}return i}function vn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]+r[n]);return i}function bn(a,t,e){const[s]=a,r=s.length,o=A.createEmptyBand("f32",r);return o.set(s),o}function An(a,t,e){const[s]=a,r=s.length,o=A.createEmptyBand(e,r);for(let i=0;i<r;i++)t&&!t[i]||(o[i]=s[i]*s[i]);return o}function Tn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]-r[n]);return i}function Pn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]*r[n]);return i}function Fn(a,t,e){const[s]=a,r=s.length,o=A.createEmptyBand(e,r);for(let i=0;i<r;i++)t&&!t[i]||(o[i]=Math.sign(s[i])*Math.floor(Math.abs(s[i])));return o}function $s(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]/r[n]);return i}function Nn(a,t,e){return $s(a,t,"f32")}function $n(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=Math.floor(s[n]/r[n]));return i}function Rn(a,t,e,s){const r=a[0],o=r.length,i=A.createEmptyBand(e,o);if(s===J.atanh){for(let u=0;u<o;u++)if(t[u]){const l=r[u];Math.abs(l)>=1?t[u]=0:i[u]=Math.atanh(l)}return i}const n=s===J.asin?Math.asin:Math.acos;for(let u=0;u<o;u++)if(t[u]){const l=r[u];Math.abs(l)>1?t[u]=0:i[u]=n(l)}return i}function In(a,t,e,s){const[r]=a,o=r.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s(r[n]));return i}function kn(a,t,e,s){const[r,o]=a,i=r.length,n=A.createEmptyBand(e,i);for(let u=0;u<i;u++)t&&!t[u]||(n[u]=s(r[u],o[u]));return n}function Cn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]&r[n]);return i}function _n(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]<<r[n]);return i}function Sn(a,t,e){const[s]=a,r=s.length,o=A.createEmptyBand(e,r);for(let i=0;i<r;i++)t&&!t[i]||(o[i]=~s[i]);return o}function Bn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]|r[n]);return i}function jn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]>>r[n]);return i}function Mn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]^r[n]);return i}function Gn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]&&r[n]?1:0);return i}function zn(a,t,e){const[s]=a,r=s.length,o=A.createEmptyBand(e,r);for(let i=0;i<r;i++)t&&!t[i]||(o[i]=s[i]?0:1);return o}function On(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]||r[n]?1:0);return i}function Dn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=(s[n]?1:0)^(r[n]?1:0));return i}function En(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]===r[n]?1:0);return i}function Me(a,t,e,s){const[r]=a,o=r.length,i=A.createEmptyBand(e,o),n=s===Math.E;for(let u=0;u<o;u++)t&&!t[u]||(i[u]=n?Math.exp(r[u]):s**r[u]);return i}function Un(a,t,e){return Me(a,t,e,10)}function Vn(a,t,e){return Me(a,t,e,2)}function Ln(a,t,e){return Me(a,t,e,Math.E)}function Ge(a,t,e,s){const[r]=a,o=r.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(r[n]<=0?t[n]=0:i[n]=s(r[n]));return i}function Wn(a,t,e){return Ge(a,t,e,Math.log10)}function Hn(a,t,e){return Ge(a,t,e,Math.log2)}function qn(a,t,e){return Ge(a,t,e,Math.log)}function Jn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]>r[n]?1:0);return i}function Kn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]>=r[n]?1:0);return i}function Xn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]<r[n]?1:0);return i}function Zn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]<=r[n]?1:0);return i}function Qn(a,t,e){const[s]=a,r=s.length,o=A.createEmptyBand(e,r);if(!t)return o;for(let i=0;i<r;i++)o[i]=t[i]?0:1;return o}function Yn(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]%r[n]);return i}function tr(a,t,e){const[s]=a,r=s.length,o=A.createEmptyBand(e,r);for(let i=0;i<r;i++)t&&!t[i]||(o[i]=-s[i]);return o}function er(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]===r[n]?0:1);return i}function sr(a,t,e){const[s,r]=a,o=s.length,i=A.createEmptyBand(e,o),n=new Uint8Array(o);for(let u=0;u<o;u++)t!=null&&!t[u]||s[u]!==0||(i[u]=r[u],n[u]=255);return{band:i,mask:n}}function Je(a,t,e){const[s,r,o]=a,i=s.length,n=A.createEmptyBand(e,i);for(let u=0;u<i;u++)t&&!t[u]||(n[u]=s[u]?r[u]:o[u]);return n}function Ke(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,o=r.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n]){let u=r[n];for(let l=1;l<s;l++){const p=a[l][n];u<p&&(u=p)}i[n]=u}return i}function Xe(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,o=r.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n]){let u=r[n];for(let l=1;l<s;l++){const p=a[l][n];u>p&&(u=p)}i[n]=u}return i}function Ze(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,o=r.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n]){let u=r[n],l=u;for(let p=1;p<s;p++){const h=a[p][n];l<h?l=h:u>h&&(u=h)}i[n]=l-u}return i}function Qe(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,o=r.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n]){let u=0;for(let l=0;l<s;l++)u+=a[l][n];i[n]=u/s}return i}function Ye(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,o=r.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n])for(let u=0;u<s;u++){const l=a[u];i[n]+=l[n]}return i}function ts(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,o=r.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)if(!t||t[n]){const u=new Float32Array(s);let l=0;for(let h=0;h<s;h++){const f=a[h];l+=f[n],u[h]=f[n]}l/=s;let p=0;for(let h=0;h<s;h++)p+=(u[h]-l)**2;i[n]=Math.sqrt(p/s)}return i}function es(a,t,e){const s=a.length;if(s<2)return a[0];const r=Math.floor(s/2),[o]=a,i=o.length,n=A.createEmptyBand(e,i),u=new Float32Array(s),l=s%2==1;for(let p=0;p<i;p++)if(!t||t[p]){for(let h=0;h<s;h++)u[h]=a[h][p];u.sort(),n[p]=l?u[r]:(u[r]+u[r-1])/2}return n}function Rs(a,t,e){const[s,r]=a;if(r==null)return s;const o=s.length,i=A.createEmptyBand(e,o);for(let n=0;n<o;n++)t&&!t[n]||(i[n]=s[n]<r[n]?s[n]:r[n]);return i}function ss(a,t,e){const s=a.length;if(s<=2)return Rs(a,t,e);const r=a[0].length,o=A.createEmptyBand(e,r),i=new Map;for(let n=0;n<r;n++)if(!t||t[n]){i.clear();for(let h=0;h<s;h++){const f=a[h][n];i.set(f,i.has(f)?i.get(f)+1:1)}let u=0,l=0;const p=[];for(const h of i.keys())u=i.get(h),u>l?(l=u,p.length=0,p.push(h)):u===l&&p.push(h);p.length>1&&p.sort((h,f)=>h-f),o[n]=p[0]}return o}function ns(a,t,e){const s=a.length;if(s<=2)return Rs(a,t,e);const r=a[0].length,o=A.createEmptyBand(e,r),i=new Map;for(let n=0;n<r;n++)if(!t||t[n]){i.clear();for(let h=0;h<s;h++){const f=a[h][n];i.set(f,i.has(f)?i.get(f)+1:1)}let u=0,l=a.length;const p=[];for(const h of i.keys())u=i.get(h),u<l?(l=u,p.length=0,p.push(h)):u===l&&p.push(h);p.length>1&&p.sort((h,f)=>h-f),o[n]=p[0]}return o}function rs(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,o=r.length,i=A.createEmptyBand(e,o),n=new Set;for(let u=0;u<o;u++)if(!t||t[u]){let l;n.clear();for(let p=0;p<s;p++)l=a[p][u],n.add(l);i[u]=n.size}return i}const E=new Map,Qt=new Map,I=new Map,M=new Map;function nr(){E.size||(E.set(4,Math.sqrt),E.set(6,Math.acos),E.set(7,Math.asin),E.set(8,Math.atan),E.set(9,Math.atanh),E.set(10,Math.abs),E.set(21,Math.cos),E.set(22,Math.cosh),E.set(48,Math.floor),E.set(49,Math.ceil),E.set(51,Math.sin),E.set(52,Math.sinh),E.set(56,Math.tan),E.set(57,Math.tanh),E.set(59,Math.acosh),E.set(60,Math.asinh),E.set(65,Math.floor),Qt.set(5,Math.pow),Qt.set(61,Math.atan2),I.set(1,vn),I.set(2,Tn),I.set(3,Pn),I.set(11,Cn),I.set(12,_n),I.set(13,Sn),I.set(14,Bn),I.set(15,jn),I.set(16,Mn),I.set(17,Gn),I.set(18,zn),I.set(19,On),I.set(20,Dn),I.set(23,$s),I.set(24,En),I.set(25,Ln),I.set(26,Un),I.set(27,Vn),I.set(28,Jn),I.set(29,Kn),I.set(30,Fn),I.set(31,Qn),I.set(32,bn),I.set(33,Xn),I.set(34,Zn),I.set(35,qn),I.set(36,Wn),I.set(37,Hn),I.set(44,Yn),I.set(45,tr),I.set(46,er),I.set(53,An),I.set(64,Nn),I.set(65,$n),I.set(76,Je),I.set(78,Je),M.set(38,ss),M.set(39,Ke),M.set(40,Qe),M.set(41,es),M.set(42,Xe),M.set(43,ns),M.set(47,Ze),M.set(54,ts),M.set(55,Ye),M.set(58,rs),M.set(66,ss),M.set(67,Ke),M.set(68,Qe),M.set(69,es),M.set(70,Xe),M.set(71,ns),M.set(72,Ze),M.set(73,ts),M.set(74,Ye),M.set(75,rs))}function Is(a,t,e={}){nr();let s=wn(a,t>=66&&t<=75);const{outputPixelType:r="f32"}=e,o=!M.has(t)||e.processAsMultiband,i=o?a[0].pixels.length:1,n=[];for(let l=0;l<i;l++){const p=M.has(t)&&!o?a.flatMap(g=>g.pixels):a.map(g=>g.pixels[l]);let h,f=!0;if(t===Fs.setNull){const g=sr(p,s,r);h=g.band,s=g.mask,f=!1}else I.has(t)?h=I.get(t)(p,s,"f64"):E.has(t)?h=t===J.asin||t===J.acos||t===J.atanh?Rn(p,s,"f64",t):In(p,s,"f64",E.get(t)):Qt.has(t)?h=kn(p,s,"f64",Qt.get(t)):M.has(t)?h=M.get(t)(p,s,"f64"):(h=p[0],f=!1);if(f&&t!==W.isNull&&!Ns.has(t)){const g=A.createEmptyBand(r,h.length);s||(s=new Uint8Array(h.length).fill(255)),Ms(h,s),ms(h,s,r,g),h=g}n.push(h)}const u=a[0];return new A({width:u.width,height:u.height,pixelType:r,mask:t===W.isNull?null:s,pixels:n})}function rr(a,t,e){return Is(a,t=[null,1,2,3,23,5,44][t]??1,{outputPixelType:e})}let kt=class extends G{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return(e==null?void 0:e[0])==null||(e==null?void 0:e[1])==null?null:rr(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[r,o]=Rt(s);const i=L(s);return i&&(r-=1e-4,o+=1e-4),{imageCount:2,operationName:e,domainRange:[r,o],isOutputRounded:i}}};c([m({json:{write:!0,name:"rasterFunction"}})],kt.prototype,"functionName",void 0),c([m({type:dn,json:{write:!0,name:"rasterFunctionArguments"}})],kt.prototype,"functionArguments",void 0),c([m()],kt.prototype,"rasterArgumentNames",void 0),kt=c([N("esri.layers.support.rasterFunctions.ArithmeticFunction")],kt);const or=kt;var ae;let ue=ae=class extends O{clone(){return new ae({raster:this.raster})}};ue=ae=c([N("esri.layers.support.rasterFunctions.AspectFunctionArguments")],ue);const ir=ue;let ut=class extends G{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var s;const t=this.sourceRasterInfos[0];this.isGCS=((s=t.spatialReference)==null?void 0:s.isGeographic)??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var n;const e=(n=t.pixelBlocks)==null?void 0:n[0];if(e==null)return null;const{extent:s,primaryPixelSizes:r}=t,o=r==null?void 0:r[0],i=o??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return Ws(e,{resolution:i})}};c([m({json:{write:!0,name:"rasterFunction"}})],ut.prototype,"functionName",void 0),c([m({type:ir,json:{write:!0,name:"rasterFunctionArguments"}})],ut.prototype,"functionArguments",void 0),c([m()],ut.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],ut.prototype,"isGCS",void 0),ut=c([N("esri.layers.support.rasterFunctions.AspectFunction")],ut);const ar=ut,ur=new Set(["+","-","*","/","(",")"]);function lr(a,t){(a=a.replaceAll(" ","")).startsWith("-")&&(a="0"+a),a.startsWith("+")&&(a=a.slice(1));const e=a.split(""),s=[],r=[];let o="";for(let i=0;i<e.length;i++){const n=e[i];ur.has(n)?(o.length&&r.push(os(o,t)),s.push(n),o=""):o=o.concat(n)}return o.length&&r.push(os(o,t)),{ops:s,nums:r}}function os(a,t){return a.toLowerCase().startsWith("b")?t[parseInt(a.slice(1),10)-1]:parseFloat(a)}function cr(a,t,e,s){if(typeof e=="number"&&typeof s=="number")return e+s;let r,o,i;typeof e=="number"?(i=s,r=i.length,o=new Float32Array(r),o.fill(e)):(r=e.length,o=e,s.constructor===Number?(i=new Float32Array(r),i.fill(s)):i=s);const n=new Float32Array(r);switch(t){case"+":for(let u=0;u<r;u++)(a==null||a[u])&&(n[u]=o[u]+i[u]);break;case"-":for(let u=0;u<r;u++)(a==null||a[u])&&(n[u]=o[u]-i[u]);break;case"*":for(let u=0;u<r;u++)(a==null||a[u])&&(n[u]=o[u]*i[u]);break;case"/":for(let u=0;u<r;u++)(a==null||a[u])&&i[u]&&(n[u]=o[u]/i[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return n}function pr(a,t){a.splice(t,1);let e=0,s=0;do{e=0,s=0;for(let r=0;r<a.length;r++)if(a[r]==="(")e=r;else if(a[r]===")"){s=r;break}s===e+1&&a.splice(e,2)}while(s===e+1);return a}function hr(a){if(a.length===1)return{opIndex:0,numIndex:0};let t=0,e=0;for(let i=0;i<a.length;i++)if(a[i]==="(")t=i;else if(a[i]===")"){e=i;break}const s=e===0?a:a.slice(t+1,e);let r=-1;for(let i=0;i<s.length;i++)if(s[i]==="*"||s[i]==="/"){r=i;break}if(r>-1)e>0&&(r+=t+1);else{for(let i=0;i<s.length;i++)if(s[i]==="+"||s[i]==="-"){r=i;break}e>0&&(r+=t+1)}let o=0;for(let i=0;i<r;i++)a[i]==="("&&o++;return{opIndex:r,numIndex:r-o}}function mr(a,t,e){let s,{ops:r,nums:o}=lr(e,t);if(r.length===0){const i=o.length===1?o[0]:t[0];if(i instanceof Float32Array)return[i];const n=new Float32Array(t[0].length);return typeof i=="number"?n.fill(i):n.set(i),[n]}for(;r.length>0;){const{numIndex:i,opIndex:n}=hr(r);if(s=cr(a,r[n],o[i],o[i+1]),r.length===1)break;r=pr(r,n),o.splice(i,2,s)}return[s]}const fr=new Z({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function dr(a,t){if(!Gs(a))return a;const{equation:e,method:s}=t,r=t.bandIndexes.map(f=>f-1),{pixels:o,mask:i}=a;let n;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=is(i,o[r[0]],o[r[1]]);break;case"ndwi":n=is(i,o[r[1]],o[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=yr(i,o[r[0]],o[r[1]]);break;case"ci-g":case"ci-re":n=xr(i,o[r[0]],o[r[1]]);break;case"savi":n=wr(i,o[r[0]],o[r[1]],r[2]+1);break;case"tsavi":n=vr(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":n=br(i,o[r[0]],o[r[1]]);break;case"gemi":n=Ar(i,o[r[0]],o[r[1]]);break;case"pvi":n=Tr(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1);break;case"gvitm":n=Pr(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"sultan":n=Fr(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]]]);break;case"vari":n=Nr(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"mtvi2":n=$r(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"rtvi-core":n=Rr(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"evi":n=Ir(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"wndwi":n=kr(i,[o[r[0]],o[r[1]],o[r[2]]],r[3]?r[3]+1:.5);break;case"bai":n=Cr(i,o[r[0]],o[r[1]]);break;case"custom":n=mr(i,o,e);break;default:return a}const{outputPixelType:u="f32"}=t,l=u!=null&&L(u);let p;i?(p=new Uint8Array(a.width*a.height),p.set(i)):l&&(p=new Uint8Array(a.width*a.height).fill(255)),l&&(n=n.map(f=>{const g=A.createEmptyBand(u,f.length);return ms(f,p,u,g),g}));const h=new A({width:a.width,height:a.height,pixelType:u,pixels:n,mask:p});return h.updateStatistics(),h}function gr(a,t,e,s){const{mask:r,pixels:o,width:i,height:n}=a,u=o[e],l=o[t],p=l.length,h=s?new Uint8Array(p):new Float32Array(p),f=s?100:1,g=s?100.5:0;for(let x=0;x<p;x++)if(r==null||r[x]){const d=u[x],b=l[x],w=d+b;w&&(h[x]=(d-b)/w*f+g)}const y=new A({width:i,height:n,mask:r,pixelType:s?"u8":"f32",pixels:[h]});return y.updateStatistics(),y}function U(a){const t=new Float32Array(9);return t[3*a[0]]=1,t[3*a[1]+1]=1,t[3*a[2]+2]=1,t}function is(a,t,e){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o]){const i=t[o],n=e[o],u=i+n;u&&(r[o]=(i-n)/u)}return[r]}function yr(a,t,e){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o]){const i=t[o],n=e[o];n&&(r[o]=i/n)}return[r]}function xr(a,t,e){const s=t.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o]){const i=t[o],n=e[o];n&&(r[o]=i/n-1)}return[r]}function wr(a,t,e,s){const r=e.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(a==null||a[i]){const n=e[i],u=t[i],l=u+n+s;l&&(o[i]=(u-n)/l*(1+s))}return[o]}function vr(a,t,e,s,r,o){const i=e.length,n=new Float32Array(i),u=-r*s+o*(1+s*s);for(let l=0;l<i;l++)if(a==null||a[l]){const p=e[l],h=t[l],f=r*h+p+u;f&&(n[l]=s*(h-s*p-r)/f)}return[n]}function br(a,t,e){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o]){const i=e[o],n=t[o],u=2*n+1;r[o]=.5*(u-Math.sqrt(u*u-8*(n-i)))}return[r]}function Ar(a,t,e){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o]){const i=e[o],n=t[o];if(i!==1&&n+i+.5!==0){const u=(2*(n*n-i*i)+1.5*n+.5*i)/(n+i+.5);r[o]=u*(1-.25*u)-(i-.125)/(1-i)}}return[r]}function Tr(a,t,e,s,r){const o=e.length,i=new Float32Array(o),n=1/Math.sqrt(1+s*s);for(let u=0;u<o;u++)if(a==null||a[u]){const l=e[u],p=t[u];i[u]=(p-s*l-r)*n}return[i]}function Pr(a,t){const[e,s,r,o,i,n]=t,u=e.length,l=new Float32Array(u);for(let p=0;p<u;p++)(a==null||a[p])&&(l[p]=-.2848*e[p]-.2435*s[p]-.5436*r[p]+.7243*o[p]+.084*i[p]-.18*n[p]);return[l]}function Fr(a,t){const[e,s,r,o,i]=t,n=e.length,u=new Float32Array(n),l=new Float32Array(n),p=new Float32Array(n);for(let h=0;h<n;h++)(a==null||a[h])&&(u[h]=i[h]?o[h]/i[h]*100:0,l[h]=e[h]?o[h]/e[h]*100:0,p[h]=r[h]?s[h]/r[h]*(o[h]/r[h])*100:0);return[u,l,p]}function Nr(a,t){const[e,s,r]=t,o=e.length,i=new Float32Array(o);for(let n=0;n<o;n++)if(a==null||a[n])for(n=0;n<o;n++){const u=e[n],l=s[n],p=l+u-r[n];p&&(i[n]=(l-u)/p)}return[i]}function $r(a,t){const[e,s,r]=t,o=e.length,i=new Float32Array(o);for(let n=0;n<o;n++)if(a==null||a[n])for(n=0;n<o;n++){const u=e[n],l=s[n],p=r[n],h=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(l))-.5);if(h){const f=1.5*(1.2*(u-p)-2.5*(l-p));i[n]=f/h}}return[i]}function Rr(a,t){const[e,s,r]=t,o=e.length,i=new Float32Array(o);for(let n=0;n<o;n++)if(a==null||a[n])for(n=0;n<o;n++){const u=e[n],l=s[n],p=r[n];i[n]=100*(u-l)-10*(u-p)}return[i]}function Ir(a,t){const[e,s,r]=t,o=e.length,i=new Float32Array(o);for(let n=0;n<o;n++)if(a==null||a[n])for(n=0;n<o;n++){const u=e[n],l=s[n],p=u+6*l-7.5*r[n]+1;p&&(i[n]=2.5*(u-l)/p)}return[i]}function kr(a,t,e=.5){const[s,r,o]=t,i=r.length,n=new Float32Array(i);for(let u=0;u<i;u++)if(a==null||a[u])for(u=0;u<i;u++){const l=s[u],p=r[u],h=o[u],f=l+e*p+(1-e)*h;f&&(n[u]=(l-e*p-(1-e)*h)/f)}return[n]}function Cr(a,t,e){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o])for(o=0;o<s;o++){const i=(.1-t[o])**2+(.06-e[o])**2;i&&(r[o]=1/i)}return[r]}var le;let Ut=le=class extends O{constructor(){super(...arguments),this.method="custom"}clone(){return new le({method:this.method,bandIndexes:this.bandIndexes,raster:H(this.raster)})}};c([m({json:{type:String,write:!0}})],Ut.prototype,"bandIndexes",void 0),c([X(fr)],Ut.prototype,"method",void 0),Ut=le=c([N("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Ut);const _r=Ut,Sr=new Set(["vari","mtvi2","rtvi-core","evi"]);let Ct=class extends G{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){var i;const e=(i=t.pixelBlocks)==null?void 0:i[0];if(e==null)return e;const{method:s,bandIndexes:r}=this.functionArguments,o=r.split(" ").map(n=>parseFloat(n));return dr(e,{method:s,bandIndexes:o,equation:r,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(n=>parseFloat(n)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,r;const o=new Float32Array(3),{method:i}=this.functionArguments;switch(i){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=U([e[0],e[1],0]),r="ndxi";break;case"ndwi":s=U([e[1],e[0],0]),r="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=U([e[0],e[1],0]),r="sr";break;case"ci-g":case"ci-re":s=U([e[0],e[1],0]),r="ci";break;case"savi":s=U([e[0],e[1],0]),r="savi",o[0]=t[2]+1;break;case"tsavi":s=U([e[0],e[1],0]),r="tsavi",o[0]=t[2]+1,o[1]=t[3]+1,o[2]=t[4]+1;break;case"msavi":s=U([e[0],e[1],0]),r="msavi";break;case"gemi":s=U([e[0],e[1],0]),r="gemi";break;case"pvi":s=U([e[0],e[1],0]),r="tsavi",o[0]=t[2]+1,o[1]=t[3]+1;break;case"vari":s=U([e[0],e[1],e[2]]),r="vari";break;case"mtvi2":s=U([e[0],e[1],e[2]]),r="mtvi";break;case"rtvi-core":s=U([e[0],e[1],e[2]]),r="rtvicore";break;case"evi":s=U([e[0],e[1],e[2]]),r="evi";break;case"wndwi":s=U([e[0],e[1],0]),r="wndwi",o[0]=t[3]?t[3]+1:.5;break;case"bai":s=U([e[1],e[0],0]),r="bai";break;default:s=U([0,1,2]),r="custom"}return{bandIndexMat3:s,indexType:r,adjustments:o,isOutputRounded:L(this.outputPixelType)}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(n=>parseFloat(n)-1),s=t.length,r=e.map(n=>n>=s?s-1:n),o=Sr.has(this.functionArguments.method)?3:2,i=r.slice(0,o).map(n=>t[n]);return i.length===2&&i.push(0),i}};c([m({json:{write:!0,name:"rasterFunction"}})],Ct.prototype,"functionName",void 0),c([m({type:_r,json:{write:!0,name:"rasterFunctionArguments"}})],Ct.prototype,"functionArguments",void 0),c([m()],Ct.prototype,"rasterArgumentNames",void 0),Ct=c([N("esri.layers.support.rasterFunctions.BandArithmeticFunction")],Ct);const Br=Ct;var ce;const as=new Z({1:"outside",2:"inside"},{useNumericKeys:!0});let Vt=ce=class extends O{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ce({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};c([m({types:sn,json:{read:en,write:!0}})],Vt.prototype,"clippingGeometry",void 0),c([m({json:{read:as.read,write:as.write}})],Vt.prototype,"clippingType",void 0),Vt=ce=c([N("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Vt);const jr=Vt;let lt=class extends G{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:s,clippingType:r}=e;if(!s)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if(r==="outside")try{const{spatialReference:o}=t,i=s.type==="extent"?on(s,o):an(s,o).extent;i&&mn(t,i)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};c([m({json:{write:!0,name:"rasterFunction"}})],lt.prototype,"functionName",void 0),c([m({type:jr,json:{write:!0,name:"rasterFunctionArguments"}})],lt.prototype,"functionArguments",void 0),c([m()],lt.prototype,"rasterArgumentNames",void 0),c([m()],lt.prototype,"isNoopProcess",void 0),lt=c([N("esri.layers.support.rasterFunctions.ClipFunction")],lt);const Mr=lt;var pe;let K=pe=class extends O{castColormapName(a){if(!a)return null;const t=a.toLowerCase();return Hs.includes(t)?t:null}readColorRamp(a){return Ps(a)}readColorRampName(a,t){if(!a)return null;const e=$t.jsonValues.find(s=>s.toLowerCase()===a.toLowerCase());return e?$t.fromJSON(e):null}clone(){var a;return new pe({colormap:H(this.colormap),colormapName:this.colormapName,colorRamp:(a=this.colorRamp)==null?void 0:a.clone(),colorRampName:this.colorRampName})}};c([m({type:[[Number]],json:{write:!0}})],K.prototype,"colormap",void 0),c([m({type:String,json:{write:!0}})],K.prototype,"colormapName",void 0),c([ds("colormapName")],K.prototype,"castColormapName",null),c([m({types:un,json:{write:!0}})],K.prototype,"colorRamp",void 0),c([qt("colorRamp")],K.prototype,"readColorRamp",null),c([m({type:$t.apiValues,json:{type:$t.jsonValues,write:$t.write}})],K.prototype,"colorRampName",void 0),c([qt("colorRampName")],K.prototype,"readColorRampName",null),K=pe=c([N("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],K);const Gr=K,zr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Or=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function ze(a,t){const e=[],s=[];for(let o=0;o<a.length-1;o++)e.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:a[o].slice(1),toColor:a[o+1].slice(1)}),s.push(a[o+1][0]-a[o][0]);const r=a[a.length-1][0];return ws({type:"multipart",colorRamps:e},{numColors:r,weights:t=t??s})}function Dr(){return ze([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function Er(){const a=ze([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let t=a.length;t<256;t++)a.push([6,27,7]);return a}function Ur(){return ws({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function Vr(){const a=[];for(let t=0;t<256;t++){const e=[];for(let s=0;s<3;s++)e.push(Math.round(255*Math.random()));a.push(e)}return a}function Lr(){return ze([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function Wr(a){let t;switch(a){case"elevation":t=Dr();break;case"gray":t=Ur();break;case"hillshade":t=Lr();break;case"ndvi":t=zr;break;case"ndvi2":t=Er();break;case"ndvi3":t=Or;break;case"random":t=Vr()}return t?(t=t.map((e,s)=>[s,...e]),t):null}let Y=class extends G{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:r,colorRampName:o}=this.functionArguments;if(!(e!=null&&e.length))if(r)this.colorRamp=r,e=oe(r,{interpolateAlpha:!0});else if(o){const u=vs(o);u&&(e=oe(u),this.colorRamp=Ps(u))}else s&&(e=Wr(s));if(!(e!=null&&e.length))return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const i=this._getOutputPixelType(t.pixelType);this.outputPixelType=i.startsWith("f")?"s32":i;const n=t.clone();return n.pixelType=this.outputPixelType,n.colormap=e,n.bandCount=1,this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){var s;let e=(s=t.pixelBlocks)==null?void 0:s[0];return!e||L(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};c([m({json:{write:!0,name:"rasterFunction"}})],Y.prototype,"functionName",void 0),c([m({type:Gr,json:{write:!0,name:"rasterFunctionArguments"}})],Y.prototype,"functionArguments",void 0),c([m()],Y.prototype,"rasterArgumentNames",void 0),c([m()],Y.prototype,"isNoopProcess",void 0),c([m({json:{write:!0}})],Y.prototype,"indexedColormap",void 0),c([m()],Y.prototype,"colorRamp",void 0),Y=c([N("esri.layers.support.rasterFunctions.ColormapFunction")],Y);const Hr=Y;var he;let me=he=class extends O{clone(){return new he({raster:this.raster})}};me=he=c([N("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],me);const qr=me;let ct=class extends G{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){var i;const t=this.sourceRasterInfos[0];if(t.bandCount>1||!((i=t.colormap)!=null&&i.length))return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const s=[...t.colormap].sort((n,u)=>n[0]-u[0]),{indexedColormap:r,offset:o}=gs({colormap:s});return r?(this.lookup={indexedColormap:r,offset:o},{success:!0,supportsGPU:bs(r)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){var h;let e=(h=t.pixelBlocks)==null?void 0:h[0];if(!e||!this.lookup)return e;e=e.clone();const s=e.pixels[0],r=e.mask??new Uint8Array(s.length).fill(255),o=new Uint8Array(s.length),i=new Uint8Array(s.length),n=new Uint8Array(s.length),{indexedColormap:u,offset:l}=this.lookup,p=u.length;for(let f=0;f<s.length;f++)if(r[f]){let g=4*(s[f]-l);g<0||g>p-4?r[f]=0:(o[f]=u[g++],i[f]=u[g++],n[f]=u[g++])}return e.pixels=[o,i,n],e.statistics=[new ne(0,255),new ne(0,255),new ne(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};c([m({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0),c([m({type:qr,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0),c([m()],ct.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],ct.prototype,"lookup",void 0),ct=c([N("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],ct);const Jr=ct;var fe;let Lt=fe=class extends O{constructor(){super(...arguments),this.rasters=[]}writeRasters(a,t){t.rasters=a.map(e=>typeof e=="number"||typeof e=="string"?e:e.toJSON())}clone(){return new fe({rasters:H(this.rasters)})}};c([m({json:{write:!0}})],Lt.prototype,"rasters",void 0),c([Yt("rasters")],Lt.prototype,"writeRasters",null),Lt=fe=c([N("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Lt);const Kr=Lt;let _t=class extends G{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map(({bandCount:o})=>o).reduce((o,i)=>o+i),t.every(({statistics:o})=>o!=null&&o.length)){const o=[];t.forEach(({statistics:i})=>i!=null&&o.push(...i)),s.statistics=o}if(t.every(({histograms:o})=>o!=null&&o.length)){const o=[];t.forEach(({histograms:i})=>i!=null&&o.push(...i)),s.histograms=o}s.multidimensionalInfo&&s.multidimensionalInfo.variables.forEach(o=>{const i=t.map(l=>{var p;return(p=l.multidimensionalInfo)==null?void 0:p.variables.find(({name:h})=>h===o.name)}),n=i.map(l=>{var p;return(p=l==null?void 0:l.statistics)!=null&&p.length?l.statistics:null}),u=i.map(l=>{var p;return(p=l==null?void 0:l.histograms)!=null&&p.length?l.histograms:null});o.statistics=n.every(l=>l!=null)?n.flat():null,o.histograms=u.every(l=>l!=null)?u.flat():null}),s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const r=t.every(o=>{var i;return(i=o.keyProperties.BandProperties)==null?void 0:i.length})?t.flatMap(o=>o.keyProperties.BandProperties):void 0;return s.keyProperties={...s.keyProperties,BandProperties:r},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?(e==null?void 0:e[0])==null?null:zs(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};c([m({json:{write:!0,name:"rasterFunction"}})],_t.prototype,"functionName",void 0),c([m({type:Kr,json:{write:!0,name:"rasterFunctionArguments"}})],_t.prototype,"functionArguments",void 0),c([m()],_t.prototype,"rasterArgumentNames",void 0),_t=c([N("esri.layers.support.rasterFunctions.CompositeBandFunction")],_t);const Xr=_t,Zr=new Z({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Qr=new Z({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function Yr(a,t,e,s){const[r,o]=a,i=L(e)&&!L(r.pixelType)&&!L(o.pixelType),n=[r.mask,o.mask].filter(y=>y),u=A.combineBandMasks(n),l=a.map(y=>y.pixels[0]),{width:p,height:h}=r,f=A.createEmptyBand(e,p*h);switch(t){case"difference":case"relative-difference":to({bands:l,mask:u,outBand:f,isRoundingNeeded:i,isRelative:t==="relative-difference"});break;case"categorical":eo({bands:l,mask:u,outBand:f,...s});break;case"euclidean-distance":so({pixels:a.map(y=>y.pixels),mask:u,outBand:f});break;case"angle-difference":no({pixels:a.map(y=>y.pixels),mask:u,outBand:f});break;case"band-with-most-change":ro({pixels:a.map(y=>y.pixels),mask:u,outBand:f})}const g=new A({width:p,height:h,pixels:[f],pixelType:e,mask:u});return g.updateStatistics(),g}function to(a){const{bands:[t,e],mask:s,isRelative:r,isRoundingNeeded:o,outBand:i}=a,n=t.length;for(let u=0;u<n;u++)if(!s||s[u]){let l=t[u]-e[u];if(r){const p=Math.max(Math.abs(t[u])-Math.abs(e[u]));l=p>0?l/p:0}i[u]=o?Math.round(l):l}}function eo(a){const{bands:[t,e],categoryIndexLookups:[s,r],classNames:[o,i],mask:n,keepMethod:u,outBand:l}=a,p=t.length,h=o.length,f=i.length,g=h*f,y=g+1,x=g+2;for(let d=0;d<p;d++)if(!n||n[d]){const b=t[d],w=e[d],P=s[b],v=r[w],F=o[P],T=i[v];l[d]=P==null||v==null?g:u==="changed"&&F===T?y:u==="unchanged"&&F!==T?x:P*f+v}}function so(a){const{pixels:[t,e],mask:s,outBand:r}=a,o=t[0].length,i=t.length;for(let n=0;n<o;n++)if(!s||s[n]){let u=0;for(let l=0;l<i;l++){const p=t[l][n]-e[l][n];u+=p*p}r[n]=Math.sqrt(u)}}function no(a){const{pixels:[t,e],mask:s,outBand:r}=a,o=t[0].length,i=t.length;for(let n=0;n<o;n++)if(!s||s[n]){let u=0,l=0,p=0;for(let f=0;f<i;f++){const g=t[f][n],y=e[f][n];u+=g*y,l+=g*g,p+=y*y}const h=Math.sqrt(l*p);r[n]=h?Math.acos(u/h):1.5707963267948966}}function ro(a){const{pixels:[t,e],mask:s,outBand:r}=a,o=t[0].length,i=t.length;for(let n=0;n<o;n++)if(!s||s[n]){let u=0,l=0;for(let p=0;p<i;p++){const h=Math.abs(t[p][n]-e[p][n]);h>u&&(u=h,l=p)}r[n]=l}}var de;let pt=de=class extends O{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new de({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};c([X(Zr)],pt.prototype,"method",void 0),c([X(Qr)],pt.prototype,"keepMethod",void 0),c([m({json:{write:!0}})],pt.prototype,"raster2",void 0),c([m({readOnly:!0})],pt.prototype,"rasters",null),pt=de=c([N("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],pt);const oo=pt;let ht=class extends G{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),t==="categorical"){const s=this.sourceRasterInfos.map(i=>i.attributeTable),r=this._getFieldNames(s,"value"),o=s.map(i=>this._getClassFieldName(i));if(r[0]==null||r[1]==null||o[0]==null||o[1]==null)return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,r,o)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:t==="difference"||t==="relative-difference"}}_processPixels(t){const{pixelBlocks:e}=t;if((e==null?void 0:e[0])==null||(e==null?void 0:e[1])==null)return null;const{method:s}=this.functionArguments;return Yr(e,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,s]=Rt(t);const r=L(t);return r&&(e-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[e,s],isOutputRounded:r}}_updateAttributeTable(t,e,s){const r=this.sourceRasterInfos.map(v=>v.attributeTable),o=r.map((v,F)=>v.features.map(T=>T.attributes[e[F]])),i=r.map((v,F)=>v.features.map(T=>T.attributes[s[F]])),n=o.map(v=>{const F=[];return v.forEach((T,$)=>F[T]=$),F}),{keepMethod:u}=this.functionArguments;this._categoryConfig={categoryIndexLookups:n,classNames:i,keepMethod:u};const l=r[0].clone();l.fields=[new st({name:"OID",type:"oid"}),new st({name:"Value",type:"integer"}),new st({name:"ClassName",type:"string"}),new st({name:"Class_From",type:"string"}),new st({name:"Class_To",type:"string"})];const p=this._getFieldNames(r,"red"),h=this._getFieldNames(r,"green"),f=this._getFieldNames(r,"blue"),g=[],y=p.length===2&&h.length===2&&f.length===2;y&&(g.push(...r.map((v,F)=>v.features.map(T=>[T.attributes[p[F]],T.attributes[h[F]],T.attributes[f[F]]]))),l.fields.push(new st({name:"Red",type:"integer"}),new st({name:"Green",type:"integer"}),new st({name:"Blue",type:"integer"})));const x=l.features[0].clone();x.geometry=null;const d=[],[b,w]=o.map(v=>v.length);let P=1;for(let v=0;v<b;v++){const F=i[0][v];for(let T=0;T<w;T++){const $=i[1][T];if(u==="changed"&&F===$||u==="unchanged"&&F!==$)continue;const R=x.clone();R.attributes={OID:P++,Value:v*w+T,ClassName:F===$?F:`${F} -> ${$}`,Class_From:F,Class_To:$},y&&(R.attributes.Red=g[0][v][0]+g[1][T][0]>>1,R.attributes.Green=g[0][v][1]+g[1][T][1]>>1,R.attributes.Blue=g[0][v][2]+g[1][T][2]>>1),d.push(R)}}if(u==="changed"){const v=x.clone();v.attributes={OID:P++,Value:b*w+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},d.push(v)}else if(u==="unchanged"){const v=x.clone();v.attributes={OID:P++,Value:b*w+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},d.push(v)}l.features=d,t.attributeTable=l}_getFieldNames(t,e){return t.map(({fields:s})=>{var r;return(r=s.find(o=>o.name.toLowerCase()===e))==null?void 0:r.name}).filter(s=>s)}_getClassFieldName(t){const e=t.fields.find(s=>s.type==="string"&&s.name.toLowerCase().startsWith("class"))??t.fields.find(s=>s.type==="string"&&s.name.toLowerCase().includes("class")||s.name.toLowerCase().includes("type")||s.name.toLowerCase().includes("name"))??t.fields.find(s=>s.type==="string");return e==null?void 0:e.name}};c([m({json:{write:!0,name:"rasterFunction"}})],ht.prototype,"functionName",void 0),c([m({type:oo,json:{write:!0,name:"rasterFunctionArguments"}})],ht.prototype,"functionArguments",void 0),c([m()],ht.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],ht.prototype,"_categoryConfig",void 0),ht=c([N("esri.layers.support.rasterFunctions.ComputeChangeFunction")],ht);const io=ht;var ge;let Wt=ge=class extends O{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new ge({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};c([m({json:{write:!0}})],Wt.prototype,"contrastOffset",void 0),c([m({json:{write:!0}})],Wt.prototype,"brightnessOffset",void 0),Wt=ge=c([N("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Wt);const ao=Wt;let mt=class extends G{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if(e.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:r,brightnessOffset:o}=this.functionArguments;return this.lookup=qs(r,o),{success:!0,supportsGPU:!0}}_processPixels(t){var s;const e=(s=t.pixelBlocks)==null?void 0:s[0];return e==null?null:je(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};c([m({json:{write:!0,name:"rasterFunction"}})],mt.prototype,"functionName",void 0),c([m({type:ao,json:{write:!0,name:"rasterFunctionArguments"}})],mt.prototype,"functionArguments",void 0),c([m()],mt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],mt.prototype,"lookup",void 0),mt=c([N("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],mt);const uo=mt;function Oe(a,t,e,s,r){const o=Math.floor(s/2);for(let n=0;n<o;n++)for(let u=0;u<t;u++)a[n*t+u]=a[(r-1-n)*t+u],a[(e-1-n)*t+u]=a[(e-r+n)*t+u];const i=Math.floor(r/2);for(let n=0;n<e;n++){const u=n*t;for(let l=0;l<i;l++)a[u+l]=a[u+r-1-l],a[u+t-l-1]=a[u+t+l-r]}}const j=new Map;function lo(a){const t=Math.sqrt(a.length),e=a.slice(0,t),s=[1];for(let r=1;r<t;r++){let o=null;for(let i=0;i<t;i++){const n=a[i+r*t],u=a[i];if(o==null)if(u===0){if(n)return{separable:!1,row:null,col:null}}else o=n/u;else if(n/u!==o)return{separable:!1,row:null,col:null}}if(o==null)return{separable:!1,row:null,col:null};s.push(o)}return{separable:!0,row:e,col:s}}function us(a,t,e,s,r,o,i){const n=new Float32Array(t*e),u=o.length,l=i?0:s,p=i?s:0,h=i?1:t;for(let f=l;f<e-l;f++){const g=f*t;for(let y=p;y<t-p;y++){if(r&&!r[g+y])continue;let x=0;for(let d=0;d<u;d++)x+=a[g+y+(d-s)*h]*o[d];n[g+y]=x}}return n}function co(a,t,e,s,r,o,i){const n=new Float32Array(t*e),u=Math.floor(s/2),l=Math.floor(r/2);for(let p=u;p<e-u;p++){const h=p*t;for(let f=l;f<t-l;f++){if(o&&!o[h+f])continue;let g=0;for(let y=0;y<s;y++)for(let x=0;x<r;x++)g+=a[h+f+(y-u)*t+x-l]*i[y*r+x];n[h+f]=g}}return n}function po(a,t,e=!0){const{pixels:s,width:r,height:o,pixelType:i,mask:n}=a,u=s.length,l=[],{kernel:p,rows:h,cols:f}=t;for(let g=0;g<u;g++){const y=co(s[g],r,o,h,f,n,p);e&&Oe(y,r,o,h,f),l.push(y)}return new A({width:r,height:o,pixelType:i,pixels:l,mask:n})}function ho(a,t,e,s=!0){const{pixels:r,width:o,height:i,pixelType:n,mask:u}=a,l=r.length,p=[],h=t.length,f=e.length,g=Math.floor(h/2),y=Math.floor(f/2);for(let x=0;x<l;x++){let d=us(r[x],o,i,g,u,t,!0);d=us(d,o,i,y,u,e,!1),s&&Oe(d,o,i,h,f),p.push(d)}return new A({width:o,height:i,pixelType:n,pixels:p,mask:u})}function mo(a,t){const e=lo(t.kernel),s=t.mirrorEdges!==!1,r=e.separable?ho(a,e.row,e.col,s):po(a,t,s),{outputPixelType:o}=t;return o&&r.clamp(o),r}j.set(_.none,[0,0,0,0,1,0,0,0,0]),j.set(_.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),j.set(_.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),j.set(_.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),j.set(_.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),j.set(_.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),j.set(_.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),j.set(_.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),j.set(_.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),j.set(_.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),j.set(_.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),j.set(_.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),j.set(_.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),j.set(_.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),j.set(_.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),j.set(_.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),j.set(_.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),j.set(_.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),j.set(_.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),j.set(_.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),j.set(_.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),j.set(_.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),j.set(_.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var ye;let ft=ye=class extends O{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(a){this._set("convolutionType",a);const t=j.get(a);if(!t||a===_.userDefined||a===_.none)return;const e=Math.sqrt(t.length);this._set("kernel",t),this._set("cols",e),this._set("rows",e)}clone(){return new ye({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:H(this.raster)})}};c([m({json:{type:Number,write:!0}})],ft.prototype,"rows",void 0),c([m({json:{type:Number,write:!0}})],ft.prototype,"cols",void 0),c([m({json:{name:"type",type:Number,write:!0}})],ft.prototype,"convolutionType",null),c([m({json:{type:[Number],write:!0}})],ft.prototype,"kernel",void 0),ft=ye=c([N("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],ft);const fo=ft,ls=25;let dt=class extends G{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce((r,o)=>r+o);return e===-1||s===0||s===1?t:t.map(r=>r/s)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:r}=this.functionArguments;if(!Object.values(_).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==_.none&&e*s!==r.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const o=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(o.pixelType);const i=o.clone();i.pixelType=this.outputPixelType;const n=[_.none,_.sharpen,_.sharpen2,_.sharpening3x3,_.sharpening5x5];return(t===-1||this.outputPixelType!=="u8"&&!n.includes(t))&&(i.statistics=null,i.histograms=null),i.colormap=null,i.attributeTable=null,this.rasterInfo=i,{success:!0,supportsGPU:r.length<=ls}}_processPixels(t){var i;const e=(i=t.pixelBlocks)==null?void 0:i[0];if(e==null||this.functionArguments.convolutionType===_.none)return e;const{rows:s,cols:r}=this.functionArguments,{_normalizedKernel:o}=this;return mo(e,{kernel:o,rows:s,cols:r,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(ls);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:Rt(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],dt.prototype,"functionName",void 0),c([m({type:fo,json:{write:!0,name:"rasterFunctionArguments"}})],dt.prototype,"functionArguments",void 0),c([m()],dt.prototype,"rasterArgumentNames",void 0),c([m()],dt.prototype,"_normalizedKernel",null),dt=c([N("esri.layers.support.rasterFunctions.ConvolutionFunction")],dt);const go=dt;var xe;const ks=new Z({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let St=xe=class extends O{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(a,t){return ks.fromJSON(t.type??t.curvatureType??0)}clone(){return new xe({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};c([m({json:{write:{target:"type"}}}),X(ks)],St.prototype,"curvatureType",void 0),c([qt("curvatureType",["type","curvatureType"])],St.prototype,"readCurvatureType",null),c([m({type:Number,json:{write:!0}})],St.prototype,"zFactor",void 0),St=xe=c([N("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],St);const yo=St;let gt=class extends G{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var p;const e=(p=t.pixelBlocks)==null?void 0:p[0];if(e==null)return null;const{zFactor:s,curvatureType:r}=this.functionArguments,{extent:o,primaryPixelSizes:i}=t,n=i==null?void 0:i[0],u=n??(o?{x:o.width/e.width,y:o.height/e.height}:{x:1,y:1}),l=this.isGCS&&s>=1?s*Ht:s;return Js(e,{zFactor:l,curvatureType:r,resolution:u})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Ht:t}}};c([m({json:{write:!0,name:"rasterFunction"}})],gt.prototype,"functionName",void 0),c([m({type:yo,json:{write:!0,name:"rasterFunctionArguments"}})],gt.prototype,"functionArguments",void 0),c([m()],gt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],gt.prototype,"isGCS",void 0),gt=c([N("esri.layers.support.rasterFunctions.CurvatureFunction")],gt);const xo=gt;var we;let tt=we=class extends O{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=ys.bestMatch}clone(){var a,t,e;return new we({bandIds:(a=this.bandIds)==null?void 0:a.slice(),bandNames:(t=this.bandNames)==null?void 0:t.slice(),bandWavelengths:(e=this.bandWavelengths)==null?void 0:e.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};c([m({json:{write:!0}})],tt.prototype,"bandIds",void 0),c([m({json:{write:!0}})],tt.prototype,"bandNames",void 0),c([m({json:{write:!0}})],tt.prototype,"bandWavelengths",void 0),c([X({0:"name",1:"wavelength",2:"id"})],tt.prototype,"method",void 0),c([m({json:{write:!0}})],tt.prototype,"missingBandAction",void 0),c([m({json:{write:!0}})],tt.prototype,"wavelengthMatchTolerance",void 0),tt=we=c([N("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],tt);const wo=tt;let Bt=class extends G{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){var b;const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:r,bandNames:o,bandWavelengths:i,bandIds:n,missingBandAction:u}=t,l=(o==null?void 0:o.length)&&(r==="name"||r!=="id"&&!(n!=null&&n.length)),p=(i==null?void 0:i.length)&&(r==="wavelength"||r!=="id"&&!(n!=null&&n.length)),h=u===ys.fail,f=l?bo(s,o):p?To(s,i,this.functionArguments,h):Ao(s,n,h);if(f==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${l?"band names":p?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=f,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const g=s.clone();g.pixelType=this.outputPixelType,g.bandCount=f.length;const{statistics:y,histograms:x}=g;y!=null&&y.length&&(g.statistics=f.map(w=>y[w]||y[y.length-1])),x!=null&&x.length&&(g.histograms=f.map(w=>x[w]||x[x.length-1])),g.multidimensionalInfo&&g.multidimensionalInfo.variables.forEach(w=>{const{statistics:P,histograms:v}=w;P!=null&&P.length&&(w.statistics=f.map(F=>P[F]||P[P.length-1])),v!=null&&v.length&&(w.histograms=f.map(F=>v[F]||v[v.length-1]))});let d=(b=g.keyProperties)==null?void 0:b.BandProperties;return d!=null&&d.length&&(d=f.map(w=>w>=d.length?d[d.length-1]:d[w]),g.keyProperties={...g.keyProperties,BandProperties:d}),this.rasterInfo=g,{success:!0,supportsGPU:g.bandCount<=3}}_processPixels(t){var o;const e=(o=t.pixelBlocks)==null?void 0:o[0];if(e==null)return null;const s=e.pixels.length,r=this.functionArguments.bandIds.map(i=>i>=s?s-1:i);return e.extractBands(r)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:U(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(s=>s>=e?e-1:s).map(s=>t[s])}};c([m({json:{write:!0,name:"rasterFunction"}})],Bt.prototype,"functionName",void 0),c([m({type:wo,json:{write:!0,name:"rasterFunctionArguments"}})],Bt.prototype,"functionArguments",void 0),c([m()],Bt.prototype,"rasterArgumentNames",void 0),Bt=c([N("esri.layers.support.rasterFunctions.ExtractBandFunction")],Bt);const vo=Bt;function bo(a,t){const e=a.bandInfos.map(({name:r})=>r.toLowerCase()),s=[];for(let r=0;r<t.length;r++){const o=t[r].toLowerCase();let i=e.indexOf(o);if(i===-1&&o==="nearinfrared"&&(i=e.findIndex(n=>n.startsWith("nearinfrared_1")),i===-1&&(i=e.findIndex(n=>n.startsWith("nearinfrared")))),i===-1)return null;s.push(i)}return s}function Ao(a,t,e){const{bandCount:s}=a;return!(t!=null&&t.length)||e&&t.some(r=>r<0||r>=s)?null:t}function To(a,t,{wavelengthMatchTolerance:e},s){const{bandInfos:r}=a,o=[];for(let n=0;n<r.length;n++){const{minWavelength:u,maxWavelength:l}=r[n];if(!u||!l)return null;o.push({minWavelength:u,maxWavelength:l})}const i=[];for(let n=0;n<t.length;n++){const u=t[n];let l=!1,p=-1,h=Number.MAX_VALUE;for(let f=0;f<o.length;f++){const g=o[f],y=u>=g.minWavelength&&u<=g.maxWavelength,x=Math.abs(u-(g.minWavelength+g.maxWavelength)/2);y?x<h&&(l=!0,p=f,h=x):!l&&x<h&&(p=f,h=x)}if(!l&&e&&h<e&&(l=!0),!l&&s)return null;i.push(p)}return i}function Po(a,t,e){const{pixels:s,width:r,height:o,mask:i,bandMasks:n}=a,u=r*o,l=n!=null&&n.length?A.combineBandMasks(n):i,p=Math.min(t.length,s.length),h=e.startsWith("f"),f=!h&&e!==a.pixelType,[g,y]=Rt(e),x=A.createEmptyBand(e,u);for(let b=0;b<o;b++){let w=b*r;for(let P=0;P<r;P++,w++)if(!l||l[w]){let v=0;for(let F=0;F<p;F++)v+=t[F]*s[F][w];h||(v=Math.round(v),f&&(v=v>y?y:v<g?g:v)),x[w]=v}}const d=new A({width:r,height:o,pixels:[x],pixelType:e,mask:l});return d.updateStatistics(),d}var ve;let Kt=ve=class extends O{clone(){return new ve({conversionParameters:[...this.conversionParameters],raster:this.raster})}};c([m({type:[Number],json:{write:!0}})],Kt.prototype,"conversionParameters",void 0),Kt=ve=c([N("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Kt);const Fo=Kt;let yt=class extends G{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((s,r)=>s+r);return t.map(s=>s/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!(t!=null&&t.length))return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=t.length===3||e.bandCount===3&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){var s;const e=(s=t.pixelBlocks)==null?void 0:s[0];return e==null?null:Po(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};c([m({json:{write:!0,name:"rasterFunction"}})],yt.prototype,"functionName",void 0),c([m({type:Fo,json:{write:!0,name:"rasterFunctionArguments"}})],yt.prototype,"functionArguments",void 0),c([m()],yt.prototype,"rasterArgumentNames",void 0),c([m()],yt.prototype,"_normalizedWeights",null),yt=c([N("esri.layers.support.rasterFunctions.GrayscaleFunction")],yt);const No=yt;var be;const $o=new Z({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),Ro=new Z({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let q=be=class extends O{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new be({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([m({type:Number,json:{write:!0}})],q.prototype,"altitude",void 0),c([m({type:Number,json:{write:!0}})],q.prototype,"azimuth",void 0),c([m(),X($o)],q.prototype,"hillshadeType",void 0),c([m({type:Number,json:{write:!0,name:"psPower"}})],q.prototype,"pixelSizePower",void 0),c([m({type:Number,json:{write:!0,name:"psZFactor"}})],q.prototype,"pixelSizeFactor",void 0),c([m(),X(Ro)],q.prototype,"slopeType",void 0),c([m({type:Number,json:{write:!0}})],q.prototype,"zFactor",void 0),c([m({type:Boolean,json:{write:!0}})],q.prototype,"removeEdgeEffect",void 0),q=be=c([N("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],q);const Cs=q;let xt=class extends G{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var s;const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=((s=e.spatialReference)==null?void 0:s.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var l;const e=(l=t.pixelBlocks)==null?void 0:l[0];if(!e)return null;const{extent:s,primaryPixelSizes:r}=t,o=r==null?void 0:r[0],i=o??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}),n=Zt(this.functionArguments,i,this.isGCS),u=As(e,n);return u.pixelType=this.outputPixelType,u}_getWebGLParameters(){const t=Zt(this.functionArguments,{x:1,y:1},this.isGCS),e=Ts(t),{slopeType:s,zFactor:r,pixelSizeFactor:o,pixelSizePower:i}=this.functionArguments,n=s==="scaled",u=L(this.outputPixelType);return{...e,zFactor:r,gcsFactor:this.isGCS?Ht:1,pixelSizeFactor:n?o:0,pixelSizePower:n?i:0,isOutputRounded:u}}};c([m({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),c([m({type:Cs,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),c([m()],xt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],xt.prototype,"isGCS",void 0),xt=c([N("esri.layers.support.rasterFunctions.HillshadeFunction")],xt);const Io=xt;var Ae;let wt=Ae=class extends O{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(a,t){t.rasters=a.map(e=>typeof e=="number"||typeof e=="string"?e:e.toJSON())}clone(){return new Ae({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:H(this.rasters)})}};c([m({json:{write:!0}})],wt.prototype,"operation",void 0),c([m({json:{write:!0}})],wt.prototype,"rasters",void 0),c([Yt("rasters")],wt.prototype,"writeRasters",null),c([m({json:{write:!0}})],wt.prototype,"processAsMultiband",void 0),wt=Ae=c([N("esri.layers.support.rasterFunctions.LocalFunctionArguments")],wt);const ko=wt;let jt=class extends G{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:r}=this.functionArguments;if(t.some(l=>l.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:o,rasters:i}=this.functionArguments,n=qe[o];if(!(n===999||i.length===n||i.length<=1&&n===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${n}`};const u=e.clone();return u.bandCount=n!==999||r?s:1,this._removeStatsHistColormapVAT(u),this._updateStatistics(u),this._updatePixelType(u),this.rasterInfo=u,{success:!0,supportsGPU:u.bandCount===1&&n<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(s=>s==null)?null:Is(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){var u;const{operation:t}=this.functionArguments,e=qe[t],s=((u=Object.keys(We).find(l=>We[l]===t))==null?void 0:u.toLowerCase())??"undefined",r=this.outputPixelType??"f32";let[o,i]=Rt(r);const n=L(r);return n&&(o-=1e-4,i+=1e-4),{imageCount:e,operationName:s,domainRange:[o,i],isOutputRounded:n}}_updateStatistics(t){var o,i;const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,r=(o=He(s))==null?void 0:o.domain;if(r){t.statistics=[];for(let n=0;n<t.bandCount;n++)t.statistics[n]={min:r[0],max:r[1],avg:(r[0]+r[1])/2,stddev:(r[0]+r[1])/10}}else s===45&&((i=e.statistics)!=null&&i.length)&&(t.statistics=e.statistics.map(n=>({min:-n.max,max:-n.min,avg:n.avg!=null?-n.avg:void 0,stddev:n.stddev!=null?-n.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:r}=this.functionArguments,{domain:o,isInteger:i}=He(r)??{domain:null,isInteger:!1};let n="f32";if(o&&i)n=se(o[0],o[1]);else if(r===30){const u=e==null?void 0:e[0];n=u?se(u.min,u.max):L(s)?s:"s32"}else if(r===45&&L(s)){const u=e==null?void 0:e.map(({max:f})=>-f),l=e==null?void 0:e.map(({min:f})=>-f),p=u!=null&&u.length?Math.min(...u):null,h=l!=null&&l.length?Math.min(...l):null;n=p!=null&&h!=null?se(p,h):s.startsWith("s")?s.replace("s","u"):s==="u1"||s==="u2"||s==="u4"?"s8":s==="u8"?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(n)}};c([m({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),c([m({type:ko,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),c([m()],jt.prototype,"rasterArgumentNames",void 0),jt=c([N("esri.layers.support.rasterFunctions.LocalFunction")],jt);const Co=jt;var Te;let vt=Te=class extends O{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=xs.matchAny}get normalizedNoDataValues(){const{noDataValues:a}=this;if(!(a!=null&&a.length))return null;let t=!1;const e=a.map(s=>{if(typeof s=="number")return t=!0,[s];if(typeof s=="string"){const r=s.trim().split(" ").filter(o=>o.trim()!=="").map(o=>Number(o));return t=t||r.length>0,r.length===0?null:r}return null});return t?e:null}clone(){var a,t;return new Te({includedRanges:((a=this.includedRanges)==null?void 0:a.slice())??[],noDataValues:((t=this.noDataValues)==null?void 0:t.slice())??[],noDataInterpretation:this.noDataInterpretation})}};c([m({json:{write:!0}})],vt.prototype,"includedRanges",void 0),c([m({json:{write:!0}})],vt.prototype,"noDataValues",void 0),c([m()],vt.prototype,"normalizedNoDataValues",null),c([m({json:{write:!0}})],vt.prototype,"noDataInterpretation",void 0),vt=Te=c([N("esri.layers.support.rasterFunctions.MaskFunctionArguments")],vt);const _o=vt;let bt=class extends G{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:r}=this.functionArguments;if(!(s!=null&&s.length)&&!(r!=null&&r.length))return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let o=[];for(let n=0;n<t.bandCount;n++){const u=Os(e,s==null?void 0:s.slice(2*n,2*n+2),r==null?void 0:r[n]);if(u==null){o=null;break}o.push(u)}this.lookups=o;const i=r!=null&&r.every(n=>{var u;return(n==null?void 0:n.length)===((u=r[0])==null?void 0:u.length)});return{success:!0,supportsGPU:(!s||s.length<=2*et)&&(!r||i&&r[0].length<=et)}}_processPixels(t){var l;const e=(l=t.pixelBlocks)==null?void 0:l[0];if(e==null)return null;const{outputPixelType:s,lookups:r}=this,{includedRanges:o,noDataInterpretation:i,normalizedNoDataValues:n}=this.functionArguments,u=i===xs.matchAll;return Ds(e,{includedRanges:o,noDataValues:n,outputPixelType:s,matchAll:u,lookups:r})}_getWebGLParameters(){var o;const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(et);s.fill(Dt),(o=e==null?void 0:e[0])!=null&&o.length&&s.set(e[0]);const r=new Float32Array(et);for(let i=0;i<r.length;i+=2)r[i]=(t==null?void 0:t[i])??-Dt,r[i+1]=(t==null?void 0:t[i+1])??Dt;return t!=null&&t.length&&r.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:r}}};c([m({json:{write:!0,name:"rasterFunction"}})],bt.prototype,"functionName",void 0),c([m({type:_o,json:{write:!0,name:"rasterFunctionArguments"}})],bt.prototype,"functionArguments",void 0),c([m()],bt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],bt.prototype,"lookups",void 0),bt=c([N("esri.layers.support.rasterFunctions.MaskFunction")],bt);const So=bt;var Pe;let Mt=Pe=class extends O{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:a,infraredBandID:t,scientificOutput:e}=this;return new Pe({visibleBandID:a,infraredBandID:t,scientificOutput:e})}};c([m({json:{write:!0}})],Mt.prototype,"visibleBandID",void 0),c([m({json:{write:!0}})],Mt.prototype,"infraredBandID",void 0),c([m({json:{write:!0}})],Mt.prototype,"scientificOutput",void 0),Mt=Pe=c([N("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Mt);const Bo=Mt;let Gt=class extends G{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const r=this.sourceRasterInfos[0],o=Math.max(e,s);if(r.bandCount<2||o>=r.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};if(e<0||s<0)return{success:!1,supportsGPU:!1,error:"ndvi-function: invalid visible or infrared band id"};const i=r.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),i.bandCount=1,i.keyProperties={...i.keyProperties,BandProperties:void 0};const[n,u,l,p]=t?[-1,1,0,.1]:[0,200,100,10];return i.statistics=[{min:n,max:u,avg:l,stddev:p}],this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){var i;const e=(i=t.pixelBlocks)==null?void 0:i[0];if(e==null)return null;const{visibleBandID:s,infraredBandID:r,scientificOutput:o}=this.functionArguments;return gr(e,s,r,!o)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments,r=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:U(r),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map(r=>t[r])}};c([m({json:{write:!0,name:"rasterFunction"}})],Gt.prototype,"functionName",void 0),c([m({type:Bo,json:{write:!0,name:"rasterFunctionArguments"}})],Gt.prototype,"functionArguments",void 0),c([m()],Gt.prototype,"rasterArgumentNames",void 0),Gt=c([N("esri.layers.support.rasterFunctions.NDVIFunction")],Gt);const jo=Gt;var Fe;let nt=Fe=class extends O{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Fe({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};c([m({json:{write:!0}})],nt.prototype,"inputRanges",void 0),c([m({json:{write:!0}})],nt.prototype,"outputValues",void 0),c([m({json:{write:!0}})],nt.prototype,"noDataRanges",void 0),c([m({json:{write:!0}})],nt.prototype,"allowUnmatched",void 0),c([m({json:{write:!0}})],nt.prototype,"isLastInputRangeInclusive",void 0),nt=Fe=c([N("esri.layers.support.rasterFunctions.RemapFunctionArguments")],nt);const Mo=nt;let At=class extends G{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.bandCount=1;const{statistics:s}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:r,outputValues:o,inputRanges:i,noDataRanges:n,isLastInputRangeInclusive:u}=this.functionArguments;if(s!=null&&s.length&&(o!=null&&o.length))if(r){const l=Math.min.apply(null,[...o,s[0].min]),p=Math.max.apply(null,[...o,s[0].max]);t.statistics=[{...s[0],min:l,max:p}]}else{let l=o[0],p=l;for(let h=0;h<o.length;h++)l=l>o[h]?o[h]:l,p=p>o[h]?p:o[h];t.statistics=[{...s[0],min:l,max:p}]}return this.rasterInfo=t,this.lookup=r?null:Es({srcPixelType:e,inputRanges:i,outputValues:o,noDataRanges:n,allowUnmatched:r,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!o||o.length<=et)&&(!n||n.length<=et)}}_processPixels(t){var p;const e=(p=t.pixelBlocks)==null?void 0:p[0];if(e==null)return null;const{lookup:s,outputPixelType:r}=this;if(s){const h=je(e,{lut:[s.lut],offset:s.offset,outputPixelType:r});return h!=null&&s.mask&&(h.mask=Us(e.pixels[0],e.mask,s.mask,s.offset,"u8")),h}const{inputRanges:o,outputValues:i,noDataRanges:n,allowUnmatched:u,isLastInputRangeInclusive:l}=this.functionArguments;return Vs(e,{inputRanges:o,outputValues:i,noDataRanges:n,outputPixelType:r,allowUnmatched:u,isLastInputRangeInclusive:l})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,r=new Float32Array(3*et),o=1e-5,i=this.functionArguments.inputRanges??[],n=this.functionArguments.outputValues??[],u=n.length;for(let p=0;p<et;p++)r[3*p]=i[2*p]??Dt-1,r[3*p+1]=i[2*p+1]??Dt,r[3*p+2]=n[p]??0,p<u&&(p>0&&(r[3*p]-=o),(p<u-1||!s)&&(r[3*p+1]-=o));const l=new Float32Array(2*et);return l.fill(Dt),e!=null&&e.length&&l.set(e),{allowUnmatched:t,rangeMaps:r,noDataRanges:l,clampRange:Rt(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],At.prototype,"functionName",void 0),c([m({type:Mo,json:{write:!0,name:"rasterFunctionArguments"}})],At.prototype,"functionArguments",void 0),c([m()],At.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],At.prototype,"lookup",void 0),At=c([N("esri.layers.support.rasterFunctions.RemapFunction")],At);const Go=At;var Ne;let zt=Ne=class extends Cs{readColorRamp(a){if(typeof a=="string"){const t=$t.jsonValues.find(e=>e.toLowerCase()===a.toLowerCase());return t?vs($t.fromJSON(t)):null}return"toJSON"in a?a.toJSON():a}clone(){return new Ne({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};c([m({json:{write:!0}})],zt.prototype,"colorRamp",void 0),c([qt("colorRamp")],zt.prototype,"readColorRamp",null),c([m({type:[[Number]],json:{write:!0}})],zt.prototype,"colormap",void 0),zt=Ne=c([N("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],zt);const zo=zt;let rt=class extends G{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var n;const a=this.sourceRasterInfos[0];if(a.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:t,colormap:e}=this.functionArguments;if(!t&&!(e!=null&&e.length))return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const s=a.clone();this._removeStatsHistColormapVAT(s),s.pixelType=this.outputPixelType,s.bandCount=3,s.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=s,this.isGCS=((n=s.spatialReference)==null?void 0:n.isGeographic)??!1,e!=null&&e.length||(e=oe(t,{interpolateAlpha:!0}));const{indexedColormap:r,offset:o}=gs({colormap:e});if(!(r!=null&&r.length))return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const i=Ks(r);return this.lookup={indexedColormap:r,offset:o,hsvMap:i},{success:!0,supportsGPU:bs(r)}}_processPixels(a){var i,n,u;const t=(i=a.pixelBlocks)==null?void 0:i[0];if(!t||!this.lookup)return null;let e=(n=a.primaryPixelSizes)==null?void 0:n[0];if(e==null){const{extent:l}=a;e=l?{x:l.width/t.width,y:l.height/t.height}:{x:1,y:1}}const s=Zt(this.functionArguments,e,this.isGCS),r=As(t,s),o=((u=this.sourceRasterInfos[0].statistics)==null?void 0:u[0])??{min:0,max:8e3};return Xs(r,t,this.lookup.hsvMap,o),r.pixelType=this.outputPixelType,r}_getWebGLParameters(){var h;const a=Zt(this.functionArguments,{x:1,y:1},this.isGCS),t=Ts(a),{slopeType:e,zFactor:s,pixelSizeFactor:r,pixelSizePower:o}=this.functionArguments,i=e==="scaled",{indexedColormap:n,offset:u}=this.lookup,l=(h=this.sourceRasterInfos[0].statistics)==null?void 0:h[0],p=L(this.outputPixelType);return{...t,indexedColormap:n,offset:u,zFactor:s,gcsFactor:this.isGCS?Ht:1,pixelSizeFactor:i?r:0,pixelSizePower:i?o:0,minValue:(l==null?void 0:l.min)??0,maxValue:(l==null?void 0:l.max)??8e3,isOutputRounded:p}}};c([m({json:{write:!0,name:"rasterFunction"}})],rt.prototype,"functionName",void 0),c([m({type:zo,json:{write:!0,name:"rasterFunctionArguments"}})],rt.prototype,"functionArguments",void 0),c([m()],rt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],rt.prototype,"isGCS",void 0),c([m({json:{write:!0}})],rt.prototype,"lookup",void 0),rt=c([N("esri.layers.support.rasterFunctions.ShadedReliefFunction")],rt);const Oo=rt;var $e;const Do=new Z({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let ot=$e=class extends O{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new $e({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([X(Do)],ot.prototype,"slopeType",void 0),c([m({type:Number,json:{write:!0}})],ot.prototype,"zFactor",void 0),c([m({type:Number,json:{name:"psPower",write:!0}})],ot.prototype,"pixelSizePower",void 0),c([m({type:Number,json:{name:"psZFactor",write:!0}})],ot.prototype,"pixelSizeFactor",void 0),c([m({type:Boolean,json:{write:!0}})],ot.prototype,"removeEdgeEffect",void 0),ot=$e=c([N("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],ot);const Eo=ot;let Tt=class extends G{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var f;const e=(f=t.pixelBlocks)==null?void 0:f[0];if(e==null)return null;const{zFactor:s,slopeType:r,pixelSizePower:o,pixelSizeFactor:i}=this.functionArguments,{isGCS:n}=this,{extent:u,primaryPixelSizes:l}=t,p=l==null?void 0:l[0],h=p??(u?{x:u.width/e.width,y:u.height/e.height}:{x:1,y:1});return Zs(e,{zFactor:s,slopeType:r,pixelSizePower:o,pixelSizeFactor:i,isGCS:n,resolution:h})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:r}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Ht:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:r??0,isOutputRounded:L(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),c([m({type:Eo,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),c([m()],Tt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],Tt.prototype,"isGCS",void 0),Tt=c([N("esri.layers.support.rasterFunctions.SlopeFunction")],Tt);const Uo=Tt,cs=new Z({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function Vo(a,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:o,mask:i,outBand:n}=a;if(e&&!i)return void n.set(s);const{statisticsType:u,kernelRows:l,kernelCols:p}=t,h=u==="stddev",f=r*o,g=new Float64Array(f),y=new Float64Array(f),x=new Uint32Array(f);for(let T=0;T<o;T++){const $=T*r;let R=0,k=0,C=0;for(let S=0;S<p;S++)i&&!i[$+S]||(R+=s[$+S],h&&(k+=s[$+S]**2),C++);g[$]=R,y[$]=k,x[$]=C;for(let S=1;S<=r-p;S++){const z=$+S-1,Q=z+p;i?(i[z]&&(C--,R-=s[z],h&&(k-=s[z]**2)),i[Q]&&(C++,R+=s[Q],h&&(k+=s[Q]**2))):(R-=s[z],R+=s[Q],h&&(k-=s[z]**2,k+=s[Q]**2)),g[$+S]=R,x[$+S]=C,h&&(y[$+S]=k)}}const d=new Float64Array(f),b=new Float64Array(f),w=new Uint32Array(f),P=l*r;for(let T=0;T<=r-p;T++){let $=0,R=0,k=0;for(let C=0;C<l;C++){const S=C*r+T;$+=g[S],k+=x[S],h&&(R+=y[S])}d[T]=$,b[T]=R,w[T]=k;for(let C=1;C<=o-l;C++){const S=(C-1)*r+T,z=S+P;$-=g[S],$+=g[z],k-=x[S],k+=x[z],h&&(R-=y[S],R+=y[z]),d[C*r+T]=$,b[C*r+T]=R,w[C*r+T]=k}}const v=Math.floor(l/2),F=Math.floor(p/2);for(let T=v;T<o-v;T++){const $=T*r;for(let R=F;R<r-F;R++){const k=(T-v)*r+R-F,C=w[k];if(C===0||e&&(!i||i[$+R]))continue;const S=d[k]/C,z=h?Math.sqrt((b[k]-d[k]*S)/C):S;n[$+R]=z,i&&(i[$+R]=255)}}}function Lo(a,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:o,mask:i,outBand:n}=a;if(e&&!i)return void n.set(s);const{kernelRows:u,kernelCols:l,statisticsType:p}=t,h=Math.floor(u/2),f=Math.floor(l/2),g=p==="min",y=n.slice(),x=new Uint32Array(r*o);for(let d=h;d<o-h;d++){const b=d*r;for(let w=f;w<r-f;w++){let P=g?Number.MAX_VALUE:-Number.MAX_VALUE,v=0;for(let F=0;F<u;F++)for(let T=0;T<l;T++){const $=b+w+(F-h)*r+T-f;i&&!i[$]||(P=g?Math.min(P,s[$]):Math.max(P,s[$]),v++)}i?(y[b+w]=v===0?0:P,x[b+w]=v):n[b+w]=v===0?0:P}}if(i)for(let d=h;d<o-h;d++){const b=d*r;for(let w=f;w<r-f;w++)if(x[b+w]){if(e&&i[b+w])continue;n[b+w]=y[b+w],i[b+w]=255}}}function Wo(a,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:o,mask:i,outBand:n}=a;if(e&&!i)return void n.set(s);const{kernelRows:u,kernelCols:l}=t,p=Math.floor(u/2),h=Math.floor(l/2),f=n.slice(),g=new Uint32Array(r*o);for(let y=p;y<o-p;y++){const x=y*r;for(let d=h;d<r-h;d++){if(e&&(i!=null&&i[x+d]))continue;const b=[];for(let w=0;w<u;w++)for(let P=0;P<l;P++){const v=x+d+(w-p)*r+P-h;i&&!i[v]||b.push(s[v])}b.length&&(b.sort((w,P)=>w-P),i?(f[x+d]=b[Math.floor((b.length-1)/2)],g[x+d]=b.length):n[x+d]=b[Math.floor((b.length-1)/2)])}}if(i)for(let y=p;y<o-p;y++){const x=y*r;for(let d=h;d<r-h;d++)if(g[x+d]){if(e&&i[x+d])continue;n[x+d]=f[x+d],i[x+d]=255}}}function Ho(a,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:o,mask:i,outBand:n}=a;if(e&&!i)return void n.set(s);const{kernelRows:u,kernelCols:l}=t,p=Math.floor(u/2),h=Math.floor(l/2),f=t.statisticsType==="majority",g=u*l,y=n.slice(),x=new Uint32Array(r*o);for(let d=p;d<o-p;d++){const b=d*r;for(let w=h;w<r-h;w++){if(e&&(i!=null&&i[b+w]))continue;const P=new Map;for(let $=0;$<u;$++)for(let R=0;R<l;R++){const k=b+w+($-p)*r+R-h;if(i&&!i[k])continue;const C=s[k];P.set(C,P.has(C)?P.get(C)+1:1)}if(P.size===0)continue;let v=0,F=0,T=f?0:g+1;for(const $ of P.keys())F=P.get($),f===F>T&&(T=F,v=$);i?(y[b+w]=v,x[b+w]=P.size):n[b+w]=v}}if(i)for(let d=p;d<o-p;d++){const b=d*r;for(let w=h;w<r-h;w++)if(x[b+w]){if(e&&i[b+w])continue;n[b+w]=y[b+w],i[b+w]=255}}}function qo(a,t){const{mask:e}=a,{fillNoDataOnly:s}=t;if(s&&!e)return a;const{pixels:r,width:o,height:i,bandMasks:n,pixelType:u}=a,l=r.length,p=o*i,h=[],{kernelRows:f,kernelCols:g,statisticsType:y,mirrorEdges:x}=t;if(s&&!e)return a;const d=t.outputPixelType??u,b=[];for(let v=0;v<l;v++){const F=r[v],T=A.createEmptyBand(d,p);s&&T.set(F);const $=(n==null?void 0:n[v])??e,R=($==null?void 0:$.slice())??null,k={band:F,width:o,height:i,mask:R,outBand:T};switch(y){case"min":case"max":Lo(k,t);break;case"mean":case"stddev":Vo(k,t);break;case"median":Wo(k,t);break;case"majority":case"minority":Ho(k,t)}x&&!s&&Oe(T,o,i,f,g),h.push(T),R&&b.push(R)}let w=b[0]??e;b.length!==l&&(b.length=0),l>1&&(n!=null&&n.length)&&(w=A.combineBandMasks(n));const P=new A({pixelType:d,width:o,height:i,pixels:h,bandMasks:n&&b.length?b:null,mask:w});return P.updateStatistics(),P}var Re;let Pt=Re=class extends O{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Re({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:H(this.raster)})}};c([m({json:{write:!0,read:{source:["kernelRows","rows"],reader:(a,t)=>Number(a??(t==null?void 0:t.kernelRows)??3)}}})],Pt.prototype,"rows",void 0),c([m({json:{write:!0,read:{source:["kernelCols","cols"],reader:(a,t)=>Number(a??(t==null?void 0:t.kernelCols)??3)}}})],Pt.prototype,"cols",void 0),c([m({json:{write:!0}})],Pt.prototype,"fillNoDataOnly",void 0),c([m({json:{read:{source:["statisticsType","type"],reader:(a,t)=>cs.fromJSON((t==null?void 0:t.statisticsType)??(t==null?void 0:t.type))??"min"},write:{target:"type"}}}),X(cs)],Pt.prototype,"statisticsType",void 0),Pt=Re=c([N("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Pt);const Jo=Pt;let Ot=class extends G{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:r}=this.functionArguments;return r==="stddev"&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){var n;const e=(n=t.pixelBlocks)==null?void 0:n[0];if(e==null)return e;const{statisticsType:s,rows:r,cols:o,fillNoDataOnly:i}=this.functionArguments;return qo(e,{kernelRows:r,kernelCols:o,fillNoDataOnly:i,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:r}=this.functionArguments;return{fillNoDataOnly:r,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:Rt(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],Ot.prototype,"functionName",void 0),c([m({type:Jo,json:{write:!0,name:"rasterFunctionArguments"}})],Ot.prototype,"functionArguments",void 0),c([m()],Ot.prototype,"rasterArgumentNames",void 0),Ot=c([N("esri.layers.support.rasterFunctions.StatisticsFunction")],Ot);const Ko=Ot;var Ie;let Ft=Ie=class extends O{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(a,t){if(!(a!=null&&a.length))return null;const e=[];return a.forEach(s=>{const r={min:s.min,max:s.max,avg:s.avg??s.mean,stddev:s.stddev??s.standardDeviation};e.push(r)}),e}writeStatistics(a,t,e){if(!(a!=null&&a.length))return;const s=[];a.forEach(r=>{const o={...r,mean:r.avg,standardDeviation:r.stddev};delete o.avg,delete o.stddev,s.push(o)}),t[e]=s}clone(){return new Ie({statistics:H(this.statistics),histograms:H(this.histograms)})}};c([m({json:{write:!0}})],Ft.prototype,"statistics",void 0),c([qt("statistics")],Ft.prototype,"readStatistics",null),c([Yt("statistics")],Ft.prototype,"writeStatistics",null),c([m({json:{write:!0}})],Ft.prototype,"histograms",void 0),Ft=Ie=c([N("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Ft);const Xo=Ft;let it=class extends G{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:r}=this.functionArguments;return r&&(e.histograms=r),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}};c([m({json:{write:!0,name:"rasterFunction"}})],it.prototype,"functionName",void 0),c([m({type:Xo,json:{write:!0,name:"rasterFunctionArguments"}})],it.prototype,"functionArguments",void 0),c([m()],it.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],it.prototype,"indexedColormap",void 0),c([m()],it.prototype,"isNoopProcess",void 0),it=c([N("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],it);const Zo=it;var ke;const Qo=new Z({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let V=ke=class extends O{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(a,t,e){a!=null&&a.length&&(Array.isArray(a[0])||(a=a.map(s=>[s.min,s.max,s.avg,s.stddev])),t[e]=a)}clone(){return new ke({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:H(this.statistics),gamma:H(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:H(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};c([m({type:Boolean,json:{write:!0}})],V.prototype,"computeGamma",void 0),c([m({type:Boolean,json:{name:"dra",write:!0}})],V.prototype,"dynamicRangeAdjustment",void 0),c([m({type:[Number],json:{write:!0}})],V.prototype,"gamma",void 0),c([m()],V.prototype,"histograms",void 0),c([m({type:Number,json:{write:!0}})],V.prototype,"maxPercent",void 0),c([m({type:Number,json:{write:!0}})],V.prototype,"minPercent",void 0),c([m({type:Number,json:{write:!0}})],V.prototype,"numberOfStandardDeviations",void 0),c([m({type:Number,json:{name:"max",write:!0}})],V.prototype,"outputMax",void 0),c([m({type:Number,json:{name:"min",write:!0}})],V.prototype,"outputMin",void 0),c([m({type:Number,json:{write:!0}})],V.prototype,"sigmoidStrengthLevel",void 0),c([m({json:{type:[[Number]],write:!0}})],V.prototype,"statistics",void 0),c([Yt("statistics")],V.prototype,"writeStatistics",null),c([X(Qo)],V.prototype,"stretchType",void 0),c([m({type:Boolean,json:{write:!0}})],V.prototype,"useGamma",void 0),V=ke=c([N("esri.layers.support.rasterFunctions.StretchFunctionArguments")],V);const Yo=V;let at=class extends G{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:r,gamma:o,useGamma:i}=s;if(!r&&["u8","u16","s8","s16"].includes(e)){const p=re(s.toJSON(),{rasterInfo:t}),h=L(this.outputPixelType)?"round":"float";this.lookup=Qs({pixelType:e,...p,gamma:i?o:null,rounding:h}),this.cutOffs=p}else r||(this.cutOffs=re(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const n=t.clone();n.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(n),this.outputPixelType==="u8"&&(n.keyProperties.DataType="processed");const{outputMin:u=0,outputMax:l=255}=this.functionArguments;n.statistics=[];for(let p=0;p<n.bandCount;p++)n.statistics[p]={min:u,max:l};return this.rasterInfo=n,{success:!0,supportsGPU:!r}}_processPixels(t){var n;const e=(n=t.pixelBlocks)==null?void 0:n[0];if(e==null)return e;const{lookup:s}=this;if(s)return je(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:r}=this,o=this.cutOffs||re(r.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),i=r.useGamma?r.gamma:null;return Ys(e,{...o,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:r}=this.functionArguments,o=this.rasterInfo.bandCount>=2?3:1,i=r&&(s!=null&&s.length)?tn(o,s):[1,1,1],{minCutOff:n,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};n.length===1&&(n[1]=n[2]=n[0],u[1]=u[2]=u[0]);const l=u.map((g,y)=>(e-t)/(u[y]-n[y])),p=L(this.outputPixelType),h=r&&s?[s[0],s[1]??s[0],s[2]??s[0]]:[1,1,1],f=r?[i[0],i[1]??i[0],i[2]??i[0]]:[1,1,1];return{bandCount:o,minOutput:t,maxOutput:e,minCutOff:n,maxCutOff:u,factor:l,useGamma:r,gamma:h,gammaCorrection:f,stretchType:this.functionArguments.stretchType,isOutputRounded:p,type:"stretch"}}};c([m({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),c([m({type:Yo,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),c([m()],at.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],at.prototype,"lookup",void 0),c([m({json:{write:!0}})],at.prototype,"cutOffs",void 0),at=c([N("esri.layers.support.rasterFunctions.StretchFunction")],at);const ti=at;var Ce;let Xt=Ce=class extends O{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Ce({attributeTableAsRecordSet:H(this.attributeTableAsRecordSet)})}};c([m({json:{write:!0}})],Xt.prototype,"attributeTableAsRecordSet",void 0),Xt=Ce=c([N("esri.layers.support.rasterFunctions.TableFunctionArguments")],Xt);const ei=Xt;let Nt=class extends G{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const a=this.sourceRasterInfos[0];if(a.bandCount>1||a.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:t}=this.functionArguments;if(!t)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(a.pixelType);const e=a.clone();return e.pixelType=this.outputPixelType,e.bandCount=1,e.dataType!=="thematic"&&(e.keyProperties=e.keyProperties?{...e.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(a){var t;return(t=a.pixelBlocks)==null?void 0:t[0]}};c([m({json:{write:!0,name:"rasterFunction"}})],Nt.prototype,"functionName",void 0),c([m({type:ei,json:{write:!0,name:"rasterFunctionArguments"}})],Nt.prototype,"functionArguments",void 0),c([m()],Nt.prototype,"rasterArgumentNames",void 0),c([m()],Nt.prototype,"isNoopProcess",void 0),Nt=c([N("esri.layers.support.rasterFunctions.TableFunction")],Nt);const si=Nt,B=new Map;function ni(a,t){const{rasterFunctionArguments:e}=a;e&&(e.rasters||[e.raster,e.raster2]).forEach(s=>{s&&typeof s!="number"&&(typeof s=="string"?s.startsWith("http")&&(t.includes(s)||t.push(s)):"rasterFunctionArguments"in s&&ni(s,t))})}function Qi(a,t){if(t=t??{},"function"in(a=H(a))&&"arguments"in a&&a.arguments){const e=Bs(a,new Map,t);if(Be(e),!e.renderingRule)throw new Et("raster-function-helper","Unsupported raster function json.");a=e.renderingRule}if("rasterFunction"in a)return _s(a=_e(a),t);throw new Et("raster-function-helper","unsupported raster function json.")}function ri(a,t){return t[0]==="rasters"&&Array.isArray(a.rasters)?a.rasters:t.map(e=>a[e])}function ps(a){return!!(a&&typeof a=="object"&&a.rasterFunction&&a.rasterFunctionArguments)}function _e(a){var r;const{rasterFunction:t,rasterFunctionArguments:e}=a,s={};for(const o in e){let i=e[o];const n=o.toLowerCase();if(n==="rasters"&&Array.isArray(i))s.rasters=i.map(u=>ps(u)?_e(u):u);else switch(ps(i)&&(i=_e(i)),n){case"dra":s.dra=i;break;case"pspower":s.psPower=i;break;case"pszfactor":s.psZFactor=i;break;case"bandids":s.bandIds=i;break;default:s[o[0].toLowerCase()+o.slice(1)]=i}}return t!=="Local"||(r=s.rasters)!=null&&r.length||(s.rasters=["$$"]),{...a,rasterFunctionArguments:s}}function _s(a,t){var f,g;const{rasterFunction:e,rasterFunctionArguments:s}=a,r=(f=a.outputPixelType)==null?void 0:f.toLowerCase();if(e==null||!B.has(e))throw new Et("raster-function-helper",`unsupported raster function: ${e}`);const o=B.get(e),i=(typeof o.ctor=="function"?o.ctor:o.ctor.default).fromJSON({...a,outputPixelType:r}),{rasterArgumentNames:n}=i,u=[],l=ri(s,n),p=n[0]==="rasters"||n.length>1,h=[];for(let y=0;y<l.length;y++){const x=l[y];let d;x==null||typeof x=="string"&&x.startsWith("$")?u.push(t==null?void 0:t.raster):typeof x=="string"?t[x]&&u.push(t[x]):typeof x!="number"&&"rasterFunction"in x&&(d=_s(x,t),p||(i.functionArguments[n[y]]=d),u.push(d)),p&&h.push(d??x)}if(p&&(n[0]==="rasters"?i.functionArguments.rasters=h:n.forEach((y,x)=>{i.functionArguments[y]=h[x]})),t){i.sourceRasters=u;const y=(g=t.raster)==null?void 0:g.url;y&&(i.mainPrimaryRasterId=y)}return i}function Ss(a,t){if(a&&t)for(const e in a){const s=a[e];s&&typeof s=="object"&&"type"in s&&(s.type==="RasterFunctionTemplate"?Ss(s.arguments,t):s.type==="RasterFunctionVariable"&&t[s.name]!=null&&(s.value=t[s.name]))}}function Se(a,t){var r;if(!a||typeof a!="object")return a;const{value:e}=a;if(!e||typeof e!="object")return a.isDataset?"$$":e;if(Array.isArray(e))return e.length===0?[]:e.map(o=>typeof o=="object"&&o.type==="RasterFunctionVariable"?Se(o,t):o);if("value"in e&&["number","string","boolean"].includes(typeof e.value))return e.value;if(a.isDataset&&e.type!=="Scalar")return"$$";if(!("type"in e))return e;let s=e;switch(e.type){case"Scalar":s=e.value;break;case"AlgorithmicColorRamp":s=hs(e);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:e.ArrayOfColorRamp.map(hs)};break;case"ArgumentArray":if((r=e.elements)!=null&&r.length&&e.elements[0].type!=="RasterStatistics"){const o=[];for(let i=0;i<e.elements.length;i++){const n=e.elements[i],{type:u}=n;if(u)if(u==="RasterFunctionTemplate"){const{renderingRule:l}=Bs(n,t);o.push(l),n._object_id!=null&&t.set(n._object_id,l)}else{if(u!=="RasterFunctionVariable")throw new Et("raster-function-helper","unsupported raster function json.");{const l=Se(n,t);o.push(l),n._object_id!=null&&t.set(n._object_id,l)}}else o.push(n)}s=o}else s=e.elements}return e._object_id!=null&&t.set(e._object_id,s),s}function hs(a){const t=a.algorithm??"esriHSVAlgorithm";let{FromColor:e,ToColor:s}=a;if(!Array.isArray(e)){const{r,g:o,b:i}=Ue({h:e.Hue,s:e.Saturation,v:e.Value});e=[r,o,i,e.AlphaValue]}if(!Array.isArray(s)){const{r,g:o,b:i}=Ue({h:s.Hue,s:s.Saturation,v:s.Value});s=[r,o,i,s.AlphaValue]}return{type:"algorithmic",algorithm:t,fromColor:e,toColor:s}}function Bs(a,t,e){e&&Ss(a,e);const s={renderingRule:{},templates:t};return js(a,s),s}function js(a,t){if(!a||!t.renderingRule)return;const{renderingRule:e,templates:s}=t,{function:r,arguments:o,_object_id:i}=a;if(!r||!o)return;i!=null&&s.set(i,e),e.rasterFunction=r.type.replace("Function",""),e.outputPixelType=r.pixelType;const n={};e.rasterFunctionArguments=n;for(const u in o){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const l=o[u];l&&typeof l=="object"&&"type"in l&&(l.type==="RasterFunctionTemplate"||l.type==="RasterFunctionVariable")?(l.type==="RasterFunctionVariable"?n[u]=Se(l,s):(e.rasterFunctionArguments[u]={},js(l,{renderingRule:e.rasterFunctionArguments[u],templates:s})),l._object_id!=null&&s.set(l._object_id,n[u])):n[u]=l}switch(n.DEM&&!n.Raster&&(n.Raster=n.DEM,delete n.DEM),e.rasterFunction){case"Stretch":oi(n);break;case"Colormap":ii(n);break;case"Convolution":ai(n);break;case"Mask":ui(n)}}function Be(a){const{renderingRule:t,templates:e}=a;if(typeof t!="object"||!(t!=null&&t.rasterFunctionArguments)||!e.size)return;const{rasterFunctionArguments:s}=t;for(const r in s){const o=s[r],i=r==="_object_ref_id"?o:o&&typeof o=="object"&&"_object_ref_id"in o?o._object_ref_id:null;if(i==null)o&&typeof o=="object"&&(o.rasterFunctionArguments&&Be({renderingRule:o,templates:e}),Array.isArray(o)&&o.forEach((n,u)=>{if(typeof n=="object")if(n._object_ref_id!=null){if(!e.has(n._object_ref_id))throw new Et("raster-function-helper",`unsupported raster function json. _object_ref_id: ${o} does not exist`);const l=e.get(i);l&&typeof l=="object"?Object.assign(n,l):o[u]=l}else Be({renderingRule:n,templates:e})}));else{if(!e.has(i))throw new Et("raster-function-helper",`unsupported raster function json. _object_ref_id: ${i} does not exist`);const n=e.get(i);r!=="_object_ref_id"?s[r]=n:n&&typeof n=="object"&&Object.assign(s,n)}}}function oi(a){var t;(t=a.Statistics)!=null&&t.length&&typeof a.Statistics=="object"&&(a.Statistics=a.Statistics.map(e=>[e.min,e.max,e.mean,e.standardDeviation])),a.NumberOfStandardDeviation!=null&&(a.NumberOfStandardDeviations=a.NumberOfStandardDeviation,delete a.NumberOfStandardDeviation)}function ii(a){var t,e;((e=(t=a.ColorRamp)==null?void 0:t.type)==null?void 0:e.toLowerCase())==="randomcolorramp"&&(delete a.ColorRamp,a.ColormapName="Random"),a.ColorSchemeType===0&&delete a.ColorRamp}function ai(a){a.ConvolutionType!=null&&(a.Type=a.ConvolutionType,delete a.ConvolutionType)}function ui(a){var t;(t=a.NoDataValues)!=null&&t.length&&typeof a.NoDataValues[0]=="string"&&(a.NoDataValues=a.NoDataValues.filter(e=>e!=="").map(e=>Number(e)))}B.set("Arithmetic",{desc:"Arithmetic Function",ctor:or,rasterArgumentNames:["rasters"]}),B.set("Aspect",{desc:"Aspect Function",ctor:ar,rasterArgumentNames:["raster"]}),B.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:Br,rasterArgumentNames:["raster"]}),B.set("Colormap",{desc:"Colormap Function",ctor:Hr,rasterArgumentNames:["raster"]}),B.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:Jr,rasterArgumentNames:["raster"]}),B.set("CompositeBand",{desc:"CompositeBand Function",ctor:Xr,rasterArgumentNames:["rasters"]}),B.set("ComputeChange",{desc:"ComputeChange Function",ctor:io,rasterArgumentNames:["rasters"]}),B.set("Convolution",{desc:"Convolution Function",ctor:go,rasterArgumentNames:["raster"]}),B.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:uo,rasterArgumentNames:["raster"]}),B.set("ExtractBand",{desc:"ExtractBand Function",ctor:vo,rasterArgumentNames:["raster"]}),B.set("Curvature",{desc:"Curvature Function",ctor:xo,rasterArgumentNames:["raster"]}),B.set("Hillshade",{desc:"Hillshade Function",ctor:Io,rasterArgumentNames:["raster"]}),B.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:Oo,rasterArgumentNames:["raster"]}),B.set("Grayscale",{desc:"Grayscale Function",ctor:No,rasterArgumentNames:["raster"]}),B.set("Clip",{desc:"Clip Function",ctor:Mr,rasterArgumentNames:["raster"]}),B.set("Local",{desc:"Local Function",ctor:Co,rasterArgumentNames:["rasters"]}),B.set("Mask",{desc:"Mask Function",ctor:So,rasterArgumentNames:["raster"]}),B.set("NDVI",{desc:"NDVI Function",ctor:jo,rasterArgumentNames:["raster"]}),B.set("Remap",{desc:"Remap Function",ctor:Go,rasterArgumentNames:["raster"]}),B.set("Slope",{desc:"Slope Function",ctor:Uo,rasterArgumentNames:["raster"]}),B.set("Statistics",{desc:"Focal Statistics Function",ctor:Ko,rasterArgumentNames:["raster"]}),B.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Zo,rasterArgumentNames:["raster"]}),B.set("Stretch",{desc:"Stretch Function",ctor:ti,rasterArgumentNames:["raster"]}),B.set("Table",{desc:"Attribute Table Function",ctor:si,rasterArgumentNames:["raster"]});export{_ as D,Qi as T,$i as h,fn as l,ni as w};
