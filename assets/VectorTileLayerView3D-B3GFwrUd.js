import{r as d}from"./tslib.es6-B3Jf3DVX.js";import{j as k,b as F,m as u,a as N}from"./subclass-BZA_h8Db.js";import{s as z,B as V,i as A,e as U,q as B}from"./Accessor-BLX9ikPh.js";import{whenOnce as j,watch as G,syncAndInitial as W}from"./reactiveUtils-C5zUhJQJ.js";import{e as Z}from"./MemCache-Dx1v3xLC.js";import{t as K}from"./DefaultUI-C0utm694.js";import{b as Y}from"./Polyline-D9YkgmM_.js";import{p as Q,t as J,y as X}from"./TileInfoViewPOT-O-uCyzFw.js";import{e as tt}from"./TileKey-Cs1awCRX.js";import{u as et,f as it,s as rt,n as ot,d as lt}from"./WGLBrushVTLSymbol-jiuyIxHa.js";import{p as st}from"./VTLMaterialManager-B10yUbF1.js";import{a as g,i as x}from"./StyleDefinition-BTt_i6C1.js";import{O as nt,R as T}from"./enums-D9v74xTE.js";import{l as $}from"./StyleRepository-B0FilPGd.js";import{l as at}from"./LayerView3D-Dkb0AiwM.js";import{p as mt}from"./TiledLayerView3D-pcJE9SYU.js";import{F as pt,D as ht}from"./terrainUtils-CPZNZdjg.js";import{y as ct}from"./LayerView-CGYm21KA.js";import"./asyncUtils-CWX51uTe.js";import"./Collection-CEdjem1-.js";import"./Evented-BHRw9x22.js";import"./shared-B3wH2qpO.js";import"./SimpleObservable-KocWTzVy.js";import"./jsxFactory-CJa39Fro.js";import"./intl-CChhNOV8.js";import"./date-DlqISzcw.js";import"./jsonMap-0cxwUWs2.js";import"./locale-C9TlLpzi.js";import"./messages-OmQvZhAg.js";import"./assets-C43MgM-v.js";import"./index-Bh2oEzTI.js";import"./Promise-B2Hu02L7.js";import"./uuid-fwrPAdZb.js";import"./cast-Bjksrh93.js";import"./UpdatingHandles-GfwcIh5z.js";import"./InputManager-Ba9xzDpe.js";import"./Queue-yu3bZ02p.js";import"./signal-D4lghLjV.js";import"./Map-iWpb5DpI.js";import"./Basemap-DVYOaWHz.js";import"./collectionUtils-D_lHIu88.js";import"./Loadable-BabW5Xcc.js";import"./loadAll-B6mYSptb.js";import"./writer-DNAwXnhG.js";import"./Point-Cg0-ChZE.js";import"./Portal-C10FKnaA.js";import"./Extent-Bf3YTe7m.js";import"./PortalItem-DzgXrpyc.js";import"./persistableUrlUtils-fa1mAujs.js";import"./writeUtils-Dz7BsE1e.js";import"./layerUtils-BrNoooE9.js";import"./Ground-CAIVlzbd.js";import"./Color-BCS62Hs5.js";import"./colorUtils-0bJDPow9.js";import"./mathUtils-C4_ghTv4.js";import"./compilerUtils-Dw3R0f-Z.js";import"./enumeration-Ba5njXdz.js";import"./opacityUtils-C68Tlu6_.js";import"./CollectionFlattener-CQN6i8ZK.js";import"./editableLayers-Cn9dHzhB.js";import"./catalogUtils-DyGHPM81.js";import"./basemapUtils-B9TjOm47.js";import"./utils-93yNk4Xc.js";import"./screenUtils-_ZIvrt5o.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-GpOFENPA.js";import"./vec3f64-BLpZdpfb.js";import"./common-DQOJ18NT.js";import"./TablesMixin-5umgS75f.js";import"./Layer-CVt7Hb5J.js";import"./geometry-D964gYQX.js";import"./Identifiable-B1UbsKNt.js";import"./TimeExtent-DocT5yPf.js";import"./timeUtils-8fb_2oAt.js";import"./GraphicsCollection-FfahqxsR.js";import"./Graphic-DsxsIjhH.js";import"./PopupTemplate-BHMhS05j.js";import"./Clonable-D3rtuBWg.js";import"./fieldUtils-tmQlKvWo.js";import"./ActionToggle-iT4slXc7.js";import"./symbols-CNimns--.js";import"./TextSymbol-D8QO_KUV.js";import"./materialUtils-DarhapKC.js";import"./aaBoundingBox-BE7cC1jD.js";import"./jsonUtils-CEfjT-BK.js";import"./HeightModelInfo-9nOoV6LU.js";import"./ReactiveMap-6CfRGOlR.js";import"./Query-5Xpquc1r.js";import"./DataLayerSource-BKkswDvG.js";import"./Field-ybkHhtnK.js";import"./fieldType-BuzM0UHS.js";import"./FullTextSearch-Csd1Hktu.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-WcqhHU65.js";import"./a11yUtils-cyWndM8Q.js";import"./heightModelInfoUtils-C6gW75mB.js";import"./arcgisLayerUrl-BX1FE5Hm.js";import"./ViewingMode-Dodu7ZZk.js";import"./projection-B971H0Re.js";import"./projectBuffer-Bs7GwaPY.js";import"./geodesicConstants-DWQLYX7F.js";import"./vec32-Dvg_eL9J.js";import"./HighlightDefaults-D4ckYWWJ.js";import"./imageUtils-CtmzXUTE.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-hWbBTR_7.js";import"./CompassViewModel-C7G3VWNL.js";import"./utils-DsJqvptN.js";import"./GoTo-Wtu9mgoE.js";import"./NavigationToggle-BIWeotJk.js";import"./ZoomViewModel-oUfjVFgI.js";import"./workers-D4HfeYKj.js";import"./enums-BRzLM11V.js";import"./Rect-CUzevAry.js";import"./Texture-Begq2x5n.js";import"./pbf-BtDZ1BpD.js";import"./rasterizingUtils-xGBMUAML.js";import"./floatRGBA-CfH_2xsy.js";import"./constants-F8oTIn7N.js";import"./mat3-BRl2i9Bz.js";import"./TileStrategy-DT04gaWW.js";import"./vec2-maR1OrZI.js";import"./QueueProcessor-DZiVr5XH.js";import"./RenderableTile-Dl7jrqnB.js";import"./config-MDUrh2eL.js";import"./GeometryUtils-Dyjqugo6.js";import"./DefaultVertexAttributeLayouts-PrbBmwty.js";import"./DisplayObject-DGZ6h7sV.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BufferObject-BVi1lwBq.js";import"./VertexArrayObject-lPxPk5E-.js";import"./TileInfo-Dphjf6xH.js";import"./TileKey-DZd6gJy7.js";import"./definitions-DfvbPdMm.js";import"./vec2f32-BbH2jxlN.js";import"./ShaderCompiler-G2XYGDs6.js";import"./programUtils-CwiKxPbA.js";import"./enums-CmIX1y88.js";import"./colorUtils-aL8wj-8G.js";import"./vec42-YcqnINSP.js";import"./vec4f64-o2zAXfmz.js";import"./unitBezier-BX6NeAEr.js";import"./LineCallout.glsl-C1R4fy2f.js";import"./vec2f64-miziP1SN.js";import"./plane-IENfwZlB.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./mathUtils-BG-eq9fO.js";import"./computeTranslationToOriginAndRotation-Q27G6TBL.js";import"./RibbonLine.glsl-BZu1FDpE.js";import"./dehydratedFeatureUtils-B--Sgpdi.js";import"./sphere-C77djCO6.js";import"./intersectorUtils-BK9EUwUf.js";import"./boundedPlane-EV1sS2Ke.js";import"./lineSegment-D7sKPPYf.js";import"./verticalOffsetUtils-BDQLpfho.js";import"./orientedBoundingBox-DOAJUK5g.js";import"./quat-4pa1e6ds.js";import"./spatialReferenceEllipsoidUtils-DBE_OFra.js";import"./ElevationProvider-C95wyCKc.js";import"./VertexAttribute-Cq4MnHjR.js";import"./unitConversionUtils-BMfW9yAe.js";import"./lengthUtils-DL1-FDQQ.js";import"./hydratedFeatures-DBKLr8hT.js";import"./projectVectorToVector-G2uWGoIb.js";import"./projectPointToVector-GINIbYMz.js";import"./Material-_xx7OZxD.js";import"./interfaces-DDtDqZYj.js";import"./Texture-Fac_8AOC.js";import"./BindType-BmZEZMMh.js";import"./Util-BIfApRF5.js";import"./renderState-DQLu6AJX.js";import"./Matrix3DrawUniform-CiBFaSz6.js";import"./ShaderTechniqueConfiguration-CBbn2DCi.js";import"./Indices-DflDlU4Z.js";import"./triangle-PTGDC_xJ.js";import"./AlphaCutoff-UcccL64p.js";import"./requestImageUtils-DgMiQwsm.js";import"./sdfPrimitives-CUWZbMRe.js";import"./vec3f32-nZdmKIgz.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Octree-C8d4sqjv.js";import"./frustum-CQrOepbv.js";import"./InterleavedLayout-e-di2fxs.js";import"./BufferView-_QDXRCew.js";import"./Float4DrawUniform-N58YDhuZ.js";import"./graphicUtils-CWEFaVJb.js";import"./VertexColor.glsl-_ARMpsAT.js";import"./meshVertexSpaceUtils-CXzOFlTI.js";import"./MeshLocalVertexSpace-LEHwMUnu.js";import"./dehydratedFeatures-BiOblf0d.js";import"./quantizationUtils-uj_P09aO.js";import"./featureConversionUtils-D14h8iad.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-BUKTgPFR.js";import"./DecodeSymbolColor.glsl-BPIX0fAF.js";import"./RealisticTree.glsl-CAmeC2w1.js";import"./DefaultMaterial-DgOvtNL9.js";import"./Scheduler-CJu5awNf.js";import"./debugFlags-BF6Z0j0F.js";import"./ShadowCastAccumulate.glsl-BNKV7IEU.js";import"./Viewpoint-C4FqWA2d.js";import"./Cyclical-oTUX3aX7.js";import"./RenderCoordsHelper-C50UGjbb.js";import"./projectVectorToPoint-DcLtSZYw.js";import"./scaleUtils-D_Nw3nhM.js";import"./viewpointUtils-Bq9TFP4R.js";import"./earthUtils-ByXwmaX5.js";import"./spatialReferenceSupport-yRFduOSO.js";import"./ElevationSamplerData-DF8Bl6I9.js";import"./OverlayCompositing.glsl-CiE3Tt8y.js";import"./MergedRenderer-Dli9s1X5.js";import"./NestedMap-GuqgquCN.js";import"./glUtil-D0YUa0ow.js";import"./axisAngleDegrees-Ci2HA7Jo.js";import"./weather-eV4wTXCK.js";import"./Intersector-wXoCuQ8W.js";import"./Program-mfcb06fW.js";import"./ShadowCastVisualizeTechniqueConfiguration-Bb-Uir0o.js";import"./Environment-BDo9QJi6.js";import"./Compositing.glsl-DMM7CJmu.js";import"./Blit-B-VutIER.js";import"./unitFormatUtils-CZ2bRlFg.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./quantityUtils-D0GB2dMc.js";import"./ZoomMomentumEstimator-DA-HeSfK.js";import"./HUDMaterial.glsl-D6WRipwF.js";import"./labelFormatUtils-DFKxfrJb.js";import"./labelUtils-B8petyBk.js";import"./NormalUtils.glsl-DwmdcsLR.js";import"./fontUtils-BKHqaMFz.js";import"./LodRenderer-EVrH9dsH.js";import"./Intersector-BQ92CPLA.js";import"./FeaturePipelineRenderManager-DjjUkvYY.js";import"./elevationInfoUtils-BC_66_Fg.js";import"./ElevationQueryTileCache-D4sXpJpw.js";import"./LayerConstants-B33OP6sh.js";import"./intersectorUtilsConversions-D_fcRVdX.js";import"./ElevationRange-BrgM1moX.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./vec33-DUxPafiq.js";import"./Version-BSlAgupz.js";import"./Normals-DzBXR8Bg.js";import"./resources-CLJpJAXm.js";import"./vec3-kbEkneOB.js";import"./ShaderTechniqueRepository-hTzew41Z.js";import"./testSVGPremultipliedAlpha-uTaDUvFS.js";import"./RenderingContext-C2W2PIoX.js";import"./ProgramCache-BcuuBWLJ.js";import"./layerViewUtils-DhFEu8Rd.js";class dt{constructor(t,e,o){this._scale=t,this._shift=e,this._levelShift=o}getLevelRowColumn(t){const e=this.getLevelShift(t[0]),o=this._shift+e;return o?[t[0]-e,t[1]>>o,t[2]>>o]:t}getLevelShift(t){return Math.min(t,this._levelShift)}getOffset(t,e){let o=0,r=0;const i=this._shift+this.getLevelShift(t[0]);if(i){const a=(1<<i)-1,l=e/(this._scale*(1<<i-1));o=(t[2]&a)*l,r=(t[1]&a)*l}return[o,r]}getScale(t){return this._scale*(1<<this._shift+this.getLevelShift(t))}}class D extends Q{constructor(t,e,o,r){super(t,e,o,t.tileInfo.lods.length-1),this._memCache=r,this._ongoingTileRequests=new Map,this._ongoingRequestToController=new Map,this._tileInfoView=new J(t.tileInfo,t.fullExtent)}destroy(){super.destroy(),this._ongoingRequestToController.forEach(t=>t.abort()),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}async getVectorTile(t,e){const o=new tt(t[0],t[1],t[2],0);let r=this._memCache.get(o.id);if(r)return r.retain(),r;const i=await this._getVectorTileData(o);if(z(e),!this._layer)return null;if(r=this._memCache.get(o.id),r)return r.retain(),r;const a=this._layer.tileInfo.getTileBounds(Y(),o),l=this._tileInfoView.getTileResolution(t[0]);return r=new X(o,l,a[0],a[3],512,512,this._styleRepository,this._memCache),r.setData(i),i&&(r.retain(),this._memCache.put(o.id,r,r.usedMemory,Z)),r.neededForCoverage=!0,r.transforms.tileUnitsToPixels=K(1/8,0,0,0,1/8,0,0,0,1),r}_getVectorTileData(t){const e=t.id;if(this._ongoingTileRequests.has(e))return this._ongoingTileRequests.get(e);const o=new AbortController,r={signal:o.signal},i=this._getParsedVectorTileData(t,r).then(a=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),a)).catch(()=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),null));return this._ongoingTileRequests.set(e,i),this._ongoingRequestToController.set(e,o),i}_getParsedVectorTileData(t,e){return this.fetchTileData(t,e).then(o=>this.parseTileData({key:t,data:o},e))}}const y={vtlBackground:et,vtlFill:it,vtlLine:rt,vtlCircle:ot,vtlSymbol:lt},_=1e-6;class q{constructor(t,e){this.spriteMosaic=t,this.glyphMosaic=e,this._brushCache={vtlBackground:null,vtlFill:null,vtlLine:null,vtlCircle:null,vtlSymbol:null},this._vtlMaterialManager=new st}dispose(){var t,e,o,r,i;(t=this._brushCache.vtlBackground)==null||t.dispose(),(e=this._brushCache.vtlFill)==null||e.dispose(),(o=this._brushCache.vtlLine)==null||o.dispose(),(r=this._brushCache.vtlCircle)==null||r.dispose(),(i=this._brushCache.vtlSymbol)==null||i.dispose(),this._brushCache=null,this._vtlMaterialManager=V(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}get vectorTilesMaterialManager(){return this._vtlMaterialManager}drawSymbols(t,e,o){const r=o.layers;t.renderPass="translucent";let i=this._brushCache.vtlSymbol;i==null&&(i=new y.vtlSymbol,this._brushCache.vtlSymbol=i);for(let a=0;a<r.length;a++){const l=r[a];if(l.type!==g.SYMBOL)continue;const m=l.getLayoutProperty("visibility");if(m&&m.getValue()===x.NONE)continue;const s=t.displayLevel;l.minzoom!==void 0&&l.minzoom>s+_||l.maxzoom!==void 0&&l.maxzoom<=s-_||(t.styleLayerUID=l.uid,t.styleLayer=l,f[0]=e,i.drawMany(t,f))}}drawBackground(t,e,o){if(o.backgroundBucketIds.length===0)return;const{context:r,displayLevel:i,requiredLevel:a}=t;e.key.level=a,r.setBlendingEnabled(!0),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!1),t.renderPass="background";let l=this._brushCache.vtlBackground;l==null&&(l=new y.vtlBackground,this._brushCache.vtlBackground=l),o.backgroundBucketIds.forEach(m=>{const s=o.getLayerById(m);if(s.type!==g.BACKGROUND)return;const C=s.getLayoutProperty("visibility");C&&C.getValue()===x.NONE||s.minzoom!==void 0&&s.minzoom>i+_||s.maxzoom!==void 0&&s.maxzoom<=i-_||(t.styleLayerUID=s.uid,t.styleLayer=s,f[0]=e,l.drawMany(t,f))})}drawTile(t,e,o,r){const{context:i}=t,a=o.layers;i.setBlendingEnabled(!1),i.setDepthTestEnabled(!0),i.setDepthWriteEnabled(!0),i.setDepthFunction(nt.LEQUAL);const l=a.filter(m=>{if(r!=null&&r!==m.type||!e.layerData.has(m.uid))return!1;const s=m.getLayoutProperty("visibility");return(s==null?void 0:s.getValue())!==x.NONE});t.renderPass="opaque";for(let m=l.length-1;m>=0;--m)this._renderStyleLayer(l[m],t,e);i.setDepthWriteEnabled(!1),i.setBlendingEnabled(!0),i.setBlendFunctionSeparate(T.ONE,T.ONE_MINUS_SRC_ALPHA,T.ONE,T.ONE_MINUS_SRC_ALPHA),t.renderPass="translucent",l.forEach(m=>this._renderStyleLayer(m,t,e)),i.setDepthTestEnabled(!1),i.bindVAO()}_renderStyleLayer(t,e,o){const{renderPass:r}=e;let i;switch(t.type){case g.BACKGROUND:if(r!=="background")return;i=this._brushCache.vtlBackground,i||(i=new y.vtlBackground,this._brushCache.vtlBackground=i);break;case g.FILL:if(r!=="opaque"&&e.renderPass!=="translucent")return;i=this._brushCache.vtlFill,i==null&&(i=new y.vtlFill,this._brushCache.vtlFill=i);break;case g.LINE:if(r!=="translucent")return;i=this._brushCache.vtlLine,i==null&&(i=new y.vtlLine,this._brushCache.vtlLine=i);break;case g.CIRCLE:if(r!=="translucent")return;i=this._brushCache.vtlCircle,i==null&&(i=new y.vtlCircle,this._brushCache.vtlCircle=i);break;case g.SYMBOL:if(r!=="translucent")return;i=this._brushCache.vtlSymbol,i==null&&(i=new y.vtlSymbol,this._brushCache.vtlSymbol=i)}const{displayLevel:a}=e,{minzoom:l,maxzoom:m}=t;if(l!==void 0&&l>a+_||m!==void 0&&m<=a-_)return;const{context:s}=e;s.setStencilTestEnabled(!1),s.setStencilWriteMask(0),e.styleLayerUID=t.uid,e.styleLayer=t,f[0]=o,i.drawMany(e,f)}}const f=[null];let c=class extends mt(at(ct)){constructor(){super(...arguments),this._tileHandlerController=null,this.type="vector-tile-3d",this.levelShift=k("disable-feature:vtl-level-shift")?0:1}initialize(){if(this.layer.fullExtent==null)return void this.addResolvingPromise(Promise.reject(new F("vectortilelayerview:full-extent-undefined","This layer view's layer does not define a fullExtent.")));const{basemapTerrain:n,spatialReference:t,state:e,viewingMode:o}=this.view,r=o==="local"&&!pt(t)||ht.force512VTL?this.layer.tileInfo:this.layer.tileInfo.getCompatibleForVTL(256),i=this._getTileInfoSupportError(r,this.layer.fullExtent);if(i!=null)return this.addResolvingPromise(Promise.reject(i));const a=j(()=>{var p,h;return(h=(p=this.view)==null?void 0:p.basemapTerrain)==null?void 0:h.tilingSchemeLocked}).then(()=>{var w,R;const p=n.tilingScheme,h=p.pixelSize,I=h===256?1:2,v=(w=n.spatialReference)!=null&&w.isGeographic&&h===256?1:0,L=(R=n.spatialReference)!=null&&R.isGeographic||h!==256?0:1;let b;this.schemaHelper=new dt(I,v,this.levelShift+L),b=h===256||h===512?this.layer.tileInfo.getCompatibleForVTL(h):this.layer.tileInfo;const S=this._getTileInfoCompatibilityError(b,p);if(S)throw S;this.tileInfo=b});this._tileHandlerController=new AbortController;const l=this.view.resourceController;this._memCache=l.memoryController.newCache(`vtl-${this.layer.uid}`,p=>p.release()),this.addHandles(G(()=>this.view.qualitySettings.memoryLimit,p=>this._memCache.maxSize=Math.ceil(p/10*1048576),W));const m=new $(this.layer.currentStyleInfo.style);this._tileHandler=new D(this.layer,m,e.contentPixelRatio,this._memCache);const s=this._tileHandlerController.signal,C=ut(l),H=this._tileHandler.start({signal:s,schedule:C}),E=this._tileHandler.spriteMosaic;E.then(p=>{!A(s)&&this._tileHandler&&(this.painter=new q(p,this._tileHandler.glyphMosaic))}),H.then(()=>this._tileHandlerController=null);const M=()=>{var S;this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=new AbortController,this._memCache.clear();const p=this.layer.currentStyleInfo.style,h=((S=this.view.state)==null?void 0:S.contentPixelRatio)??1,I=new $(p),v=new D(this.layer,I,h,this._memCache),L=v.start({signal:this._tileHandlerController.signal,schedule:C}),b=v.spriteMosaic;L.then(()=>this._tileHandlerController=null),this._updatingHandles.addPromise(Promise.all([L,b]).then(([,w])=>{const R=this._tileHandler,P=this.painter;this.painter=new q(w,v.glyphMosaic),this._tileHandler=v,this.emit("data-changed"),R.destroy(),P&&P.dispose()}))};this._updatingHandles.add(()=>{var p;return{style:this.layer.currentStyleInfo.style,pixelRatio:(p=this.view.state)==null?void 0:p.contentPixelRatio}},M),this.addHandles([this.layer.on("paint-change",()=>this.emit("data-changed")),this.layer.on("style-layer-change",M),this.layer.on("delete-style-layer",M),this.layer.on("spriteSource-change",()=>this.emit("data-changed")),this.layer.on("layout-change",()=>this.emit("data-changed")),this.layer.on("style-layer-visibility-change",()=>this.emit("data-changed"))]);const O=Promise.all([a,H,E]);this.addResolvingPromise(O)}destroy(){this.painter=V(this.painter),this._tileHandlerController=U(this._tileHandlerController),this._tileHandler=B(this._tileHandler),this._memCache=B(this._memCache)}get contentZoom(){return k("disable-feature:vtl-level-shift")?1:this.view.qualitySettings.tiledSurface.vtlContentZoom}get displayLevelRange(){const n=this.tileInfo.lods,t=this.layer.minScale||n[0].scale,e=this.layer.maxScale||n[n.length-1].scale,o=this.levelRangeFromScaleRange(t,e);return this.layer.maxScale?o.maxLevel++:o.maxLevel+=this.levelShift,o}get dataScaleRange(){const n=this.tileInfo.lods;return{minScale:n[0].scale,maxScale:n[n.length-1].scale}}get dataLevelRange(){const{minScale:n,maxScale:t}=this.dataScaleRange,e=this.levelRangeFromScaleRange(n,t);return e.minLevel===1&&this.tileInfo.size[0]===256&&(e.minLevel=0),e.maxLevel+=this.levelShift,e}async fetchTile(n,t){const e=this.schemaHelper.getLevelRowColumn(n);return this._tileHandler.getVectorTile(e,t)}};d([u()],c.prototype,"layer",void 0),d([u()],c.prototype,"levelShift",void 0),d([u()],c.prototype,"contentZoom",null),d([u()],c.prototype,"displayLevelRange",null),d([u()],c.prototype,"tileInfo",void 0),d([u()],c.prototype,"dataScaleRange",null),d([u()],c.prototype,"dataLevelRange",null),d([u()],c.prototype,"updatingProgressValue",void 0),c=d([N("esri.views.3d.layers.VectorTileLayerView3D")],c);const rl=c;function ut(n){return t=>n.immediate.schedule(t)}export{rl as default};
