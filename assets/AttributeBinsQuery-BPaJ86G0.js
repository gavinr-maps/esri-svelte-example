import{B as m,r as e,m as i,L as l,a as u}from"./Accessor-BHnuXKD2.js";import{a as d}from"./Clonable-DvJsj5LF.js";import{o as y}from"./cast-BA_-jlhc.js";import{S as c}from"./JSONSupport-CGdeqxpk.js";import{r}from"./enumeration-Cr5WIZs4.js";import{g as n}from"./Point-XGrwlf63.js";import{f as h}from"./jsonUtils-Cu7OBRmN.js";import{l as f}from"./typeUtils-BSg8Y507.js";import{g as p}from"./queryUtils-DBeaQ3x_.js";import{u as v,c as w,a as b,m as g,b as j}from"./FixedIntervalBinParameters-uigAmvtd.js";import{m as S,s as R}from"./Query-DCBIeen2.js";import{p as T}from"./TimeExtent-J5qnUFx_.js";import{p as $}from"./timeZoneUtils-COos5xIr.js";import"./index-tefRSezt.js";import"./writer-B2bQV2uU.js";import"./Extent-CBBGeHb-.js";import"./Polyline-BmuD2-ZN.js";import"./mathUtils-DV9iOXpW.js";import"./projection-B2I9Bzj_.js";import"./SimpleObservable-7oieNGD8.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./normalizeUtils-XRAPXbWa.js";import"./normalizeUtilsCommon-D0zPTJCj.js";import"./utils-Cy8wFNQo.js";import"./utils-CkSELPnj.js";import"./json-Wa8cmqdu.js";import"./NormalizationBinParametersMixin-D6iHLB7I.js";import"./Field-Cyk7Ur5d.js";import"./fieldType-L-VlbZqy.js";import"./FullTextSearch-BWm_kPUE.js";import"./timeUtils-D2X862bk.js";import"./Promise-CmQqe-ke.js";const B=new y({asc:"ascending",desc:"descending"}),x={base:v,key:"type",typeMap:{"auto-interval":w,date:b,"fixed-boundaries":g,"fixed-interval":j}};let t=class extends d.ClonableMixin(c){constructor(o){super(o),this.binParameters=null,this.binOrder="ascending",this.cacheHint=void 0,this.datumTransformation=null,this.defaultSpatialReference=null,this.distance=void 0,this.geometry=null,this.lowerBoundaryAlias=null,this.outSpatialReference=null,this.outStatistics=null,this.returnDistinctValues=null,this.spatialRelationship="intersects",this.timeExtent=null,this.upperBoundaryAlias=null,this.units=null,this.where="1=1"}set outTimeZone(o){this._set("outTimeZone",o),o&&!$(o)&&m.getLogger(this).warn("#outTimeZone",`the parsed value '${o}' may not be a valid IANA time zone`)}};e([i({types:x,json:{name:"bin",write:!0}})],t.prototype,"binParameters",void 0),e([r(B)],t.prototype,"binOrder",void 0),e([i({type:Boolean,json:{write:!0}})],t.prototype,"cacheHint",void 0),e([i({json:{write:!0}})],t.prototype,"datumTransformation",void 0),e([i({type:n,json:{name:"defaultSR",write:!0}})],t.prototype,"defaultSpatialReference",void 0),e([i({type:Number,json:{write:{overridePolicy:o=>({enabled:o>0})}}})],t.prototype,"distance",void 0),e([i({types:f,json:{read:h,write:!0}})],t.prototype,"geometry",void 0),e([i({type:String,json:{write:!0}})],t.prototype,"lowerBoundaryAlias",void 0),e([i({type:n,json:{name:"outSR",write:!0}})],t.prototype,"outSpatialReference",void 0),e([i({type:[S],json:{write:{enabled:!0,overridePolicy(){return{enabled:this.outStatistics!=null&&this.outStatistics.length>0}}}}})],t.prototype,"outStatistics",void 0),e([i({value:null,json:{name:"outTimeReference",read:{reader:o=>o.ianaTimeZone},write:{writer:(o,a,s)=>{o&&(a[s]={ianaTimeZone:o})}}}})],t.prototype,"outTimeZone",null),e([i({type:Boolean,json:{write:!0}})],t.prototype,"returnDistinctValues",void 0),e([r(R,{name:"spatialRel"})],t.prototype,"spatialRelationship",void 0),e([i({type:T,json:{write:!0}})],t.prototype,"timeExtent",void 0),e([i({type:String,json:{write:!0}})],t.prototype,"upperBoundaryAlias",void 0),e([i({type:String,json:{read:p.read,write:{writer:p.write,overridePolicy(o){return{enabled:o!=null&&this.distance!=null}}}}})],t.prototype,"units",void 0),e([i({type:String,json:{write:!0}})],t.prototype,"where",void 0),t=e([u("esri.rest.support.AttributeBinsQuery")],t);const st=t;t.from=l(t);export{st as default};
