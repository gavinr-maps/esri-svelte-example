const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngine-BT1Ysmbs.js","./geometryEngineBase-RmbNeFm7.js","./_commonjsHelpers-DCkdB7M8.js","./hydrated-DO_xxk1P.js","./Extent-DHjqVB-p.js","./Evented-CXIxDjmW.js","./Accessor-D6mNnsWy.js","./subclass-BR3PhgZG.js","./Point-DB4Hp4hH.js","./jsonMap-DCC6W5ex.js","./writer-3zufXUNV.js","./assets-C2mb-ea2.js","./index-CeCSsEgo.js","./index-CjOb8WjV.css","./Polyline-D97hl-6E.js","./mathUtils-ClvKsMak.js","./imageryUtils-CsT5NDkh.js","./utils-1QwwZNj1.js","./originUtils-D69mHv66.js","./multiOriginJSONSupportUtils-C0wm8_Yw.js","./Portal-liet8xHC.js","./Promise-CZrWwByK.js","./PortalItem-BuTU9OuN.js","./persistableUrlUtils-BcifXQ1Z.js","./jsonContext-9yrMdsS4.js","./portalItemUtils-DIZSrm3T.js","./projection-A9yUaaTs.js","./reactiveUtils-BFQ0BtrB.js","./shared-B3wH2qpO.js","./projectBuffer-vsa0P_cF.js","./geodesicConstants-XRAvAZCD.js","./saveAPIKeyUtils--6vvrYdZ.js","./saveUtils-BlgyRdsU.js"])))=>i.map(i=>d[i]);
import{_ as Je}from"./index-CeCSsEgo.js";import{e as b}from"./Evented-CXIxDjmW.js";import{k as It}from"./PopupTemplate-ByHks6sq.js";import{i as bt}from"./Clonable-cKbRam6-.js";import{n as re,c as P,R as Ae,y as S,b as Q,O as Pe,h as Rt,N as vt}from"./subclass-BR3PhgZG.js";import{S as St}from"./MultiOriginJSONSupport-DjAXzJun.js";import{m as Tt,p as lt,g as _t,n as Ft,O as Mt,x as kt,a as Ct}from"./Accessor-D6mNnsWy.js";import{d as Ot}from"./reactiveUtils-BFQ0BtrB.js";import{o as Pt}from"./enumeration--HlxOQ_N.js";import{f as $t}from"./Layer-C96_yo4i.js";import{l as Dt}from"./ArcGISService-Dr1J04Ka.js";import{l as Nt}from"./BlendLayer-DmvCcS5c.js";import{e as Bt}from"./CustomParametersMixin-BStBpako.js";import"./geometry-DpwwkAX1.js";import{c as Et,f as Jt,a as At,N as $e,l as Lt,d as Ht,b as zt,h as Wt,$ as Ve,W as Ye,q as Gt,U as jt,E as Ut,L as Xe,t as qt,e as Vt}from"./ImageHistogramParameters-I4HA5fy4.js";import{f as Yt,U as ct,I as Xt}from"./assets-C2mb-ea2.js";import{o as Kt}from"./writer-3zufXUNV.js";import{_ as A,f as H,at as Qt,W as Ke,b as Zt}from"./Point-DB4Hp4hH.js";import{y as ut}from"./arcgisLayerUrl-Cgl5IQFD.js";import{p as ht,y as ei}from"./commonProperties-C-F8Nu9F.js";import{h as ft,D as mt,i as ti,a as ii,p as Le,d as Qe,o as si,f as Ze,g as ni}from"./multidimensionalUtils-X30APAUx.js";import{z as te,p as ri}from"./TileInfo-DkEc90N-.js";import{j as ai}from"./Polyline-D97hl-6E.js";import{n as oi,p as li}from"./Promise-CZrWwByK.js";import{j as ci,n as Re,a as ve,h as ui,m as He,g as ze,P as hi,r as fi,b as et,F as mi,U as pi,N as di,c as de,B as yi,d as gi,D as xi,R as wi,L as Ii}from"./RasterSymbolizer--Y8J3l4E.js";import{i as tt,m as it,x as st,h as bi,s as Ri}from"./RawBlockCache-BXztCuwi.js";import{l as vi,u as Si}from"./pixelRangeUtils-DR2RxTkt.js";import{U as Te,D as pt,R as Ti,u as _i,l as Fi,g as V,E as Mi,W as ki,T as Ci,f as Oi,s as Pi}from"./dataUtils-BFb-cWEm.js";import{T as De,D as ye,j as nt,r as rt,o as $i,V as _e,J as Ie,e as Di,Z as Ni,C as Bi,U as Ne}from"./rasterProjectionHelper-CSjnNBma.js";import{_ as Ei}from"./QueueProcessor-Bu6RBZRX.js";import{w as L}from"./Extent-DHjqVB-p.js";import{d as We}from"./FeatureSet-DyOnd9Rj.js";import{y as Ge,c as Ji,S as dt,R as Ai}from"./rasterFunctionHelper-Dz_YbM6E.js";import{b as Li}from"./OperationalLayer-B61mRSes.js";import{j as Hi}from"./PortalLayer-iKUPhGZB.js";import{f as zi}from"./RefreshableLayer-B26jSd3d.js";import{t as Wi}from"./ScaleRangeLayer-CKYXLXxK.js";import{l as Gi}from"./TemporalLayer-D6vkocFU.js";import{y as ue}from"./Field-C8SaaeoI.js";import{u as ji}from"./Color-DDUWtbqR.js";import{j as Ui}from"./TilemapCache-SY5llsKN.js";import{p as qi}from"./popupUtils-fsHWupnf.js";import{A as ge}from"./interfaces-CL2NbQte.js";const at=8,Vi=256;let Yi=0,J=class extends oi(Yt){constructor(){super(...arguments),this._tileFetchQueue=new Ei({concurrency:32,process:(t,e)=>this._fetchRawTile(t.pyramidLevel,t.row,t.col,{...t.options,signal:e})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const t=De();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t!=null&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:te.create(),...t.ioConfig}}),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=ye(t.spatialReference);return e!=null&&t.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:t}=this.rasterInfo;return t==null||t.type==="gcs-shift"}set rasterJobHandler(t){var e,n;this._set("rasterJobHandler",t),this.datasetFormat==="Function"&&((n=(e=this.primaryRasters)==null?void 0:e.rasters)==null||n.forEach(i=>i.rasterJobHandler=t))}get rasterId(){return this.url||"rasterId-"+Yi++}set url(t){this._set("url",ut(t,re.getLogger(this)))}async open(t){throw new P("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(t,e,n,i={}){const s=i.tileInfo||this.rasterInfo.storageInfo.tileInfo,a=this.getTileExtentFromTileInfo(t,e,n,s);return i={noClip:!0,...i},this.fetchPixels(a,s.size[0],s.size[1],i)}async identify(t,e={}){var F;t=Ae(A,t).clone().normalize();const{multidimensionalDefinition:n,timeExtent:i}=e,{rasterInfo:s}=this,{hasMultidimensionalTranspose:a,multidimensionalInfo:r}=s;let{transposedVariableName:o}=e;const l=r!=null&&a&&(i!=null||ft(n));l&&!o&&(o=n!=null&&n.length>0?n[0].variableName??void 0:r.variables[0].name,e={...e,transposedVariableName:o}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=s,{datumTransformation:m}=e;let h=nt(t,c,m);if(!u.intersects(h))return{location:h,value:null};if(s.transform!=null){const C=s.transform.inverseTransform(h);if(!s.nativeExtent.intersects(C))return{location:C,value:null};h=C}let f=0;const g=o!=null&&r!=null&&s.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const C=this.primaryRasters.rasters[0];if(g)return C.identify(h,e);const{pixelSize:E}=s,O=3,$=E.x*O/2,D=E.y*O/2,N=new L({xmin:h.x-$,xmax:h.x+$,ymin:h.y-D,ymax:h.y+D,spatialReference:c}),Z={interpolation:"nearest",multidimensionalDefinition:n,sliceId:e.sliceId},{pixelBlock:W}=await C.fetchPixels(N,O,O,Z),{pixelBlock:G}=await this.fetchPixels(N,O,O,Z);if(W==null)return{location:h,value:null};const U=Math.floor(O*O*.5),oe=!W.mask||W.mask[U]?W.pixels.map(j=>j[U]):null;let Y;return G!=null&&(Y=!G.mask||G.mask[U]?G.pixels.map(j=>j[U]):void 0),{location:h,value:oe,processedValue:Y,pyramidLevel:0}}if(!g){if(e.srcResolution)f=rt(e.srcResolution,s,this.ioConfig.sampling).pyramidLevel;else if(f=await this.computeBestPyramidLevelForLocation(t,e),f==null)return{location:h,value:null}}const d=this.identifyPixelLocation(h,f,null,g);if(d===null)return{location:h,value:null};const{row:p,col:y,rowOffset:x,colOffset:w,blockWidth:I}=d,R=o??e.sliceId,T=tt(this.rasterId,R),_=`${f}/${p}/${y}`;let k=it(T,null,_);k==null&&(k=this.fetchRawTile(f,p,y,e),st(T,null,_,k));const v=await k;if(!((F=v==null?void 0:v.pixels)!=null&&F.length))return{location:h,value:null};const M=x*I+w;return this._processIdentifyResult(v,{srcLocation:h,position:M,pyramidLevel:f,useTransposedTile:!!g,requestSomeSlices:l,identifyOptions:e})}async fetchPixels(t,e,n,i={}){t=$i(t),i=this._getRequestOptionsWithSliceId(i);const{_hasNoneOrGCSShiftTransform:s}=this;if(i.requestRawData&&s)return this._fetchPixels(t,e,n,i);const a=ye(t.spatialReference),r=_e(t);if(a==null||r===0||r===1&&this._isGlobalWrappableSource&&s)return this._fetchPixels(t,e,n,i);if(r>=3)return{extent:t,pixelBlock:null};const o=[],{xmin:l,xmax:c}=t,u=Math.round(a/(c-l)*e),m=u-Math.round((a/2-l)/(c-l)*e);let h=0;const f=[];for(let y=0;y<=r;y++){const x=new L({xmin:y===0?l:-a/2,xmax:y===r?c-a*y:a/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),w=y===0?u-m:y===r?e-h:u;h+=w,f.push(w);const I=i.disableWrapAround&&y>0?null:this._fetchPixels(x,w,n,i);o.push(I)}const g=(await Promise.all(o)).map(y=>y==null?void 0:y.pixelBlock);let d=null;const p={width:e,height:n};return this.rasterJobHandler?d=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:p,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},i)).pixelBlock:d=Te(g,p,{blockWidths:f}),{extent:t,srcExtent:Ie(t,this.rasterInfo.spatialReference,i.datumTransformation),pixelBlock:d}}async fetchRawPixels(t,e,n,i={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const s=await this._fetchRawTiles(t,e,n,i),{nativeExtent:a,nativePixelSize:r,storageInfo:o}=this.rasterInfo,l=2**t,c=r.x*l,u=r.y*l,m=new L({xmin:a.xmin+c*e.x,xmax:a.xmin+c*(e.x+n.width-1),ymin:a.ymax-u*(e.y+n.height-1),ymax:a.ymax-u*e.y,spatialReference:a.spatialReference});if(!s)return{extent:m,srcExtent:m,pixelBlock:null};const{pixelBlocks:h,mosaicSize:f}=s;if(h.length===1&&h[0]!=null&&h[0].width===n.width&&h[0].height===n.height)return{extent:m,srcExtent:m,pixelBlock:s.pixelBlocks[0]};const g=t>0?o.pyramidBlockWidth:o.blockWidth,d=t>0?o.pyramidBlockHeight:o.blockHeight,p={x:e.x%g,y:e.y%d};let y;return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:h,srcMosaicSize:f,destDimension:n,clipOffset:p,clipSize:n,coefs:null,sampleSpacing:null,interpolation:i.interpolation,alignmentInfo:null,blockWidths:null},i)).pixelBlock:y=Te(h,f,{clipOffset:p,clipSize:n}),{extent:m,srcExtent:m,pixelBlock:y}}fetchRawTile(t,e,n,i){throw new P("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return Ie(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?ci(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,e,n=0){const{customFetchParameters:i}=this.ioConfig,{range:s,query:a,headers:r}=e;n=n??e.retryCount??this.ioConfig.retryCount;const o=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await ct(t,{...e,query:{...a,...i},headers:{...r,...o}})}catch(l){if(n>0)return n--,this.request(t,e,n);throw l}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||t==null||t.length===0?null:mt(t,e)}getTileExtentFromTileInfo(t,e,n,i){const s=i.lodAt(t);return this.getTileExtent({x:s.resolution,y:s.resolution},e,n,i.origin,i.spatialReference,i.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:n,pixelSize:i}=this.rasterInfo,{pyramidResolutions:s}=t;if(!t.tileInfo){const a=[],r=t.maximumPyramidLevel||0;let o=(i.x+i.y)/2,l=1/.0254*96*o;for(let u=0;u<=r&&(a.unshift(new ri({level:r-u,resolution:o,scale:l})),u!==r);u++)if(s){const m=(s[u].x+s[u].y)/2;l*=m/o,o=m}else o*=2,l*=2;const c=new A({x:n.xmin,y:n.ymax,spatialReference:e});t.tileInfo=new te({origin:c,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:a}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,n=512,i){const{width:s,height:a,nativeExtent:r,pixelSize:o,spatialReference:l}=t,c=new A({x:r.xmin,y:r.ymax,spatialReference:l});i==null&&(i=Math.max(0,Math.round(Math.log(Math.max(s,a))/Math.LN2-8)));const u=this.computeBlockBoundary(r,512,512,{x:r.xmin,y:r.ymax},[o],i);t.storageInfo=new Re({blockWidth:e,blockHeight:n,pyramidBlockWidth:e,pyramidBlockHeight:n,origin:c,firstPyramidLevel:1,maximumPyramidLevel:i,blockBoundary:u})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,n,i,s,a=0,r=2){if(s.length===1&&a>0){s=[...s];let{x:u,y:m}=s[0];for(let h=0;h<a;h++)u*=r,m*=r,s.push({x:u,y:m})}const o=[],{x:l,y:c}=i;for(let u=0;u<s.length;u++){const{x:m,y:h}=s[u];o.push({minCol:Math.floor((t.xmin-l+.1*m)/e/m),maxCol:Math.floor((t.xmax-l-.1*m)/e/m),minRow:Math.floor((c-t.ymax+.1*h)/n/h),maxRow:Math.floor((c-t.ymin-.1*h)/n/h)})}return o}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:n,pyramidScalingFactor:i}=this.rasterInfo.storageInfo;if(t===0)return e;if(n!=null&&n.length)return n[t-1];const s=i**t;return{x:e.x*s,y:e.y*s}}identifyPixelLocation(t,e,n,i){const{spatialReference:s,nativeExtent:a,storageInfo:r}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=r,u=i&&c!=null?c.tileSize[0]:r.blockWidth,m=i&&c!=null?c.tileSize[1]:r.blockHeight,h=nt(t,s,n);if(!a.intersects(h)||e<0||e>o)return null;const f=this.getPyramidPixelSize(e),{x:g,y:d}=f,p=(l.y-h.y)/d/m,y=(h.x-l.x)/g/u,x=Math.min(m-1,Math.floor((p-Math.floor(p))*m)),w=Math.min(u-1,Math.floor((y-Math.floor(y))*u));return{pyramidLevel:e,row:Math.floor(p),col:Math.floor(y),rowOffset:x,colOffset:w,blockWidth:u,srcLocation:h}}getTileExtent(t,e,n,i,s,a){const[r,o]=a,l=i.x+n*r*t.x,c=l+r*t.x,u=i.y-e*o*t.y,m=u-o*t.y;return new L({xmin:l,xmax:c,ymin:m,ymax:u,spatialReference:s})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,n){const i=this.rasterInfo.storageInfo.blockBoundary[t];return!i||i.maxRow<e||i.maxCol<n||i.minRow>e||i.minCol>n}updateImageSpaceRasterInfo(t){const{extent:e,pixelSize:n}=t;if(e.xmin===-.5&&e.ymax===.5&&n.x===1&&n.y===1&&t.transform==null)return;const{width:i,height:s}=t,a=H.WebMercator;t.spatialReference=a,t.extent=t.nativeExtent=new L({xmin:-.5,ymax:.5,xmax:i-.5,ymin:.5-s,spatialReference:a}),t.isPseudoSpatialReference=!0,t.transform=null,t.pixelSize=new A({x:1,y:1,spatialReference:a});const{extent:r,storageInfo:o}=t;if(o){o.origin=new A({x:r.xmin,y:r.ymax,spatialReference:a});const{pyramidResolutions:l,tileInfo:c}=o;if(l&&l.forEach(u=>{u.x/=n.x,u.y/=n.y}),c){c.origin=o.origin;const u=(t.nativePixelSize.x+t.nativePixelSize.y)/2;c.lods.forEach((m,h)=>{m.resolution=u*2**h,m.scale=96*m.resolution/.0254})}}}async _fetchPixels(t,e,n,i={}){let s=_e(t);if(s>=2)return{extent:t,pixelBlock:null};const a=this._getSourceDataInfo(t,e,n,i),{pyramidLevel:r,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:u,ul:m}=a;if(c===0||u===0)return{extent:t,srcExtent:l,pixelBlock:null};const{rasterInfo:h}=this,f=h.transform,g=(f==null?void 0:f.type)==="gcs-shift",d=ye(t.spatialReference)!=null;!g&&d||(s=_e(a.srcExtent,g));const p=await this._fetchRawTiles(r,m,{width:c,height:u,wrapCount:s},i);if(!p)return{extent:t,srcExtent:l,pixelBlock:null};const y=h.storageInfo,x=r>0?y.pyramidBlockWidth:y.blockWidth,w=r>0?y.pyramidBlockHeight:y.blockHeight;let{x:I,y:R}=h.pixelSize;if(r>0){const{pyramidResolutions:j,pyramidScalingFactor:wt}=y;if(j!=null&&j[r-1])({x:I,y:R}=j[r-1]);else{const qe=wt**r;I*=qe,R*=qe}}const T=h.spatialReference,_=new A({x:I,y:R,spatialReference:T}),k=x===c&&w===u&&m.x%x==0&&m.y%w==0,v=new A({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/n,spatialReference:t.spatialReference}),M=!t.spatialReference.equals(T),F=T.isGeographic?1e-9:1e-4,{datumTransformation:C}=i;if(!M&&k&&p.pixelBlocks.length===1&&x===e&&w===n&&Xi(o,v,F))return{extent:t,srcExtent:l,srcTilePixelSize:_,pixelBlock:p.pixelBlocks[0]};const E=d&&ye(l.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,O=i.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");O&&!this.rasterJobHandler&&await De();const $=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:p.extent,pixelSize:v.toJSON(),datumTransformation:C,rasterTransform:f,hasWrapAround:s>0||E,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:O},i):Di({projectedExtent:t,srcBufferExtent:p.extent,pixelSize:v,datumTransformation:C,rasterTransform:f,hasWrapAround:s>0||E,isAdaptive:!1,includeGCSGrid:O});let D;const N=!i.requestRawData,Z={rows:$.spacing[0],cols:$.spacing[1]},W=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(r,p.extent.xmin):void 0,{pixelBlocks:G,mosaicSize:U,isPartiallyFilled:oe}=p;let Y=null;if(this.rasterJobHandler)({pixelBlock:D,localNorthDirections:Y}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:G,srcMosaicSize:U,destDimension:N?{width:e,height:n}:null,coefs:N?$.coefficients:null,sampleSpacing:N?Z:null,projectDirections:O,gcsGrid:O?$.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:i.interpolation,alignmentInfo:W,blockWidths:null},i));else{const j=Te(G,U,{alignmentInfo:W});D=N?pt(j,{width:e,height:n},$.coefficients,Z,i.interpolation):j,O&&$.gcsGrid&&(Y=Ti({width:e,height:n},$.gcsGrid),D=_i(D,this.rasterInfo.dataType,Y))}return i.requestRawData||O?{extent:t,srcExtent:l,srcTilePixelSize:_,pixelBlock:D,transformGrid:$,localNorthDirections:Y,isPartiallyFilled:oe}:{extent:t,srcExtent:l,srcTilePixelSize:_,pixelBlock:D}}async _fetchRawTiles(t,e,n,i){const{origin:s,blockBoundary:a}=this.rasterInfo.storageInfo,{blockWidth:r,blockHeight:o}=this.getBlockWidthHeight(t);let{x:l,y:c}=e,{width:u,height:m,wrapCount:h}=n;const f=this._getRasterTileAlignmentInfo(t,0);i.buffer&&(l-=i.buffer.cols,c-=i.buffer.rows,u+=2*i.buffer.cols,m+=2*i.buffer.rows);let g=0,d=0,p=0;h&&f!=null&&({worldColumnCountFromOrigin:d,originColumnOffset:p,rightPadding:g}=f,d*f.blockWidth-g>=l+u&&(g=0));const y=Math.floor(l/r),x=Math.floor(c/o),w=Math.floor((l+u+g-1)/r),I=Math.floor((c+m+g-1)/o),R=a[t];if(!R)return null;const{minRow:T,minCol:_,maxCol:k,maxRow:v}=R;if(h===0&&(I<T||w<_||x>v||y>k))return null;const M=new Array;let F=!1;const C=this.ioConfig.allowPartialFill==null?i.allowPartialFill:this.ioConfig.allowPartialFill;for(let W=x;W<=I;W++)for(let G=y;G<=w;G++){let U=G;if(!i.disableWrapAround&&h&&f!=null&&d<=G&&(U=G-d-p),W>=T&&U>=_&&v>=W&&k>=U){const oe=this._tileFetchQueue.push({pyramidLevel:t,row:W,col:U,options:i},{signal:i.signal});C?M.push(new Promise(Y=>{oe.then(j=>Y(j)).catch(()=>{F=!0,Y(null)})})):M.push(oe)}else M.push(Promise.resolve(null))}if(M.length===0)return null;const E=await Promise.all(M),O={height:(I-x+1)*o,width:(w-y+1)*r},{spatialReference:$}=this.rasterInfo,D=this.getPyramidPixelSize(t),{x:N,y:Z}=D;return{extent:new L({xmin:s.x+y*r*N,xmax:s.x+(w+1)*r*N,ymin:s.y-(I+1)*o*Z,ymax:s.y-x*o*Z,spatialReference:$}),pixelBlocks:E,mosaicSize:O,isPartiallyFilled:F}}_fetchRawTile(t,e,n,i){const s=this.rasterInfo.storageInfo.blockBoundary[t];if(!s)return Promise.resolve(null);const{minRow:a,minCol:r,maxCol:o,maxRow:l}=s;if(e<a||n<r||e>l||n>o)return Promise.resolve(null);const c=tt(this.rasterId,i.sliceId),u=`${t}/${e}/${n}`;let m=it(c,i.registryId,u);if(m==null){const h=new AbortController;m=this.fetchRawTile(t,e,n,{...i,signal:h.signal}),st(c,i.registryId,u,m,h),m.catch(()=>bi(c,i.registryId,u))}return i.signal&&Tt(i,()=>{Ri(c,i.registryId,u)}),m}_computeMagDirValues(t){var l;const{bandCount:e,dataType:n}=this.rasterInfo;if(!(e===2&&n==="vector-magdir"||n==="vector-uv")||(t==null?void 0:t.length)!==2||!((l=t[0])!=null&&l.length))return null;const i=t[0].length;if(n==="vector-magdir"){const c=t[1].map(u=>(u+360)%360);return[t[0],c]}const[s,a]=t,r=[],o=[];for(let c=0;c<i;c++){const[u,m]=Fi([s[c],a[c]]);r.push(u),o.push(m)}return[r,o]}_getRasterTileAlignmentInfo(t,e){return this._rasterTileAlignmentInfo==null&&(this._rasterTileAlignmentInfo=Ni(this.rasterInfo)),this._rasterTileAlignmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[t]}}_getSourceDataInfo(t,e,n,i={}){const s={datumTransformation:i.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};i.srcResolution&&(s.srcResolution=i.srcResolution,this._updateSourceDataInfo(t,s));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:r,srcHeight:o,pyramidLevel:l}=s,c=r/e,u=o/n,m=l<a&&c*u>=16,h=l===a&&this._requireTooManySrcTiles(r,o,e,n);if(m||h||r===0||o===0){const f=new A({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/n,spatialReference:t.spatialReference});let g=Bi(f,this.rasterInfo.spatialReference,t,s.datumTransformation);const d=!g||i.srcResolution&&g.x+g.y<i.srcResolution.x+i.srcResolution.y;if(m&&i.srcResolution&&d){const p=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(a-l+3>=p){const y=2**p;g={x:i.srcResolution.x*y,y:i.srcResolution.y*y}}}g&&(s.srcResolution=g,this._updateSourceDataInfo(t,s))}return this._requireTooManySrcTiles(s.srcWidth,s.srcHeight,e,n)&&(s.srcWidth=0,s.srcHeight=0),s}_requireTooManySrcTiles(t,e,n,i){const{tileInfo:s}=this.rasterInfo.storageInfo,a=Math.ceil(t/s.size[0])*Math.ceil(e/s.size[1]),r=t/n,o=e/i,l=Math.max(1,(n+i)/1024);return a>=Vi*l||r>at||o>at}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:n}=this,i=n.spatialReference,{srcResolution:s,datumTransformation:a}=e,{pyramidLevel:r,pyramidResolution:o,excessiveReading:l}=rt(s,n,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||Ie(t,i,a);if(c==null)return;const u=n.transform;u&&(c=u.inverseTransform(c)),e.srcExtent=c;const{x:m,y:h}=n.storageInfo.origin,f=Math.floor((c.xmin-m)/o.x+.1),g=Math.floor((h-c.ymax)/o.y+.1),d=Math.floor((c.xmax-m)/o.x-.1),p=Math.floor((h-c.ymin)/o.y-.1),y=c.width<.1*o.x?0:d-f+1,x=c.height<.1*o.y?0:p-g+1;e.pyramidLevel=r,e.pyramidResolution=o,e.srcWidth=y,e.srcHeight=x,e.ul={x:f,y:g}}_getRequestOptionsWithSliceId(t){return this.rasterInfo.multidimensionalInfo!=null&&t.sliceId==null&&(t={...t,sliceId:this.getSliceIndex(t.multidimensionalDefinition)}),t}_processIdentifyResult(t,e){const{srcLocation:n,position:i,pyramidLevel:s,useTransposedTile:a}=e,r=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[i]))return{location:n,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(o==null||!a){const p=t.pixels.map(w=>w[i]),y={location:n,value:p,pyramidLevel:s},x=this._computeMagDirValues(p.map(w=>[w]));return x!=null&&x.length&&(y.magdirValue=x.map(w=>w[0])),y}let l=t.pixels.map(p=>p.slice(i*r,i*r+r)),c=this._computeMagDirValues(l);const{requestSomeSlices:u,identifyOptions:m}=e;let h=ti(o,m.transposedVariableName);if(u){const p=ii(h,m.multidimensionalDefinition,m.timeExtent);l=l.map(y=>p.map(x=>y[x])),c=c==null?void 0:c.map(y=>p.map(x=>y[x])),h=p.map(y=>h[y])}const f=t.noDataValues||this.rasterInfo.noDataValue,g={pixels:l,pixelType:t.pixelType};let d;return f!=null&&(vi(g,f),d=g.mask),{location:n,value:null,dataSeries:h.map((p,y)=>{const x={value:(d==null?void 0:d[y])===0?null:l.map(w=>w[y]),multidimensionalDefinition:p.multidimensionalDefinition.map(w=>new Le({...w,isSlice:!0}))};return c!=null&&c.length&&(x.magdirValue=[c[0][y],c[1][y]]),x}),pyramidLevel:s}}};function Xi(t,e,n){return Math.abs(t.x-e.x)<n&&Math.abs(t.y-e.y)<n}b([S()],J.prototype,"_rasterTileAlignmentInfo",void 0),b([S()],J.prototype,"_tileFetchQueue",void 0),b([S({readOnly:!0})],J.prototype,"_isGlobalWrappableSource",null),b([S({readOnly:!0})],J.prototype,"_hasNoneOrGCSShiftTransform",null),b([S()],J.prototype,"rasterJobHandler",null),b([S({readOnly:!0})],J.prototype,"rasterId",null),b([S(ht)],J.prototype,"url",null),b([S({type:String,json:{write:!0}})],J.prototype,"datasetName",void 0),b([S({type:String,json:{write:!0}})],J.prototype,"datasetFormat",void 0),b([S()],J.prototype,"hasUniqueSourceStorageInfo",void 0),b([S()],J.prototype,"rasterInfo",void 0),b([S()],J.prototype,"ioConfig",void 0),b([S()],J.prototype,"sourceJSON",void 0),J=b([Q("esri.layers.support.rasterDatasets.BaseRaster")],J);const ae=J;function yt(t){return["x","e","east","long","longitude"].includes(t.toLowerCase())}function gt(t){return["y","n","west","lat","latitude"].includes(t.toLowerCase())}function Ki(t){const{axes:e}=t.domain,n=Object.keys(e),i=[],s=[];let a=-1,r=-1,o=[];for(let x=0;x<n.length;x++){const w=n[x];yt(w)?a=x:gt(w)&&(r=x);const I=e[w],R=[];if("values"in I){I.values.forEach(_=>R.push(typeof _=="string"?new Date(_).getTime():_));const T=R[1]-R[0];i.push([R[0]-.5*T,R[R.length-1]+.5*T]),s.push(T)}else{const{start:T,stop:_,num:k}=I,v=(_-T)/(k-1);i.push([T-.5*v,_+.5*v]),s.push(v);for(let M=0;M<k;M++)R.push(T+v*M)}o.push({name:w,values:R,extent:[R[0],R[R.length-1]]})}a>-1&&r===-1?r=a===0?1:0:r>-1&&a===-1?a=r===0?1:0:r===-1&&a===-1&&(a=0,r=1),o=o.filter((x,w)=>!(w===a||w===r));const{referencing:l}=t.domain,c=l.find(x=>x.coordinates.includes(n[a])).system.id,u=c==null?void 0:c.slice(c.lastIndexOf("/")+1),m=u==null||u==="CRS84"?4326:Number(u),h=new H({wkid:m}),[f,g]=i[a],[d,p]=i[r],y=new L({xmin:f,xmax:g,ymin:d,ymax:p,spatialReference:h});return{width:Math.round(y.width/s[a]),height:Math.round(y.height/s[r]),extent:y,dimensions:o}}function Fe(t){const e=li();return e?t[e]??Object.values(t)[0]:Object.values(t)[0]}function Me(){return Math.round(255*Math.random())}function Qi(t){var i,s;const e={},{parameters:n}=t;if(!n)return e;for(const[a,r]of Object.entries(n)){const{type:o,description:l,unit:c,categoryEncoding:u,observedProperty:m}=r;if(o==="Parameter"&&(e[a]={},l&&(e[a].description=Fe(l)),c&&(e[a].unit=c.label?Fe(c.label):null,e[a].symbol=(i=c.symbol)==null?void 0:i.value),u)){const h=Object.entries(u).map((d,p)=>({OID:p,Value:Number(d[1]),ClassName:d[0].slice(d[0].lastIndexOf("/")+1),Count:1}));let f=!1;(s=m==null?void 0:m.categories)!=null&&s.length&&(m.categories.forEach(d=>{if(!d.id)return;const p=d.id.slice(d.id.lastIndexOf("/")+1),y=h.find(w=>w.ClassName===p);if(!y)return;const x=d.label?Fe(d.label):null;if(y.Label=x,d.preferredColor){const w=ji.fromHex(d.preferredColor);w&&(f=!0,y.Red=w.r,y.Green=w.g,y.Blue=w.b)}}),f&&h.forEach(d=>{d.Red==null&&(d.Red=Me(),d.Green=Me(),d.Blue=Me())}));const g={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:h.map(d=>({attributes:d}))};f&&g.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[a].attributeTable=g}}return e}function Zi(t){let e=Number.MAX_VALUE,n=-Number.MAX_VALUE;for(let i=0;i<t.length;i++){const s=t[i];s!=null&&(s<e&&(e=s),s>n&&(n=s))}return Si(e,n)}function es(t,e,n){const i=t.map((l,c)=>({name:l,count:e[c]})).sort((l,c)=>l.name>c.name?-1:1),s=(a=1,l=>a*=l.count);var a;const r=[...i.slice(1),{name:"",count:1}].reverse().map(s).reverse();let o=0;for(let l=t.length-1;l>=0;l--)o+=r[i.findIndex(({name:c})=>c===t[l])]*(n%e[l]),n=Math.floor(n/e[l]);return o}function ts(t){var h;const{width:e,height:n,extent:i,dimensions:s}=Ki(t),{ranges:a}=t,r=Object.keys(a).sort((f,g)=>f<g?-1:1),o=[];for(let f=0;f<r.length;f++){const g=r[f];s!=null&&s.length&&o.push({name:g,dimensions:s})}const l=Qi(t);o.forEach(f=>l[f.name]&&Object.assign(f,l[f.name]));const c=o.length?{variables:o}:void 0,u=[];for(let f=0;f<r.length;f++){const g=r[f],{values:d,dataType:p,axisNames:y,shape:x}=a[g],w=x.length>2?f*x.slice(0,-2).reduce((v,M)=>v*M):0,I=y.slice(0,-2),R=x.slice(0,-2),T=p==="float"?"f32":Zi(d),_=e*n,k=d.length/_;for(let v=0;v<k;v++){const M=V.createEmptyBand(T,_),F=new Uint8Array(_).fill(255);let C=!1;const E=v*_;for(let O=0;O<_;O++){const $=d[E+O];$==null?(F[O]=0,C=!0):M[O]=$}if(f===0||s!=null&&s.length){const O=new V({width:e,height:n,mask:C?F:null,pixels:[M],pixelType:T});O.updateStatistics(),(s==null?void 0:s.length)?u[es(I,R,v)+w]=O:u.push(O)}else{const O=u[v];O.pixels.push(M),C?O.mask&&(O.mask=V.combineBandMasks([O.mask,F])):O.mask=C?F:null}}}const m=(h=Object.values(l).find(f=>f.attributeTable))==null?void 0:h.attributeTable;return{extent:i,pixelBlocks:u,multidimensionalInfo:c,attributeTable:m,bandNames:c?void 0:r}}let le=class extends ae{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}async open(e){await this.init();const n=this.source,{pixelBlocks:i,attributeTable:s,statistics:a,histograms:r,name:o,nativeExtent:l,transform:c}=n,u=i[0],{width:m,height:h,pixelType:f}=u,g=n.extent??new L({xmin:-.5,ymin:.5,xmax:m-.5,ymax:h-.5,spatialReference:new H({wkid:3857})}),d=n.isPseudoSpatialReference??!n.extent,p={x:g.width/m,y:g.height/h},y={...n.keyProperties};s&&(y.DataType="Thematic");const x=new ve({width:m,height:h,pixelType:f,extent:g,nativeExtent:l,attributeTable:s,transform:c,pixelSize:p,spatialReference:g.spatialReference,bandCount:u.pixels.length,keyProperties:y,multidimensionalInfo:n.multidimensionalInfo,statistics:a,isPseudoSpatialReference:d,histograms:r});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(x),this.createRemoteDatasetStorageInfo(x,512,512),this._set("rasterInfo",x),this.updateTileInfo(),x.multidimensionalInfo?await this._buildMDimStats(n.pixelBlocks,x.multidimensionalInfo):await this._buildInMemoryRaster(u,{width:512,height:512},e),x.multidimensionalInfo||(this.source=null),this.datasetName=o}fetchRawTile(e,n,i,s={}){if(!this._pixelBlockTiles){const{rasterInfo:r}=this,[o,l]=r.storageInfo.tileInfo.size,{sliceId:c}=s,{pixelBlocks:u}=this.source,m={pixelBlock:c==null?u[0]:u[c],useBilinear:r.dataType!=="thematic",tileSize:{width:o,height:l},level:e,row:n,col:i},h=this.rasterJobHandler?this.rasterJobHandler.clipTile(m,s):Mi(m);return Promise.resolve(h)}const a=this._pixelBlockTiles.get(`${e}/${n}/${i}`);return Promise.resolve(a)}async _buildInMemoryRaster(e,n,i){var h,f;const{rasterInfo:s}=this,a=s.storageInfo.maximumPyramidLevel??0,r=s.dataType!=="thematic",o=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:n,maximumPyramidLevel:a,useBilinear:r},i):Promise.resolve(ki(e,n,a,r)),l=s.statistics!=null,c=s.histograms!=null,u=this.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(ui(e)),m=await lt([o,u]);if(!m[0].value&&m[1].value)throw new P("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=m[0].value,l||(s.statistics=(h=m[1].value)==null?void 0:h.statistics),c||(s.histograms=(f=m[1].value)==null?void 0:f.histograms)}async _buildMDimStats(e,n,i){for(let s=0;s<n.variables.length;s++){const a=n.variables[s];if(a.statistics)continue;const r=a.dimensions.map(u=>{var m,h;return new Le({variableName:a.name,dimensionName:u.name,values:[((m=u.values)==null?void 0:m[0])??((h=u.extent)==null?void 0:h[0])],isSlice:!0})}),o=mt(r,n),l=o==null?null:e[o];if(l==null)continue;const c=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},i):He(l);a.statistics=c.statistics,a.histograms||(a.histograms=c.histograms)}}};b([S({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),b([S()],le.prototype,"source",void 0),b([S()],le.prototype,"url",null),le=b([Q("esri.layers.support.rasterDatasets.InMemoryRaster")],le);const je=le;let fe=class extends ae{constructor(){super(...arguments),this.datasetFormat="CovJSON"}async open(e){await this.init();const{extent:n,pixelBlocks:i,multidimensionalInfo:s,attributeTable:a,bandNames:r}=await this._fetchData(e),{statistics:o,histograms:l}=He(i[0]),c=r==null?void 0:r.map(f=>({BandName:f})),u={DataType:a?"Thematic":s?"Scientific":"Generic",BandProperties:c},m=new je({source:{extent:n,pixelBlocks:i,attributeTable:a?We.fromJSON(a):null,multidimensionalInfo:s,statistics:o,histograms:l,keyProperties:u,isPseudoSpatialReference:!1}});await m.open(),this._inMemoryRaster=m;const h=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",h.slice(0,h.indexOf("."))),this._set("rasterInfo",m.rasterInfo)}fetchRawTile(e,n,i,s={}){return this._inMemoryRaster.fetchRawTile(e,n,i,s)}async _fetchData(e){var a,r,o,l;const n=this.source??(await this.request(this.url,{signal:e==null?void 0:e.signal})).data,i="imagery-tile-layer:open-coverage-json";if(((a=n.type)==null?void 0:a.toLowerCase())!=="coverage"||((o=(r=n.domain)==null?void 0:r.domainType)==null?void 0:o.toLowerCase())!=="grid")throw new P(i,"Only coverage with Grid domain type is supported");if(!n.ranges)throw new P(i,"Missing ranges in the grid coverage data");if(!((l=n.domain.referencing)!=null&&l.length))throw new P(i,"Missing domain referencing in the grid coverage data");const s=Object.values(n.ranges);for(let c=0;c<s.length;c++){const{axisNames:u,shape:m,type:h,values:f}=s[c];if(!(h.toLowerCase()==="ndarray"&&(f!=null&&f.length)&&(u!=null&&u.length)&&(m!=null&&m.length)))throw new P(i,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(yt(u[u.length-1])&&gt(u[u.length-2])))throw new P(i,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return ts(n)}};b([S({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),b([S({constructOnly:!0})],fe.prototype,"source",void 0),fe=b([Q("esri.layers.support.rasterDatasets.CovJSONRaster")],fe);const is=fe;function he(t,e){if(!t||!e)return[];let n=e;e.includes("/")?(n=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const i=[];if(e){const a=he(t,n);for(let r=0;r<a.length;r++)he(a[r],e).forEach(o=>i.push(o));return i}const s=t.getElementsByTagNameNS("*",n);if(!s||s.length===0)return[];for(let a=0;a<s.length;a++)i.push(s[a]||s.item(a));return i}function q(t,e){if(!t||!e)return null;let n=e;e.includes("/")?(n=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const i=he(t,n);return i.length>0?e?q(i[0],e):i[0]:null}function K(t,e=null){const n=e?q(t,e):t;let i;return n?(i=n.textContent||n.nodeValue,i?i.trim():null):null}function ss(t,e){const n=he(t,e),i=[];let s;for(let a=0;a<n.length;a++)s=n[a].textContent||n[a].nodeValue,s&&(s=s.trim(),s!==""&&i.push(s));return i}function xe(t,e){return ss(t,e).map(n=>Number(n))}function ne(t,e){const n=K(t,e);return Number(n)}function ke(t,e){var s;const n=(s=t==null?void 0:t.nodeName)==null?void 0:s.toLowerCase(),i=e.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===i}function ot(t,e){if(!t||!e)return null;const n=[];for(let i=0;i<t.length;i++)n.push(t[i]),n.push(e[i]);return n}function ns(t){const e=q(t,"GeodataXform"),n=Se(ne(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:n,transform:null};const i=ne(e,"PolynomialOrder")??1,s=xe(e,"CoeffX/Double"),a=xe(e,"CoeffY/Double"),r=xe(e,"InverseCoeffX/Double"),o=xe(e,"InverseCoeffY/Double"),l=ot(s,a),c=ot(r,o);return{spatialReference:n,transform:l&&c&&l.length&&c.length?new Ge({spatialReference:n,polynomialOrder:i,forwardCoefficients:l,inverseCoefficients:c}):null}}function rs(t){var h;const e=ne(t,"NoDataValue"),n=q(t,"Histograms/HistItem"),i=ne(n,"HistMin"),s=ne(n,"HistMax"),a=ne(n,"BucketCount"),r=(h=K(n,"HistCounts"))==null?void 0:h.split("|").map(f=>Number(f));let o,l,c,u;he(t,"Metadata/MDI").forEach(f=>{const g=Number(f.textContent??f.nodeValue);switch(f.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=g;break;case"STATISTICS_MAXIMUM":l=g;break;case"STATISTICS_MEAN":c=g;break;case"STATISTICS_STDDEV":u=g}});const m=ne(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:r!=null&&r.length&&i!=null&&s!=null?{min:i,max:s,size:a||r.length,counts:r}:null,sourceBandIndex:m,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:u}:null}}function Se(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new H({wkid:e});if(t=String(t).trim(),Qt(t))return new H({wkt2:t});const n=t.toUpperCase();if(n.startsWith("COMPD_CS")){if(!n.includes("VERTCS")||!n.includes("GEOGCS")&&!n.startsWith("PROJCS"))return null;const i=n.indexOf("VERTCS"),s=n.indexOf("PROJCS"),a=s>-1?s:n.indexOf("GEOGCS");if(a===-1)return null;const r=t.slice(a,t.lastIndexOf("]",i)+1).trim(),o=t.slice(i,t.lastIndexOf("]")).trim();e=Ce(r);const l=new H(e?{wkid:e}:{wkt:r}),c=Ce(o);return c&&(l.vcsWkid=c),l}return n.startsWith("GEOGCS")||n.startsWith("PROJCS")?(e=Ce(t),new H(e!==0?{wkid:e}:{wkt:t})):null}function Ce(t){var s;const e=t.replaceAll("]","[").replaceAll('"',"").split("[").map(a=>a.trim()).filter(a=>a!==""),n=e[e.length-1].split(","),i=(s=n[0])==null?void 0:s.toLowerCase();if((i==="epsg"||i==="esri")&&t.endsWith('"]]')){const a=Number(n[1]);if(!isNaN(a)&&a!==0)return a}return 0}function Ue(t){var i;if(((i=t==null?void 0:t.documentElement.tagName)==null?void 0:i.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(s=>{if(s.nodeType===1){if(ke(s,"SRS")){if(!e.spatialReference){const a=K(s);e.spatialReference=Se(a)}}else if(ke(s,"Metadata"))if(s.getAttribute("domain")==="xml:ESRI"){const{spatialReference:a,transform:r}=ns(s);e.transform=r,e.spatialReference||(e.spatialReference=a)}else he(s,"MDI").forEach(a=>e.metadata[a.getAttribute("key")]=K(a));else if(ke(s,"PAMRasterBand")){const a=rs(s);a.sourceBandIndex!=null&&e.rasterBands[a.sourceBandIndex]==null?e.rasterBands[a.sourceBandIndex]=a:e.rasterBands.push(a)}}});const n=e.rasterBands;if(n.length){const s=!!n[0].statistics;e.statistics=s?n.map(r=>r.statistics).filter(Pe):null;const a=!!n[0].histogram;e.histograms=a?n.map(r=>r.histogram).filter(Pe):null}return e}let be=class extends ae{async open(e){await this.init();const n=await this._fetchData(e);let{spatialReference:i,statistics:s,histograms:a,transform:r}=await this._fetchAuxiliaryData(e);const o=!i;o&&(i=new H({wkid:3857})),a!=null&&a.length&&s==null&&(s=ze(a));const{width:l,height:c}=n;let u=new L({xmin:-.5,ymin:.5-c,xmax:l-.5,ymax:.5,spatialReference:i});const m=r?r.forwardTransform(u):u;let h=!0;if(r){const g=r.forwardCoefficients;h=g&&g[1]===0&&g[2]===0,h&&(r=null,u=m)}const f=new je({source:{extent:m,nativeExtent:u,transform:r,pixelBlocks:[n],statistics:s,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:o},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,n,i,s={}){return this._inMemoryRaster.fetchRawTile(e,n,i,s)}async _fetchData(e){const{data:n}=await this.request(this.url,{responseType:"array-buffer",signal:e==null?void 0:e.signal}),i=hi(n).toUpperCase();if(i!=="JPG"&&i!=="PNG"&&i!=="GIF"&&i!=="BMP")throw new P("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const s=i.toLowerCase(),a=s==="gif"||s==="bmp"||!Rt("ios"),r=await this.decodePixelBlock(n,{format:s,useCanvas:a,hasNoZlibMask:!0});if(r==null)throw new P("image-aux-raster:open","the data cannot be decoded");return r}async _fetchAuxiliaryData(e){var m;const n=e==null?void 0:e.signal,{skipExtensions:i=[],skipMapInfo:s}=this.ioConfig,a=s||i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:n}),r=this.datasetFormat,o=r==="JPG"?"jgw":r==="PNG"?"pgw":r==="BMP"?"bpw":null,l=o&&i.includes(o)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:n}),c=await lt([a,l]);if(n!=null&&n.aborted)throw _t();const u=Ue((m=c[0].value)==null?void 0:m.data);if(!u.transform){const h=c[1].value?c[1].value.data.split(`
`).slice(0,6).map(f=>Number(f)):null;u.transform=(h==null?void 0:h.length)===6?new Ge({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return u}};b([S({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),be=b([Q("esri.layers.support.rasterDatasets.ImageAuxRaster")],be);const we=be;let me=class extends ae{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(t){var _,k;await this.init();const e=t==null?void 0:t.signal,n=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});n.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=n.data;if(this.sourceJSON=i,!i)throw new P("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new P("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,this.tileType==null&&(s.includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":i.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((_=i.name)==null?void 0:_.slice(i.name.indexOf("/")+1))??"";const a=await this._fetchRasterInfo({signal:e});if(a==null)throw new P("image-server-raster:open","cannot initialize image service");Et(a,i);const r=this.tileType==="Map"?as(i.tileInfo,i):te.fromJSON(i.tileInfo);Ft(r);const[o,l]=this._computeMinMaxLOD(a,r),{extent:c,pixelSize:u}=a,m=.5/a.width*u.x,h=Math.max(u.x,u.y),{lods:f}=r;(this.tileType!=="Map"&&i.maxScale!==0||Math.abs(u.x-u.y)>m||!f.some(v=>Math.abs(v.resolution-h)<m))&&(u.x=u.y=o.resolution,a.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),a.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const g=o.level-l.level,[d,p]=r.size,y=[],x=[];f.forEach((v,M)=>{v.level>=l.level&&v.level<=o.level&&y.push({x:v.resolution,y:v.resolution}),M<f.length-1&&x.push(Math.round(10*v.resolution/f[M+1].resolution)/10)}),y.sort((v,M)=>v.x-M.x);const w=this.computeBlockBoundary(c,d,p,r.origin,y,g),I=y.length>1?y.slice(1):null;let R;i.transposeInfo&&(R={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:((k=a.keyProperties)==null?void 0:k._yxs.PacketSize)??0});const T=x.length<=1||x.length>=3&&x.slice(0,-1).every(v=>v===x[0])?x[0]??2:Math.round(10/(l.resolution/o.resolution)**(-1/g))/10;if(a.storageInfo=new Re({blockWidth:r.size[0],blockHeight:r.size[1],pyramidBlockWidth:r.size[0],pyramidBlockHeight:r.size[1],pyramidResolutions:I,pyramidScalingFactor:T,compression:r.format,origin:r.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:r,transposeInfo:R,blockBoundary:w}),os(a),this._set("rasterInfo",a),i.capabilities.toLowerCase().includes("tilemap")){const v={tileInfo:a.storageInfo.tileInfo,parsedUrl:Xt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Ui({layer:v})}}async fetchRawTile(t,e,n,i={}){const{storageInfo:s,extent:a}=this.rasterInfo,{transposeInfo:r}=s,o=r!=null&&!!i.transposedVariableName;if(this._slices&&!o&&i.sliceId==null)return null;const l=o?0:s.maximumPyramidLevel-t+this._levelOffset,c=`${this.url}/tile/${l}/${e}/${n}`,u=this._slices?o?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:m}=await this.request(c,{query:u,responseType:"array-buffer",signal:i.signal});if(!m)return null;const h=o?r.tileSize:s.tileInfo.size,f=await this.decodePixelBlock(m,{width:h[0],height:h[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(f==null)return null;const g=s.blockBoundary[t];if(s.compression!=="jpg"||n>g.minCol&&n<g.maxCol&&e>g.minRow&&e<g.maxRow)return f;const{origin:d,blockWidth:p,blockHeight:y}=s,{x,y:w}=this.getPyramidPixelSize(t),I=Math.round((a.xmin-d.x)/x)%p,R=Math.round((a.xmax-d.x)/x)%p||p,T=Math.round((d.y-a.ymax)/w)%y,_=Math.round((d.y-a.ymin)/w)%y||y,k=n===g.minCol?I:0,v=e===g.minRow?T:0,M=n===g.maxCol?R:p,F=e===g.maxRow?_:y;return Ci(f,{x:k,y:v},{width:M-k,height:F-v}),f}getSliceIndex(t){if(!this._slices||t==null||t.length===0)return null;const e=t;for(let n=0;n<this._slices.length;n++){const i=this._slices[n].multidimensionalDefinition;if(i.length===e.length&&!i.some(s=>{const a=e.find(r=>s.variableName===r.variableName&&r.dimensionName===s.dimensionName);return a?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return n}return null}async fetchVariableStatisticsHistograms(t,e){var a,r,o;const n=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(l=>{var c;return(c=l.data)==null?void 0:c.statistics}),i=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(l=>{var c;return(c=l.data)==null?void 0:c.histograms}),s=await Promise.all([n,i]);return s[0]&&s[0].forEach(l=>{l.avg=l.mean,l.stddev=l.standardDeviation}),(o=(r=(a=s[1])==null?void 0:a[0])==null?void 0:r.counts)!=null&&o.length||(s[1]=null),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(t,e={}){if(!this._tilemapCache)return 0;let n=this.identifyPixelLocation(t,0,e.datumTransformation);if(n===null)return null;let i=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let a=s-i+this._levelOffset;const r=n.srcLocation;for(;a>=0;){try{if(await this._tilemapCache.fetchAvailability(a,n.row,n.col,e)==="available")break}catch{}if(a--,i++,n=this.identifyPixelLocation(r,i,e.datumTransformation),n===null)return null}return a===-1||n==null?null:i}async _fetchRasterInfo(t){const e=this.sourceJSON;if(this.tileType==="Map"){const r=e.fullExtent||e.extent,o=Math.ceil((r.xmax-r.xmin)/e.pixelSizeX-.1),l=Math.ceil((r.ymax-r.ymin)/e.pixelSizeY-.1),c=H.fromJSON(e.spatialReference||r.spatialReference),u=new A({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new ve({width:o,height:l,bandCount:3,extent:L.fromJSON(r),spatialReference:c,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:n}=t,i=Jt(this.url,this.sourceJSON,{signal:n,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:n}).then(r=>{var o;return(o=r.data)==null?void 0:o.slices}).catch(()=>null):null,a=await Promise.all([i,s]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_computeMinMaxLOD(t,e){const{pixelSize:n}=t,i=.5/t.width*n.x,{lods:s}=e,a=e.lodAt(Math.max.apply(null,s.map(h=>h.level))),r=e.lodAt(Math.min.apply(null,s.map(h=>h.level))),{tileType:o}=this;if(o==="Map")return this._levelOffset=s[0].level,[a,r];if(o==="Raster")return[s.find(h=>h.resolution===n.x)??a,r];const{minScale:l,maxScale:c}=this.sourceJSON;let u=a;c>0&&(u=s.find(h=>Math.abs(h.scale-c)<i),u||(u=s.filter(h=>h.scale>c).sort((h,f)=>h.scale>f.scale?1:-1)[0]??a));let m=r;return l>0&&(m=s.find(h=>Math.abs(h.scale-l)<i)??r,this._levelOffset=m.level-r.level),[u,m]}};function as(t,e){if(!t)return null;const{minScale:n,maxScale:i,minLOD:s,maxLOD:a}=e;if(s!=null&&a!=null)return te.fromJSON({...t,lods:t.lods.filter(({level:r})=>r!=null&&r>=s&&r<=a)});if(n!==0&&i!==0){const r=c=>Math.round(1e4*c)/1e4,o=n?r(n):1/0,l=i?r(i):-1/0;return te.fromJSON({...t,lods:t.lods.filter(c=>{const u=r(c.scale);return u<=o&&u>=l})})}return te.fromJSON(t)}function os(t){const{extent:e,spatialReference:n}=t;e.xmin>-1&&e.xmax>181&&(n!=null&&n.wkid)&&n.isGeographic&&(t.nativeExtent=t.extent,t.transform=new Ji,t.extent=t.transform.forwardTransform(e))}b([S({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),b([S()],me.prototype,"tileType",void 0),me=b([Q("esri.layers.support.rasterDatasets.ImageServerRaster")],me);const ls=me,X=new Map;X.set("Int8","s8"),X.set("UInt8","u8"),X.set("Int16","s16"),X.set("UInt16","u16"),X.set("Int32","s32"),X.set("UInt32","u32"),X.set("Float32","f32"),X.set("Float64","f32"),X.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ce=class extends ae{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=t?t.signal:null,n=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:i,files:s}=this._parseHeader(n.data),{skipMapInfo:a,skipExtensions:r=[]}=this.ioConfig;if(!r.includes("aux.xml")&&!a){const y=await this._fetchAuxiliaryData(t);y!=null&&(i.statistics=y.statistics??i.statistics,i.histograms=y.histograms,y.histograms&&i.statistics==null&&(i.statistics=ze(y.histograms)))}a&&this.updateImageSpaceRasterInfo(i),this._set("rasterInfo",i),this._files=s;const o=await this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=cs(o.data);const{blockWidth:l,blockHeight:c}=this.rasterInfo.storageInfo,u=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:m,height:h}=this.rasterInfo,f=[],g=this._getBandSegmentCount();let d=0,p=-1;for(;d<this._storageIndex.length;){p++;const y=Math.ceil(m/l/u**p)-1,x=Math.ceil(h/c/u**p)-1;d+=(y+1)*(x+1)*g*4,f.push({maxRow:x,maxCol:y,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(t,e,n,i={}){const{blockWidth:s,blockHeight:a,blockBoundary:r}=this.rasterInfo.storageInfo,o=r[t];if(!o||o.maxRow<e||o.maxCol<n||o.minRow>e||o.minCol>n)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:m,actualTileHeight:h}=this._getTileLocation(t,e,n);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const F=new Uint8Array(s*a);return new V({width:s,height:a,pixels:void 0,mask:F,validPixelCount:0})}const{bandIds:f}=this.ioConfig,g=this._getBandSegmentCount(),d=[];let p=0;for(p=0;p<g;p++)f&&!f.includes(p)||d.push(this.request(this._files.data,{range:{from:u[p].from,to:u[p].to},responseType:"array-buffer",signal:i.signal}));const y=await Promise.all(d),x=y.map(F=>F.data.byteLength).reduce((F,C)=>F+C),w=new Uint8Array(x),I=[];let R=0;for(p=0;p<g;p++)I.push(R),w.set(new Uint8Array(y[p].data),R),R+=y[p].data.byteLength;const T=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(w.buffer,{width:s,height:a,format:T,planes:(f==null?void 0:f.length)||l,offsets:I,pixelType:c});if(_==null)return null;let{noDataValue:k}=this.rasterInfo;if(k!=null&&T!=="lerc"&&!_.mask&&(k=k[0],k!=null)){const F=_.width*_.height,C=new Uint8Array(F);if(Math.abs(k)>1e24)for(p=0;p<F;p++)Math.abs((_.pixels[0][p]-k)/k)>1e-6&&(C[p]=1);else for(p=0;p<F;p++)_.pixels[0][p]!==k&&(C[p]=1);_.mask=C}let v=0,M=0;if(m!==s||h!==a){let F=_.mask;if(F)for(p=0;p<a;p++)if(M=p*s,p<h)for(v=m;v<s;v++)F[M+v]=0;else for(v=0;v<s;v++)F[M+v]=0;else for(F=new Uint8Array(s*a),_.mask=F,p=0;p<h;p++)for(M=p*s,v=0;v<m;v++)F[M+v]=1}return _}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,n){const{blockWidth:i,blockHeight:s,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:r,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,m,h=0,f=0;for(m=0;m<t;m++)f=a**m,c=Math.ceil(r/i/f),u=Math.ceil(o/s/f),h+=c*u;f=a**t,c=Math.ceil(r/i/f),u=Math.ceil(o/s/f),h+=e*c+n,h*=4*l;const g=this._storageIndex.subarray(h,h+4*l);let d=0,p=0;const y=[];for(let x=0;x<l;x++)d=g[4*x]*2**32+g[4*x+1],p=d+g[4*x+2]*2**32+g[4*x+3],y.push({from:d,to:p});return{ranges:y,actualTileWidth:n<c-1?i:Math.ceil(r/f)-i*(c-1),actualTileHeight:e<u-1?s:Math.ceil(o/f)-s*(u-1)}}_parseHeader(t){const e=q(t,"MRF_META/Raster");if(!e)throw new P("mrf:open","not a valid MRF format");const n=q(e,"Size"),i=parseInt(n.getAttribute("x"),10),s=parseInt(n.getAttribute("y"),10),a=parseInt(n.getAttribute("c"),10),r=(K(e,"Compression")||"none").toLowerCase();if(!ee.has(r))throw new P("mrf:open","currently does not support compression "+r);const o=K(e,"DataType")||"UInt8",l=X.get(o);if(l==null)throw new P("mrf:open","currently does not support pixel type "+o);const c=q(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),m=parseInt(c.getAttribute("y"),10),h=q(e,"DataValues");let f,g;if(h&&(g=h.getAttribute("NoData"),g!=null&&(f=g.trim().split(" ").map(F=>parseFloat(F)))),q(t,"MRF_META/CachedSource"))throw new P("mrf:open","currently does not support MRF referencing other data files");const d=q(t,"MRF_META/GeoTags"),p=q(d,"BoundingBox");let y,x=!1;if(p!=null){const F=parseFloat(p.getAttribute("minx")),C=parseFloat(p.getAttribute("miny")),E=parseFloat(p.getAttribute("maxx")),O=parseFloat(p.getAttribute("maxy")),$=K(d,"Projection")||"";let D=H.WGS84;if($!=="LOCAL_CS[]")if($.toLowerCase().startsWith("epsg:")){const N=Number($.slice(5));isNaN(N)||N===0||(D=new H({wkid:N}))}else D=Se($)??H.WGS84;else x=!0,D=new H({wkid:3857});y=new L(F,C,E,O),y.spatialReference=D}else x=!0,y=new L({xmin:-.5,ymin:.5-s,xmax:i-.5,ymax:.5,spatialReference:new H({wkid:3857})});const w=q(t,"MRF_META/Rsets"),I=parseInt((w==null?void 0:w.getAttribute("scale"))||"2",10),R=y.spatialReference,T=new Re({origin:new A({x:y.xmin,y:y.ymax,spatialReference:R}),blockWidth:u,blockHeight:m,pyramidBlockWidth:u,pyramidBlockHeight:m,compression:r,pyramidScalingFactor:I}),_=new A({x:y.width/i,y:y.height/s,spatialReference:R}),k=new ve({width:i,height:s,extent:y,isPseudoSpatialReference:x,spatialReference:R,bandCount:a,pixelType:l,pixelSize:_,noDataValue:f,storageInfo:T}),v=K(t,"datafile"),M=K(t,"IndexFile");return{rasterInfo:k,files:{mrf:this.url,index:M||this.url.replace(".mrf",".idx"),data:v||this.url.replace(".mrf",ee.get(r).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return Ue(e)}catch{return null}}};function cs(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,n,i,s,a,r;if(fi){for(n=new Uint8Array(t),s=new ArrayBuffer(t.byteLength),i=new Uint8Array(s),a=0;a<t.byteLength/4;a++)for(r=0;r<4;r++)i[4*a+r]=n[4*a+3-r];e=new Uint32Array(s)}else e=new Uint32Array(t);return e}b([S()],ce.prototype,"_files",void 0),b([S()],ce.prototype,"_storageIndex",void 0),b([S({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),ce=b([Q("esri.layers.support.rasterDatasets.MRFRaster")],ce);const us=ce;function hs(t){const e=t.fields,n=t.records,i=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:i,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),a=s.map(c=>c.name),r=[];let o=0,l=0;return n.forEach(c=>{const u={};for(u[i]=o++,l=1;l<a.length;l++)u[a[l]]=c[l-1];r.push({attributes:u})}),{displayFieldName:"",fields:s,features:r}}let fs=class{static get supportedVersions(){return[5]}static parse(e){const n=new DataView(e),i=3&n.getUint8(0);if(i!==3)return{header:{version:i},recordSet:null};const s=n.getUint32(4,!0),a=n.getUint16(8,!0),r=n.getUint16(10,!0),o={version:i,recordCount:s,headerByteCount:a,recordByteCount:r};let l=32;const c=[],u=[];let m;if(i===3){for(;n.getUint8(l)!==13;)m=String.fromCharCode(n.getUint8(l+11)).trim(),c.push({name:et(new Uint8Array(e,l,11)),type:m,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(m)],length:n.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;u.length<s&&e.byteLength-l>r;){const h=[];n.getUint8(l)===32?(l+=1,c.forEach(f=>{if(f.type==="C")h.push(et(new Uint8Array(e,l,f.length)).trim());else if(f.type==="N")h.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,f.length)).trim(),10));else if(f.type==="F")h.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,f.length)).trim()));else if(f.type==="D"){const g=String.fromCharCode.apply(null,new Uint8Array(e,l,f.length)).trim();h.push(new Date(parseInt(g.substring(0,4),10),parseInt(g.substring(4,6),10)-1,parseInt(g.substring(6,8),10)))}l+=f.length}),u.push(h)):l+=r}}return{header:o,fields:c,records:u,recordSet:hs({fields:c,records:u})}}};const Be=(t,e)=>{var n;return(n=t.get(e))==null?void 0:n.values},pe=(t,e)=>{var n,i;return(i=(n=t.get(e))==null?void 0:n.values)==null?void 0:i[0]};let ie=class extends ae{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(t){var d,p,y,x;await this.init();const e=t?t.signal:null,{data:n}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!n)throw new P("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:i,firstIFDPos:s,isBigTiff:a}=mi(n),r=[];await this._readIFDs(r,n,i,s,0,a?8:4,e);const{imageInfo:o,rasterInfo:l}=ms(r),c=pi(r),u=di(r);if(this._headerInfo={littleEndian:i,isBigTiff:a,ifds:r,pyramidIFDs:c,maskIFDs:u,...o},this._set("rasterInfo",l),!o.isSupported)throw new P("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new P("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");l.isPseudoSpatialReference&&re.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const m=(p=(d=r[0].get("PREDICTOR"))==null?void 0:d.values)==null?void 0:p[0];if(((x=(y=r[0].get("SAMPLEFORMAT"))==null?void 0:y.values)==null?void 0:x[0])===3&&m===2)throw new P("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:f,skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")&&!f){const w=await this._fetchAuxiliaryMetaData(t);w!=null&&ps(w,l)}g.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||f||(l.attributeTable=await this._fetchAuxiliaryTable(t),l.attributeTable!=null&&(l.keyProperties.DataType="thematic")),f&&this.updateImageSpaceRasterInfo(l),this.updateTileInfo()}async fetchRawTile(t,e,n,i={}){var a;if(!((a=this._headerInfo)!=null&&a.isSupported)||this.isBlockOutside(t,e,n))return null;const s=await this._fetchRawTiffTile(t,e,n,!1,i);if(s!=null&&this._headerInfo.hasMaskBand){const r=await this._fetchRawTiffTile(t,e,n,!0,i);r!=null&&r.pixels[0]instanceof Uint8Array&&(s.mask=r.pixels[0])}return s}async _readIFDs(t,e,n,i,s,a=4,r){if(!i)return null;(i>=e.byteLength||i<0)&&(e=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:r})).data,s=i+s,i=0);const o=await this._readIFD(e,n,i,s,de.tiffTags,a,r);if(t.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(t,e,n,o.nextIFD-s,s,a,r)}async _readIFD(t,e,n,i,s=de.tiffTags,a=4,r){var l,c;if(!t)return null;const o=yi(t,e,n,i,s,a);if(o.success){const u=[];if((l=o.ifd)==null||l.forEach(m=>{m.values||u.push(m)}),u.length>0){const m=u.map(f=>f.offlineOffsetSize).filter(Pe),h=Math.min.apply(null,m.map(f=>f[0]));if(Math.min.apply(null,m.map(f=>f[0]+f[1]))-h<=this._bufferSize){const{data:f}=await this.request(this.url,{range:{from:h,to:h+this._bufferSize},responseType:"array-buffer",signal:r});t=f,i=h,u.forEach(g=>gi(t,e,g,i))}}if((c=o.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const m=o.ifd.get("GEOKEYDIRECTORY"),h=m==null?void 0:m.values;if(h&&h.length>4){const f=h[0]+"."+h[1]+"."+h[2],g=await this._readIFD(t,e,m.valueOffset+6-i,i,de.geoKeys,2,r);m.data=g.ifd,m.data&&m.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[f]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==t.byteLength)return(t=(await this.request(this.url,{range:{from:i,to:i+o.requiredBufferSize+4},responseType:"array-buffer",signal:r})).data).byteLength<o.requiredBufferSize?null:this._readIFD(t,e,0,i,de.tiffTags,4,r)}async _fetchRawTiffTile(t,e,n,i,s={}){const a=this._getTileLocation(t,e,n,i);if(!a)return null;const{ranges:r,actualTileWidth:o,actualTileHeight:l,ifd:c}=a,u=r.map(T=>this.request(this.url,{range:T,responseType:"array-buffer",signal:s.signal})),m=await Promise.all(u),h=m.map(T=>T.data.byteLength).reduce((T,_)=>T+_),f=m.length===1?m[0].data:new ArrayBuffer(h),g=[0],d=[0];if(m.length>1){const T=new Uint8Array(f);for(let _=0,k=0;_<m.length;_++){const v=m[_].data;T.set(new Uint8Array(v),k),g[_]=k,k+=v.byteLength,d[_]=v.byteLength}}const{blockWidth:p,blockHeight:y}=this.getBlockWidthHeight(t),x=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:g,sizes:d},width:p,height:y,planes:null,pixelType:null});if(x==null)return null;let w,I,R;if(o!==p||l!==y){let T=x.mask;if(T)for(w=0;w<y;w++)if(R=w*p,w<l)for(I=o;I<p;I++)T[R+I]=0;else for(I=0;I<p;I++)T[R+I]=0;else for(T=new Uint8Array(p*y),x.mask=T,w=0;w<l;w++)for(R=w*p,I=0;I<o;I++)T[R+I]=1}return x}_getTileLocation(t,e,n,i=!1){const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,r=t===0?0:t-(s-1),{_headerInfo:o}=this;if(!o)return null;const l=i?o.maskIFDs[r]:r===0?o==null?void 0:o.ifds[0]:o==null?void 0:o.pyramidIFDs[r-1];if(!l)return null;const c=xi(l,o),u=Be(l,"TILEOFFSETS");if(u===void 0)return null;const m=Be(l,"TILEBYTECOUNTS"),{minRow:h,minCol:f,maxRow:g,maxCol:d}=a[r];if(e>g||n>d||e<h||n<f)return null;const p=pe(l,"IMAGEWIDTH"),y=pe(l,"IMAGELENGTH"),x=pe(l,"TILEWIDTH"),w=pe(l,"TILELENGTH"),I=[];if(c){const{bandCount:R}=this.rasterInfo;for(let T=0;T<R;T++){const _=T*(g+1)*(d+1)+e*(d+1)+n;I[T]={from:u[_],to:u[_]+m[_]-1}}}else{const R=e*(d+1)+n;I.push({from:u[R],to:u[R]+m[R]-1})}for(let R=0;R<I.length;R++)if(I[R].from==null||!I[R].to||I[R].to<0)return null;return{ranges:I,ifd:l,actualTileWidth:n===d&&p%x||x,actualTileHeight:e===g&&y%w||w}}async _fetchAuxiliaryMetaData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return Ue(e)}catch{return null}}async _fetchAuxiliaryTable(t){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:t==null?void 0:t.signal}),n=fs.parse(e);return n!=null&&n.recordSet?We.fromJSON(n.recordSet):null}catch{return null}}};function ms(t){var E,O;const e=wi(t),{width:n,height:i,tileWidth:s,tileHeight:a,planes:r,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:m,pyramidBlockHeight:h,pyramidResolutions:f,tileBoundary:g,affine:d,metadata:p}=e,y=((E=e.extent.spatialReference)==null?void 0:E.wkt)||((O=e.extent.spatialReference)==null?void 0:O.wkid);let x=Se(y),w=!!e.isPseudoGeographic;x==null&&(w=!0,x=new H({wkid:3857}));const I=new L({...e.extent,spatialReference:x}),R=new A(I?{x:I.xmin,y:I.ymax,spatialReference:x}:{x:0,y:0}),T=new Re({blockWidth:s,blockHeight:a,pyramidBlockWidth:m,pyramidBlockHeight:h,compression:l,origin:R,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidResolutions:f,blockBoundary:g}),_=new A({x:(I.xmax-I.xmin)/n,y:(I.ymax-I.ymin)/i,spatialReference:x}),k=p?{BandProperties:p.bandProperties,DataType:p.dataType}:{};let v=null;const M=pe(t[0],"PHOTOMETRICINTERPRETATION"),F=Be(t[0],"COLORMAP");if(M<=3&&(F==null?void 0:F.length)>3&&F.length%3==0){v=[];const $=F.length/3;for(let D=0;D<$;D++)v.push([D,F[D]>>>8,F[D+$]>>>8,F[D+2*$]>>>8])}const C=new ve({width:n,height:i,bandCount:r,pixelType:o,pixelSize:_,storageInfo:T,spatialReference:x,isPseudoSpatialReference:w,keyProperties:k,extent:I,colormap:v,statistics:p?p.statistics:null});if(d!=null&&d.length&&(C.nativeExtent=new L({xmin:-.5,ymin:.5-i,xmax:n-.5,ymax:.5,spatialReference:x}),C.transform=new Ge({polynomialOrder:1,forwardCoefficients:[d[2]+d[0]/2,d[5]-d[3]/2,d[0],d[3],-d[1],-d[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new A({x:(I.xmax-I.xmin)/n,y:(I.ymax-I.ymin)/i,spatialReference:x}),T.origin.x=-.5,T.origin.y=.5),f){const{x:$,y:D}=C.pixelSize;f.forEach(N=>{N.x*=$,N.y*=D})}return{imageInfo:e,rasterInfo:C}}function ps(t,e){if(e.statistics=t.statistics??e.statistics,e.histograms=t.histograms,t.histograms&&e.statistics==null&&(e.statistics=ze(t.histograms)),t.transform&&e.transform==null){e.transform=t.transform,e.nativeExtent=e.extent;const n=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new A({x:(n.xmax-n.xmin)/e.width,y:(n.ymax-n.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=n}e.isPseudoSpatialReference&&t.spatialReference&&(e.spatialReference=t.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}b([S()],ie.prototype,"_files",void 0),b([S()],ie.prototype,"_headerInfo",void 0),b([S()],ie.prototype,"_bufferSize",void 0),b([S({type:String,json:{write:!0}})],ie.prototype,"datasetFormat",void 0),ie=b([Q("esri.layers.support.rasterDatasets.TIFFRaster")],ie);const ds=ie,z=new Map;z.set("MRF",{desc:"Meta Raster Format",constructor:us}),z.set("TIFF",{desc:"GeoTIFF",constructor:ds}),z.set("RasterTileServer",{desc:"Raster Tile Server",constructor:ls}),z.set("JPG",{desc:"JPG Raster Format",constructor:we}),z.set("PNG",{desc:"PNG Raster Format",constructor:we}),z.set("GIF",{desc:"GIF Raster Format",constructor:we}),z.set("BMP",{desc:"BMP Raster Format",constructor:we}),z.set("CovJSON",{desc:"COVJSON Raster Format",constructor:is}),z.set("MEMORY",{desc:"In Memory Raster Format",constructor:je});let Oe=class{static get supportedFormats(){const e=new Set;return z.forEach((n,i)=>e.add(i)),e}static async open(e){var m;const{url:n,ioConfig:i,source:s,sourceJSON:a}=e;let r=e.datasetFormat??(i==null?void 0:i.datasetFormat);r==null&&(n.includes(".")?r=n.slice(n.lastIndexOf(".")+1).toUpperCase():((m=s==null?void 0:s.type)==null?void 0:m.toLowerCase())==="coverage"?r="CovJSON":s!=null&&s.extent&&s.pixelblocks&&(r="MEMORY")),r==="OVR"||r==="TIF"?r="TIFF":r==="JPG"||r==="JPEG"||r==="JFIF"?r="JPG":r==="COVJSON"&&(r="CovJSON"),n.toLowerCase().includes("/imageserver")&&!n.toLowerCase().includes("/wcsserver")&&(r="RasterTileServer");const o={url:n,source:s,sourceJSON:a,datasetFormat:r,ioConfig:i??{bandIds:null,sampling:null}};if(Object.keys(o).forEach(h=>{o[h]==null&&delete o[h]}),r){if(!this.supportedFormats.has(r))throw new P("rasterfactory:open","not a supported format "+r);if(r==="CRF")throw new P("rasterfactory:open",`cannot open raster: ${n}`);const h=new(z.get(r)).constructor(o);return await h.open({signal:e.signal}),h}const l=Array.from(z.keys()).filter(h=>h!=="CovJSON"&&h!=="Memory");let c=0;const u=()=>{if(r=l[c++],!r||r==="CRF")return null;const h=new(z.get(r)).constructor(o);return h.open({signal:e.signal}).then(()=>h).catch(()=>u())};return u()}static register(e,n,i){z.has(e.toUpperCase())||z.set(e.toUpperCase(),{desc:n,constructor:i})}};function ys(t,e){if(t.spatialReference.equals(e))return t;const n=Ke(t.spatialReference),i=Ke(e);if(n===i)return t;const s=n/i;return{x:t.x*s,y:t.y*s}}async function Ee(t,e,n){if(n.type==="extent")return xs(t,e,n);const{width:i,height:s}=t,a=new Uint8Array(i*s),{contains:r,intersects:o}=await Je(async()=>{const{contains:l,intersects:c}=await import("./geometryEngine-BT1Ysmbs.js");return{contains:l,intersects:c}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]),import.meta.url);return o(e,n)?n.type==="polyline"?ws(t,e,n):r(n,e)?t:gs(t,e,n):new V({pixelType:t.pixelType,width:i,height:s,mask:a,maskIsAlpha:!1,pixels:[...t.pixels]})}function gs(t,e,n){if(!t)return t;const{width:i,height:s}=t,a=e.width/i,r=e.height/s,{xmin:o,ymax:l}=e;let c;if(n.type==="extent"){const p=(n.xmin-o)/a,y=(n.xmax-o)/a,x=(l-n.ymax)/r,w=(l-n.ymin)/r;c=[[[p,x],[p,w],[y,w],[y,x],[p,x]]]}else c=n.rings.map(p=>p.map(([y,x])=>[(y-o)/a,(l-x)/r]));const u=document.createElement("canvas");u.width=i,u.height=s;const m=u.getContext("2d");m.fillStyle="#f00",m.beginPath(),c.forEach(p=>{m.moveTo(p[0][0],p[0][1]);for(let y=0;y<p.length;y++)m.lineTo(p[y][0],p[y][1]);m.closePath()}),m.fill();const h=m.getImageData(0,0,i,s).data,f=t.mask,g=i*s,d=new Uint8Array(g);for(let p=0;p<g;p++)f&&!f[p]||(d[p]=h[4*p+3]>127?255:0);return new V({pixelType:t.pixelType,width:i,height:s,mask:d,maskIsAlpha:!1,pixels:[...t.pixels]})}function xs(t,e,n){const{width:i,height:s}=t,a=new Uint8Array(i*s),r=e.width/i,o=e.height/s;if(n.width/r<.5||n.height/o<.5)return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});const{xmin:l,xmax:c,ymin:u,ymax:m}=e,{xmin:h,xmax:f,ymin:g,ymax:d}=n,p=Math.max(l,h),y=Math.min(c,f),x=Math.max(u,g),w=Math.min(m,d),I=.5*r,R=.5*o;if(y-p<I||w-x<R||y<l+I||p>c-I||x>m-R||w<u+R)return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});const T=Math.max(0,(p-l)/r),_=Math.min(i,Math.max(0,(y-l)/r)),k=Math.max(0,(m-w)/o),v=Math.min(s,Math.max(0,(m-x)/o)),M=Math.round(T),F=Math.round(_)-1,C=Math.round(k),E=Math.round(v)-1;if(M===F&&T%1>.5&&_%1<.5||C===E&&k%1>.5&&v%1<.5)return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});if(M===0&&C===0&&F===i&&E===s)return t;const O=t.mask;for(let $=C;$<=E;$++)for(let D=M;D<=F;D++){const N=$*i+D;a[N]=O?O[N]:255}return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]})}function ws(t,e,n){const{width:i,height:s}=t,a=new Uint8Array(i*s),r=e.width/i,o=e.height/s,{xmin:l,ymax:c}=e,{paths:u}=n,m=t.mask;for(let h=0;h<u.length;h++){const f=u[h];for(let g=0;g<f.length-1;g++){const[d,p]=f[g],[y,x]=f[g+1];let w=Math.floor((c-p)/o),I=Math.floor((c-x)/o);if(I<w){const T=w;w=I,I=T}w=Math.max(0,w),I=Math.min(s-1,I);const R=(y-d)/(x-p);for(let T=w;T<=I;T++){const _=T===w?Math.max(p,x):(s+1-T)*o,k=T===I?Math.min(p,x):_-o;let v=Math.floor(x===p?(d-l)/r:(R*(_-p)+d-l)/r),M=Math.floor(x===p?(y-l)/r:(R*(k-p)+d-l)/r);if(M<v){const C=v;v=M,M=C}const F=T*i;v=Math.max(0,v),M=Math.min(i-1,M);for(let C=F+v;C<=F+M;C++)a[C]=m?m[C]:255}}}return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]})}function Is(t,e,n,i=!0){const{spatialReference:s}=t,{x:a,y:r}=ys(n,s);let o,l,c;const u=e.type==="extent"?e:e.extent;let{xmin:m,xmax:h,ymax:f,ymin:g}=u;const{xmin:d,ymax:p}=t.extent;return i?(m=d+(m>d?a*Math.round((m-d)/a):0),f=p-(f<p?r*Math.round((p-f)/r):0),h=d+(h>d?a*Math.round((h-d)/a):0),g=p-(g<p?r*Math.round((p-g)/r):0),o=new L({xmin:m,ymax:f,xmax:h,ymin:g,spatialReference:s}),l=Math.round(o.width/a),c=Math.round(o.height/r)):(l=Math.floor((h-m)/a+.8),c=Math.floor((f-g)/r+.8),m=d+(m>d?a*Math.floor((m-d)/a+.1):0),f=p-(f<p?r*Math.floor((p-f)/r+.1):0),h=m+l*a,g=f-c*r,o=new L({xmin:m,ymax:f,xmax:h,ymin:g,spatialReference:s})),{extent:o,width:l,height:c}}const bs=40;let se=class extends ae{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}async open(t){var c,u,m,h;await this.init();const{rasterFunction:e}=this;(u=(c=this.primaryRasters)==null?void 0:c.rasters)!=null&&u.length?e.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=e.getPrimaryRasters(),this.rasterJobHandler&&((m=this.primaryRasters.rasters)==null||m.forEach(f=>f.rasterJobHandler=this.rasterJobHandler)));const{rasters:n,rasterIds:i}=this.primaryRasters,s=n.map(f=>f.rasterInfo?void 0:f.open(t));await Promise.all(s);const a=n.map(({rasterInfo:f})=>f),r=e.bind({rasterInfos:a,rasterIds:i});if(e.rawSourceRasterInfos=a,!r.success||a.length===0)throw new P("raster-function:open",`cannot bind the function: ${r.error??""}`);const o=e.functionName==="Table"?e:(h=e.functionArguments)==null?void 0:h.raster;(o==null?void 0:o.functionName)==="Table"&&(e.rasterInfo.attributeTable=We.fromJSON(o.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const l=a[0];this.hasUniqueSourceStorageInfo=a.length===1||a.slice(1).every(f=>Rs(f,l)),this.set("sourceJSON",n[0].sourceJSON),this.set("rasterInfo",e.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){var t;return(t=this.rasterJobHandler)==null?void 0:t.updateRasterFunction(this.rasterFunction)}async fetchPixels(t,e,n,i={}){var w,I;const{rasters:s,rasterIds:a}=this.primaryRasters;let r=!1;const{interpolation:o}=i,l=(w=this.rasterFunction.flatWebGLFunctionChain)==null?void 0:w.hasFocalFunction;!i.requestRawData&&l&&(r=s.length===1&&!i.skipRasterFunction,i={...i,interpolation:"bilinear",requestRawData:r});const c=s.map(R=>R.fetchPixels(t,e,n,i)),u=await Promise.all(c),m=u.map(R=>R.pixelBlock),h=r||i.requestRawData?u.map(R=>R.srcTilePixelSize):null;if(i.skipRasterFunction||m.every(R=>R==null))return u[0];const f=((I=u.find(R=>R.pixelBlock!=null))==null?void 0:I.extent)??t;let g=this.rasterJobHandler?await this.rasterJobHandler.process({extent:f,primaryPixelBlocks:m,primaryPixelSizes:h,primaryRasterIds:a}):this.rasterFunction.process({extent:f,primaryPixelBlocks:m,primaryPixelSizes:h,primaryRasterIds:a});const{transformGrid:d}=u[0];if(!r||g==null||d==null){const R=i.noClip?null:this.getClippingGeometry(f.spatialReference);return i.noClip||i.requestRawData||g==null||!R||(g=await Ee(g,f,R)),{...u[0],pixelBlock:g}}const p={rows:d.spacing[0],cols:d.spacing[1]};let y;this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[g],srcMosaicSize:{width:g.width,height:g.height},destDimension:{width:e,height:n},coefs:d.coefficients,sampleSpacing:p,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:o,alignmentInfo:void 0,blockWidths:null},i)).pixelBlock:y=pt(g,{width:e,height:n},d.coefficients,p,o);const x=i.noClip?null:this.getClippingGeometry(t.spatialReference);return i.noClip||i.requestRawData||y==null||x==null||(y=await Ee(y,t,x)),{extent:t,srcExtent:u[0].srcExtent,pixelBlock:y}}getClippingGeometry(t){const e=this._clippingGeometry.get("0");if(!t||!e)return e;const n=vs(t);let i=this._clippingGeometry.get(n);return i!=null||(i=t.equals(e.spatialReference)?e:Ne(e,t),this._clippingGeometry.set(n,i)),i}async _updateClipGeometry(){const t=this.rasterFunction.getClippingGeometries()[0];let e=t==null?void 0:t.clippingGeometry;if(e&&t.clippingType==="inside"){const{extent:n}=this.rasterInfo,{difference:i,densify:s}=await Je(async()=>{const{difference:r,densify:o}=await import("./geometryEngine-BT1Ysmbs.js");return{difference:r,densify:o}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]),import.meta.url);let a=s(ai.fromExtent(n),2*(n.width+n.height)/bs);a=Ne(a,e.spatialReference),e=i(a,e)}this._clippingGeometry.clear(),e&&this._clippingGeometry.set("0",e)}};b([S({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),b([S()],se.prototype,"tileType",void 0),b([S()],se.prototype,"rasterFunction",void 0),b([S()],se.prototype,"primaryRasters",void 0),se=b([Q("esri.layers.support.rasterDatasets.FunctionRaster")],se);const xt=se;function Rs(t,e){const{storageInfo:n,pixelSize:i,spatialReference:s,extent:a}=t,{storageInfo:r,pixelSize:o,spatialReference:l,extent:c}=e;return i.x===o.x&&i.y===o.y&&s.equals(l)&&a.equals(c)&&n.blockHeight===r.blockHeight&&n.blockWidth===r.blockWidth&&n.maximumPyramidLevel===r.maximumPyramidLevel}function vs(t){return String(t.wkid??t.wkt??t.wkt2)}const Ss=t=>{let e=class extends t{constructor(...i){var s,a;super(...i),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((a=(s=i[0])==null?void 0:s.raster)==null?void 0:a.datasetFormat)==="Function"}get fullExtent(){var i;return(i=this.serviceRasterInfo)==null?void 0:i.extent}set multidimensionalDefinition(i){this._set("multidimensionalDefinition",i),this.updateRenderer()}set rasterFunction(i){var s;((s=i==null?void 0:i.functionName)==null?void 0:s.toLowerCase())==="none"&&(i=void 0),this._set("rasterFunction",i),this.updateRasterFunction()}get rasterInfo(){return Mt(re.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(i){this._set("url",ut(i,re.getLogger(this)))}set renderer(i){i==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",i),this.updateRenderer())}readRenderer(i,s,a){var o,l;const r=(l=(o=s==null?void 0:s.layerDefinition)==null?void 0:o.drawingInfo)==null?void 0:l.renderer;return zt(r,a)||void 0}async convertVectorFieldData(i,s){const{serviceRasterInfo:a}=this;if(i==null||!a)return null;const r=this._rasterJobHandler.instance,o=a.dataType;return r?r.convertVectorFieldData({pixelBlock:i,dataType:o},s):Oi(i,o)}async computeStatisticsHistograms(i,s){await this.load(s),i=Ae(Wt,i).clone();const{serviceRasterInfo:a}=this;if(a==null)throw new P("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");const{geometry:r}=i;if(r==null)throw new P("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let o=r;const{spatialReference:l}=a;r.spatialReference.equals(l)||(await De(),o=r.type==="extent"?Ie(r,l):Ne(r,l));const c=i.pixelSize??new A({x:a.pixelSize.x,y:a.pixelSize.y,spatialReference:l}),{extent:u,width:m,height:h}=Is(a,o,c),f=await this.fetchPixels(u,m,h,{...s,interpolation:"nearest"});if(f.pixelBlock==null)throw new P("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const g=await Ee(f.pixelBlock,u,o),d=this._rasterJobHandler.instance;return d?d.computeStatisticsHistograms({pixelBlock:g},s):He(g)}async createFlowMesh(i,s){const a=this._rasterJobHandler.instance;return a?a.createFlowMesh(i,s):Pi(i.meshType,i.simulationSettings,i.flowData,s.signal!=null?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(i){var o,l;const{multidimensionalInfo:s}=this.serviceRasterInfo??{};if(s==null)return i;let a=i.multidimensionalDefinition||this.multidimensionalDefinition;a!=null&&a.length||(a=Qe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const r=i.timeExtent||this.timeExtent;if(a!=null&&r!=null&&(r.start!=null||r.end!=null)){a=a.map(y=>y.clone());const c=(l=(o=s.variables.find(({name:y})=>y===a[0].variableName))==null?void 0:o.dimensions)==null?void 0:l.find(({name:y})=>y==="StdTime"),u=a.find(({dimensionName:y})=>y==="StdTime");if(!c||!u)return{...i,multidimensionalDefinition:null};const{start:m,end:h}=r,f=m==null?null:m.getTime(),g=h==null?null:h.getTime(),d=f??g,p=g??f;if(c.values!=null){const y=c.values.filter(x=>{if(Array.isArray(x)){if(d===p)return x[0]<=d&&x[1]>=d;const w=x[0]<=d&&x[1]>d||x[0]<p&&x[1]>=p,I=x[0]>=d&&x[1]<=p||x[0]<d&&x[1]>p;return w||I}return d===p?x===d:x>=d&&x<=p});if(y.length){const x=y.sort((w,I)=>{const R=Array.isArray(w)?w[0]:w,T=Array.isArray(w)?w[1]:w,_=Array.isArray(I)?I[0]:I,k=Array.isArray(I)?I[1]:I;return d===p?R-_:Math.abs(T-p)-Math.abs(k-p)})[0];u.values=[x]}else a=null}else if(c.hasRegularIntervals&&c.extent){const[y,x]=c.extent;d>x||p<y?a=null:u.values=d===p?[d]:[Math.max(y,d),Math.min(x,p)]}}return a!=null&&si(a,this.multidimensionalSubset)?{...i,multidimensionalDefinition:null}:{...i,multidimensionalDefinition:a}}async updateRasterFunction(){var u,m,h;if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const f=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&f&&this._set("rasterFunction",$e.fromJSON(f)),void(this._cachedRasterFunctionJson=(u=this.rasterFunction)==null?void 0:u.toJSON())}let i,s=this.raster,a=!1;s.datasetFormat==="Function"?(i=s.primaryRasters.rasters,s=i[0],a=!0):i=[s];const{rasterFunction:r}=this;if(r){const f={raster:s};i.length>1&&i.forEach(p=>f[p.url]=p);const g=dt(((m=r.functionDefinition)==null?void 0:m.toJSON())??r.toJSON(),f),d=new xt({rasterFunction:g});d.rasterJobHandler=this._rasterJobHandler.instance,await d.open(),this._cachedRasterFunctionJson=(h=this.rasterFunction)==null?void 0:h.toJSON(),this.raster=d}else this.raster=s,this._cachedRasterFunctionJson=null,await s.when();if(this._cachedRendererJson=null,!a&&!r)return;const{bandIds:o}=this,{bandCount:l}=this.raster.rasterInfo,c=o!=null&&o.length?o.some(f=>f>=l):l>=3;o&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:i,symbolizer:s}=this;if(!i||!s||!this.renderer)return;const{rasterInfo:a}=this.raster,r=Ze(a,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),o=r==null?void 0:r.name,l=Ve({...this.renderer.toJSON(),variableName:o});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;const c=this._rasterJobHandler.instance;c&&(s.rasterInfo=Ye(a,o),s.rendererJSON=l,s.bind(),await c.updateSymbolizer(s),this._cachedRendererJson=l)}async applyRenderer(i,s){const a=i==null?void 0:i.pixelBlock;if(!(a!=null&&a.pixels&&a.pixels.length>0))return null;let r;await this.updateRenderer();const o=this._rasterJobHandler.instance,l=this.bandIds??[];return r=o?await o.symbolize({...i,simpleStretchParams:s,bandIds:l}):this.symbolizer.symbolize({...i,simpleStretchParams:s,bandIds:l}),r}getTileUrl(i,s,a){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${i}/${s}/${a}`:""}getCompatibleTileInfo(i,s,a=!1){if(!this.loaded||s==null)return null;if(a&&i.equals(this.spatialReference))return this.tileInfo;const r=Zt(i);return te.create({size:256,spatialReference:i,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(i){var s;return this.loaded?((s=this._compatibleFullExtent)!=null&&s.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}async fetchTile(i,s,a,r={}){var l;if(n(this),r.requestAsImageElement){const c=this.getTileUrl(i,s,a);return ct(c,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:r.signal}).then(u=>u.data)}const{serviceRasterInfo:o}=this;if(o.multidimensionalInfo!=null&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null){const c=r.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,s,a,c),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),((l=this.renderer)==null?void 0:l.type)==="raster-shaded-relief"&&(r={...r,buffer:{cols:1,rows:1}}),this.raster.fetchTile(i,s,a,r)}async fetchPixels(i,s,a,r={}){return this.serviceRasterInfo.multidimensionalInfo!=null&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null?{extent:i,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),s=Math.round(s),a=Math.round(a),this.raster.fetchPixels(i,s,a,r))}async identify(i,s={}){var l;await this.load();const{raster:a,serviceRasterInfo:r}=this;if((r==null?void 0:r.multidimensionalInfo)!=null&&!(r.hasMultidimensionalTranspose&&(ft(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null)return{location:i,value:null};const o=(l=this.multidimensionalSubset)==null?void 0:l.areaOfInterest;if(o&&!o.contains(i))throw new P("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return a.identify(i,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var r,o,l;const i=(r=this.serviceRasterInfo)==null?void 0:r.multidimensionalInfo;if(i==null||((o=this.serviceRasterInfo)==null?void 0:o.dataType)!=="standard-time")return!1;const s=this.multidimensionalDefinition,a=(l=s==null?void 0:s[0])==null?void 0:l.variableName;return i.variables.some(c=>c.name===a&&(!(s!=null&&s[0].dimensionName)||c.dimensions.some(u=>u.name==="StdTime")))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(i){var a;const s=i??((a=this.serviceRasterInfo)==null?void 0:a.multidimensionalInfo);return ni(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Qe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const i=new qt;return this._rasterJobHandler.connectionPromise=i.initialize().then(async()=>{n(this),this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var i;if(this.interpolation==null){n(this);const{raster:s}=this,a=Gt(s.rasterInfo,s.tileType,(i=this.sourceJSON)==null?void 0:i.defaultResamplingMethod);this._set("interpolation",a)}}_configDefaultRenderer(i="no"){var m,h;n(this);const{rasterInfo:s}=this.raster;!this.bandIds&&s.bandCount>1&&(this.bandIds=jt(s));const a=Ze(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),r=a==null?void 0:a.name,o=Ut(this.raster);if(!this.renderer||i==="override"){const f=Xe(s,{bandIds:this.bandIds,variableName:r,rasterFunctionColorRamp:o}),g=s.statistics,d=g&&g.length>0?g[0]:null,p=(d==null?void 0:d.max)??0,y=(d==null?void 0:d.min)??0;this.raster.datasetFormat==="WCSServer"&&f.type==="raster-stretch"&&(p>1e24||y<-1e24)&&(f.dynamicRangeAdjustment=!0,f.statistics=null,f.stretchType==="none"&&(f.stretchType="min-max")),this.renderer=f}const l=Ve({...this.renderer.toJSON(),variableName:r}),c=Ye(s,r);this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=c):this.symbolizer=new Ii({rendererJSON:l,rasterInfo:c});const u=this.symbolizer.bind();if(u.success){if(i==="auto"){const{colormap:f}=this.raster.rasterInfo,g=this.renderer;if(f!=null&&g.type==="raster-colormap"){const d=Xe(this.raster.rasterInfo);JSON.stringify(d)!==JSON.stringify(g)&&this._configDefaultRenderer("override")}else if(g.type==="raster-stretch"){const d=(m=this.bandIds)==null?void 0:m.length,p=(h=g.statistics)==null?void 0:h.length;!g.dynamicRangeAdjustment&&p&&d&&p!==d&&this._configDefaultRenderer("override")}}}else re.getLogger(this).warn("imagery-tile-mixin",u.error||"The given renderer is not supported by the layer."),i==="auto"&&this._configDefaultRenderer("override")}};function n(i){if(!i.raster||!i.serviceRasterInfo)throw new P("imagery-tile","no raster")}return b([S({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),b([S({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),b([S({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),b([S({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),b([S({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),b([S()],e.prototype,"bandIds",void 0),b([S({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),b([S({json:{read:!1}})],e.prototype,"fullExtent",null),b([S()],e.prototype,"interpolation",void 0),b([S()],e.prototype,"ioConfig",void 0),b([S({type:[Le],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),b([S({type:At,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),b([S()],e.prototype,"raster",void 0),b([S({type:$e,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),b([S({readOnly:!0})],e.prototype,"rasterInfo",null),b([S()],e.prototype,"serviceRasterInfo",void 0),b([S()],e.prototype,"sourceJSON",void 0),b([S({readOnly:!0,type:H,json:{read:!1}})],e.prototype,"spatialReference",void 0),b([S({type:te})],e.prototype,"tileInfo",void 0),b([S(ht)],e.prototype,"url",null),b([S({types:Lt,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var s;const i=((s=this.renderer)==null?void 0:s.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!i}}},origins:{"web-scene":{types:Ht,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:i=>({enabled:i&&i.type!=="vector-field"&&i.type!=="flow"})}}}}})],e.prototype,"renderer",null),b([Kt("renderer")],e.prototype,"readRenderer",null),b([S({clonable:!1})],e.prototype,"symbolizer",void 0),e=b([Q("esri.layers.mixins.ImageryTileMixin")],e),e};let B=class extends Nt(Wi(Li(Hi(Bt(Ss(Gi(Dt(zi(St(bt($t))))))))))){constructor(...t){super(...t),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=kt(async(e,n,i)=>{const{save:s,saveAs:a}=await Je(()=>import("./imageryUtils-CsT5NDkh.js"),__vite__mapDeps([16,17,7,18,19,20,12,13,5,6,11,21,9,10,4,8,22,23,24,25,26,27,28,15,14,29,30,31,32]),import.meta.url);switch(e){case ge.SAVE:return s(this,n);case ge.SAVE_AS:return a(this,i,n)}})}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(Ct).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var o,l;const t=[new ue({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new ue({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],e=((o=this.raster)==null?void 0:o.rasterInfo)??this.serviceRasterInfo,n=e==null?void 0:e.attributeTable,i=n!=null?n.fields:null,s="Raster.";if(i){const c=i.filter(u=>u.type!=="oid"&&u.name.toLowerCase()!=="value").map(u=>{const m=u.clone();return m.name=s+u.name,m});t.push(...c)}const a=e==null?void 0:e.dataType,r=e==null?void 0:e.multidimensionalInfo;if((a==="vector-magdir"||a==="vector-uv")&&r!=null){const c=(l=r.variables[0].unit)==null?void 0:l.trim(),u="Magnitude"+(c?` (${c})`:"");t.push(new ue({name:"Raster.Magnitude",alias:u,domain:null,editable:!1,type:"double"})),t.push(new ue({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return t}createPopupTemplate(t){const{rasterFields:e}=this,n=new Set(e.map(({name:i})=>i).filter(i=>i.toLowerCase()!=="raster.servicepixelvalue.raw"));return qi({fields:e,title:this.title},{...t,visibleFieldNames:n})}async generateRasterInfo(t,e){var n;if(t=Ae($e,t),await this.load(),!t||((n=t.functionName)==null?void 0:n.toLowerCase())==="none")return this.serviceRasterInfo;try{const{rasterInfo:i}=await this._openFunctionRaster(t,e);return i}catch(i){throw i instanceof P?i:new P("imagery-tile-layer","the given raster function is not supported")}}async save(t){return this._debouncedSaveOperations(ge.SAVE,t)}async saveAs(t,e){return this._debouncedSaveOperations(ge.SAVE_AS,e,t)}write(t,e){const n=this._primaryRasters[0]??this.raster;if(this.loaded?n.datasetFormat==="RasterTileServer"&&(n.tileType==="Raster"||n.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e!=null&&e.messages){const i=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new P("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${i}'`,{layer:this}))}return null}async _openRaster(t){var i;let e=!1;if(this.raster)await this._openFromRaster(this.raster,t),e=this.raster.datasetFormat==="Function";else{const{url:s,rasterFunction:a,source:r}=this;if(!s&&!r)throw new P("imagery-tile-layer:open","missing url or source parameter");r?await this._openFromSource(r,t):a?await this._openFromUrlWithRasterFunction(s,a,t):await this._openFromUrl(s,t)}const n=this.raster.rasterInfo;if(!n)throw new P("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",e?n:this._primaryRasters[0].rasterInfo),this._set("spatialReference",n.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const s=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(s,{origin:"service"})}else this.read({tileInfo:(i=this.serviceRasterInfo)==null?void 0:i.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Ot(()=>this.customParameters,s=>{this.raster&&(this.raster.ioConfig.customFetchParameters=s)}))}async _openFromRaster(t,e){t.rasterInfo||await t.open({signal:e}),this._primaryRasters=t.datasetFormat==="Function"?t.primaryRasters.rasters:[t],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(t,e,n){const i=[t];e&&Ai(e.toJSON(),i);const s=await Promise.all(i.map(r=>Oe.open({url:r,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:n}))),a=s.findIndex(r=>r==null);if(a>-1)throw new P("imagery-tile-layer:open",`cannot open raster: ${i[a]}`);return this._primaryRasters=s,this._initializeWithFunctionRaster(e)}async _openFromUrl(t,e){const n=await Oe.open({url:t,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(n==null)throw new P("imagery-tile-layer:open",`cannot open raster: ${t}`);this._primaryRasters=[n],this.raster=n}async _openFromSource(t,e){var a;const n="the tiled imagery data source is not supported",i=((a=t.type)==null?void 0:a.toLowerCase())==="coverage"?"CovJSON":t.extent&&t.pixelBlock?"MEMORY":null;if(!i)throw new P("imagery-tile-layer:open",n);i==="MEMORY"&&(t={extent:t.extent,pixelBlocks:[t.pixelBlock]});const s=await Oe.open({url:"",source:t,datasetFormat:i,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(s==null)throw new P("imagery-tile-layer:open",n);this._primaryRasters=[s],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=s}async _openFunctionRaster(t,e){var a;const n={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(r=>n[r.url]=r);const i=dt(((a=t.functionDefinition)==null?void 0:a.toJSON())??t.toJSON(),n),s=new xt({rasterFunction:i});return await s.open(e),s}async _initializeWithFunctionRaster(t,e){try{this.raster=await this._openFunctionRaster(t,e)}catch(n){n instanceof P&&re.getLogger(this).error("imagery-tile-layer:open",n.message),re.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};b([S({clonable:!1})],B.prototype,"_primaryRasters",void 0),b([S({type:[vt],json:{write:{overridePolicy(){var t;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((t=this.bandIds)==null?void 0:t.join(","))!=="0,1,2"}}}}})],B.prototype,"bandIds",void 0),b([S({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Pt(Vt)],B.prototype,"interpolation",void 0),b([S(ei)],B.prototype,"legendEnabled",void 0),b([S({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],B.prototype,"isReference",void 0),b([S({type:["show","hide"]})],B.prototype,"listMode",void 0),b([S({json:{read:!0,write:!0}})],B.prototype,"blendMode",void 0),b([S()],B.prototype,"sourceJSON",void 0),b([S({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],B.prototype,"version",void 0),b([S({readOnly:!0,json:{read:!1}})],B.prototype,"type",void 0),b([S({type:["ArcGISTiledImageServiceLayer"]})],B.prototype,"operationalLayerType",void 0),b([S({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,n){e[n]=!t}}}})],B.prototype,"popupEnabled",void 0),b([S({type:It,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],B.prototype,"popupTemplate",void 0),b([S({readOnly:!0})],B.prototype,"defaultPopupTemplate",null),b([S({readOnly:!0,type:[ue]})],B.prototype,"fields",void 0),b([S({readOnly:!0,type:[ue]})],B.prototype,"rasterFields",null),b([S({constructOnly:!0})],B.prototype,"source",void 0),B=b([Q("esri.layers.ImageryTileLayer")],B);const Ts=B,bn=Object.freeze(Object.defineProperty({__proto__:null,default:Ts},Symbol.toStringTag,{value:"Module"}));export{bn as I,Ts as M,Oe as u};
