import{d as h,c as p,g as m,p as $,P as c,r as l,z as g,_ as M,n as a}from"./mathUtils-ClvKsMak.js";import{V as x}from"./sphere-DIv2hmik.js";import{U as y}from"./mathUtils-kvswLROa.js";import{o as b}from"./geodesicAreaMeasurementUtils-CSr4mjZE.js";function j(t,n){const i=x(n);h(i,0,0,0);for(let r=0;r<t.length;++r)p(i,i,t[r]);m(i,i,1/t.length);let u=0;for(let r=0;r<t.length;++r)u=Math.max(u,$(i,t[r]));n[3]=Math.sqrt(u)}function q(t,n){if(t.length<3)throw new Error("need at least 3 points to fit a plane");y(t[0],t[1],t[2],n)}function E(t,n){return c(t,n)+t[3]}function T(t,n,i,u){const r=d;return l(r.rings[0][0],t),l(r.rings[0][1],n),l(r.rings[0][2],i),l(r.rings[0][3],t),r.spatialReference=u,b(r)}function U(t,n=null,i=!0){const r=(o,f)=>{if(f[0]===0&&f[1]===0&&f[2]===0)return!1;for(let s=0;s<o.length;++s)if(c(f,o[s])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return n&&l(n,t[0]),!0;h(e,0,0,0);for(let o=0;o<t.length;++o)p(e,e,t[o]);if(g(e,e),r(t,e))return n&&l(n,e),!0;if(!i)return!1;for(let o=0;o<t.length;++o)for(let f=0;f<t.length;++f)if(o!==f&&(M(e,t[o],t[f]),g(e,e),r(t,e)))return n&&l(n,e),!0;return!1}function V(t){return t.pointerType!=="mouse"||t.button===0}const d={hasM:!1,hasZ:!0,rings:[[a(),a(),a(),a()]],spatialReference:null,type:"polygon"},e=a();export{V as M,j as g,q as h,U as j,T as m,E as p};
