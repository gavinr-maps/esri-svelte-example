import{c as T}from"./reactiveUtils-BFQ0BtrB.js";import{c as g,n as y,d as f}from"./subclass-BR3PhgZG.js";import{s as c,b as R}from"./Accessor-D6mNnsWy.js";import{G as E}from"./Point-TlcsOcXV.js";import{o as P,r as q}from"./featureConversionUtils-B-SknPj_.js";import{m as I}from"./FeatureStore-GQfqFqRN.js";import{x as b,j as $}from"./timeSupport-86-Lo3YD.js";import{$ as j}from"./QueryEngine-BaqPXEl6.js";import{E as N,N as O}from"./geojson-B6ajRYE7.js";import{p as Q}from"./sourceUtils-BvhUgfwA.js";import{o as M,e as k,K as _}from"./wfsUtils-ClEy5UL0.js";import{Z as L}from"./FieldsIndex-DHql50vu.js";import{i as G}from"./Promise-CZrWwByK.js";import"./Evented-CXIxDjmW.js";import"./shared-B3wH2qpO.js";import"./jsonMap-DCC6W5ex.js";import"./writer-3zufXUNV.js";import"./assets-BNizZMOZ.js";import"./index-BVncS3aY.js";import"./aaBoundingBox-BGxkJAW0.js";import"./Extent-B4rrMrqp.js";import"./Polyline-BQFeqYXi.js";import"./mathUtils-ClvKsMak.js";import"./jsonUtils-DtWlwXHP.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-BYcuS8_t.js";import"./PooledRBush-CGlhTzFe.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./optimizedFeatureQueryEngineAdapter-Buta7wlw.js";import"./centroid-DdLmOD72.js";import"./projection-tSh-0UvX.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";import"./normalizeUtils-CuTX3yb4.js";import"./normalizeUtilsCommon-DNPu20r0.js";import"./geometry-CnaxvJsv.js";import"./utils-Blh5cXWv.js";import"./utils-Bh7lx_TM.js";import"./json-Wa8cmqdu.js";import"./MemCache-C6WUx-5V.js";import"./LRUCache-ju6LnIBZ.js";import"./WhereClause-CO6Fm86l.js";import"./TimeOnly-BtK5SiqG.js";import"./UnknownTimeZone-D0GlcniK.js";import"./fieldType-CIG5ey7e.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./quantizationUtils-DFd0XKEL.js";import"./fieldUtils-C5R42-PY.js";import"./intl-CArXn1et.js";import"./utils-hH5IaWNz.js";import"./screenUtils-PfxkaaMN.js";import"./timeUtils-DQR2jUPL.js";import"./heatmapUtils-C-uT6ZIV.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./utils-HfpQY-3e.js";import"./Basemap-CKBB4cRW.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-DCqdz-K4.js";import"./loadAll-z9YY33Kx.js";import"./PortalItem-CaeKabGc.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./writeUtils-BUKZUL8X.js";import"./layerUtils-BzjQnEdj.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./utils-DUUw13Ab.js";import"./ClassBreaksDefinition-BpZNgsmK.js";import"./enumeration--HlxOQ_N.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Scheduler-CDoWuxMK.js";import"./signal-DzOfzcfh.js";import"./debugFlags-B3L9P_UW.js";import"./date-M6n_RqpC.js";import"./xmlUtils-CtUoQO7q.js";import"./arcgisLayerUrl-ETqee4Bd.js";import"./Field-poIiHWUc.js";const x="esri.layers.WFSLayer";class de{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:r,getFeatureOutputFormat:a,fields:i,geometryType:m,featureType:s,maxRecordCount:n,maxTotalRecordCount:h,maxPageCount:C,objectIdField:d,customParameters:F}=t,{spatialReference:p,getFeatureSpatialReference:l}=M(r,s,t.spatialReference);try{await b(l,p)}catch{throw new g("unsupported-projection","Projection not supported",{inSpatialReference:l,outSpatialReference:p})}c(e),this._customParameters=F,this._featureType=s,this._fieldsIndex=L.fromLayerJSON({fields:i,dateFieldsTimeReference:i.some(S=>S.type==="esriFieldTypeDate")?{timeZoneIANA:G}:null}),this._geometryType=m,this._getFeatureUrl=r,this._getFeatureOutputFormat=a,this._getFeatureSpatialReference=l,this._maxRecordCount=n,this._maxTotalRecordCount=h,this._maxPageCount=C,this._objectIdField=d,this._spatialReference=p;let u=await this._snapshotFeatures(e);if(u.errors.length>0&&(this._supportsPagination=!1,u=await this._snapshotFeatures(e),u.errors.length>0))throw u.errors[0];return this._queryEngine=new j({fieldsIndex:this._fieldsIndex,geometryType:m,hasM:!1,hasZ:!1,objectIdField:d,spatialReference:p,timeInfo:null,featureStore:new I({geometryType:m,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(u.features),{warnings:w(u),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new g("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){var e;return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,(e=this._snapshotTask)==null||e.abort(),this._snapshotTask=T(r=>this._snapshotFeatures({signal:r})),this._snapshotTask.promise.then(r=>{var a;this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(r.features);for(const i of w(r))y.getLogger(x).warn(new f("wfs-layer:refresh-warning",i.message,i.details));(a=r.errors)!=null&&a.length&&y.getLogger(x).warn(new f("wfs-layer:refresh-error","Refresh completed with errors",{errors:r.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t==null?void 0:t.signal,r=this._maxTotalRecordCount,a=this._maxPageCount,i=this._supportsPagination?await k(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let m=[];const s=[];if(i==null)try{m=await this._singleQuery(e)}catch(n){R(n)||s.push(n)}else{const n=Math.min(i,r),h=U(this,Math.max(1,Math.min(Math.ceil(n/this._maxRecordCount),a)),e);await Promise.allSettled(Array.from({length:10}).map(()=>Z(h,m,s)))}return c(e),{features:m,totalRecordCount:i,maxTotalRecordCount:r,maxPageCount:a,errors:s}}async _singleQuery(t){const e=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(e,{signal:t})}async _pageQuery(t,e){const r=t*this._maxRecordCount,a=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:r,count:this._maxRecordCount,signal:e});return this._processGeoJSON(a,{startIndex:r,signal:e})}_processGeoJSON(t,e){N(t,this._getFeatureSpatialReference.wkid);const{startIndex:r,signal:a}=e;c(a);const i=O(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!E(this._spatialReference,this._getFeatureSpatialReference))for(const s of i)s.geometry!=null&&(s.geometry=P($(q(s.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let m=r??1;for(const s of i){const n={};Q(this._fieldsIndex,n,s.attributes,!0),s.attributes=n,n[this._objectIdField]==null&&(s.objectId=n[this._objectIdField]=m++)}return i}}function*U(o,t,e){for(let r=0;r<t;r++)yield o._pageQuery(r,e)}async function Z(o,t,e){let r=o.next();for(;!r.done;){try{const a=await r.value;t.push(...a)}catch(a){R(a)||e.push(a)}r=o.next()}}function w(o){const t=[];return o.totalRecordCount!=null&&(o.features.length<o.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${o.features.length} of ${o.totalRecordCount} in ${o.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:o.features.length,totalRecordCount:o.totalRecordCount}}),o.totalRecordCount>o.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${o.totalRecordCount} features exceeds the maximum allowed of ${o.maxTotalRecordCount}.`,details:{recordCount:o.features.length,totalRecordCount:o.totalRecordCount,maxTotalRecordCount:o.maxTotalRecordCount}})),t}export{de as default};
