import{c as y}from"./subclass-BR3PhgZG.js";import{d as T}from"./arcgisLayerUrl-ETqee4Bd.js";import{a as L,t as v}from"./lazyLayerLoader-Dvz94v5M.js";import{s as m,a as F,o as M,u as w,t as f,c as P,n as G,i as x,e as h}from"./portalLayers-C03kizKz.js";import{populateGroupLayer as C}from"./layersCreator-pwoFFBtV.js";import{C as D}from"./Portal-DCqdz-K4.js";import{e as I}from"./jsonContext-CAJ7-auS.js";import{s as $}from"./portalItemUtils-C4O2jNL5.js";import{t as k}from"./styleUtils-BATHgMyw.js";import{t as E}from"./requestPresets-xNTV8VKT.js";import"./assets-BNizZMOZ.js";import"./index-BVncS3aY.js";import"./Evented-CXIxDjmW.js";import"./Accessor-D6mNnsWy.js";import"./persistableUrlUtils-Dx61-x4K.js";import"./associatedFeatureServiceUtils-DrLOVkk4.js";import"./PortalItem-CaeKabGc.js";import"./writer-3zufXUNV.js";import"./Extent-B4rrMrqp.js";import"./Point-TlcsOcXV.js";import"./jsonMap-DCC6W5ex.js";import"./layerUtils-BzjQnEdj.js";import"./reactiveUtils-BFQ0BtrB.js";import"./shared-B3wH2qpO.js";import"./Promise-CZrWwByK.js";import"./projection-tSh-0UvX.js";import"./mathUtils-ClvKsMak.js";import"./Polyline-BQFeqYXi.js";import"./projectBuffer-iyGwL2dv.js";import"./geodesicConstants-kj1AtlGg.js";async function Le(r,a){const t=r.instance.portalItem;if(t!=null&&t.id)return await t.load(a),j(r),r.validateItem&&r.validateItem(t),A(r,a)}function j(r){const a=r.instance.portalItem;if(!(a!=null&&a.type)||!r.supportedTypes.includes(a.type))throw new y("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:a==null?void 0:a.type,expectedType:r.supportedTypes.join(", ")})}async function A(r,a){const t=r.instance,e=t.portalItem;if(!e)return;const{url:s,title:o}=e,l=I(e,"portal-item");if(t.type==="group")return O(t,l,r);s&&t.type!=="media"&&t.read({url:s},l);const n=new h,i=await g(r,n,a);return i&&t.read(i,l),t.resourceReferences={portalItem:e,paths:l.readResourcePaths??[]},t.type!=="subtype-group"&&t.read({title:o},l),k(t,l)}async function O(r,a,t){const e=r.portalItem;if(!r.sourceIsPortalItem)return;const{title:s,type:o}=e;if(o==="Group Layer"){if(!$(e,"Map"))throw new y("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return R(r)}return r.read({title:s},a),J(r,t)}async function R(r){const a=r.portalItem,t=await a.fetchData("json");if(!t)return;const e=I(a,"web-map");r.read(t,e),await C(r,t,{context:e}),r.resourceReferences={portalItem:a,paths:e.readResourcePaths??[]}}async function J(r,a){var p;let t;const{portalItem:e}=r;if(!e)return;const s=e.type,o=a.layerModuleTypeMap;switch(s){case"Feature Service":case"Feature Collection":t=o.FeatureLayer;break;case"Stream Service":t=o.StreamLayer;break;case"Scene Service":t=o.SceneLayer;break;default:throw new y("portal:unsupported-item-type-as-group",`The item type '${s}' is not supported as a 'IGroupLayer'`)}const l=new h;let[n,i]=await Promise.all([t(),g(a,l)]),c=()=>n;if(s==="Feature Service"){const b=(p=m(i))==null?void 0:p.customParameters;i=e.url?await F(i,e.url,l):{},c=await Q(i,o)||c;const S=await K(e.url,{customParameters:b,loadContext:l});return await u(r,c,i,S)}return s==="Scene Service"&&e.url&&(i=await M(e,i,l)),w(i)>0?await u(r,c,i):await N(r,c)}async function N(r,a){var s,o;const{portalItem:t}=r;if(!(t!=null&&t.url))return;const e=await E(t.url);e&&u(r,a,{layers:(s=e.layers)==null?void 0:s.map(f),tables:(o=e.tables)==null?void 0:o.map(f)})}async function u(r,a,t,e){var l;let s=t.layers||[];const o=t.tables||[];if(((l=r.portalItem)==null?void 0:l.type)==="Feature Collection"?(s.forEach((n,i)=>{var c;n.id=i,((c=n==null?void 0:n.layerDefinition)==null?void 0:c.type)==="Table"&&o.push(n)}),s=s.filter(n=>{var i;return((i=n==null?void 0:n.layerDefinition)==null?void 0:i.type)!=="Table"})):(s.reverse(),o.reverse()),s.forEach(n=>{const i=e==null?void 0:e(n);if(i||!e){const c=d(r,a(n),t,n,i);r.add(c)}}),o.length){const n=await L.FeatureLayer();o.forEach(i=>{const c=e==null?void 0:e(i);if(c||!e){const p=d(r,n,t,i,c);r.tables.add(p)}})}}function d(r,a,t,e,s){const o=r.portalItem,l={portalItem:o.clone(),layerId:e.id};e.url!=null&&(l.url=e.url);const n=new a(l);if("sourceJSON"in n&&(n.sourceJSON=s),n.type!=="subtype-group"&&n.type!=="catalog"&&(n.sublayerTitleMode="service-name"),o.type==="Feature Collection"){const i={origin:"portal-item",portal:o.portal||D.getDefault()};n.read(e,i);const c=t.showLegend;c!=null&&n.read({showLegend:c},i)}return n}async function g(r,a,t){if(r.supportsData===!1)return;const e=r.instance,s=e.portalItem;if(!s)return;let o=null;try{o=await s.fetchData("json",t)}catch{}if(B(e)){let l=null;const n=await q(s,o,a);if((o!=null&&o.layers||o!=null&&o.tables)&&n>0){if(e.layerId==null){const i=P(e.type),c=i?G(o,i)[0]:m(o);c&&(e.layerId=c.id)}l=z(o,e),(l==null?void 0:l.layerType)==="OrientedImageryLayer"&&e.type==="oriented-imagery"&&e.supportedSourceTypes.add("Feature Layer"),l&&o.showLegend!=null&&(l.showLegend=o.showLegend)}return n>1&&"sublayerTitleMode"in e&&e.sublayerTitleMode!=="service-name"&&(e.sublayerTitleMode="item-title-and-service-name"),l}return o}async function q(r,a,t){var o,l,n,i,c;if(a!=null&&a.layers&&(a!=null&&a.tables))return w(a);const e=T(r.url);if(!e)return 1;const s=await t.fetchServiceMetadata(e.url.path,{customParameters:(o=m(a))==null?void 0:o.customParameters}).catch(()=>null);return(((l=a==null?void 0:a.layers)==null?void 0:l.length)??((n=s==null?void 0:s.layers)==null?void 0:n.length)??0)+(((i=a==null?void 0:a.tables)==null?void 0:i.length)??((c=s==null?void 0:s.tables)==null?void 0:c.length)??0)}function z(r,a){var s,o;const{layerId:t}=a,e=((s=r.layers)==null?void 0:s.find(l=>l.id===t))||((o=r.tables)==null?void 0:o.find(l=>l.id===t));return e&&H(e,a)?e:null}function B(r){return r.type!=="stream"&&"layerId"in r}function H(r,a){const t="layerType"in r&&r.layerType,{type:e}=a;return!(e==="feature"&&t&&r.layerType!=="ArcGISFeatureLayer"||e==="catalog"&&!t||e==="oriented-imagery"&&!t||e==="subtype-group"&&!t)}async function K(r,a){const{layersJSON:t}=await v(r,a);if(!t)return null;const e=[...t.layers,...t.tables];return s=>e.find(o=>o.id===s.id)}async function Q(r,a){const{layers:t}=r;if(!(t!=null&&t.length))return;const e=new Set,s=[];for(const{layerType:n}of t){const i=n??"ArcGISFeatureLayer";if(e.has(i))continue;e.add(i);const c=a[x(i)];s.push(c())}const o=await Promise.all(s),l=new Map;return Array.from(e).forEach((n,i)=>{l.set(n,o[i])}),({layerType:n})=>{const i=n??"ArcGISFeatureLayer";return l.get(i)}}export{Le as load};
