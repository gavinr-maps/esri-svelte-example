import{s as I}from"./Accessor-BmwT4B0c.js";import{v as b,l as v}from"./jsonUtils-CwFG8yN4.js";import{a4 as Q}from"./Point-Cz2JYYmX.js";import{n as O,r as M,o as A}from"./featureConversionUtils-CvnFcmH_.js";import{t as Z,n as C}from"./objectIdUtils-4dd1rf9p.js";import{u as $}from"./executeQueryForSnapping-DWE9tz1Z.js";import{f as k}from"./FeatureStore-BuDu5Iw5.js";import{x as E,j as _}from"./queryUtils-DBEPdow2.js";import{L as B}from"./QueryEngine-BokU27l9.js";import{a as P,l as G,u as L}from"./clientSideDefaults-DyCV_B9d.js";import{S as W,E as z,p as g,g as T,f as j,h as w}from"./sourceUtils-BFhZjJqS.js";import{Z as D}from"./FieldsIndex-FW1AMU67.js";import{i as U}from"./fieldType-CBeoJWlv.js";import{K as H,c as N}from"./opacityUtils-Dim20wpZ.js";import{n as J}from"./Promise-DfET-uns.js";import"./Extent-g5W9hy0j.js";import"./Polyline-s-JzsQqo.js";import"./writer-DKgfqj4X.js";import"./mathUtils-Cfq9PL9W.js";import"./cast-CsZslgGN.js";import"./index-4eY77cms.js";import"./JSONSupport-DcrLLGjL.js";import"./aaBoundingBox-Dw3yBk2f.js";import"./OptimizedFeature-P2towpqD.js";import"./memoryEstimations-Bcyf-mHz.js";import"./OptimizedGeometry-BJqUA4Pi.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./normalizeUtils-BTGdXlpz.js";import"./normalizeUtilsCommon-lGDszWRI.js";import"./utils-YowqfOgk.js";import"./utils-B-dlKIhi.js";import"./timeSupport-C7DiFkF_.js";import"./Evented-Dw4_VOGn.js";import"./BoundsStore-CI-maf3v.js";import"./PooledRBush--ue4CxG1.js";import"./quickselect-QQC62dOK.js";import"./optimizedFeatureQueryEngineAdapter-D7doR0mc.js";import"./projection-CyCZAIaD.js";import"./SimpleObservable-CvOkykwM.js";import"./vec3f64-BLpZdpfb.js";import"./projectBuffer-CQnuEMuP.js";import"./geodesicConstants-RQL9oKdk.js";import"./json-Wa8cmqdu.js";import"./WhereClauseCache-CJbuf62r.js";import"./LRUCache-CXiGQWMN.js";import"./MemCache-CmojB_Z1.js";import"./WhereClause-xGR0ztic.js";import"./TimeOnly-CveCl9ie.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./timeUtils-C1c_L2Fd.js";import"./quantizationUtils-DgFbqZi7.js";import"./utils-Co_tyUES.js";import"./screenUtils-_ZIvrt5o.js";import"./heatmapUtils-Cyq-bAyG.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-v4CMtYiY.js";import"./reactiveUtils-XM7cS2OP.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Fi6iAz29.js";import"./intl-Duiy0OzY.js";import"./timeZoneUtils-DxzjpEBb.js";import"./utils-Dyua10sr.js";import"./ClassBreaksDefinition-C7KVmBug.js";import"./enumeration-DpvDkLNI.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-ZfcJap1f.js";import"./NormalizationBinParametersMixin-CZD0XfhN.js";import"./Clonable-Z-AWS-16.js";import"./Scheduler-i_u8qdlN.js";import"./signal-CySMLEX9.js";import"./debugFlags-B1LM_Apo.js";import"./defaultsJSON-GKolV7NZ.js";import"./date-Ctp1FiBW.js";const K=Q,V={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:Q},X={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsQueryAttachmentOrderByFields:!1,supportsQueryBins:!0,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0,supportsQueryWithCacheHint:!0},queryBinsCapabilities:W};function Y(h){return v(h)?h.z!=null:!!h.hasZ}function ee(h){return v(h)?h.m!=null:!!h.hasM}class _t{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){var e;(e=this._queryEngine)==null||e.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const i=[],{features:o}=e,s=this._inferLayerProperties(o,e.fields),l=e.fields||[],p=e.hasM!=null?e.hasM:!!s.hasM,c=e.hasZ!=null?e.hasZ:!!s.hasZ,d=!e.spatialReference&&!s.spatialReference,u=d?K:e.spatialReference||s.spatialReference,y=d?V:null,m=e.geometryType||s.geometryType,a=!m;let t=e.objectIdField||s.objectIdField,n=e.timeInfo;const f=new D(l);if(!a&&(d&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!m))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!t)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(s.objectIdField&&t!==s.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${t}" doesn't match the field name "${s.objectIdField}", found in the provided fields`}),t=s.objectIdField),t&&!s.objectIdField){const r=f.get(t);r?(t=r.name,r.type="esriFieldTypeOID",r.editable=!1,r.nullable=!1):l.unshift({alias:t,name:t,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const r of l){if(r.name==null&&(r.name=r.alias),r.alias==null&&(r.alias=r.name),!r.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:r});if(r.name===t&&(r.type="esriFieldTypeOID"),!U.jsonValues.includes(r.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${r.name}"`,{field:r});r.length==null&&(r.length=H(r))}const F={};for(const r of l)if(r.type!=="esriFieldTypeOID"&&r.type!=="esriFieldTypeGlobalID"){const q=N(r);q!==void 0&&(F[r.name]=q)}if(n){if(n.startTimeField){const r=f.get(n.startTimeField);r?(n.startTimeField=r.name,r.type="esriFieldTypeDate"):n.startTimeField=null}if(n.endTimeField){const r=f.get(n.endTimeField);r?(n.endTimeField=r.name,r.type="esriFieldTypeDate"):n.endTimeField=null}if(n.trackIdField){const r=f.get(n.trackIdField);r?n.trackIdField=r.name:(n.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:n}}))}n.startTimeField||n.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:n}}),n=null)}const x=f.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??J}:null;this._createDefaultAttributes=P(F,t);const R={warnings:i,featureErrors:[],layerDefinition:{...X,drawingInfo:L(m),templates:G(F),extent:y,geometryType:m,objectIdField:t,fields:l,hasZ:c,hasM:p,timeInfo:n,dateFieldsTimeReference:x},assignedObjectIds:{}};if(this._queryEngine=new B({fieldsIndex:D.fromLayerJSON({fields:l,timeInfo:n,dateFieldsTimeReference:x}),geometryType:m,hasM:p,hasZ:c,objectIdField:t,spatialReference:u,featureStore:new k({geometryType:m,hasM:p,hasZ:c}),timeInfo:n}),!(o!=null&&o.length))return this._nextObjectId=Z,R;const S=C(t,o);return this._nextObjectId=S+1,await E(o,u),this._loadInitialFeatures(R,o)}async applyEdits(e){const{spatialReference:i,geometryType:o}=this._queryEngine;return await Promise.all([z(i,o),E(e.adds,i),E(e.updates,i)]),this._applyEdits(e)}queryFeatures(e,i={}){return this._queryEngine.executeQuery(e,i.signal)}queryFeatureCount(e,i={}){return this._queryEngine.executeQueryForCount(e,i.signal)}queryObjectIds(e,i={}){return this._queryEngine.executeQueryForIds(e,i.signal)}queryExtent(e,i={}){return this._queryEngine.executeQueryForExtent(e,i.signal)}querySnapping(e,i={}){return $(this._queryEngine,e,i.signal)}queryAttributeBins(e,i={}){return this._queryEngine.executeAttributeBinsQuery(e,i.signal)}_inferLayerProperties(e,i){let o,s,l=null,p=null,c=null;for(const d of e){const u=d.geometry;if(u!=null&&(l||(l=b(u)),p||(p=u.spatialReference),o==null&&(o=Y(u)),s==null&&(s=ee(u)),l&&p&&o!=null&&s!=null))break}if(i&&i.length){let d=null;i.some(u=>{const y=u.type==="esriFieldTypeOID",m=!u.type&&u.name&&u.name.toLowerCase()==="objectid";return d=u,y||m})&&(c=d.name)}return{geometryType:l,spatialReference:p,objectIdField:c,hasM:s,hasZ:o}}async _loadInitialFeatures(e,i){const{geometryType:o,hasM:s,hasZ:l,objectIdField:p,spatialReference:c,featureStore:d,fieldsIndex:u}=this._queryEngine,y=[];for(const t of i){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&o!==b(t.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const n=this._createDefaultAttributes(),f=T(u,n,t.attributes,!0);f?e.featureErrors.push(f):(this._assignObjectId(n,t.attributes,!0),t.attributes=n,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[p]),t.geometry!=null&&(t.geometry=_(t.geometry,t.geometry.spatialReference,c)),y.push(t))}d.addMany(O([],y,o,l,s,p));const{fullExtent:m,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=m,a){const{start:t,end:n}=a;e.layerDefinition.timeInfo.timeExtent=[t,n]}return e}async _applyEdits(e){const{adds:i,updates:o,deletes:s}=e,l={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(i!=null&&i.length&&this._applyAddEdits(l,i),o!=null&&o.length&&this._applyUpdateEdits(l,o),s==null?void 0:s.length){for(const d of s)l.deleteResults.push(j(d));this._queryEngine.featureStore.removeManyById(s)}const{fullExtent:p,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:p,timeExtent:c,featureEditResults:l}}_applyAddEdits(e,i){const{addResults:o}=e,{geometryType:s,hasM:l,hasZ:p,objectIdField:c,spatialReference:d,featureStore:u,fieldsIndex:y}=this._queryEngine,m=[];for(const a of i){if(a.geometry&&s!==b(a.geometry)){o.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=T(y,t,a.attributes);if(n)o.push(n);else{if(this._assignObjectId(t,a.attributes),a.attributes=t,a.uid!=null){const f=a.attributes[c];e.uidToObjectId[a.uid]=f}if(a.geometry!=null){const f=a.geometry.spatialReference??d;a.geometry=_(w(a.geometry,f),f,d)}m.push(a),o.push(j(a.attributes[c]))}}u.addMany(O([],m,s,p,l,c))}_applyUpdateEdits({updateResults:e},i){const{geometryType:o,hasM:s,hasZ:l,objectIdField:p,spatialReference:c,featureStore:d,fieldsIndex:u}=this._queryEngine;for(const y of i){const{attributes:m,geometry:a}=y,t=m==null?void 0:m[p];if(t==null){e.push(g(`Identifier field ${p} missing`));continue}if(!d.has(t)){e.push(g(`Feature with object id ${t} missing`));continue}const n=M(d.getFeature(t),o,l,s);if(a!=null){if(o!==b(a)){e.push(g("Incorrect geometry type."));continue}const f=a.spatialReference??c;n.geometry=_(w(a,f),f,c)}if(m){const f=T(u,n.attributes,m);if(f){e.push(f);continue}}d.add(A(n,o,l,s,p)),e.push(j(t))}}_assignObjectId(e,i,o=!1){const s=this._queryEngine.objectIdField;o&&i&&isFinite(i[s])?e[s]=i[s]:e[s]=this._nextObjectId++}}export{_t as default};
