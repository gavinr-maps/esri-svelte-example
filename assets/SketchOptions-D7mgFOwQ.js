import{g as a,r as e,m as t,a as p}from"./Accessor-BmwT4B0c.js";import{c as v}from"./SketchLabelOptions-DnwnoaXO.js";import{j as h}from"./angularMeasurementUtils-hHgHLVYP.js";let s=class extends a{constructor(i){super(i),this.length=null,this.verticalLength=null,this.area=null}};e([t()],s.prototype,"length",void 0),e([t()],s.prototype,"verticalLength",void 0),e([t()],s.prototype,"area",void 0),s=e([p("esri.views.interactive.sketch.Units")],s);const c=s;let n=class extends a{constructor(u){super(u),this.directionMode="relative",this.relativeDirectionIsBilateral=!1}get effectiveDirectionMode(){switch(this.directionMode){case"relative":return this.relativeDirectionIsBilateral?h.RelativeBilateral:h.Relative;case"absolute":return h.Absolute}}get displayUnits(){return this._get("displayUnits")??new c}set displayUnits(u){this._set("displayUnits",u)}get inputUnits(){return this._get("inputUnits")??new c}set inputUnits(u){this._set("inputUnits",u)}};e([t({type:String,nonNullable:!0})],n.prototype,"directionMode",void 0),e([t({type:Boolean,nonNullable:!0})],n.prototype,"relativeDirectionIsBilateral",void 0),e([t()],n.prototype,"effectiveDirectionMode",null),e([t({type:c,nonNullable:!0})],n.prototype,"displayUnits",null),e([t({type:c,nonNullable:!0})],n.prototype,"inputUnits",null),n=e([p("esri.views.interactive.sketch.SketchValueOptions")],n);const y=n;let d=class extends a{constructor(i){super(i),this.mode="absolute-height"}toJSON(){return{mode:this.mode}}};e([t({type:String,nonNullable:!0})],d.prototype,"mode",void 0),d=e([p("esri.views.interactive.sketch.SketchTooltipElevationOptions")],d);let o=class extends a{constructor(i){super(i),this.area=!0,this.coordinates=!0,this.direction=!0,this.distance=!0,this.elevation=!0,this.header=!0,this.helpMessage=!1,this.orientation=!0,this.radius=!0,this.rotation=!0,this.scale=!0,this.size=!0,this.totalLength=!0}};e([t({type:Boolean,nonNullable:!0})],o.prototype,"area",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"coordinates",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"direction",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"distance",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"elevation",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"header",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"helpMessage",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"orientation",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"radius",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"rotation",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"scale",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"size",void 0),e([t({type:Boolean,nonNullable:!0})],o.prototype,"totalLength",void 0),o=e([p("esri.views.interactive.sketch.SketchTooltipVisibleElements")],o);const b=o;let l=class extends a{constructor(i){super(i),this.enabled=!1,this.forceEnabled=!1,this.helpMessage=null,this.helpMessageIcon=null,this.inputEnabled=!0,this.elevation=new d,this.placement="auto",this.offset=null,this.visibleElements=new b,this.visualVariables=null,this.xyMode="auto"}get effectiveEnabled(){return this.forceEnabled||this.enabled}};e([t({type:Boolean,nonNullable:!0})],l.prototype,"enabled",void 0),e([t()],l.prototype,"forceEnabled",void 0),e([t()],l.prototype,"effectiveEnabled",null),e([t()],l.prototype,"helpMessage",void 0),e([t()],l.prototype,"helpMessageIcon",void 0),e([t({type:Boolean,nonNullable:!0})],l.prototype,"inputEnabled",void 0),e([t({type:d,nonNullable:!0})],l.prototype,"elevation",void 0),e([t()],l.prototype,"placement",void 0),e([t()],l.prototype,"offset",void 0),e([t({type:b,nonNullable:!0})],l.prototype,"visibleElements",void 0),e([t()],l.prototype,"visualVariables",void 0),e([t()],l.prototype,"xyMode",void 0),l=e([p("esri.views.interactive.sketch.SketchTooltipOptions")],l);const N=l;let r=class extends a{constructor(i){super(i),this.labels=new v,this.tooltips=new N,this.values=new y}};e([t({nonNullable:!0,type:v})],r.prototype,"labels",void 0),e([t({nonNullable:!0,type:N})],r.prototype,"tooltips",void 0),e([t({nonNullable:!0,type:y})],r.prototype,"values",void 0),r=e([p("esri.views.interactive.sketch.SketchOptions")],r);const w=r;export{y as a,w as l,N as r};
