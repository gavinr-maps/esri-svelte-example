import{f as i,g as n,j as y,k as d,E as u,ef as h,e as f}from"./index-27db053b.js";import{d as _}from"./FeatureSet-b143a95b.js";import S from"./FeatureLayerView2D-f95d8cf7.js";import{e as g}from"./util-824e9a11.js";import{d as v}from"./FeatureEffect-c9b0057b.js";import"./Field-a20a79af.js";import"./fieldType-c94915e3.js";import"./Container-b45c6fd4.js";import"./parser-e532dcbf.js";import"./definitions-7eb3a064.js";import"./enums-bdecffa2.js";import"./Texture-4e3bcd4f.js";import"./Query-4d8a66d0.js";import"./LayerView-26563b2c.js";import"./scaleUtils-0378b944.js";import"./AttributeStoreView-6fd4e287.js";import"./TiledDisplayObject-b221b9eb.js";import"./diffUtils-135dddd3.js";import"./labelingInfo-66b6228e.js";import"./LabelClass-276e6e2b.js";import"./labelUtils-eac3d6dc.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-29e80207.js";import"./color-dd843369.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-9150b62a.js";import"./FramebufferObject-799c8348.js";import"./ProgramTemplate-8035f66f.js";import"./GeometryUtils-32fe8191.js";import"./heatmapUtils-37a4ad14.js";import"./vec4f64-3c9d0901.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-a2bcd635.js";import"./featureConversionUtils-94d8cb55.js";import"./OptimizedGeometry-d94e541f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-f125f99d.js";import"./ExpandedCIM-0634141b.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-f777a36d.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-afe461ea.js";import"./floatRGBA-cdb69619.js";import"./clusterUtils-639b3df8.js";import"./MD5-715f37cd.js";import"./SizeVariable-10764cb7.js";import"./colorRamps-9cc2c549.js";import"./LegendOptions-28b8c5c0.js";import"./lengthUtils-535759c3.js";import"./BitmapTileContainer-779b6e2b.js";import"./Bitmap-bcf6d7d4.js";import"./TileContainer-4cd0678f.js";import"./CircularArray-ef508845.js";import"./BufferPool-07c45f44.js";import"./FeatureContainer-6ee5bc6f.js";import"./commonProperties-665c2ea3.js";import"./ElevationInfo-aaff1467.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-887062e3.js";import"./RefreshableLayerView-ca32feb0.js";import"./jsonUtils-94e6a40e.js";const O=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return this._isUserPaused?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],t.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],t.prototype,"connectionStatus",null),i([n({type:v})],t.prototype,"filter",void 0),t=i([y("esri.layers.mixins.StreamLayerView")],t),t};function c(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t.toJSON()),e!=null&&(r.where=e),r}let o=class extends O(S){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null,this._enabledEventTypes=new Set}initialize(){this.addHandles([d(()=>this.layer.customParameters,e=>this._proxy.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._proxy.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>this._proxy.sendMessageToClient(e)),d(()=>this.layer.purgeOptions,()=>this._update()),d(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new u("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return h(e.map(p=>this.on(p,t)));const r=["data-received","message-received"].includes(e);r&&(this._enabledEventTypes.add(e),this._proxy.enableEvent(e,!0));const a=super.on(e,t),s=this;return f(()=>{a.remove(),r&&(s._proxy.closed||s.hasEventListener(e)||s._proxy.enableEvent(e,!1))})}queryLatestObservations(e,t){var r,a,s;if(!((r=this.layer.timeInfo)!=null&&r.endField||(a=this.layer.timeInfo)!=null&&a.startField||(s=this.layer.timeInfo)!=null&&s.trackIdField))throw new u("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(p=>{const m=_.fromJSON(p);return m.features.forEach(l=>{l.layer=this.layer,l.sourceLayer=this.layer}),m})}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){var e;(e=this._proxy)==null||e.pauseStream()}_doResume(){var e;(e=this._proxy)==null||e.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(c(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){var m;const e=this.layer,{objectIdField:t}=e,r=e.fields.map(l=>l.toJSON()),a=g(e.geometryType),s=((m=e.timeInfo)==null?void 0:m.toJSON())||null,p=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:r,fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:a,objectIdField:t,timeInfo:s,source:this.layer.parsedUrl,serviceFilter:c(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:p,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};i([n()],o.prototype,"pipelineConnectionStatus",void 0),i([n()],o.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],o.prototype,"connectionError",null),i([n({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=i([y("esri.views.2d.layers.StreamLayerView2D")],o);const Je=o;export{Je as default};
