import{e as v}from"./Evented-CXIxDjmW.js";import{U as z,k as B,s as $,v as O}from"./assets-C2mb-ea2.js";import{V as F,d as N}from"./reactiveUtils-BFQ0BtrB.js";import{q as W,u as C}from"./Accessor-D6mNnsWy.js";import{y as S,b as H}from"./subclass-BR3PhgZG.js";import{w as T}from"./Extent-DHjqVB-p.js";import{K as k,W as K}from"./projection-A9yUaaTs.js";import{_ as U,f as A}from"./Point-DB4Hp4hH.js";import{b as D,g as J,d as Y}from"./kmlUtils-Cw-aM-5N.js";import{f as Q}from"./utils-D61i9O7E.js";import{c as P}from"./GraphicsCollection-nEq2FD1R.js";import{g as X,f as Z,b as tt}from"./Bitmap-BpetaD1v.js";import{a as it}from"./BitmapContainer-BE_qg-2b.js";import{f as et}from"./LayerView2D-BGdjSMVF.js";import{t as M}from"./GraphicContainer-BEGiY-VM.js";import{V as R}from"./GraphicsView2D-DDXdb_7d.js";import{y as rt}from"./LayerView-CbIY_4n2.js";import{C as ot,e as at}from"./rasterProjectionHelper-CSjnNBma.js";import{b as st}from"./WGLContainer-CcOWMYe7.js";import{o as pt}from"./MaterialPrograms-CJcRuu6E.js";import{t as mt}from"./capabilities-C84AMSCg.js";import{D as E,G as nt,U as lt,X as q}from"./enums-BlUEVwJR.js";import{E as ht}from"./Program-BE7XUO18.js";import{c as ct}from"./rasterUtils-Brs-M08Y.js";import{y as dt}from"./RenderingContext-B0G6O7lI.js";import{e as L,c as ut}from"./Texture-BbJIOVx_.js";import"./index-CeCSsEgo.js";import"./shared-B3wH2qpO.js";import"./mathUtils-ClvKsMak.js";import"./Polyline-D97hl-6E.js";import"./writer-3zufXUNV.js";import"./projectBuffer-vsa0P_cF.js";import"./geodesicConstants-XRAvAZCD.js";import"./jsonMap-DCC6W5ex.js";import"./PopupTemplate-ByHks6sq.js";import"./Clonable-cKbRam6-.js";import"./fieldUtils-CNduWQU9.js";import"./intl-Dpfm8vPB.js";import"./Promise-CZrWwByK.js";import"./geometry-DpwwkAX1.js";import"./enumeration--HlxOQ_N.js";import"./Color-DDUWtbqR.js";import"./colorUtils-CS9vdHXB.js";import"./ActionToggle-C0Z1k2jc.js";import"./Identifiable-BLvpQbOc.js";import"./aaBoundingBox-rJEWaOSN.js";import"./jsonUtils-CuoSmH2q.js";import"./ClassBreaksRenderer-DMO3d0Rn.js";import"./symbols-CsUQ5BxR.js";import"./TextSymbol-gKE-H_J6.js";import"./screenUtils-PfxkaaMN.js";import"./materialUtils-CQ3JLQ1x.js";import"./opacityUtils-BT7mQkwC.js";import"./persistableUrlUtils-BcifXQ1Z.js";import"./collectionUtils-Dm1icNvk.js";import"./Portal-liet8xHC.js";import"./UniqueValueRenderer-dci9bLM8.js";import"./diffUtils--7ofoPN-.js";import"./colorRamps-CFlTi-ob.js";import"./SizeVariable-aYYWlweG.js";import"./ColorStop-CXfPDZon.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-DzaXbn8H.js";import"./Graphic-Dc7F67nR.js";import"./jsonUtils-Cma_7A64.js";import"./compilerUtils-BA04t1lN.js";import"./lengthUtils-D7_DvYH0.js";import"./jsonUtils-C6dvhNjw.js";import"./layerUtils-erzwAANv.js";import"./defaults-DCm7iNI6.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-DQEZjdpw.js";import"./LRUCache-ju6LnIBZ.js";import"./MemCache-C6WUx-5V.js";import"./Version-_Vxue7Ui.js";import"./FieldsIndex-IOXc-mnc.js";import"./UnknownTimeZone-D0GlcniK.js";import"./OverrideHelper-C4oumxVn.js";import"./colorUtils-D5nOabzP.js";import"./vec42-B1mBkh1w.js";import"./vec4f64-CBQL1T0x.js";import"./utils-CO7DMJWl.js";import"./quantizationUtils-CIQDbQFJ.js";import"./HeatmapColorStop-CgvKf0-E.js";import"./heatmapUtils-C-uT6ZIV.js";import"./SimpleRenderer-DvJZ7cyq.js";import"./FeatureSet-DyOnd9Rj.js";import"./Field-C8SaaeoI.js";import"./fieldType-CIG5ey7e.js";import"./mat3-DRqs2t5W.js";import"./DefaultUI-DVON9ypr.js";import"./jsxFactory-CbAu6VfF.js";import"./uuid-fwrPAdZb.js";import"./UpdatingHandles-CMtXpTiG.js";import"./InputManager-C4xu1R9l.js";import"./Queue-DpHko4Yk.js";import"./signal-DzOfzcfh.js";import"./Map-C4JPDBFj.js";import"./Basemap-DhGpUWGY.js";import"./loadAll-DDw-urzS.js";import"./PortalItem-BuTU9OuN.js";import"./writeUtils-3wz9AuW7.js";import"./Ground-BuxgFYJy.js";import"./CollectionFlattener-CkyePFnC.js";import"./editableLayers-BHlaPs85.js";import"./catalogUtils--o1nDhfl.js";import"./basemapUtils-CkCKogG3.js";import"./utils-D20M4_S8.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-ybYUU6jq.js";import"./TablesMixin-BKe9x_jT.js";import"./Layer-C96_yo4i.js";import"./TimeExtent-41gxTbrv.js";import"./timeUtils-DQR2jUPL.js";import"./HeightModelInfo-CSXZysDz.js";import"./ReactiveMap-Dl_3-Rm5.js";import"./Query-Cx4awVKu.js";import"./DataLayerSource-6X35yXpo.js";import"./FullTextSearch-BNIhEccm.js";import"./selectionUtils-DYi6daQO.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./screenUtils-BGG3AyYa.js";import"./a11yUtils-DwloBVAu.js";import"./heightModelInfoUtils-BSzg1Wnl.js";import"./arcgisLayerUrl-Cgl5IQFD.js";import"./ViewingMode-Dodu7ZZk.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-DFh8uIGE.js";import"./Compass-DD0Dkx4v.js";import"./utils-DsJqvptN.js";import"./GoTo-CyjNnle5.js";import"./NavigationToggle-C75z3F4y.js";import"./Zoom-DVO2GqC9.js";import"./vec2f32-BbH2jxlN.js";import"./DisplayObject-DFOkWAgp.js";import"./Container-DVx3sJUL.js";import"./EffectView-D2q0Wr_W.js";import"./parser-BN6zmHl-.js";import"./highlightReasons-BXkdrXK1.js";import"./HighlightOptions-DpSHmLEJ.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./TileKey-CIqLSCov.js";import"./definitions-ByNBSgP9.js";import"./ClipRect-DgcoGaf3.js";import"./layerViewUtils-D2JqIDZ8.js";import"./AGraphicContainer-C5-yH1Tv.js";import"./TechniqueInstance-DTs0dm2_.js";import"./UpdateTracking2D-D2TqRUVs.js";import"./BindType-BmZEZMMh.js";import"./Util-BMqL_pkg.js";import"./vec2f64-Diu2Kaa8.js";import"./LabelMetric-Agz2doNK.js";import"./enums-BRXbslMp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./TileContainer-B3qIHDa9.js";import"./FeatureCommandQueue-DAg_9rUW.js";import"./CIMSymbolHelper-C1Ghh-WW.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CILP_6vp.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-BSPpv37S.js";import"./mat2d-DPkeMmgR.js";import"./mat2df32-orApM5a3.js";import"./vec2-B_ymkwGp.js";import"./Rect-CUzevAry.js";import"./BufferObject-CjYoWxgZ.js";import"./VertexArrayObject-Cwnso4un.js";import"./heatmapTextureUtils-DhR7tWLr.js";import"./constants-D5zmR9t2.js";import"./QueueProcessor-Bu6RBZRX.js";import"./vec3f32-Cw9Q6TO_.js";import"./normalizeUtils-Bi6Jza1f.js";import"./normalizeUtilsCommon-tgSpcwHH.js";import"./utils-Dx8bgRIB.js";import"./AttributeStore-C_C1j3YU.js";import"./labelFormatUtils-jemMExFz.js";import"./labelUtils-Cczy0uDR.js";import"./TimeOnly-cvONhzoK.js";import"./centroid-DdLmOD72.js";import"./featureConversionUtils-DdoZh_25.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-BvrtlmuZ.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-BELDWNln.js";import"./WGLBrushVTLSymbol-DCRjNI7n.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-wM3hmZl7.js";import"./DefaultVertexAttributeLayouts-BIPVF1RK.js";import"./earcut-BqgeR2O3.js";import"./MapView-BnqB8NNa.js";import"./Viewpoint-B260yGoV.js";import"./Cyclical-BY_I03kj.js";import"./workers-8Q6jrI18.js";import"./TileInfo-DkEc90N-.js";import"./TileKey-DZd6gJy7.js";import"./viewpointUtils-BDYPvBda.js";import"./mat2df64-CBKYtunK.js";import"./unitBezier-BX6NeAEr.js";import"./TileStrategy-_ezroEyM.js";import"./utils-CXgSw6Sd.js";import"./ColorBackground-CuuDkrHi.js";import"./programUtils-CwiKxPbA.js";import"./ProgramCache-DZJRjGv8.js";import"./NestedMap-DgiGbX8E.js";import"./renderState-PYzNpa1K.js";import"./basicInterfaces-wONHx_SN.js";import"./interfaces-B8ge7Jg9.js";import"./testSVGPremultipliedAlpha-CKx7iZPZ.js";import"./floatRGBA-C8rGFKJ0.js";import"./doublePrecisionUtils-B0owpBza.js";class l{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(l._instance)return l._instanceRefCount++,l._instance;l._instanceRefCount=1,l._instance=this,this._ownsRctx=!0;const e=document.createElement("canvas"),r=mt(e);r.getExtension("OES_texture_float"),this._rctx=new dt(r,{})}const o={applyProjection:!0,bilinear:!1,bicubic:!1},a=pt("raster/reproject","raster/reproject",new Map([["a_position",0]]),o);this._program=this._rctx.programCache.acquire(a.shaders.vertexShader,a.shaders.fragmentShader,a.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new st(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,o,a=!1){const e=k(t.extent,o),r=new U({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:s,y:n}=ot(r,o,t.extent);let p=(s+n)/2;const m=Math.round((e.xmax-e.xmin)/p),u=Math.round((e.ymax-e.ymin)/p);p=(e.width/m+e.height/u)/2;const I=new U({x:p,y:p,spatialReference:e.spatialReference}),g=at({projectedExtent:e,srcBufferExtent:t.extent,pixelSize:I,hasWrapAround:!0,spacing:[16,16]}),f=ct(this._rctx,g),w=new L(m,u);w.wrapMode=E.CLAMP_TO_EDGE;const h=new ht(this._rctx,w);this._rctx.bindFramebuffer(h),this._rctx.setViewport(0,0,m,u),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(f,1),this._quad.bind();const{width:y=0,height:x=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",y,x),this._program.setUniform2fv("u_transformSpacing",g.spacing),this._program.setUniform2fv("u_transformGridSize",g.size),this._program.setUniform2f("u_targetImageSize",m,u),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),f.dispose(),a){const{width:c,height:V}=h,_=new ImageData(c??0,V??0);h.readPixels(0,0,c??0,V??0,nt.RGBA,lt.UNSIGNED_BYTE,_.data);const G=h.detachColorTexture(q.COLOR_ATTACHMENT0);return h.dispose(),{texture:G,extent:e,imageData:_}}const b=h.detachColorTexture(q.COLOR_ATTACHMENT0);return h.dispose(),{texture:b,extent:e}}reprojectBitmapData(t,o){const a=X(t.bitmapData)?Z(t.bitmapData):t.bitmapData,e=new L;e.wrapMode=E.CLAMP_TO_EDGE,e.width=t.bitmapData.width,e.height=t.bitmapData.height;const r=new ut(this._rctx,e,a),s=this.reprojectTexture({texture:r,extent:t.extent},o,!0);s.texture.dispose();const n=document.createElement("canvas"),p=s.imageData;return n.width=p.width,n.height=p.height,n.getContext("2d").putImageData(p,0,0),{bitmapData:n,extent:s.extent}}async loadAndReprojectBitmapData(t,o,a){const e=(await z(t,{responseType:"image"})).data,r=document.createElement("canvas");r.width=e.width,r.height=e.height;const s=r.getContext("2d");s.drawImage(e,0,0);const n=s.getImageData(0,0,r.width,r.height);if(o.spatialReference.equals(a))return{bitmapData:n,extent:o};const p=this.reprojectBitmapData({bitmapData:n,extent:o},a);return{bitmapData:p.bitmapData,extent:p.extent}}destroy(){this._ownsRctx?(l._instanceRefCount--,l._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),l._instance=null)):(this._quad.dispose(),this._program.dispose())}}l._instanceRefCount=0;class j{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let d=class extends et(rt){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new it,this._kmlVisualData=new j,this._fetchController=null,this.allVisiblePoints=new P,this.allVisiblePolylines=new P,this.allVisiblePolygons=new P,this.allVisibleMapImages=new F}async hitTest(i,t){var a,e,r;const o=this.layer;return[(a=this._pointsView)==null?void 0:a.hitTest(i),(e=this._polylinesView)==null?void 0:e.hitTest(i),(r=this._polygonsView)==null?void 0:r.hitTest(i)].flat().filter(Boolean).map(s=>(s.layer=o,s.sourceLayer=o,{type:"graphic",graphic:s,layer:o,mapPoint:i}))}update(i){this._polygonsView&&this._polygonsView.processUpdate(i),this._polylinesView&&this._polylinesView.processUpdate(i),this._pointsView&&this._pointsView.processUpdate(i)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new R({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new R({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new R({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",i=>{i.added.forEach(t=>this._addMapImage(t)),i.removed.forEach(t=>this._removeMapImage(t))}),N(()=>this.layer.visibleSublayers,i=>{for(const[t,o]of this._kmlVisualData.allSublayers)o.visibility=0;for(const t of i){const o=this._kmlVisualData.allSublayers.get(t.id);o&&(o.visibility=1)}this._refreshCollections()})]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new l}detach(){this._fetchController=W(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=C(this._polygonsView),this._polylinesView=C(this._polylinesView),this._pointsView=C(this._pointsView),this._imageReprojector=C(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(i){var t,o;((t=this.view.spatialReference)!=null&&t.isWGS84||(o=this.view.spatialReference)!=null&&o.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(i.href,T.fromJSON(i.extent),this.view.spatialReference).then(a=>{const e=new tt(a.bitmapData);e.x=a.extent.xmin,e.y=a.extent.ymax,e.resolution=a.extent.width/a.bitmapData.width,e.rotation=i.rotation,this._mapImageContainer.addChild(e),this._bitmapIndex.set(i,e)})}async _getViewDependentUrl(i,t){const{viewFormat:o,viewBoundScale:a,httpQuery:e}=i;if(o!=null){if(t==null)throw new Error("Loading this network link requires a view state.");let r;if(await K(),a!=null&&a!==1){const c=new T(t.extent);c.expand(a),r=c}else r=t.extent;r=k(r,A.WGS84);const s=k(r,A.WebMercator),n=r.xmin,p=r.xmax,m=r.ymin,u=r.ymax,I=t.size[0]*t.pixelRatio,g=t.size[1]*t.pixelRatio,f=Math.max(s.width,s.height),w={"[bboxWest]":n.toString(),"[bboxEast]":p.toString(),"[bboxSouth]":m.toString(),"[bboxNorth]":u.toString(),"[lookatLon]":r.center.x.toString(),"[lookatLat]":r.center.y.toString(),"[lookatRange]":f.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":r.center.x.toString(),"[lookatTerrainLat]":r.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":r.center.x.toString(),"[cameraLat]":r.center.y.toString(),"[cameraAlt]":f.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":I.toString(),"[vertPixels]":g.toString(),"[terrainEnabled]":"0","[clientVersion]":B,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},h=c=>{for(const V in c){let _;for(_ in w)c[V]=c[V].replace(_,w[_])}},y=$(o);h(y);let x={};e!=null&&(x=$(e),h(x));const b=Q(i.href);return b.query={...b.query,...y,...x},`${b.path}?${O(y)}`}return i.href}async _fetchService(i){const t=new j;await this._loadVisualData(this.layer.url,t,i),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i))}_isSublayerVisible(i){const t=this._kmlVisualData.allSublayers.get(i);return!!(t!=null&&t.visibility)&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(i,t,o){return this._fetchParsedKML(i,o).then(async a=>{for(const e of a.sublayers){t.allSublayers.set(e.id,e);const r=e.points?await D(e.points):[],s=e.polylines?await D(e.polylines):[],n=e.polygons?await D(e.polygons):[],p=e.mapImages||[];if(t.allPoints.push(...r.map(m=>({item:m,sublayerId:e.id}))),t.allPolylines.push(...s.map(m=>({item:m,sublayerId:e.id}))),t.allPolygons.push(...n.map(m=>({item:m,sublayerId:e.id}))),t.allMapImages.push(...p.map(m=>({item:m,sublayerId:e.id}))),e.networkLink){const m=await this._getViewDependentUrl(e.networkLink,this.view.state);await this._loadVisualData(m,t,o)}}})}_fetchParsedKML(i,t){return J(i,this.layer.spatialReference,this.layer.refreshInterval,t).then(o=>Y(o.data))}_removeMapImage(i){const t=this._bitmapIndex.get(i);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(i))}};v([S()],d.prototype,"_pointsView",void 0),v([S()],d.prototype,"_polylinesView",void 0),v([S()],d.prototype,"_polygonsView",void 0),v([S()],d.prototype,"updating",void 0),d=v([H("esri.views.2d.layers.KMLLayerView2D")],d);const wo=d;export{wo as default};
