import{r as a,m as d,a as rt,g as ot,B as zt,aV as Vt,N as E}from"./Accessor-BHnuXKD2.js";import{e as $t}from"./defaultUnit-CO7iAvsB.js";import{s as Mt}from"./AnalysisView3D-DKkik0jJ.js";import{e as $}from"./interfaces-js1RL7O8.js";import{s as A}from"./quantityUtils-1LswOhxZ.js";import{d as C,A as z,P as Tt}from"./reactiveUtils-BR0C1Kq4.js";import{az as at,ay as Dt,K as xt,x as Rt}from"./Point-XGrwlf63.js";import{r as Gt,t as jt,d as k}from"./LineVisualElement-B4fIKpim.js";import{h as Ht}from"./euclideanLengthMeasurementUtils-EupqVlJl.js";import{f as Nt}from"./geodesicLengthMeasurementUtils-C8eO8ivV.js";import{f as It}from"./intl-Do3GEEJ7.js";import{K as lt,F as dt,S as kt,E as ct,R as Wt,P as ht}from"./colorUtils-BAowQmkN.js";import{a as Ft,s as Qt}from"./mathUtils-DV9iOXpW.js";import{g as U,y as ut,j as Bt,d as pt,w as Ut}from"./quantityFormatUtils-9VppKzbq.js";import{y as Ct,s as nt}from"./screenUtils-_ZIvrt5o.js";import{j as mt}from"./vec2-maR1OrZI.js";import{o as q,A as K,c as At,_ as Ot,p as qt,E as Y,s as Kt,R as Yt,Y as Jt,g as Xt,u as Zt}from"./vec32-Dvg_eL9J.js";import{n as f}from"./vec3f64-BLpZdpfb.js";import{e as y,o as S}from"./interfaces-CjSZqm0S.js";import{n as J}from"./viewUtils-Ce2x26K8.js";import{a as X,_ as gt,f as j,C as _t}from"./Segment-Cz-DWVE8.js";import{e as te}from"./mat4f64-Dk4dwAN8.js";import{a as vt}from"./vec42-YcqnINSP.js";import{r as Z,n as yt}from"./vec4f64-o2zAXfmz.js";import{c as W}from"./plane-4dpuo6-e.js";import{a as ee}from"./Object3DVisualElement-BtsT49h4.js";import{K as ie,h as se}from"./cameraUtils-D51h-KGF.js";import{w as re}from"./GeometryUtil-vHI0hYMT.js";import{n as oe,b as ne,p as N}from"./Material-Ba8x5bbY.js";import{H as ae}from"./InterleavedLayout-Dvj-Snan.js";import{u as wt}from"./Matrix3PassUniform-Bhi2fM3C.js";import{g as le,s as tt,c as et,r as F,m as de,t as ce,I as he,E as ue,A as bt,e as pe}from"./FloatArray-BCfeX8wo.js";import{e as w}from"./VertexAttribute-Cq4MnHjR.js";import{_ as me}from"./index-tefRSezt.js";import{E as ge,O as _e}from"./enums-D9v74xTE.js";import{B as ve,p as ye,g as we}from"./renderState-e7QeQoUO.js";import{i as ft}from"./ShaderTechniqueConfiguration-YrUOztAU.js";import{D as be}from"./RightAngleQuadVisualElement-C-m5WG_E.js";import{h as it}from"./lineStippleUtils-C89mzWlO.js";import{p as fe}from"./geodesicMeasurementUtils-ChQtpZ42.js";import{h as Le}from"./Promise-CmQqe-ke.js";import"./mat4-Fi6iAz29.js";import"./BindType-BBwFZqyN.js";import{n as H}from"./glsl-BH37Aalp.js";import{i as Ee}from"./ShaderBuilder-DV1s2efh.js";import"./getDefaultUnitForView-CuRQcAm0.js";import"./Portal-CTRRujjZ.js";import"./cast-BA_-jlhc.js";import"./JSONSupport-CGdeqxpk.js";import"./writer-B2bQV2uU.js";import"./Extent-CBBGeHb-.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./projection-B2I9Bzj_.js";import"./Polyline-BmuD2-ZN.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./ElevationProvider-aS5xrHHy.js";import"./dehydratedFeatureUtils-1rrRm6hF.js";import"./line-CTiLAMHp.js";import"./vec2f64-Dy6m9Nrb.js";import"./aaBoundingBox-CeBivBRq.js";import"./Indices-Db9lERgy.js";import"./ViewingMode-Dodu7ZZk.js";import"./Attribute-B-NAci_J.js";import"./RibbonLine.glsl-D3IEIaDR.js";import"./sphere-DQxj5tsv.js";import"./common-DQOJ18NT.js";import"./mat3-CR8GKnhD.js";import"./mat3f64-BBpwCtoL.js";import"./mathUtils-B9R7G-2c.js";import"./basicInterfaces-CZwQPxTp.js";import"./sdfPrimitives-B8Jbwvqs.js";import"./doublePrecisionUtils-B0owpBza.js";import"./floatRGBA-CR2j2c7-.js";import"./Octree-B-jwmuW2.js";import"./lineSegment-C-CDF7QX.js";import"./Texture-D-SqNa4i.js";import"./signal-DSa0yokC.js";import"./getDataTypeBytes-BTGR5GyG.js";import"./RgbaFloatEncoding.glsl-_io2eW3M.js";import"./projectVectorToVector-dS8io47t.js";import"./projectPointToVector-BS0u8fq6.js";import"./spatialReferenceEllipsoidUtils-DM073JUd.js";import"./geometryEngine-CtEcpiHE.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-Dw-Mfo_Y.js";import"./geodesicUtils-Bh_GX0Qj.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./Cyclical-CPiNl4ru.js";import"./unitFormatUtils-Dbksq3U5.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./elevationInfoUtils-RSZ4Logn.js";import"./unitConversionUtils-C4AR5obr.js";import"./lengthUtils-DjJgJFRg.js";import"./VisualElement-D3eR6o-M.js";import"./jsxFactory-CLjKarlq.js";import"./uuid-Cl5lrJ4c.js";import"./TextOverlayItem-D-lNDrXB.js";import"./quatf64-CCm9z-pX.js";import"./Camera-DJtV7zYb.js";import"./Clonable-DvJsj5LF.js";import"./projectVectorToPoint-d6Mr4zvQ.js";import"./Intersector-DqUGp7Vs.js";import"./intersectorUtils-l6zkk4nF.js";import"./boundedPlane-Dyz2ub5d.js";import"./verticalOffsetUtils-CUH6QZ7-.js";import"./orientedBoundingBox-9z4w3ZAL.js";import"./quat-4pa1e6ds.js";import"./computeTranslationToOriginAndRotation-BT43Xu5d.js";import"./earthUtils-5Ip67eD0.js";import"./spatialReferenceSupport-CJqi4Nvp.js";import"./vec3f32-nZdmKIgz.js";import"./NoParameters-t-PuNrgq.js";import"./BufferView-_QDXRCew.js";import"./types-D0PSWh4d.js";import"./triangle-D_E6eTS3.js";import"./opacityUtils-CSd4XoR2.js";import"./requestImageUtils-Brn0e8z8.js";import"./TextureFormat-1mYWTFa-.js";import"./EngineVisualElement-B_1wMpLc.js";import"./Identifiable-BrT7zvUW.js";import"./GridLocalOriginFactory-BvhZ_UoU.js";import"./OverlayCompositing.glsl-BbJKjUZQ.js";import"./SceneLighting-fZH2UQ_L.js";import"./RenderCamera-BovI3JTe.js";import"./axisAngleDegrees-8Sw4vC28.js";import"./weather-DtiKeY2t.js";import"./enumeration-Cr5WIZs4.js";import"./BooleanBindUniform-xvVHJCDz.js";import"./Float4DrawUniform-C_Hqa-pI.js";import"./RenderPlugin-B2sz29jJ.js";import"./HighlightDefaults-ESbuT2uR.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-DcVjXzZo.js";import"./BufferObject-CIl3vJtA.js";import"./memoryEstimations-5gFNwkKK.js";import"./NestedMap-GuqgquCN.js";import"./HUDRenderStyle-BhGvVxgm.js";import"./Scheduler-B_GuBefw.js";import"./debugFlags-ZrDyTcDc.js";import"./ColorMaterial.glsl-CArPvmMs.js";import"./DefaultBufferWriter-D4XUxbP-.js";import"./TriangleMaterial-t01j2IAH.js";import"./VertexColor.glsl-C67vI27I.js";import"./Matrix3DrawUniform-B_gSHO7v.js";import"./Matrix4PassUniform-LFIUaE9i.js";let V=class extends ot{constructor(e){super(e)}initialize(){this.addHandles([C(()=>({viewData:this.viewData,startPoint:this.analysis.startPoint}),({viewData:e,startPoint:t})=>{e.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(t)},z),C(()=>({viewData:this.viewData,endPoint:this.analysis.endPoint}),({viewData:e,endPoint:t})=>{e.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(t)},z),C(()=>({result:this._computedResult,viewData:this.viewData}),({result:e,viewData:t})=>{t.result=e},z)])}_applyProjectionAndElevationAlignment(e){if(e==null)return e;const{spatialReference:t,elevationProvider:i}=this.view;return Gt(e,t,i)??(jt(this.analysis,e.spatialReference,zt.getLogger(this)),null)}get _computedResult(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,measurementMode:i,unit:s}=this.viewData;if(e==null||t==null)return null;const r=Ht(e,t),o=Nt(e,t);if(r==null)return null;let h,c;switch(i){case $.Auto:c=o!=null?"geodesic":"euclidean",h=o??r.horizontal;break;case $.Geodesic:if(o==null)return null;c="geodesic",h=o;break;case $.Euclidean:c="euclidean",h=r.horizontal}let l=r.direct,u=r.vertical;const n=at(l.value,l.unit,s),p=at(h.value,h.unit,s),m=Dt(u.value,u.unit,s);return l=A(l,n),h=A(h,p),u=A(u,m),{mode:c,directDistance:l,horizontalDistance:h,verticalDistance:u}}};a([d()],V.prototype,"view",void 0),a([d()],V.prototype,"analysis",void 0),a([d()],V.prototype,"viewData",void 0),a([d()],V.prototype,"_computedResult",null),V=a([rt("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],V);function Pt(e){const t=new Ee,{vertex:i,fragment:s}=t;le(i,e),i.uniforms.add(new tt("width",o=>o.width)),t.attributes.add(w.POSITION,"vec3"),t.attributes.add(w.NORMAL,"vec3"),t.attributes.add(w.UV0,"vec2"),t.attributes.add(w.LENGTH,"float"),t.varyings.add("vtc","vec2"),t.varyings.add("vlength","float"),t.varyings.add("vradius","float"),i.main.add(H`vec3 bitangent = normal;
vtc = uv0;
vlength = length;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;`),s.uniforms.add(new tt("outlineSize",o=>o.outlineSize),new et("outlineColor",o=>o.outlineColor),new tt("stripeLength",o=>o.stripeLength),new et("stripeEvenColor",o=>o.stripeEvenColor),new et("stripeOddColor",o=>o.stripeOddColor));const r=1/Math.sqrt(2);return s.code.add(H`
    const float INV_SQRT2 = ${H.float(r)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      }
      if (d < outlineSize) {
        return outlineColor;
      }
      return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
    }`),s.main.add(H`
    vec2 ntc = vec2(vtc.x / vradius, vtc.y);
    vec4 color = arrowColor(ntc, vlength / vradius);
    if (color.a < ${H.float(F)}) {
      discard;
    }
    fragColor = color;`),t}const Ce=Object.freeze(Object.defineProperty({__proto__:null,build:Pt},Symbol.toStringTag,{value:"Module"}));class Ae extends de{constructor(t,i){super(t,i,new ce(Ce,()=>me(()=>Promise.resolve().then(()=>Qe),void 0,import.meta.url)),St),this.primitiveType=ge.TRIANGLE_STRIP}initializePipeline(t){return ve({blending:t.transparent?he(t.oitPass):null,polygonOffset:t.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:_e.LESS},depthWrite:ye,colorWrite:we})}}const St=new Map([[w.POSITION,0],[w.NORMAL,1],[w.UV0,2],[w.LENGTH,3]]);class st extends ue{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1}}a([ft()],st.prototype,"polygonOffsetEnabled",void 0),a([ft()],st.prototype,"transparent",void 0);let Oe=class extends oe{constructor(t){super(t,Se),this._configuration=new st,this.vertexAttributeLocations=St,this.produces=new Map([[bt.OPAQUE_MATERIAL,i=>!this._transparent&&wt(i)],[bt.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,i=>this._transparent&&wt(i)]])}getConfiguration(t,i){return this._configuration.polygonOffsetEnabled=this.parameters.polygonOffset,this._configuration.transparent=this._transparent,this._configuration.oitPass=i.oitPass,this._configuration}get visible(){const{outlineColor:t,stripeEvenColor:i,stripeOddColor:s}=this.parameters;return t[3]>=F||i[3]>=F||s[3]>=F}intersect(){}createGLMaterial(t){return new Pe(t)}createBufferWriter(){return new xe}get _transparent(){const{parameters:t}=this;return t.outlineColor[3]<1||t.stripeEvenColor[3]<1||t.stripeOddColor[3]<1}},Pe=class extends pe{beginSlot(t){return this.getTechnique(Ae,t)}};class Se extends ne{constructor(){super(...arguments),this.width=32,this.outlineSize=.2,this.outlineColor=Z(1,.5,0,1),this.stripeEvenColor=Z(1,1,1,1),this.stripeOddColor=Z(1,.5,0,1),this.stripeLength=1,this.polygonOffset=!1}}const ze=ae().vec3f(w.POSITION).vec3f(w.NORMAL).vec2f(w.UV0).f32(w.LENGTH),Ve=f(),$e=f(),Me=f(),Te=f(),De=f();class xe{constructor(){this.vertexBufferLayout=ze}elementCount(t){return 2*(t.get(w.POSITION).indices.length/2+1)}write(t,i,s,r,o,h){const{data:c,indices:l}=s.get(w.POSITION),u=s.get(w.NORMAL).data,n=c.length/3;l&&l.length!==2*(n-1)&&console.warn("MeasurementArrowMaterial does not support indices");const p=Ve,m=$e,_=Me,L=Te,M=De,T=o.position,D=o.normal,O=o.uv0;let x=0;for(let b=0;b<n;++b){const G=3*b;if(q(p,c[G],c[G+1],c[G+2]),b<n-1){const R=3*(b+1);q(m,c[R],c[R+1],c[R+2]),q(M,u[R],u[R+1],u[R+2]),K(M,M),At(_,m,p),K(_,_),Ot(L,M,_),K(L,L)}const B=qt(p,m);t&&i&&(Y(p,p,t),Y(m,m,t),Y(L,L,i));const P=h+2*b,I=P+1;T.setVec(P,p),T.setVec(I,p),D.setVec(P,L),D.setVec(I,L),O.set(P,0,x),O.set(P,1,-1),O.set(I,0,x),O.set(I,1,1),b<n-1&&(x+=B)}const Q=o.length;for(let b=0;b<2*n;++b)Q.set(h+b,x)}}let Re=class extends ee{constructor(t){super(t),this._arrowWidth=16,this._arrowSubdivisions=128,this._origin=f(),this._originTransform=te(),this._arrowCenter=f(),this._renderOccluded=N.OccludeAndTransparent,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._color=yt(),this._contrastColor=yt(),this.applyProperties(t)}get renderOccluded(){return this._renderOccluded}set renderOccluded(t){var i;t!==this._renderOccluded&&(this._renderOccluded=t,(i=this._arrowMaterial)==null||i.setParameters({renderOccluded:t}))}get geometry(){return this._geometry}set geometry(t){this._geometry=t,this._geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(t){this._stripeLength=t,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(t){if(this._stripesEnabled=t,this.attached){const i=this._stripesEnabled?this._contrastColor:this._color;this._arrowMaterial.setParameters({stripeEvenColor:i})}}get color(){return this._color}set color(t){lt(t,this._color)||(vt(this._color,t),this._updateArrowColor())}get contrastColor(){return this._contrastColor}set contrastColor(t){lt(t,this._color)||(vt(this._contrastColor,t),this._updateArrowColor())}createExternalResources(){const t=this._color,i=this._contrastColor,s=this._stripesEnabled?i:t;this._arrowMaterial=new Oe({outlineColor:t,stripeEvenColor:s,stripeOddColor:t,renderOccluded:this.renderOccluded,polygonOffset:!0,isDecoration:this.isDecoration}),this._handles=new Vt,this._handles.add(C(()=>this.view.state.camera,()=>{this._viewChanged()}))}destroyExternalResources(){this._arrowMaterial=null,this._handles=E(this._handles)}forEachExternalMaterial(t){t(this._arrowMaterial)}createGeometries(t){var s;if(((s=this._geometry)==null?void 0:s.startRenderSpace)==null||this._geometry.endRenderSpace==null)return;const i=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);i.transformation=this._originTransform,t.addGeometry(i),this._viewChanged()}_createArrowGeometry(t,i,s,r){const o=this.view,h=o.renderCoordsHelper,c=[],l=[],u=(n,p)=>{const m=W.get();At(m,n,s),c.push(m),l.push(p)};if(r.type==="euclidean"){r.eval(.5,this._arrowCenter);const n=W.get();if(h.worldUpAtPosition(this._arrowCenter,n),Ge(t,i,n)){const{heading:p,tilt:m}=o.camera,{direction:_}=ie(o,t,p,m,je);Kt(n,_)}u(t,n),u(i,n)}else{r.eval(.5,this._arrowCenter);const n=this._arrowSubdivisions+1&-2;for(let p=0;p<n;++p){const m=p/(n-1),_=W.get(),L=W.get();r.eval(m,_),h.worldUpAtPosition(_,L),u(_,L)}}return re(this._arrowMaterial,c,l)}_geometryChanged(){this.recreateGeometry()}_viewChanged(){if(this.view.ready&&this.attached&&this._geometry!=null){const t=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._arrowWidth*t})}}_updateArrowColor(){if(!this.attached)return;const t=this._color,i=this._contrastColor,s=this._stripesEnabled?i:t,r=t,o=t;this._arrowMaterial.setParameters({stripeEvenColor:s,outlineColor:r,stripeOddColor:o})}};function Ge(e,t,i){const s=Yt(Lt,t,e),r=Ot(Lt,s,i);return Jt(r)===0}const Lt=f(),je=se();let v=class extends ot{get _parameters(){const e=this.view.effectiveTheme,{accentColor:t,textColor:i}=e,s=dt(t),r=kt(t,.75),o=dt(ct(t)),h=ct(i,Wt.Low);return{accentColor:s,contrastColor:o,translucentAccentColor:r,triangleLineWidth:3,geodesicProjectionLineWidth:2,guideLineWidth:2,guideStippleLengthPixels:3,directLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12,textColor:i,textBackgroundColor:ht(h,.6),textCalloutColor:ht(h,.5)}}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView;if(e==null||t==null||e.equals(t))return y.None;const i=this.analysisView.result;if(i==null)return y.Direct;if(this.actualVisualizedMeasurement==="geodesic")return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?y.ProjectedGeodesic:y.Direct;const{verticalDistance:s,horizontalDistance:r}=i,o=A(s,"meters").value,h=A(r,"meters").value;return Math.min(o/h,h/o)<this.triangleCollapseRatioThreshold?y.Direct:y.Triangle}get actualVisualizedMeasurement(){const{measurementMode:e,result:t}=this.analysisView;switch(e){case $.Auto:return t!=null&&A(t.horizontalDistance,"meters").value>fe?"geodesic":"euclidean";case $.Euclidean:return"euclidean";case $.Geodesic:return"geodesic"}}get allowVisualElementsOrientationChange(){return this._triangleOrientationOverride==null}set allowVisualElementsOrientationChange(e){this._triangleOrientationOverride==null!==e&&(this._triangleOrientationOverride==null?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){return this.actualVisualizedMeasurement==="geodesic"?{direct:null,horizontal:this._segmentLabel,vertical:this._verticalLabel}:{direct:this._segmentLabel,horizontal:this._horizontalLabel,vertical:this._verticalLabel}}constructor(e){super(e),this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=f(),this._endPosition=f(),this._cornerPosition=f(),this._startPositionAtSeaLevel=f(),this._endPositionAtSeaLevel=f(),this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=S.Auto,this.triangleCollapseRatioThreshold=.03}initialize(){const e=this._parameters,t={attached:!0,view:this.view,isDecoration:!0},{guideLineWidth:i,guideStippleLengthPixels:s,triangleLineWidth:r,geodesicProjectionLineWidth:o,directLabelFontSize:h,verticalLabelFontSize:c,horizontalLabelFontSize:l}=e;this._segmentVisualElement=new Re({...t,geometry:null,renderOccluded:N.OccludeAndTransparent}),this._triangleVisualElement=new k({...t,width:r,renderOccluded:N.OccludeAndTransparent}),this._rightAngleQuad=new be({...t,renderOccluded:N.OccludeAndTransparent});const u={...t,polygonOffset:!0,renderOccluded:N.OccludeAndTransparent};this._projectedGeodesicLine=new k({...u,width:o,stipplePattern:it(s)}),this._geodesicStartHint=new k({...u,width:i,stipplePattern:it(s)}),this._geodesicEndHint=new k({...u,width:i,stipplePattern:it(s)}),this._segmentLabel=new X({...t,fontSize:h}),this._verticalLabel=new X({...t,fontSize:c}),this._horizontalLabel=new X({...t,fontSize:l}),this.addHandles([C(()=>{const{elevationAlignedStartPoint:n,elevationAlignedEndPoint:p}=this.analysisView,m=this.view;return{view:m,camera:m.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:n,elevationAlignedEndPoint:p,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}},n=>this._updateGeometryAndViewMode(n),z),C(()=>({visible:this.visible,viewMode:this.viewMode}),n=>this._updateVisualElementVisibility(n),z),C(()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement}),n=>this._updateLabelText(n),z),C(()=>({visible:this.visible,viewMode:this.viewMode}),n=>this._updateLabelVisibility(n),z),C(()=>this._measurementArrowStripeLength,n=>this._updateSegmentStripeLength(n),z),Le(async()=>this._updateMessageBundle()),C(()=>this._parameters,({textBackgroundColor:n,textCalloutColor:p,textColor:m,translucentAccentColor:_,accentColor:L,contrastColor:M})=>{const{_segmentLabel:T,_verticalLabel:D,_horizontalLabel:O,_triangleVisualElement:x,_rightAngleQuad:Q,_projectedGeodesicLine:b,_geodesicStartHint:G,_geodesicEndHint:B,_segmentVisualElement:P}=this;T.backgroundColor=n,T.calloutColor=p,T.textColor=m,D.backgroundColor=n,D.calloutColor=p,D.textColor=m,O.backgroundColor=n,O.calloutColor=p,O.textColor=m,x.color=_,Q.color=_,b.color=_,G.color=_,B.color=_,P.color=L,P.contrastColor=M},Tt)]),this._updateMessageBundle()}destroy(){this._segmentVisualElement=E(this._segmentVisualElement),this._triangleVisualElement=E(this._triangleVisualElement),this._rightAngleQuad=E(this._rightAngleQuad),this._projectedGeodesicLine=E(this._projectedGeodesicLine),this._geodesicStartHint=E(this._geodesicStartHint),this._geodesicEndHint=E(this._geodesicEndHint),this._segmentLabel=E(this._segmentLabel),this._verticalLabel=E(this._verticalLabel),this._horizontalLabel=E(this._horizontalLabel),this.set("view",null)}_updateVisualElementVisibility({visible:e,viewMode:t}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,e)switch(t){case y.None:break;case y.Direct:this._segmentVisualElement.visible=!0;break;case y.Triangle:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case y.ProjectedGeodesic:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:e,camera:t,viewMode:i,elevationAlignedStartPoint:s,elevationAlignedEndPoint:r,orientation:o,visualizedMeasurement:h,stripeLength:c}){const l=e.renderCoordsHelper;if(l==null||s==null||r==null||s.equals(r))return;let u=this._startPosition,n=this._endPosition;l.toRenderCoords(s,u),l.toRenderCoords(r,n);const p=o===S.AboveSegment?1:-1,m=p*(l.getAltitude(n)-l.getAltitude(u));m<0&&(u=this._endPosition,n=this._startPosition);const _=h==="geodesic"?new gt(this._startPosition,this._endPosition,l.spatialReference):new j(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=_,this._updateSegmentStripeLength(c),i){case y.Direct:this._updateSegment(_,o);break;case y.Triangle:this._updateSegmentAndTriangle({view:e,camera:t,segment:_,orientation:o,startPosition:u,endPosition:n,deltaSign:p,altitudeDelta:m});break;case y.ProjectedGeodesic:this._updateSegmentAndProjection({view:e,orientation:o,startPosition:u,endPosition:n})}}_updateSegment(e,t){this._segmentLabel.anchor=t===S.AboveSegment?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:e},camera:t,segment:i,orientation:s,startPosition:r,endPosition:o,deltaSign:h,altitudeDelta:c}){const l=this._cornerPosition;e.worldUpAtPosition(r,l),Xt(l,l,h*Math.abs(c)),Zt(l,l,r),this._triangleVisualElement.geometry=[[[r[0],r[1],r[2]],[l[0],l[1],l[2]],[o[0],o[1],o[2]]]],this._rightAngleQuad.geometry={previous:r,center:l,next:o};const u=new j(r,l),n=new j(l,o),p=He(r,o,l,s,t);this._segmentLabel.anchor=p.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:u,sampleLocation:"center"},this._verticalLabel.anchor=p.vertical,this._horizontalLabel.geometry={type:"segment",segment:n,sampleLocation:"center"},this._horizontalLabel.anchor=p.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:e},orientation:t,startPosition:i,endPosition:s}){e.setAltitude(this._startPositionAtSeaLevel,0,i),e.setAltitude(this._endPositionAtSeaLevel,0,s);const r=new gt(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,e.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(r),this._geodesicStartHint.setGeometryFromSegment(new j(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new j(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},this._segmentLabel.anchor=t===S.AboveSegment?"top":"bottom"}_updateLabelText({text:e,visualizedMeasurement:t}){e!=null?(this._segmentLabel.text=t==="euclidean"?e.directDistance:e.horizontalDistance,this._horizontalLabel.text=e.horizontalDistance,this._verticalLabel.text=e.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({visible:e,viewMode:t}){const i=this._segmentLabel,s=this._horizontalLabel,r=this._verticalLabel;if(i.visible=!1,s.visible=!1,r.visible=!1,e)switch(t){case y.Direct:i.visible=!0;break;case y.Triangle:i.visible=!0,s.visible=!0,r.visible=!0;break;case y.ProjectedGeodesic:i.visible=!0;case y.None:}}get _labelsText(){if(this.destroyed)return null;const e=this.messages,t=this.analysisView.result;if(t==null||e==null)return null;const{directDistance:i,horizontalDistance:s,verticalDistance:r}=t,o=this.analysisView.unit,h=c=>({directDistance:"",horizontalDistance:"",verticalDistance:"",...c});switch(o){case"metric":return h({directDistance:i&&pt(e,i),horizontalDistance:s&&pt(e,s),verticalDistance:r&&Ut(e,r)});case"imperial":return h({directDistance:i&&ut(e,i),horizontalDistance:s&&ut(e,s),verticalDistance:r&&Bt(e,r)});default:return h({directDistance:i&&U(e,i,o),horizontalDistance:s&&U(e,s,o),verticalDistance:r&&U(e,r,o)})}}_updateSegmentStripeLength(e){const t=this._segmentVisualElement;e!=null?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(this._triangleOrientationOverride!=null)return this._triangleOrientationOverride;const e=this.visualElementOrientation;return e===S.Auto?this.view.state.camera.aboveGround?S.AboveSegment:S.BelowSegment:e}_requiresGeodesicGuideAt(e){const t=this.view;if(!(t!=null&&t.state))return!1;const i=t.state.camera,s=t.renderCoordsHelper;if(!s)return!1;const r=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/r>=10}get _measurementArrowStripeLength(){const{result:e,unit:t}=this.analysisView;if(e==null)return null;let i=null;const s=e.directDistance;switch(t){case"metric":i=s&&A(s,"meters");break;case"imperial":i=s&&A(s,xt(s.value,s.unit));break;default:i=s&&A(s,t)}return i==null?null:Ft(i.value/30)*Rt(1,i.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0,It("esri/core/t9n/Units").then(e=>{this.messages=e}).finally(()=>{this.loadingMessages=!1})}get testData(){}};function He(e,t,i,s,r){const o=Ne,h=Ie;r.projectToRenderScreen(i,o),r.projectToRenderScreen(t,h);const c={segment:"bottom",horizontal:"top",vertical:o[0]<h[0]?"left":"right"};{const l=ke,u=We;if(J(e,i,r,l),J(e,t,r,u),mt(l,u)>=Et){const n=Math.sign(l[1])===Math.sign(u[1]);c.segment=n?_t(c.vertical):c.vertical}else{const n=Fe;J(i,t,r,n),mt(n,u)>=Et&&(c.segment=Math.sign(n[0])===Math.sign(u[0])?_t(c.horizontal):c.horizontal)}}if(s===S.BelowSegment){const l=u=>u==="top"?"bottom":"top";c.segment=l(c.segment),c.horizontal=l(c.horizontal),c.vertical=l(c.vertical)}return c}a([d()],v.prototype,"_parameters",null),a([d()],v.prototype,"_triangleOrientationOverride",void 0),a([d()],v.prototype,"messages",void 0),a([d()],v.prototype,"view",void 0),a([d()],v.prototype,"analysis",void 0),a([d()],v.prototype,"analysisView",void 0),a([d()],v.prototype,"loadingMessages",void 0),a([d()],v.prototype,"visible",null),a([d()],v.prototype,"viewMode",null),a([d()],v.prototype,"actualVisualizedMeasurement",null),a([d()],v.prototype,"visualElementOrientation",void 0),a([d()],v.prototype,"triangleCollapseRatioThreshold",void 0),a([d()],v.prototype,"allowVisualElementsOrientationChange",null),a([d()],v.prototype,"labels",null),a([d()],v.prototype,"_labelsText",null),a([d()],v.prototype,"_actualVisualElementsOrientation",null),a([d()],v.prototype,"_measurementArrowStripeLength",null),v=a([rt("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],v);const Et=Math.cos(Qt(12)),Ne=Ct(),Ie=Ct(),ke=nt(),We=nt(),Fe=nt();let g=class extends Mt(ot){constructor(e){super(e),this.type="direct-line-measurement-view-3d",this.analysis=null,this.result=null,this.measurementMode=$.Auto,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null}initialize(){const e=this.view,t=this.analysis;this._analysisVisualization=new v({view:e,analysis:t,analysisView:this}),this._analysisController=new V({view:e,analysis:t,viewData:this})}destroy(){this._analysisController=E(this._analysisController),this._analysisVisualization=E(this._analysisVisualization)}get updating(){var e;return!!((e=this._analysisVisualization)!=null&&e.loadingMessages)}get viewMode(){return this._analysisVisualization.viewMode}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(e){this._analysisVisualization.visualElementOrientation=e}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(e){this._analysisVisualization.allowVisualElementsOrientationChange=e}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._analysisVisualization.triangleCollapseRatioThreshold=e}get directLabelText(){var e;return((e=this._analysisVisualization.labels.direct)==null?void 0:e.text)??""}get horizontalLabelText(){var e;return((e=this._analysisVisualization.labels.horizontal)==null?void 0:e.text)??""}get verticalLabelText(){var e;return((e=this._analysisVisualization.labels.vertical)==null?void 0:e.text)??""}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){}};a([d()],g.prototype,"updating",null),a([d({readOnly:!0})],g.prototype,"type",void 0),a([d({constructOnly:!0,nonNullable:!0})],g.prototype,"analysis",void 0),a([d()],g.prototype,"result",void 0),a([d()],g.prototype,"measurementMode",void 0),a([d()],g.prototype,"elevationAlignedStartPoint",void 0),a([d()],g.prototype,"elevationAlignedEndPoint",void 0),a([d({readOnly:!0})],g.prototype,"viewMode",null),a([d({readOnly:!0})],g.prototype,"actualVisualizedMeasurement",null),a([d()],g.prototype,"visualElementOrientation",null),a([d()],g.prototype,"allowVisualElementsOrientationChange",null),a([d()],g.prototype,"triangleCollapseRatioThreshold",null),a([d({readOnly:!0})],g.prototype,"directLabelText",null),a([d({readOnly:!0})],g.prototype,"horizontalLabelText",null),a([d({readOnly:!0})],g.prototype,"verticalLabelText",null),a([d()],g.prototype,"_analysisVisualization",void 0),a([d()],g.prototype,"_analysisController",void 0),a([d()],g.prototype,"unit",null),a([d($t)],g.prototype,"_defaultUnit",void 0),g=a([rt("esri.views.3d.analysis.DirectLineMeasurementAnalysisView3D")],g);const Rr=g,Qe=Object.freeze(Object.defineProperty({__proto__:null,build:Pt},Symbol.toStringTag,{value:"Module"}));export{Rr as default};
