import{g as K,r as S,m as q,a as W}from"./Accessor-BHnuXKD2.js";import{V as X}from"./reactiveUtils-BR0C1Kq4.js";import{s as Y,r as G}from"./Cyclical-CPiNl4ru.js";import{f as H,o as b}from"./quantityUtils-1LswOhxZ.js";import{n as C}from"./vec3f64-BLpZdpfb.js";import{j as u}from"./elevationInfoUtils-RSZ4Logn.js";import{p as P,N as m,C as _,s as c,D as $,e as F,v as z,J as Z,g as N,q as ee,i as te,E as ie}from"./RightAngleSnappingHint-CCcBBYgG.js";import{Q as re}from"./Point-XGrwlf63.js";import{m as A,b as J,e as Q,j as se,p as oe,d as ne,_ as he}from"./vec2-maR1OrZI.js";import{s as x,r as ae,g as pe,f as L,e as de,o as le,h as ce}from"./SnappingManager-CF4NflXd.js";import{y as R,M as U}from"./angularMeasurementUtils-lDJJxFDs.js";import{u as B}from"./geodesicLengthMeasurementUtils-C8eO8ivV.js";import{j as ge,I as M,N as me}from"./geometry2dUtils-vtViF5g_.js";import{n as I}from"./vec2f64-Dy6m9Nrb.js";import{q as fe,c as ue,o as xe}from"./vec32-Dvg_eL9J.js";import"./Evented-DCWccWGU.js";import"./SimpleObservable-7oieNGD8.js";import"./mathUtils-DV9iOXpW.js";import"./unitConversionUtils-C4AR5obr.js";import"./lengthUtils-DjJgJFRg.js";import"./Color-gncXBiLc.js";import"./colorUtils-Rxh2V3ai.js";import"./JSONSupport-CGdeqxpk.js";import"./opacityUtils-CSd4XoR2.js";import"./index-tefRSezt.js";import"./Promise-CmQqe-ke.js";import"./cast-BA_-jlhc.js";import"./timeUtils-D2X862bk.js";import"./projectVectorToVector-dS8io47t.js";import"./Extent-CBBGeHb-.js";import"./Polyline-BmuD2-ZN.js";import"./writer-B2bQV2uU.js";import"./projectBuffer-DOU0xvVi.js";import"./geodesicConstants-yASAK_zX.js";import"./projectPointToVector-BS0u8fq6.js";import"./projection-B2I9Bzj_.js";import"./Query-DCBIeen2.js";import"./enumeration-Cr5WIZs4.js";import"./jsonUtils-Cu7OBRmN.js";import"./typeUtils-BSg8Y507.js";import"./Field-Cyk7Ur5d.js";import"./fieldType-L-VlbZqy.js";import"./FullTextSearch-BWm_kPUE.js";import"./Clonable-DvJsj5LF.js";import"./TimeExtent-J5qnUFx_.js";import"./InputManager-Bs9UE-jw.js";import"./Queue-BOnccek2.js";import"./signal-DSa0yokC.js";import"./keybindings-DrKrBFID.js";import"./utils-D02V2_jH.js";import"./Version-9k2AOv05.js";import"./vec42-YcqnINSP.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./geodesicUtils-Bh_GX0Qj.js";import"./plane-4dpuo6-e.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-CCm9z-pX.js";import"./mathUtils-B9R7G-2c.js";import"./sphere-DQxj5tsv.js";import"./mat4-Fi6iAz29.js";import"./mat3-CR8GKnhD.js";import"./screenUtils-_ZIvrt5o.js";import"./viewUtils-Ce2x26K8.js";import"./geometryEngine-CtEcpiHE.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-Dw-Mfo_Y.js";import"./geodesicMeasurementUtils-ChQtpZ42.js";class k{constructor(i,e){this.view=i,this.options=e,this.squaredShortLineThreshold=P.shortLineThreshold*P.shortLineThreshold}snap(i,e){return e.vertexHandle!=null?e.vertexHandle.type!=="vertex"?[]:this.snapExistingVertex(i,e):this.snapNewVertex(i,e)}edgeExceedsShortLineThreshold(i,e){return this.exceedsShortLineThreshold(m(i.leftVertex.pos,this.view,e),m(i.rightVertex.pos,this.view,e),e)}exceedsShortLineThreshold(i,e,{spatialReference:t}){return this.squaredShortLineThreshold===0||_(x(e,t,u,this.view),x(i,t,u,this.view))>this.squaredShortLineThreshold}isVertical(i,e,{spatialReference:t}){const r=re(t);return A(c(i),c(e))*r<P.verticalLineThresholdMeters}squaredProximityThreshold(i){return i==="touch"?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:i,touchSensitivityMultiplier:e}=this.options,t=i*e;return t*t}}class ve extends k{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=t.edges.length,s=[];if(r<1)return s;const{spatialReference:o}=e,h=x(i,o,u,this.view),{view:n}=this,a=t.edges[r-1];let p=a;do{if(this.edgeExceedsShortLineThreshold(p,e)){const g=$(p,n,e);this._processCandidateProposal(g.left,g.right,i,h,e,s)}p=p.leftVertex.leftEdge}while(p&&p!==a);return s}snapExistingVertex(i,e){const t=[],r=e.vertexHandle,s=r.component;if(s.edges.length<2)return t;const{view:o}=this,{spatialReference:h}=e,n=x(i,h,u,o),a=r.leftEdge,p=r.rightEdge;a&&p&&this.edgeExceedsShortLineThreshold(a,e)&&this.edgeExceedsShortLineThreshold(p,e)&&this._processCandidateProposal(m(a.leftVertex.pos,o,e),m(p.rightVertex.pos,o,e),i,n,e,t);const g=s.edges[0];let l=g;do{if(l!==r.leftEdge&&l!==r.rightEdge&&this.edgeExceedsShortLineThreshold(l,e)){const f=$(l,o,e);this._processCandidateProposal(f.left,f.right,i,n,e,t)}l=l.rightVertex.rightEdge}while(l&&l!==g);return t}_processCandidateProposal(i,e,t,r,s,o){var g;const{spatialReference:h,pointer:n}=s,a=C();Ee(a,i,e,t,s);const p=F(z(a));_(r,x(p,h,u,this.view))<this.squaredProximityThreshold(n)&&o.push(new ae({lineStart:i,lineEnd:e,targetPoint:p,isDraped:((g=s.elevationInfo)==null?void 0:g.mode)==="on-the-ground"}))}}function Ee(d,i,e,t,r){we(d,i,e,t,r)||Ve(d,t,i,e)}function we(d,i,e,t,{spatialReference:r}){const s=R(i,e,r,r);if(s==null)return!1;const o=R(e,t,r,r);if(o==null)return!1;const h=B(e,t,r);if(h==null)return!1;const n=Math.abs(Y.shortestSignedDiff(s,o))>Math.PI/2?G.normalize(s+Math.PI):s;return U(d,e,r,H(h,"meters"),b(n,"radians","geographic"),"geodesic"),d[2]=t[2],!0}function Ve(d,i,e,t){Z(i,{start:e,end:t,type:ge.LINE},d),d[2]=i[2]}let Pe=class extends k{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=t.edges.length,s=t.vertices.length,o=[];if(r<2)return o;const{view:h}=this,n=x(i,e.spatialReference,u,h),a=m(t.vertices[s-1].pos,h,e),p=m(t.vertices[0].pos,h,e),g=t.edges[r-1];let l=g;do{if(this.edgeExceedsShortLineThreshold(l,e)){const f=$(l,h,e);this._checkEdgeForParallelLines(f,a,i,n,e,o),this._checkEdgeForParallelLines(f,p,i,n,e,o)}l=l.leftVertex.leftEdge}while(l&&l!==g);return o}snapExistingVertex(i,e){const t=[],r=e.vertexHandle,s=r.component;if(s.edges.length<3)return t;const{view:o}=this,h=x(i,e.spatialReference,u,o),n=r.leftEdge,a=r.rightEdge,p=s.vertices[0],g=m(p.pos,o,e),l=s.vertices.length,f=s.vertices[l-1],w=m(f.pos,o,e),y=s.edges[0];let v=y;do{if(v!==n&&v!==a&&this.edgeExceedsShortLineThreshold(v,e)){const T=$(v,o,e);n&&this._checkEdgeForParallelLines(T,m(n.leftVertex.pos,o,e),i,h,e,t),a&&this._checkEdgeForParallelLines(T,m(a.rightVertex.pos,o,e),i,h,e,t),r===p?this._checkEdgeForParallelLines(T,w,i,h,e,t):r===f&&this._checkEdgeForParallelLines(T,g,i,h,e,t)}v=v.rightVertex.rightEdge}while(v&&v!==y);return t}_checkEdgeForParallelLines(i,e,t,r,s,o){var l;const h=i.left,n=i.right;if(M(E,c(e),c(h),c(n)),J(E,c(e))<P.parallelLineThreshold)return;M(E,c(t),c(h),c(n),c(e));const{spatialReference:a,pointer:p}=s,g=F(N(E[0],E[1],t[2]));if(_(r,x(g,a,u,this.view))<this.squaredProximityThreshold(p)){if(this.isVertical(g,e,s)||this.isVertical(h,n,s)||_e(i,o))return;o.push(new pe({referenceLine:i,lineStart:e,targetPoint:g,isDraped:((l=s.elevationInfo)==null?void 0:l.mode)==="on-the-ground"}))}}};function _e(d,i){const e=d.left,t=d.right;for(const r of i)if(M(E,c(t),c(r.constraint.start),c(r.constraint.end),c(e)),J(E,c(t))<P.parallelLineThreshold)return r.addReferenceLine(d),!0;return!1}const E=I();class ye extends k{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=[];if(t.vertices.length<2)return r;const{view:s}=this,o=x(i,e.spatialReference,u,s),h=t.vertices.at(-1);this._checkForSnappingCandidate(L.LastVertex,r,h.leftEdge,h,h.leftEdge.leftVertex,i,o,e);const n=t.vertices[0];return this._checkForSnappingCandidate(L.FirstVertex,r,n.rightEdge,n,n.rightEdge.rightVertex,i,o,e),r}snapExistingVertex(i,e){const t=[],r=e.vertexHandle;if(r.component.vertices.length<3)return t;const{view:s}=this,o=x(i,e.spatialReference,u,s),h=r.leftEdge,n=r.rightEdge;if(h!=null&&h.leftVertex.leftEdge){const a=h.leftVertex.leftEdge;this._checkForSnappingCandidate(L.ExistingEdge,t,a,a.rightVertex,a.leftVertex,i,o,e)}if(n!=null&&n.rightVertex.rightEdge){const a=n.rightVertex.rightEdge;this._checkForSnappingCandidate(L.ExistingEdge,t,a,a.leftVertex,a.rightVertex,i,o,e)}return t}_checkForSnappingCandidate(i,e,t,r,s,o,h,n){if(!this.edgeExceedsShortLineThreshold(t,n))return;const a=this.view,p=m(r.pos,a,n),g=m(s.pos,a,n);Te(O,g,p,o,n),this._checkForSnappingCandidateAlongProjectedRay(i,e,g,p,O,o,h,n)}_checkForSnappingCandidateAlongProjectedRay(i,e,t,r,s,o,h,n){var v;const{spatialReference:a,pointer:p}=n,g=Q(j,c(o),c(r)),l=se(s,g)/oe(s),f=ne(j,c(r),s,l),w=F(N(f[0],f[1],o[2]));if(_(h,x(w,a,u,this.view))>this.squaredProximityThreshold(p)||this.isVertical(w,r,n)||this.isVertical(r,t,n))return;const y=fe(C(),r,s,Math.sign(l));e.push(new de({targetPoint:w,constraint:new ee(r,z(y)),previousVertex:t,otherVertex:r,otherVertexType:le.CENTER,selfSnappingType:i,isDraped:((v=n.elevationInfo)==null?void 0:v.mode)==="on-the-ground"}))}}function Te(d,i,e,t,r){Se(d,i,e,t,r)||Le(d,i,e)}function Se(d,i,e,t,{spatialReference:r}){const s=R(i,e,r,r);if(s==null)return!1;const o=R(e,t,r,r);if(o==null)return!1;const h=Math.sign(G.shortestSignedDiff(s,o))*Math.PI*.5,n=b(s+h,"radians","geographic"),a=C(),p=B(e,t,r);return p!=null&&(U(a,e,r,H(p,"meters"),n,"geodesic"),ue(d,a,e),!0)}function Le(d,i,e){const t=Q(j,c(e),c(i));xe(d,t[1],-t[0],0)}const j=I(),O=C();let $e=class extends k{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=[],s=t.vertices.length;if(e.editGeometryOperations.data.type!=="polygon"||s<2)return r;const{view:o}=this,h=t.vertices[0],n=t.vertices[s-1],a=m(h.pos,o,e),p=m(n.pos,o,e);return this._processCandidateProposal(a,p,i,e,r),r}snapExistingVertex(i,e){const t=[],r=e.vertexHandle,s=r.component;if(s.edges.length<2||e.editGeometryOperations.data.type==="polyline"&&(r.index===0||r.index===s.vertices.length-1))return t;const{view:o}=this,h=m(r.leftEdge.leftVertex.pos,o,e),n=m(r.rightEdge.rightVertex.pos,o,e);return this._processCandidateProposal(h,n,i,e,t),t}_processCandidateProposal(i,e,t,r,s){var f;if(!this.exceedsShortLineThreshold(i,e,r))return;const o=he(D,c(i),c(e),.5),h=.5*A(c(i),c(e)),n=me(D,c(t),o,h),a=F(N(n[0],n[1],t[2])),{spatialReference:p,pointer:g}=r,l=x(t,p,u,this.view);if(_(l,x(a,p,u,this.view))<this.squaredProximityThreshold(g)){if(this.isVertical(i,a,r)||this.isVertical(a,e,r))return;s.push(new ce({targetPoint:a,point1:i,point2:e,isDraped:((f=r.elevationInfo)==null?void 0:f.mode)==="on-the-ground"}))}}};const D=I();let V=class extends K{constructor(d){super(d),this.updating=!1,this._snappers=new X,this._domain=te.SELF}initialize(){this._snappers.push(new Pe(this.view,this.options),new ve(this.view,this.options),new ye(this.view,this.options),new $e(this.view,this.options))}set options(d){this._set("options",d);for(const i of this._snappers)i.options=d}async fetchCandidates(d,i,e){if(!(i&this._domain&&this.options.effectiveSelfEnabled))return[];const t=[];for(const r of this._snappers.items)for(const s of r.snap(d,e))t.push(s);return ie(d,t),t}};S([q({readOnly:!0})],V.prototype,"updating",void 0),S([q({constructOnly:!0})],V.prototype,"view",void 0),S([q()],V.prototype,"options",null),V=S([W("esri.views.interactive.snapping.SelfSnappingEngine")],V);export{V as SelfSnappingEngine};
