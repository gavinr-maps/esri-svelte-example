const M=new Float32Array(1);function g(n){--n;for(let e=1;e<32;e<<=1)n|=n>>e;return n+1}function s(n,e,r){return Math.min(Math.max(n,e),r)}function B(n,e){return e===0?0:Math.round(n/e)*e}function E(n){return!(n&n-1)}function I(n){return n--,n|=n>>1,n|=n>>2,n|=n>>4,n|=n>>8,n|=n>>16,++n}function p(n){return 10**Math.ceil(Math.LOG10E*Math.log(n))}function m(n,e,r){return n+(e-n)*r}function w(n,e,r,u,t){return m(u,t,(n-e)/(r-e))}function x(n){return n*Math.PI/180}function y(n){return 180*n/Math.PI}function A(n,e=1e-6){return(n<0?-1:1)/Math.max(Math.abs(n),e)}function P(n){return Math.acos(s(n,-1,1))}function S(n){return Math.asin(s(n,-1,1))}function i(n,e,r=1e-6){return n===e?!0:!Number.isFinite(n)||!Number.isFinite(e)?!1:(n>e?n-e:e-n)<=r}function d(n,e,r=1e-6){return!i(n,e,r)&&n>e}function L(n,e,r=1e-6){return!i(n,e,r)&&n<e}function T(n,e,r=1e-6){return i(n,e,r)||n>e}const f=new DataView(new ArrayBuffer(Float64Array.BYTES_PER_ELEMENT));function o(n){return f.setFloat64(0,n),f.getBigInt64(0)}function N(n){return f.setBigInt64(0,n),f.getFloat64(0)}const a=BigInt("1000000"),F=l(1);function l(n){const e=o(n=Math.abs(n)),r=N(e<=a?a:e-a);return Math.abs(n-r)}function _(n,e,r=F){if(n===e)return!0;if(!Number.isFinite(n)||!Number.isFinite(e))return!1;if(r!=null&&l(Math.min(Math.abs(n),Math.abs(e)))<r)return Math.abs(n-e)<=r;const u=o(n),t=o(e);return u<0!=t<0?!1:!((u<t?t-u:u-t)>a)}function v(n,e,r=1e-6){if(n===e)return!0;if(!Number.isFinite(n)||!Number.isFinite(e))return!1;const u=Math.abs(n-e),t=Math.abs(n),c=Math.abs(e);if(n===0||e===0||t<1e-12&&c<1e-12){if(u>.01*r)return!1}else if(u/(t+c)>r)return!1;return!0}function $(n){return b(Math.max(-h,Math.min(n,h)))}function b(n){return M[0]=n,M[0]}function q(n,e,r){const u=s((r-n)/(e-n),0,1);return u*u*(3-2*u)}function D(n){const e=n[0]*n[0]+n[1]*n[1]+n[2]*n[2],r=n[3]*n[3]+n[4]*n[4]+n[5]*n[5],u=n[6]*n[6]+n[7]*n[7]+n[8]*n[8];return!(i(e,1)&&i(r,1)&&i(u,1))}function G(n,e){return(n%e+e)%e}const h=b(34028234663852886e22);function O(n,e,r){if(r===void 0||+r==0)return Math[n](e);if(e=+e,r=+r,isNaN(e)||typeof r!="number"||r%1!=0)return NaN;let u=e.toString().split("e");return u=(e=Math[n](+(u[0]+"e"+(u[1]?+u[1]-r:-r)))).toString().split("e"),+(u[0]+"e"+(u[1]?+u[1]+r:r))}export{v as A,L as F,q as L,y as M,d as N,_ as P,$ as S,D as T,G as _,p as a,P as b,w as c,B as e,T as g,A as h,I as i,S as l,i as m,g as n,m as o,h as q,s as r,x as s,E as u,O as v};
